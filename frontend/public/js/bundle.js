/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={653:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,i){for(var a,l,s=o(e),u=1;u<arguments.length;u++){for(var c in a=Object(arguments[u]))n.call(a,c)&&(s[c]=a[c]);if(t){l=t(a);for(var f=0;f<l.length;f++)r.call(a,l[f])&&(s[l[f]]=a[l[f]])}}return s}},261:(e,t,n)=>{"use strict";var r=n(629),o=n(653),i=n(410);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));var l=new Set,s={};function u(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(s[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function g(e,t,n,r,o,i,a){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=a}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var o=v.hasOwnProperty(t)?v[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);v[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);v[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);v[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,x=60106,S=60107,C=60108,_=60114,N=60109,O=60110,T=60112,L=60113,A=60120,P=60115,j=60116,q=60121,R=60128,D=60129,I=60130,F=60131;if("function"==typeof Symbol&&Symbol.for){var U=Symbol.for;E=U("react.element"),x=U("react.portal"),S=U("react.fragment"),C=U("react.strict_mode"),_=U("react.profiler"),N=U("react.provider"),O=U("react.context"),T=U("react.forward_ref"),L=U("react.suspense"),A=U("react.suspense_list"),P=U("react.memo"),j=U("react.lazy"),q=U("react.block"),U("react.scope"),R=U("react.opaque.id"),D=U("react.debug_trace_mode"),I=U("react.offscreen"),F=U("react.legacy_hidden")}var M,z="function"==typeof Symbol&&Symbol.iterator;function V(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=z&&e[z]||e["@@iterator"])?e:null}function B(e){if(void 0===M)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var H=!1;function W(e,t){if(!e||H)return"";H=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var o=e.stack.split("\n"),i=r.stack.split("\n"),a=o.length-1,l=i.length-1;1<=a&&0<=l&&o[a]!==i[l];)l--;for(;1<=a&&0<=l;a--,l--)if(o[a]!==i[l]){if(1!==a||1!==l)do{if(a--,0>--l||o[a]!==i[l])return"\n"+o[a].replace(" at new "," at ")}while(1<=a&&0<=l);break}}}finally{H=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?B(e):""}function $(e){switch(e.tag){case 5:return B(e.type);case 16:return B("Lazy");case 13:return B("Suspense");case 19:return B("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 22:return W(e.type._render,!1);case 1:return W(e.type,!0);default:return""}}function G(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case x:return"Portal";case _:return"Profiler";case C:return"StrictMode";case L:return"Suspense";case A:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case N:return(e._context.displayName||"Context")+".Provider";case T:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case P:return G(e.type);case q:return G(e._render);case j:t=e._payload,e=e._init;try{return G(e(t))}catch(e){}}return null}function Q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function K(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function J(e){e._valueTracker||(e._valueTracker=function(e){var t=K(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Y(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=K(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function X(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Q(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=Q(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,n):t.hasOwnProperty("defaultValue")&&oe(e,t.type,Q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function oe(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ie(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ae(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+Q(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:Q(n)}}function ue(e,t){var n=Q(t.value),r=Q(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ge=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ve(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ye={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ye.hasOwnProperty(e)&&ye[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ye).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ye[t]=ye[e]}))}));var Ee=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function xe(e,t){if(t){if(Ee[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62))}}function Se(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var _e=null,Ne=null,Oe=null;function Te(e){if(e=Xr(e)){if("function"!=typeof _e)throw Error(a(280));var t=e.stateNode;t&&(t=eo(t),_e(e.stateNode,e.type,t))}}function Le(e){Ne?Oe?Oe.push(e):Oe=[e]:Ne=e}function Ae(){if(Ne){var e=Ne,t=Oe;if(Oe=Ne=null,Te(e),t)for(e=0;e<t.length;e++)Te(t[e])}}function Pe(e,t){return e(t)}function je(e,t,n,r,o){return e(t,n,r,o)}function qe(){}var Re=Pe,De=!1,Ie=!1;function Fe(){null===Ne&&null===Oe||(qe(),Ae())}function Ue(e,t){var n=e.stateNode;if(null===n)return null;var r=eo(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}var Me=!1;if(f)try{var ze={};Object.defineProperty(ze,"passive",{get:function(){Me=!0}}),window.addEventListener("test",ze,ze),window.removeEventListener("test",ze,ze)}catch(me){Me=!1}function Ve(e,t,n,r,o,i,a,l,s){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}var Be=!1,He=null,We=!1,$e=null,Ge={onError:function(e){Be=!0,He=e}};function Qe(e,t,n,r,o,i,a,l,s){Be=!1,He=null,Ve.apply(Ge,arguments)}function Ke(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ye(e){if(Ke(e)!==e)throw Error(a(188))}function Xe(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var Ze,et,tt,nt,rt=!1,ot=[],it=null,at=null,lt=null,st=new Map,ut=new Map,ct=[],ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function dt(e,t,n,r,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:o,targetContainers:[r]}}function pt(e,t){switch(e){case"focusin":case"focusout":it=null;break;case"dragenter":case"dragleave":at=null;break;case"mouseover":case"mouseout":lt=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ut.delete(t.pointerId)}}function ht(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=dt(t,n,r,o,i),null!==t&&null!==(t=Xr(t))&&et(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function mt(e){var t=Yr(e.target);if(null!==t){var n=Ke(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Je(n)))return e.blockedOn=t,void nt(e.lanePriority,(function(){i.unstable_runWithPriority(e.priority,(function(){tt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function gt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Xr(n))&&et(t),e.blockedOn=n,!1;t.shift()}return!0}function vt(e,t,n){gt(e)&&n.delete(t)}function yt(){for(rt=!1;0<ot.length;){var e=ot[0];if(null!==e.blockedOn){null!==(e=Xr(e.blockedOn))&&Ze(e);break}for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&ot.shift()}null!==it&&gt(it)&&(it=null),null!==at&&gt(at)&&(at=null),null!==lt&&gt(lt)&&(lt=null),st.forEach(vt),ut.forEach(vt)}function bt(e,t){e.blockedOn===t&&(e.blockedOn=null,rt||(rt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,yt)))}function wt(e){function t(t){return bt(t,e)}if(0<ot.length){bt(ot[0],e);for(var n=1;n<ot.length;n++){var r=ot[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==it&&bt(it,e),null!==at&&bt(at,e),null!==lt&&bt(lt,e),st.forEach(t),ut.forEach(t),n=0;n<ct.length;n++)(r=ct[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ct.length&&null===(n=ct[0]).blockedOn;)mt(n),null===n.blockedOn&&ct.shift()}function kt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Et={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},xt={},St={};function Ct(e){if(xt[e])return xt[e];if(!Et[e])return e;var t,n=Et[e];for(t in n)if(n.hasOwnProperty(t)&&t in St)return xt[e]=n[t];return e}f&&(St=document.createElement("div").style,"AnimationEvent"in window||(delete Et.animationend.animation,delete Et.animationiteration.animation,delete Et.animationstart.animation),"TransitionEvent"in window||delete Et.transitionend.transition);var _t=Ct("animationend"),Nt=Ct("animationiteration"),Ot=Ct("animationstart"),Tt=Ct("transitionend"),Lt=new Map,At=new Map,Pt=["abort","abort",_t,"animationEnd",Nt,"animationIteration",Ot,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Tt,"transitionEnd","waiting","waiting"];function jt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1];o="on"+(o[0].toUpperCase()+o.slice(1)),At.set(r,t),Lt.set(r,o),u(o,[r])}}(0,i.unstable_now)();var qt=8;function Rt(e){if(0!=(1&e))return qt=15,1;if(0!=(2&e))return qt=14,2;if(0!=(4&e))return qt=13,4;var t=24&e;return 0!==t?(qt=12,t):0!=(32&e)?(qt=11,32):0!=(t=192&e)?(qt=10,t):0!=(256&e)?(qt=9,256):0!=(t=3584&e)?(qt=8,t):0!=(4096&e)?(qt=7,4096):0!=(t=4186112&e)?(qt=6,t):0!=(t=62914560&e)?(qt=5,t):67108864&e?(qt=4,67108864):0!=(134217728&e)?(qt=3,134217728):0!=(t=805306368&e)?(qt=2,t):0!=(1073741824&e)?(qt=1,1073741824):(qt=8,e)}function Dt(e,t){var n=e.pendingLanes;if(0===n)return qt=0;var r=0,o=0,i=e.expiredLanes,a=e.suspendedLanes,l=e.pingedLanes;if(0!==i)r=i,o=qt=15;else if(0!=(i=134217727&n)){var s=i&~a;0!==s?(r=Rt(s),o=qt):0!=(l&=i)&&(r=Rt(l),o=qt)}else 0!=(i=n&~a)?(r=Rt(i),o=qt):0!==l&&(r=Rt(l),o=qt);if(0===r)return 0;if(r=n&((0>(r=31-Vt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&a)){if(Rt(t),o<=qt)return t;qt=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)o=1<<(n=31-Vt(t)),r|=e[n],t&=~o;return r}function It(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ft(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ut(24&~t))?Ft(10,t):e;case 10:return 0===(e=Ut(192&~t))?Ft(8,t):e;case 8:return 0===(e=Ut(3584&~t))&&0===(e=Ut(4186112&~t))&&(e=512),e;case 2:return 0===(t=Ut(805306368&~t))&&(t=268435456),t}throw Error(a(358,e))}function Ut(e){return e&-e}function Mt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function zt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Vt(t)]=n}var Vt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Bt(e)/Ht|0)|0},Bt=Math.log,Ht=Math.LN2,Wt=i.unstable_UserBlockingPriority,$t=i.unstable_runWithPriority,Gt=!0;function Qt(e,t,n,r){De||qe();var o=Jt,i=De;De=!0;try{je(o,e,t,n,r)}finally{(De=i)||Fe()}}function Kt(e,t,n,r){$t(Wt,Jt.bind(null,e,t,n,r))}function Jt(e,t,n,r){var o;if(Gt)if((o=0==(4&t))&&0<ot.length&&-1<ft.indexOf(e))e=dt(null,e,t,n,r),ot.push(e);else{var i=Yt(e,t,n,r);if(null===i)o&&pt(e,r);else{if(o){if(-1<ft.indexOf(e))return e=dt(i,e,t,n,r),void ot.push(e);if(function(e,t,n,r,o){switch(t){case"focusin":return it=ht(it,e,t,n,r,o),!0;case"dragenter":return at=ht(at,e,t,n,r,o),!0;case"mouseover":return lt=ht(lt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return st.set(i,ht(st.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,ut.set(i,ht(ut.get(i)||null,e,t,n,r,o)),!0}return!1}(i,e,t,n,r))return;pt(e,r)}Lr(e,t,r,null,n)}}}function Yt(e,t,n,r){var o=Ce(r);if(null!==(o=Yr(o))){var i=Ke(o);if(null===i)o=null;else{var a=i.tag;if(13===a){if(null!==(o=Je(i)))return o;o=null}else if(3===a){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;o=null}else i!==o&&(o=null)}}return Lr(e,t,r,o,n),null}var Xt=null,Zt=null,en=null;function tn(){if(en)return en;var e,t,n=Zt,r=n.length,o="value"in Xt?Xt.value:Xt.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return en=o.slice(e,1<t?1-t:void 0)}function nn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rn(){return!0}function on(){return!1}function an(e){function t(t,n,r,o,i){for(var a in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(a)&&(t=e[a],this[a]=t?t(o):o[a]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?rn:on,this.isPropagationStopped=on,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rn)},persist:function(){},isPersistent:rn}),t}var ln,sn,un,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fn=an(cn),dn=o({},cn,{view:0,detail:0}),pn=an(dn),hn=o({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(ln=e.screenX-un.screenX,sn=e.screenY-un.screenY):sn=ln=0,un=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),mn=an(hn),gn=an(o({},hn,{dataTransfer:0})),vn=an(o({},dn,{relatedTarget:0})),yn=an(o({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=an(o({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),wn=an(o({},cn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},En={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xn[e])&&!!t[e]}function Cn(){return Sn}var _n=an(o({},dn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=nn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?En[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?nn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?nn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Nn=an(o({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),On=an(o({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Tn=an(o({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ln=an(o({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),An=[9,13,27,32],Pn=f&&"CompositionEvent"in window,jn=null;f&&"documentMode"in document&&(jn=document.documentMode);var qn=f&&"TextEvent"in window&&!jn,Rn=f&&(!Pn||jn&&8<jn&&11>=jn),Dn=String.fromCharCode(32),In=!1;function Fn(e,t){switch(e){case"keyup":return-1!==An.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Mn=!1,zn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!zn[e.type]:"textarea"===t}function Bn(e,t,n,r){Le(r),0<(t=Pr(t,"onChange")).length&&(n=new fn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Hn=null,Wn=null;function $n(e){Sr(e,0)}function Gn(e){if(Y(Zr(e)))return e}function Qn(e,t){if("change"===e)return t}var Kn=!1;if(f){var Jn;if(f){var Yn="oninput"in document;if(!Yn){var Xn=document.createElement("div");Xn.setAttribute("oninput","return;"),Yn="function"==typeof Xn.oninput}Jn=Yn}else Jn=!1;Kn=Jn&&(!document.documentMode||9<document.documentMode)}function Zn(){Hn&&(Hn.detachEvent("onpropertychange",er),Wn=Hn=null)}function er(e){if("value"===e.propertyName&&Gn(Wn)){var t=[];if(Bn(t,Wn,e,Ce(e)),e=$n,De)e(t);else{De=!0;try{Pe(e,t)}finally{De=!1,Fe()}}}}function tr(e,t,n){"focusin"===e?(Zn(),Wn=n,(Hn=t).attachEvent("onpropertychange",er)):"focusout"===e&&Zn()}function nr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Gn(Wn)}function rr(e,t){if("click"===e)return Gn(t)}function or(e,t){if("input"===e||"change"===e)return Gn(t)}var ir="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ar=Object.prototype.hasOwnProperty;function lr(e,t){if(ir(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ar.call(t,n[r])||!ir(e[n[r]],t[n[r]]))return!1;return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ur(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function cr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?cr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var pr=f&&"documentMode"in document&&11>=document.documentMode,hr=null,mr=null,gr=null,vr=!1;function yr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;vr||null==hr||hr!==X(r)||(r="selectionStart"in(r=hr)&&dr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&lr(gr,r)||(gr=r,0<(r=Pr(mr,"onSelect")).length&&(t=new fn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=hr)))}jt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),jt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),jt(Pt,2);for(var br="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),wr=0;wr<br.length;wr++)At.set(br[wr],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Er=new Set("cancel close invalid load scroll toggle".split(" ").concat(kr));function xr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,o,i,l,s,u){if(Qe.apply(this,arguments),Be){if(!Be)throw Error(a(198));var c=He;Be=!1,He=null,We||(We=!0,$e=c)}}(r,t,void 0,e),e.currentTarget=null}function Sr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],o=r.event;r=r.listeners;e:{var i=void 0;if(t)for(var a=r.length-1;0<=a;a--){var l=r[a],s=l.instance,u=l.currentTarget;if(l=l.listener,s!==i&&o.isPropagationStopped())break e;xr(o,l,u),i=s}else for(a=0;a<r.length;a++){if(s=(l=r[a]).instance,u=l.currentTarget,l=l.listener,s!==i&&o.isPropagationStopped())break e;xr(o,l,u),i=s}}}if(We)throw e=$e,We=!1,$e=null,e}function Cr(e,t){var n=to(t),r=e+"__bubble";n.has(r)||(Tr(t,e,2,!1),n.add(r))}var _r="_reactListening"+Math.random().toString(36).slice(2);function Nr(e){e[_r]||(e[_r]=!0,l.forEach((function(t){Er.has(t)||Or(t,!1,e,null),Or(t,!0,e,null)})))}function Or(e,t,n,r){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,i=n;if("selectionchange"===e&&9!==n.nodeType&&(i=n.ownerDocument),null!==r&&!t&&Er.has(e)){if("scroll"!==e)return;o|=2,i=r}var a=to(i),l=e+"__"+(t?"capture":"bubble");a.has(l)||(t&&(o|=4),Tr(i,e,o,t),a.add(l))}function Tr(e,t,n,r){var o=At.get(t);switch(void 0===o?2:o){case 0:o=Qt;break;case 1:o=Kt;break;default:o=Jt}n=o.bind(null,t,n,e),o=void 0,!Me||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),r?void 0!==o?e.addEventListener(t,n,{capture:!0,passive:o}):e.addEventListener(t,n,!0):void 0!==o?e.addEventListener(t,n,{passive:o}):e.addEventListener(t,n,!1)}function Lr(e,t,n,r,o){var i=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var a=r.tag;if(3===a||4===a){var l=r.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===a)for(a=r.return;null!==a;){var s=a.tag;if((3===s||4===s)&&((s=a.stateNode.containerInfo)===o||8===s.nodeType&&s.parentNode===o))return;a=a.return}for(;null!==l;){if(null===(a=Yr(l)))return;if(5===(s=a.tag)||6===s){r=i=a;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(Ie)return e();Ie=!0;try{Re(e,t,n)}finally{Ie=!1,Fe()}}((function(){var r=i,o=Ce(n),a=[];e:{var l=Lt.get(e);if(void 0!==l){var s=fn,u=e;switch(e){case"keypress":if(0===nn(n))break e;case"keydown":case"keyup":s=_n;break;case"focusin":u="focus",s=vn;break;case"focusout":u="blur",s=vn;break;case"beforeblur":case"afterblur":s=vn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=On;break;case _t:case Nt:case Ot:s=yn;break;case Tt:s=Tn;break;case"scroll":s=pn;break;case"wheel":s=Ln;break;case"copy":case"cut":case"paste":s=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=Nn}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Ue(h,d))&&c.push(Ar(h,m,p))),f)break;h=h.return}0<c.length&&(l=new s(l,u,null,n,o),a.push({event:l,listeners:c}))}}if(0==(7&t)){if(s="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(u=n.relatedTarget||n.fromElement)||!Yr(u)&&!u[Kr])&&(s||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,s?(s=r,null!==(u=(u=n.relatedTarget||n.toElement)?Yr(u):null)&&(u!==(f=Ke(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(s=null,u=r),s!==u)){if(c=mn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Nn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==s?l:Zr(s),p=null==u?l:Zr(u),(l=new c(m,h+"leave",s,n,o)).target=f,l.relatedTarget=p,m=null,Yr(o)===r&&((c=new c(d,h+"enter",u,n,o)).target=p,c.relatedTarget=f,m=c),f=m,s&&u)e:{for(d=u,h=0,p=c=s;p;p=jr(p))h++;for(p=0,m=d;m;m=jr(m))p++;for(;0<h-p;)c=jr(c),h--;for(;0<p-h;)d=jr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=jr(c),d=jr(d)}c=null}else c=null;null!==s&&qr(a,l,s,c,!1),null!==u&&null!==f&&qr(a,f,u,c,!0)}if("select"===(s=(l=r?Zr(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===s&&"file"===l.type)var g=Qn;else if(Vn(l))if(Kn)g=or;else{g=nr;var v=tr}else(s=l.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(g=rr);switch(g&&(g=g(e,r))?Bn(a,g,n,o):(v&&v(e,l,r),"focusout"===e&&(v=l._wrapperState)&&v.controlled&&"number"===l.type&&oe(l,"number",l.value)),v=r?Zr(r):window,e){case"focusin":(Vn(v)||"true"===v.contentEditable)&&(hr=v,mr=r,gr=null);break;case"focusout":gr=mr=hr=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,yr(a,n,o);break;case"selectionchange":if(pr)break;case"keydown":case"keyup":yr(a,n,o)}var y;if(Pn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Mn?Fn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Rn&&"ko"!==n.locale&&(Mn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Mn&&(y=tn()):(Zt="value"in(Xt=o)?Xt.value:Xt.textContent,Mn=!0)),0<(v=Pr(r,b)).length&&(b=new wn(b,e,null,n,o),a.push({event:b,listeners:v}),(y||null!==(y=Un(n)))&&(b.data=y))),(y=qn?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(In=!0,Dn);case"textInput":return(e=t.data)===Dn&&In?null:e;default:return null}}(e,n):function(e,t){if(Mn)return"compositionend"===e||!Pn&&Fn(e,t)?(e=tn(),en=Zt=Xt=null,Mn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Rn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Pr(r,"onBeforeInput")).length&&(o=new wn("onBeforeInput","beforeinput",null,n,o),a.push({event:o,listeners:r}),o.data=y)}Sr(a,t)}))}function Ar(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Pr(e,t){for(var n=t+"Capture",r=[];null!==e;){var o=e,i=o.stateNode;5===o.tag&&null!==i&&(o=i,null!=(i=Ue(e,n))&&r.unshift(Ar(e,i,o)),null!=(i=Ue(e,t))&&r.push(Ar(e,i,o))),e=e.return}return r}function jr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function qr(e,t,n,r,o){for(var i=t._reactName,a=[];null!==n&&n!==r;){var l=n,s=l.alternate,u=l.stateNode;if(null!==s&&s===r)break;5===l.tag&&null!==u&&(l=u,o?null!=(s=Ue(n,i))&&a.unshift(Ar(n,s,l)):o||null!=(s=Ue(n,i))&&a.push(Ar(n,s,l))),n=n.return}0!==a.length&&e.push({event:t,listeners:a})}function Rr(){}var Dr=null,Ir=null;function Fr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ur(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Mr="function"==typeof setTimeout?setTimeout:void 0,zr="function"==typeof clearTimeout?clearTimeout:void 0;function Vr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Br(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Hr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Wr=0,$r=Math.random().toString(36).slice(2),Gr="__reactFiber$"+$r,Qr="__reactProps$"+$r,Kr="__reactContainer$"+$r,Jr="__reactEvents$"+$r;function Yr(e){var t=e[Gr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Kr]||n[Gr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Hr(e);null!==e;){if(n=e[Gr])return n;e=Hr(e)}return t}n=(e=n).parentNode}return null}function Xr(e){return!(e=e[Gr]||e[Kr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Zr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function eo(e){return e[Qr]||null}function to(e){var t=e[Jr];return void 0===t&&(t=e[Jr]=new Set),t}var no=[],ro=-1;function oo(e){return{current:e}}function io(e){0>ro||(e.current=no[ro],no[ro]=null,ro--)}function ao(e,t){ro++,no[ro]=e.current,e.current=t}var lo={},so=oo(lo),uo=oo(!1),co=lo;function fo(e,t){var n=e.type.contextTypes;if(!n)return lo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function po(e){return null!=e.childContextTypes}function ho(){io(uo),io(so)}function mo(e,t,n){if(so.current!==lo)throw Error(a(168));ao(so,t),ao(uo,n)}function go(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(a(108,G(t)||"Unknown",i));return o({},n,r)}function vo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||lo,co=so.current,ao(so,e),ao(uo,uo.current),!0}function yo(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=go(e,t,co),r.__reactInternalMemoizedMergedChildContext=e,io(uo),io(so),ao(so,e)):io(uo),ao(uo,n)}var bo=null,wo=null,ko=i.unstable_runWithPriority,Eo=i.unstable_scheduleCallback,xo=i.unstable_cancelCallback,So=i.unstable_shouldYield,Co=i.unstable_requestPaint,_o=i.unstable_now,No=i.unstable_getCurrentPriorityLevel,Oo=i.unstable_ImmediatePriority,To=i.unstable_UserBlockingPriority,Lo=i.unstable_NormalPriority,Ao=i.unstable_LowPriority,Po=i.unstable_IdlePriority,jo={},qo=void 0!==Co?Co:function(){},Ro=null,Do=null,Io=!1,Fo=_o(),Uo=1e4>Fo?_o:function(){return _o()-Fo};function Mo(){switch(No()){case Oo:return 99;case To:return 98;case Lo:return 97;case Ao:return 96;case Po:return 95;default:throw Error(a(332))}}function zo(e){switch(e){case 99:return Oo;case 98:return To;case 97:return Lo;case 96:return Ao;case 95:return Po;default:throw Error(a(332))}}function Vo(e,t){return e=zo(e),ko(e,t)}function Bo(e,t,n){return e=zo(e),Eo(e,t,n)}function Ho(){if(null!==Do){var e=Do;Do=null,xo(e)}Wo()}function Wo(){if(!Io&&null!==Ro){Io=!0;var e=0;try{var t=Ro;Vo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ro=null}catch(t){throw null!==Ro&&(Ro=Ro.slice(e+1)),Eo(Oo,Ho),t}finally{Io=!1}}}var $o=k.ReactCurrentBatchConfig;function Go(e,t){if(e&&e.defaultProps){for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Qo=oo(null),Ko=null,Jo=null,Yo=null;function Xo(){Yo=Jo=Ko=null}function Zo(e){var t=Qo.current;io(Qo),e.type._context._currentValue=t}function ei(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function ti(e,t){Ko=e,Yo=Jo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Pa=!0),e.firstContext=null)}function ni(e,t){if(Yo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Yo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Jo){if(null===Ko)throw Error(a(308));Jo=t,Ko.dependencies={lanes:0,firstContext:t,responders:null}}else Jo=Jo.next=t;return e._currentValue}var ri=!1;function oi(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ii(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ai(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function li(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function si(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,i=null;if(null!==(n=n.firstBaseUpdate)){do{var a={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===i?o=i=a:i=i.next=a,n=n.next}while(null!==n);null===i?o=i=t:i=i.next=t}else o=i=t;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:i,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function ui(e,t,n,r){var i=e.updateQueue;ri=!1;var a=i.firstBaseUpdate,l=i.lastBaseUpdate,s=i.shared.pending;if(null!==s){i.shared.pending=null;var u=s,c=u.next;u.next=null,null===l?a=c:l.next=c,l=u;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=u)}}if(null!==a){for(d=i.baseState,l=0,f=c=u=null;;){s=a.lane;var p=a.eventTime;if((r&s)===s){null!==f&&(f=f.next={eventTime:p,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var h=e,m=a;switch(s=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,s);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(s="function"==typeof(h=m.payload)?h.call(p,d,s):h))break e;d=o({},d,s);break e;case 2:ri=!0}}null!==a.callback&&(e.flags|=32,null===(s=i.effects)?i.effects=[a]:s.push(a))}else p={eventTime:p,lane:s,tag:a.tag,payload:a.payload,callback:a.callback,next:null},null===f?(c=f=p,u=d):f=f.next=p,l|=s;if(null===(a=a.next)){if(null===(s=i.shared.pending))break;a=s.next,s.next=null,i.lastBaseUpdate=s,i.shared.pending=null}}null===f&&(u=d),i.baseState=u,i.firstBaseUpdate=c,i.lastBaseUpdate=f,ql|=l,e.lanes=l,e.memoizedState=d}}function ci(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!=typeof o)throw Error(a(191,o));o.call(r)}}}var fi=(new r.Component).refs;function di(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var pi={isMounted:function(e){return!!(e=e._reactInternals)&&Ke(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=is(),o=as(e),i=ai(r,o);i.payload=t,null!=n&&(i.callback=n),li(e,i),ls(e,o,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=is(),o=as(e),i=ai(r,o);i.tag=1,i.payload=t,null!=n&&(i.callback=n),li(e,i),ls(e,o,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=is(),r=as(e),o=ai(n,r);o.tag=2,null!=t&&(o.callback=t),li(e,o),ls(e,r,n)}};function hi(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!(t.prototype&&t.prototype.isPureReactComponent&&lr(n,r)&&lr(o,i))}function mi(e,t,n){var r=!1,o=lo,i=t.contextType;return"object"==typeof i&&null!==i?i=ni(i):(o=po(t)?co:so.current,i=(r=null!=(r=t.contextTypes))?fo(e,o):lo),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=pi,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function gi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&pi.enqueueReplaceState(t,t.state,null)}function vi(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=fi,oi(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=ni(i):(i=po(t)?co:so.current,o.context=fo(e,i)),ui(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(di(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&pi.enqueueReplaceState(o,o.state,null),ui(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4)}var yi=Array.isArray;function bi(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===fi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function wi(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function ki(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Is(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=zs(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function u(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=bi(e,t,n),r.return=e,r):((r=Fs(n.type,n.key,n.props,null,e.mode,r)).ref=bi(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Vs(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Us(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=zs(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case E:return(n=Fs(t.type,t.key,t.props,null,e.mode,n)).ref=bi(e,null,t),n.return=e,n;case x:return(t=Vs(t,e.mode,n)).return=e,t}if(yi(t)||V(t))return(t=Us(t,e.mode,n,null)).return=e,t;wi(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===o?n.type===S?f(e,t,n.props.children,r,o):u(e,t,n,r):null;case x:return n.key===o?c(e,t,n,r):null}if(yi(n)||V(n))return null!==o?null:f(e,t,n,r,null);wi(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case E:return e=e.get(null===r.key?n:r.key)||null,r.type===S?f(t,e,r.props.children,o,r.key):u(t,e,r,o);case x:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(yi(r)||V(r))return f(t,e=e.get(n)||null,r,o,null);wi(t,r)}return null}function m(o,a,l,s){for(var u=null,c=null,f=a,m=a=0,g=null;null!==f&&m<l.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var v=p(o,f,l[m],s);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(o,f),a=i(v,a,m),null===c?u=v:c.sibling=v,c=v,f=g}if(m===l.length)return n(o,f),u;if(null===f){for(;m<l.length;m++)null!==(f=d(o,l[m],s))&&(a=i(f,a,m),null===c?u=f:c.sibling=f,c=f);return u}for(f=r(o,f);m<l.length;m++)null!==(g=h(f,o,m,l[m],s))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),a=i(g,a,m),null===c?u=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return t(o,e)})),u}function g(o,l,s,u){var c=V(s);if("function"!=typeof c)throw Error(a(150));if(null==(s=c.call(s)))throw Error(a(151));for(var f=c=null,m=l,g=l=0,v=null,y=s.next();null!==m&&!y.done;g++,y=s.next()){m.index>g?(v=m,m=null):v=m.sibling;var b=p(o,m,y.value,u);if(null===b){null===m&&(m=v);break}e&&m&&null===b.alternate&&t(o,m),l=i(b,l,g),null===f?c=b:f.sibling=b,f=b,m=v}if(y.done)return n(o,m),c;if(null===m){for(;!y.done;g++,y=s.next())null!==(y=d(o,y.value,u))&&(l=i(y,l,g),null===f?c=y:f.sibling=y,f=y);return c}for(m=r(o,m);!y.done;g++,y=s.next())null!==(y=h(m,o,g,y.value,u))&&(e&&null!==y.alternate&&m.delete(null===y.key?g:y.key),l=i(y,l,g),null===f?c=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return t(o,e)})),c}return function(e,r,i,s){var u="object"==typeof i&&null!==i&&i.type===S&&null===i.key;u&&(i=i.props.children);var c="object"==typeof i&&null!==i;if(c)switch(i.$$typeof){case E:e:{for(c=i.key,u=r;null!==u;){if(u.key===c){switch(u.tag){case 7:if(i.type===S){n(e,u.sibling),(r=o(u,i.props.children)).return=e,e=r;break e}break;default:if(u.elementType===i.type){n(e,u.sibling),(r=o(u,i.props)).ref=bi(e,u,i),r.return=e,e=r;break e}}n(e,u);break}t(e,u),u=u.sibling}i.type===S?((r=Us(i.props.children,e.mode,s,i.key)).return=e,e=r):((s=Fs(i.type,i.key,i.props,null,e.mode,s)).ref=bi(e,r,i),s.return=e,e=s)}return l(e);case x:e:{for(u=i.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Vs(i,e.mode,s)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=zs(i,e.mode,s)).return=e,e=r),l(e);if(yi(i))return m(e,r,i,s);if(V(i))return g(e,r,i,s);if(c&&wi(e,i),void 0===i&&!u)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(a(152,G(e.type)||"Component"))}return n(e,r)}}var Ei=ki(!0),xi=ki(!1),Si={},Ci=oo(Si),_i=oo(Si),Ni=oo(Si);function Oi(e){if(e===Si)throw Error(a(174));return e}function Ti(e,t){switch(ao(Ni,t),ao(_i,e),ao(Ci,Si),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}io(Ci),ao(Ci,t)}function Li(){io(Ci),io(_i),io(Ni)}function Ai(e){Oi(Ni.current);var t=Oi(Ci.current),n=pe(t,e.type);t!==n&&(ao(_i,e),ao(Ci,n))}function Pi(e){_i.current===e&&(io(Ci),io(_i))}var ji=oo(0);function qi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Ri=null,Di=null,Ii=!1;function Fi(e,t){var n=Rs(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ui(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Mi(e){if(Ii){var t=Di;if(t){var n=t;if(!Ui(e,t)){if(!(t=Br(n.nextSibling))||!Ui(e,t))return e.flags=-1025&e.flags|2,Ii=!1,void(Ri=e);Fi(Ri,n)}Ri=e,Di=Br(t.firstChild)}else e.flags=-1025&e.flags|2,Ii=!1,Ri=e}}function zi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ri=e}function Vi(e){if(e!==Ri)return!1;if(!Ii)return zi(e),Ii=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ur(t,e.memoizedProps))for(t=Di;t;)Fi(e,t),t=Br(t.nextSibling);if(zi(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Di=Br(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Di=null}}else Di=Ri?Br(e.stateNode.nextSibling):null;return!0}function Bi(){Di=Ri=null,Ii=!1}var Hi=[];function Wi(){for(var e=0;e<Hi.length;e++)Hi[e]._workInProgressVersionPrimary=null;Hi.length=0}var $i=k.ReactCurrentDispatcher,Gi=k.ReactCurrentBatchConfig,Qi=0,Ki=null,Ji=null,Yi=null,Xi=!1,Zi=!1;function ea(){throw Error(a(321))}function ta(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ir(e[n],t[n]))return!1;return!0}function na(e,t,n,r,o,i){if(Qi=i,Ki=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,$i.current=null===e||null===e.memoizedState?Oa:Ta,e=n(r,o),Zi){i=0;do{if(Zi=!1,!(25>i))throw Error(a(301));i+=1,Yi=Ji=null,t.updateQueue=null,$i.current=La,e=n(r,o)}while(Zi)}if($i.current=Na,t=null!==Ji&&null!==Ji.next,Qi=0,Yi=Ji=Ki=null,Xi=!1,t)throw Error(a(300));return e}function ra(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Yi?Ki.memoizedState=Yi=e:Yi=Yi.next=e,Yi}function oa(){if(null===Ji){var e=Ki.alternate;e=null!==e?e.memoizedState:null}else e=Ji.next;var t=null===Yi?Ki.memoizedState:Yi.next;if(null!==t)Yi=t,Ji=e;else{if(null===e)throw Error(a(310));e={memoizedState:(Ji=e).memoizedState,baseState:Ji.baseState,baseQueue:Ji.baseQueue,queue:Ji.queue,next:null},null===Yi?Ki.memoizedState=Yi=e:Yi=Yi.next=e}return Yi}function ia(e,t){return"function"==typeof t?t(e):t}function aa(e){var t=oa(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=Ji,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var l=o.next;o.next=i.next,i.next=l}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var s=l=i=null,u=o;do{var c=u.lane;if((Qi&c)===c)null!==s&&(s=s.next={lane:0,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),r=u.eagerReducer===e?u.eagerState:e(r,u.action);else{var f={lane:c,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===s?(l=s=f,i=r):s=s.next=f,Ki.lanes|=c,ql|=c}u=u.next}while(null!==u&&u!==o);null===s?i=r:s.next=l,ir(r,t.memoizedState)||(Pa=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=s,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function la(e){var t=oa(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{i=e(i,l.action),l=l.next}while(l!==o);ir(i,t.memoizedState)||(Pa=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function sa(e,t,n){var r=t._getVersion;r=r(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===r:(e=e.mutableReadLanes,(e=(Qi&e)===e)&&(t._workInProgressVersionPrimary=r,Hi.push(t))),e)return n(t._source);throw Hi.push(t),Error(a(350))}function ua(e,t,n,r){var o=_l;if(null===o)throw Error(a(349));var i=t._getVersion,l=i(t._source),s=$i.current,u=s.useState((function(){return sa(o,t,n)})),c=u[1],f=u[0];u=Yi;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var g=Ki;return e.memoizedState={refs:p,source:t,subscribe:r},s.useEffect((function(){p.getSnapshot=n,p.setSnapshot=c;var e=i(t._source);if(!ir(l,e)){e=n(t._source),ir(f,e)||(c(e),e=as(g),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var r=o.entanglements,a=e;0<a;){var s=31-Vt(a),u=1<<s;r[s]|=e,a&=~u}}}),[n,t,r]),s.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=as(g);o.mutableReadLanes|=r&o.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),ir(h,n)&&ir(m,t)&&ir(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ia,lastRenderedState:f}).dispatch=c=_a.bind(null,Ki,e),u.queue=e,u.baseQueue=null,f=sa(o,t,n),u.memoizedState=u.baseState=f),f}function ca(e,t,n){return ua(oa(),e,t,n)}function fa(e){var t=ra();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ia,lastRenderedState:e}).dispatch=_a.bind(null,Ki,e),[t.memoizedState,e]}function da(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Ki.updateQueue)?(t={lastEffect:null},Ki.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function pa(e){return e={current:e},ra().memoizedState=e}function ha(){return oa().memoizedState}function ma(e,t,n,r){var o=ra();Ki.flags|=e,o.memoizedState=da(1|t,n,void 0,void 0===r?null:r)}function ga(e,t,n,r){var o=oa();r=void 0===r?null:r;var i=void 0;if(null!==Ji){var a=Ji.memoizedState;if(i=a.destroy,null!==r&&ta(r,a.deps))return void da(t,n,i,r)}Ki.flags|=e,o.memoizedState=da(1|t,n,i,r)}function va(e,t){return ma(516,4,e,t)}function ya(e,t){return ga(516,4,e,t)}function ba(e,t){return ga(4,2,e,t)}function wa(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ka(e,t,n){return n=null!=n?n.concat([e]):null,ga(4,2,wa.bind(null,t,e),n)}function Ea(){}function xa(e,t){var n=oa();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ta(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Sa(e,t){var n=oa();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ta(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Ca(e,t){var n=Mo();Vo(98>n?98:n,(function(){e(!0)})),Vo(97<n?97:n,(function(){var n=Gi.transition;Gi.transition=1;try{e(!1),t()}finally{Gi.transition=n}}))}function _a(e,t,n){var r=is(),o=as(e),i={lane:o,action:n,eagerReducer:null,eagerState:null,next:null},a=t.pending;if(null===a?i.next=i:(i.next=a.next,a.next=i),t.pending=i,a=e.alternate,e===Ki||null!==a&&a===Ki)Zi=Xi=!0;else{if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var l=t.lastRenderedState,s=a(l,n);if(i.eagerReducer=a,i.eagerState=s,ir(s,l))return}catch(e){}ls(e,o,r)}}var Na={readContext:ni,useCallback:ea,useContext:ea,useEffect:ea,useImperativeHandle:ea,useLayoutEffect:ea,useMemo:ea,useReducer:ea,useRef:ea,useState:ea,useDebugValue:ea,useDeferredValue:ea,useTransition:ea,useMutableSource:ea,useOpaqueIdentifier:ea,unstable_isNewReconciler:!1},Oa={readContext:ni,useCallback:function(e,t){return ra().memoizedState=[e,void 0===t?null:t],e},useContext:ni,useEffect:va,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ma(4,2,wa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ma(4,2,e,t)},useMemo:function(e,t){var n=ra();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ra();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=_a.bind(null,Ki,e),[r.memoizedState,e]},useRef:pa,useState:fa,useDebugValue:Ea,useDeferredValue:function(e){var t=fa(e),n=t[0],r=t[1];return va((function(){var t=Gi.transition;Gi.transition=1;try{r(e)}finally{Gi.transition=t}}),[e]),n},useTransition:function(){var e=fa(!1),t=e[0];return pa(e=Ca.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ra();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},ua(r,e,t,n)},useOpaqueIdentifier:function(){if(Ii){var e=!1,t=function(e){return{$$typeof:R,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Wr++).toString(36))),Error(a(355))})),n=fa(t)[1];return 0==(2&Ki.mode)&&(Ki.flags|=516,da(5,(function(){n("r:"+(Wr++).toString(36))}),void 0,null)),t}return fa(t="r:"+(Wr++).toString(36)),t},unstable_isNewReconciler:!1},Ta={readContext:ni,useCallback:xa,useContext:ni,useEffect:ya,useImperativeHandle:ka,useLayoutEffect:ba,useMemo:Sa,useReducer:aa,useRef:ha,useState:function(){return aa(ia)},useDebugValue:Ea,useDeferredValue:function(e){var t=aa(ia),n=t[0],r=t[1];return ya((function(){var t=Gi.transition;Gi.transition=1;try{r(e)}finally{Gi.transition=t}}),[e]),n},useTransition:function(){var e=aa(ia)[0];return[ha().current,e]},useMutableSource:ca,useOpaqueIdentifier:function(){return aa(ia)[0]},unstable_isNewReconciler:!1},La={readContext:ni,useCallback:xa,useContext:ni,useEffect:ya,useImperativeHandle:ka,useLayoutEffect:ba,useMemo:Sa,useReducer:la,useRef:ha,useState:function(){return la(ia)},useDebugValue:Ea,useDeferredValue:function(e){var t=la(ia),n=t[0],r=t[1];return ya((function(){var t=Gi.transition;Gi.transition=1;try{r(e)}finally{Gi.transition=t}}),[e]),n},useTransition:function(){var e=la(ia)[0];return[ha().current,e]},useMutableSource:ca,useOpaqueIdentifier:function(){return la(ia)[0]},unstable_isNewReconciler:!1},Aa=k.ReactCurrentOwner,Pa=!1;function ja(e,t,n,r){t.child=null===e?xi(t,null,n,r):Ei(t,e.child,n,r)}function qa(e,t,n,r,o){n=n.render;var i=t.ref;return ti(t,o),r=na(e,t,n,r,i,o),null===e||Pa?(t.flags|=1,ja(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Xa(e,t,o))}function Ra(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Ds(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Fs(n.type,null,r,t,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Da(e,t,a,r,o,i))}return a=e.child,0==(o&i)&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:lr)(o,r)&&e.ref===t.ref)?Xa(e,t,i):(t.flags|=1,(e=Is(a,r)).ref=t.ref,e.return=t,t.child=e)}function Da(e,t,n,r,o,i){if(null!==e&&lr(e.memoizedProps,r)&&e.ref===t.ref){if(Pa=!1,0==(i&o))return t.lanes=e.lanes,Xa(e,t,i);0!=(16384&e.flags)&&(Pa=!0)}return Ua(e,t,n,r,i)}function Ia(e,t,n){var r=t.pendingProps,o=r.children,i=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},ps(0,n);else{if(0==(1073741824&n))return e=null!==i?i.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},ps(0,e),null;t.memoizedState={baseLanes:0},ps(0,null!==i?i.baseLanes:n)}else null!==i?(r=i.baseLanes|n,t.memoizedState=null):r=n,ps(0,r);return ja(e,t,o,n),t.child}function Fa(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Ua(e,t,n,r,o){var i=po(n)?co:so.current;return i=fo(t,i),ti(t,o),n=na(e,t,n,r,i,o),null===e||Pa?(t.flags|=1,ja(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Xa(e,t,o))}function Ma(e,t,n,r,o){if(po(n)){var i=!0;vo(t)}else i=!1;if(ti(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),mi(t,n,r),vi(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var s=a.context,u=n.contextType;u="object"==typeof u&&null!==u?ni(u):fo(t,u=po(n)?co:so.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||s!==u)&&gi(t,a,r,u),ri=!1;var d=t.memoizedState;a.state=d,ui(t,r,a,o),s=t.memoizedState,l!==r||d!==s||uo.current||ri?("function"==typeof c&&(di(t,n,c,r),s=t.memoizedState),(l=ri||hi(t,n,l,r,d,s,u))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.flags|=4)):("function"==typeof a.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=s),a.props=r,a.state=s,a.context=u,r=l):("function"==typeof a.componentDidMount&&(t.flags|=4),r=!1)}else{a=t.stateNode,ii(e,t),l=t.memoizedProps,u=t.type===t.elementType?l:Go(t.type,l),a.props=u,f=t.pendingProps,d=a.context,s="object"==typeof(s=n.contextType)&&null!==s?ni(s):fo(t,s=po(n)?co:so.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==f||d!==s)&&gi(t,a,r,s),ri=!1,d=t.memoizedState,a.state=d,ui(t,r,a,o);var h=t.memoizedState;l!==f||d!==h||uo.current||ri?("function"==typeof p&&(di(t,n,p,r),h=t.memoizedState),(u=ri||hi(t,n,u,r,d,h,s))?(c||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,h,s),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,h,s)),"function"==typeof a.componentDidUpdate&&(t.flags|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),a.props=r,a.state=h,a.context=s,r=u):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return za(e,t,n,r,i,o)}function za(e,t,n,r,o,i){Fa(e,t);var a=0!=(64&t.flags);if(!r&&!a)return o&&yo(t,n,!1),Xa(e,t,i);r=t.stateNode,Aa.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&a?(t.child=Ei(t,e.child,null,i),t.child=Ei(t,null,l,i)):ja(e,t,l,i),t.memoizedState=r.state,o&&yo(t,n,!0),t.child}function Va(e){var t=e.stateNode;t.pendingContext?mo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&mo(0,t.context,!1),Ti(e,t.containerInfo)}var Ba,Ha,Wa,$a={dehydrated:null,retryLane:0};function Ga(e,t,n){var r,o=t.pendingProps,i=ji.current,a=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&i)),r?(a=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(i|=1),ao(ji,1&i),null===e?(void 0!==o.fallback&&Mi(t),e=o.children,i=o.fallback,a?(e=Qa(t,e,i,n),t.child.memoizedState={baseLanes:n},t.memoizedState=$a,e):"number"==typeof o.unstable_expectedLoadTime?(e=Qa(t,e,i,n),t.child.memoizedState={baseLanes:n},t.memoizedState=$a,t.lanes=33554432,e):((n=Ms({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,a?(o=function(e,t,n,r,o){var i=t.mode,a=e.child;e=a.sibling;var l={mode:"hidden",children:n};return 0==(2&i)&&t.child!==a?((n=t.child).childLanes=0,n.pendingProps=l,null!==(a=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=a,a.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Is(a,l),null!==e?r=Is(e,r):(r=Us(r,i,o,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,o.children,o.fallback,n),a=t.child,i=e.child.memoizedState,a.memoizedState=null===i?{baseLanes:n}:{baseLanes:i.baseLanes|n},a.childLanes=e.childLanes&~n,t.memoizedState=$a,o):(n=function(e,t,n,r){var o=e.child;return e=o.sibling,n=Is(o,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,o.children,n),t.memoizedState=null,n))}function Qa(e,t,n,r){var o=e.mode,i=e.child;return t={mode:"hidden",children:t},0==(2&o)&&null!==i?(i.childLanes=0,i.pendingProps=t):i=Ms(t,o,0,null),n=Us(n,o,r,null),i.return=e,n.return=e,i.sibling=n,e.child=i,n}function Ka(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),ei(e.return,t)}function Ja(e,t,n,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=o,a.lastEffect=i)}function Ya(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(ja(e,t,r.children,n),0!=(2&(r=ji.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ka(e,n);else if(19===e.tag)Ka(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ao(ji,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===qi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Ja(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===qi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Ja(t,!0,n,null,i,t.lastEffect);break;case"together":Ja(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Xa(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),ql|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Is(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Is(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function Za(e,t){if(!Ii)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function el(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return po(t.type)&&ho(),null;case 3:return Li(),io(uo),io(so),Wi(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Vi(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Pi(t);var i=Oi(Ni.current);if(n=t.type,null!==e&&null!=t.stateNode)Ha(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(a(166));return null}if(e=Oi(Ci.current),Vi(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[Gr]=t,r[Qr]=l,n){case"dialog":Cr("cancel",r),Cr("close",r);break;case"iframe":case"object":case"embed":Cr("load",r);break;case"video":case"audio":for(e=0;e<kr.length;e++)Cr(kr[e],r);break;case"source":Cr("error",r);break;case"img":case"image":case"link":Cr("error",r),Cr("load",r);break;case"details":Cr("toggle",r);break;case"input":ee(r,l),Cr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Cr("invalid",r);break;case"textarea":se(r,l),Cr("invalid",r)}for(var u in xe(n,l),e=null,l)l.hasOwnProperty(u)&&(i=l[u],"children"===u?"string"==typeof i?r.textContent!==i&&(e=["children",i]):"number"==typeof i&&r.textContent!==""+i&&(e=["children",""+i]):s.hasOwnProperty(u)&&null!=i&&"onScroll"===u&&Cr("scroll",r));switch(n){case"input":J(r),re(r,l,!0);break;case"textarea":J(r),ce(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Rr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(u=9===i.nodeType?i:i.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(n,{is:r.is}):(e=u.createElement(n),"select"===n&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,n),e[Gr]=t,e[Qr]=r,Ba(e,t),t.stateNode=e,u=Se(n,r),n){case"dialog":Cr("cancel",e),Cr("close",e),i=r;break;case"iframe":case"object":case"embed":Cr("load",e),i=r;break;case"video":case"audio":for(i=0;i<kr.length;i++)Cr(kr[i],e);i=r;break;case"source":Cr("error",e),i=r;break;case"img":case"image":case"link":Cr("error",e),Cr("load",e),i=r;break;case"details":Cr("toggle",e),i=r;break;case"input":ee(e,r),i=Z(e,r),Cr("invalid",e);break;case"option":i=ie(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},i=o({},r,{value:void 0}),Cr("invalid",e);break;case"textarea":se(e,r),i=le(e,r),Cr("invalid",e);break;default:i=r}xe(n,i);var c=i;for(l in c)if(c.hasOwnProperty(l)){var f=c[l];"style"===l?ke(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&ge(e,f):"children"===l?"string"==typeof f?("textarea"!==n||""!==f)&&ve(e,f):"number"==typeof f&&ve(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(s.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Cr("scroll",e):null!=f&&w(e,l,f,u))}switch(n){case"input":J(e),re(e,r,!1);break;case"textarea":J(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+Q(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ae(e,!!r.multiple,l,!1):null!=r.defaultValue&&ae(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=Rr)}Fr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Wa(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));n=Oi(Ni.current),Oi(Ci.current),Vi(t)?(r=t.stateNode,n=t.memoizedProps,r[Gr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Gr]=t,t.stateNode=r)}return null;case 13:return io(ji),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Vi(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&ji.current)?0===Al&&(Al=3):(0!==Al&&3!==Al||(Al=4),null===_l||0==(134217727&ql)&&0==(134217727&Rl)||fs(_l,Ol))),(r||n)&&(t.flags|=4),null);case 4:return Li(),null===e&&Nr(t.stateNode.containerInfo),null;case 10:return Zo(t),null;case 17:return po(t.type)&&ho(),null;case 19:if(io(ji),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(u=r.rendering))if(l)Za(r,!1);else{if(0!==Al||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(u=qi(e))){for(t.flags|=64,Za(r,!1),null!==(l=u.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(u=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=u.childLanes,l.lanes=u.lanes,l.child=u.child,l.memoizedProps=u.memoizedProps,l.memoizedState=u.memoizedState,l.updateQueue=u.updateQueue,l.type=u.type,e=u.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ao(ji,1&ji.current|2),t.child}e=e.sibling}null!==r.tail&&Uo()>Ul&&(t.flags|=64,l=!0,Za(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=qi(u))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Za(r,!0),null===r.tail&&"hidden"===r.tailMode&&!u.alternate&&!Ii)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Uo()-r.renderingStartTime>Ul&&1073741824!==n&&(t.flags|=64,l=!0,Za(r,!1),t.lanes=33554432);r.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=r.last)?n.sibling=u:t.child=u,r.last=u)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Uo(),n.sibling=null,t=ji.current,ao(ji,l?1&t|2:1&t),n):null;case 23:case 24:return hs(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(a(156,t.tag))}function tl(e){switch(e.tag){case 1:po(e.type)&&ho();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Li(),io(uo),io(so),Wi(),0!=(64&(t=e.flags)))throw Error(a(285));return e.flags=-4097&t|64,e;case 5:return Pi(e),null;case 13:return io(ji),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return io(ji),null;case 4:return Li(),null;case 10:return Zo(e),null;case 23:case 24:return hs(),null;default:return null}}function nl(e,t){try{var n="",r=t;do{n+=$(r),r=r.return}while(r);var o=n}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o}}function rl(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Ba=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ha=function(e,t,n,r){var i=e.memoizedProps;if(i!==r){e=t.stateNode,Oi(Ci.current);var a,l=null;switch(n){case"input":i=Z(e,i),r=Z(e,r),l=[];break;case"option":i=ie(e,i),r=ie(e,r),l=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),l=[];break;case"textarea":i=le(e,i),r=le(e,r),l=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(e.onclick=Rr)}for(f in xe(n,r),n=null,i)if(!r.hasOwnProperty(f)&&i.hasOwnProperty(f)&&null!=i[f])if("style"===f){var u=i[f];for(a in u)u.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(s.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in r){var c=r[f];if(u=null!=i?i[f]:void 0,r.hasOwnProperty(f)&&c!==u&&(null!=c||null!=u))if("style"===f)if(u){for(a in u)!u.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in c)c.hasOwnProperty(a)&&u[a]!==c[a]&&(n||(n={}),n[a]=c[a])}else n||(l||(l=[]),l.push(f,n)),n=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(l=l||[]).push(f,c)):"children"===f?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(s.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&Cr("scroll",e),l||u===c||(l=[])):"object"==typeof c&&null!==c&&c.$$typeof===R?c.toString():(l=l||[]).push(f,c))}n&&(l=l||[]).push("style",n);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Wa=function(e,t,n,r){n!==r&&(t.flags|=4)};var ol="function"==typeof WeakMap?WeakMap:Map;function il(e,t,n){(n=ai(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Bl||(Bl=!0,Hl=r),rl(0,t)},n}function al(e,t,n){(n=ai(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return rl(0,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Wl?Wl=new Set([this]):Wl.add(this),rl(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ll="function"==typeof WeakSet?WeakSet:Set;function sl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){As(e,t)}else t.current=null}function ul(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Go(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Vr(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(a(163))}function cl(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;r=o.next,0!=(4&(o=o.tag))&&0!=(1&o)&&(Os(n,e),Ns(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Go(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&ci(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}ci(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Fr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&wt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(a(163))}function fl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=we("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function dl(e,t){if(wo&&"function"==typeof wo.onCommitFiberUnmount)try{wo.onCommitFiberUnmount(bo,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,o=r.destroy;if(r=r.tag,void 0!==o)if(0!=(4&r))Os(t,n);else{r=t;try{o()}catch(e){As(r,e)}}n=n.next}while(n!==e)}break;case 1:if(sl(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){As(t,e)}break;case 5:sl(t);break;case 4:yl(e,t)}}function pl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function hl(e){return 5===e.tag||3===e.tag||4===e.tag}function ml(e){e:{for(var t=e.return;null!==t;){if(hl(t))break e;t=t.return}throw Error(a(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.flags&&(ve(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?gl(e,n,t):vl(e,n,t)}function gl(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Rr));else if(4!==r&&null!==(e=e.child))for(gl(e,t,n),e=e.sibling;null!==e;)gl(e,t,n),e=e.sibling}function vl(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(vl(e,t,n),e=e.sibling;null!==e;)vl(e,t,n),e=e.sibling}function yl(e,t){for(var n,r,o=t,i=!1;;){if(!i){i=o.return;e:for(;;){if(null===i)throw Error(a(160));switch(n=i.stateNode,i.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}i=i.return}i=!0}if(5===o.tag||6===o.tag){e:for(var l=e,s=o,u=s;;)if(dl(l,u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===s)break e;for(;null===u.sibling;){if(null===u.return||u.return===s)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}r?(l=n,s=o.stateNode,8===l.nodeType?l.parentNode.removeChild(s):l.removeChild(s)):n.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){n=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(dl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(i=!1)}o.sibling.return=o.return,o=o.sibling}}function bl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Qr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Se(e,o),t=Se(e,r),o=0;o<i.length;o+=2){var l=i[o],s=i[o+1];"style"===l?ke(n,s):"dangerouslySetInnerHTML"===l?ge(n,s):"children"===l?ve(n,s):w(n,l,s,t)}switch(e){case"input":ne(n,r);break;case"textarea":ue(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(i=r.value)?ae(n,!!r.multiple,i,!1):e!==!!r.multiple&&(null!=r.defaultValue?ae(n,!!r.multiple,r.defaultValue,!0):ae(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,wt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Fl=Uo(),fl(t.child,!0)),void wl(t);case 19:return void wl(t);case 17:return;case 23:case 24:return void fl(t,null!==t.memoizedState)}throw Error(a(163))}function wl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ll),t.forEach((function(t){var r=js.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function kl(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var El=Math.ceil,xl=k.ReactCurrentDispatcher,Sl=k.ReactCurrentOwner,Cl=0,_l=null,Nl=null,Ol=0,Tl=0,Ll=oo(0),Al=0,Pl=null,jl=0,ql=0,Rl=0,Dl=0,Il=null,Fl=0,Ul=1/0;function Ml(){Ul=Uo()+500}var zl,Vl=null,Bl=!1,Hl=null,Wl=null,$l=!1,Gl=null,Ql=90,Kl=[],Jl=[],Yl=null,Xl=0,Zl=null,es=-1,ts=0,ns=0,rs=null,os=!1;function is(){return 0!=(48&Cl)?Uo():-1!==es?es:es=Uo()}function as(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Mo()?1:2;if(0===ts&&(ts=jl),0!==$o.transition){0!==ns&&(ns=null!==Il?Il.pendingLanes:0),e=ts;var t=4186112&~ns;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Mo(),e=Ft(0!=(4&Cl)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),ts)}function ls(e,t,n){if(50<Xl)throw Xl=0,Zl=null,Error(a(185));if(null===(e=ss(e,t)))return null;zt(e,t,n),e===_l&&(Rl|=t,4===Al&&fs(e,Ol));var r=Mo();1===t?0!=(8&Cl)&&0==(48&Cl)?ds(e):(us(e,n),0===Cl&&(Ml(),Ho())):(0==(4&Cl)||98!==r&&99!==r||(null===Yl?Yl=new Set([e]):Yl.add(e)),us(e,n)),Il=e}function ss(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function us(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,o=e.pingedLanes,i=e.expirationTimes,l=e.pendingLanes;0<l;){var s=31-Vt(l),u=1<<s,c=i[s];if(-1===c){if(0==(u&r)||0!=(u&o)){c=t,Rt(u);var f=qt;i[s]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=u);l&=~u}if(r=Dt(e,e===_l?Ol:0),t=qt,0===r)null!==n&&(n!==jo&&xo(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==jo&&xo(n)}15===t?(n=ds.bind(null,e),null===Ro?(Ro=[n],Do=Eo(Oo,Wo)):Ro.push(n),n=jo):n=14===t?Bo(99,ds.bind(null,e)):Bo(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(a(358,e))}}(t),cs.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function cs(e){if(es=-1,ns=ts=0,0!=(48&Cl))throw Error(a(327));var t=e.callbackNode;if(_s()&&e.callbackNode!==t)return null;var n=Dt(e,e===_l?Ol:0);if(0===n)return null;var r=n,o=Cl;Cl|=16;var i=vs();for(_l===e&&Ol===r||(Ml(),ms(e,r));;)try{ws();break}catch(t){gs(e,t)}if(Xo(),xl.current=i,Cl=o,null!==Nl?r=0:(_l=null,Ol=0,r=Al),0!=(jl&Rl))ms(e,0);else if(0!==r){if(2===r&&(Cl|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(n=It(e))&&(r=ys(e,n))),1===r)throw t=Pl,ms(e,0),fs(e,n),us(e,Uo()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(a(345));case 2:xs(e);break;case 3:if(fs(e,n),(62914560&n)===n&&10<(r=Fl+500-Uo())){if(0!==Dt(e,0))break;if(((o=e.suspendedLanes)&n)!==n){is(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=Mr(xs.bind(null,e),r);break}xs(e);break;case 4:if(fs(e,n),(4186112&n)===n)break;for(r=e.eventTimes,o=-1;0<n;){var l=31-Vt(n);i=1<<l,(l=r[l])>o&&(o=l),n&=~i}if(n=o,10<(n=(120>(n=Uo()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*El(n/1960))-n)){e.timeoutHandle=Mr(xs.bind(null,e),n);break}xs(e);break;case 5:xs(e);break;default:throw Error(a(329))}}return us(e,Uo()),e.callbackNode===t?cs.bind(null,e):null}function fs(e,t){for(t&=~Dl,t&=~Rl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Vt(t),r=1<<n;e[n]=-1,t&=~r}}function ds(e){if(0!=(48&Cl))throw Error(a(327));if(_s(),e===_l&&0!=(e.expiredLanes&Ol)){var t=Ol,n=ys(e,t);0!=(jl&Rl)&&(n=ys(e,t=Dt(e,t)))}else n=ys(e,t=Dt(e,0));if(0!==e.tag&&2===n&&(Cl|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(t=It(e))&&(n=ys(e,t))),1===n)throw n=Pl,ms(e,0),fs(e,t),us(e,Uo()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,xs(e),us(e,Uo()),null}function ps(e,t){ao(Ll,Tl),Tl|=t,jl|=t}function hs(){Tl=Ll.current,io(Ll)}function ms(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,zr(n)),null!==Nl)for(n=Nl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ho();break;case 3:Li(),io(uo),io(so),Wi();break;case 5:Pi(r);break;case 4:Li();break;case 13:case 19:io(ji);break;case 10:Zo(r);break;case 23:case 24:hs()}n=n.return}_l=e,Nl=Is(e.current,null),Ol=Tl=jl=t,Al=0,Pl=null,Dl=Rl=ql=0}function gs(e,t){for(;;){var n=Nl;try{if(Xo(),$i.current=Na,Xi){for(var r=Ki.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}Xi=!1}if(Qi=0,Yi=Ji=Ki=null,Zi=!1,Sl.current=null,null===n||null===n.return){Al=1,Pl=t,Nl=null;break}e:{var i=e,a=n.return,l=n,s=t;if(t=Ol,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==s&&"object"==typeof s&&"function"==typeof s.then){var u=s;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.lanes=c.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&ji.current),d=a;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var g=d.updateQueue;if(null===g){var v=new Set;v.add(u),d.updateQueue=v}else g.add(u);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=ai(-1,1);y.tag=2,li(l,y)}l.lanes|=1;break e}s=void 0,l=t;var b=i.pingCache;if(null===b?(b=i.pingCache=new ol,s=new Set,b.set(u,s)):void 0===(s=b.get(u))&&(s=new Set,b.set(u,s)),!s.has(l)){s.add(l);var w=Ps.bind(null,i,u,l);u.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);s=Error((G(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Al&&(Al=2),s=nl(s,l),d=a;do{switch(d.tag){case 3:i=s,d.flags|=4096,t&=-t,d.lanes|=t,si(d,il(0,i,t));break e;case 1:i=s;var k=d.type,E=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===Wl||!Wl.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,si(d,al(d,i,t));break e}}d=d.return}while(null!==d)}Es(n)}catch(e){t=e,Nl===n&&null!==n&&(Nl=n=n.return);continue}break}}function vs(){var e=xl.current;return xl.current=Na,null===e?Na:e}function ys(e,t){var n=Cl;Cl|=16;var r=vs();for(_l===e&&Ol===t||ms(e,t);;)try{bs();break}catch(t){gs(e,t)}if(Xo(),Cl=n,xl.current=r,null!==Nl)throw Error(a(261));return _l=null,Ol=0,Al}function bs(){for(;null!==Nl;)ks(Nl)}function ws(){for(;null!==Nl&&!So();)ks(Nl)}function ks(e){var t=zl(e.alternate,e,Tl);e.memoizedProps=e.pendingProps,null===t?Es(e):Nl=t,Sl.current=null}function Es(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=el(n,t,Tl)))return void(Nl=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Tl)||0==(4&n.mode)){for(var r=0,o=n.child;null!==o;)r|=o.lanes|o.childLanes,o=o.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=tl(t)))return n.flags&=2047,void(Nl=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Nl=t);Nl=t=e}while(null!==t);0===Al&&(Al=5)}function xs(e){var t=Mo();return Vo(99,Ss.bind(null,e,t)),null}function Ss(e,t){do{_s()}while(null!==Gl);if(0!=(48&Cl))throw Error(a(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(a(177));e.callbackNode=null;var r=n.lanes|n.childLanes,o=r,i=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,s=e.expirationTimes;0<i;){var u=31-Vt(i),c=1<<u;o[u]=0,l[u]=-1,s[u]=-1,i&=~c}if(null!==Yl&&0==(24&r)&&Yl.has(e)&&Yl.delete(e),e===_l&&(Nl=_l=null,Ol=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(o=Cl,Cl|=32,Sl.current=null,Dr=Gt,dr(l=fr())){if("selectionStart"in l)s={start:l.selectionStart,end:l.selectionEnd};else e:if(s=(s=l.ownerDocument)&&s.defaultView||window,(c=s.getSelection&&s.getSelection())&&0!==c.rangeCount){s=c.anchorNode,i=c.anchorOffset,u=c.focusNode,c=c.focusOffset;try{s.nodeType,u.nodeType}catch(e){s=null;break e}var f=0,d=-1,p=-1,h=0,m=0,g=l,v=null;t:for(;;){for(var y;g!==s||0!==i&&3!==g.nodeType||(d=f+i),g!==u||0!==c&&3!==g.nodeType||(p=f+c),3===g.nodeType&&(f+=g.nodeValue.length),null!==(y=g.firstChild);)v=g,g=y;for(;;){if(g===l)break t;if(v===s&&++h===i&&(d=f),v===u&&++m===c&&(p=f),null!==(y=g.nextSibling))break;v=(g=v).parentNode}g=y}s=-1===d||-1===p?null:{start:d,end:p}}else s=null;s=s||{start:0,end:0}}else s=null;Ir={focusedElem:l,selectionRange:s},Gt=!1,rs=null,os=!1,Vl=r;do{try{Cs()}catch(e){if(null===Vl)throw Error(a(330));As(Vl,e),Vl=Vl.nextEffect}}while(null!==Vl);rs=null,Vl=r;do{try{for(l=e;null!==Vl;){var b=Vl.flags;if(16&b&&ve(Vl.stateNode,""),128&b){var w=Vl.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:ml(Vl),Vl.flags&=-3;break;case 6:ml(Vl),Vl.flags&=-3,bl(Vl.alternate,Vl);break;case 1024:Vl.flags&=-1025;break;case 1028:Vl.flags&=-1025,bl(Vl.alternate,Vl);break;case 4:bl(Vl.alternate,Vl);break;case 8:yl(l,s=Vl);var E=s.alternate;pl(s),null!==E&&pl(E)}Vl=Vl.nextEffect}}catch(e){if(null===Vl)throw Error(a(330));As(Vl,e),Vl=Vl.nextEffect}}while(null!==Vl);if(k=Ir,w=fr(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&cr(b.ownerDocument.documentElement,b)){null!==l&&dr(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),s=b.textContent.length,E=Math.min(l.start,s),l=void 0===l.end?E:Math.min(l.end,s),!k.extend&&E>l&&(s=l,l=E,E=s),s=ur(b,E),i=ur(b,l),s&&i&&(1!==k.rangeCount||k.anchorNode!==s.node||k.anchorOffset!==s.offset||k.focusNode!==i.node||k.focusOffset!==i.offset)&&((w=w.createRange()).setStart(s.node,s.offset),k.removeAllRanges(),E>l?(k.addRange(w),k.extend(i.node,i.offset)):(w.setEnd(i.node,i.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Gt=!!Dr,Ir=Dr=null,e.current=n,Vl=r;do{try{for(b=e;null!==Vl;){var x=Vl.flags;if(36&x&&cl(b,Vl.alternate,Vl),128&x){w=void 0;var S=Vl.ref;if(null!==S){var C=Vl.stateNode;switch(Vl.tag){case 5:w=C;break;default:w=C}"function"==typeof S?S(w):S.current=w}}Vl=Vl.nextEffect}}catch(e){if(null===Vl)throw Error(a(330));As(Vl,e),Vl=Vl.nextEffect}}while(null!==Vl);Vl=null,qo(),Cl=o}else e.current=n;if($l)$l=!1,Gl=e,Ql=t;else for(Vl=r;null!==Vl;)t=Vl.nextEffect,Vl.nextEffect=null,8&Vl.flags&&((x=Vl).sibling=null,x.stateNode=null),Vl=t;if(0===(r=e.pendingLanes)&&(Wl=null),1===r?e===Zl?Xl++:(Xl=0,Zl=e):Xl=0,n=n.stateNode,wo&&"function"==typeof wo.onCommitFiberRoot)try{wo.onCommitFiberRoot(bo,n,void 0,64==(64&n.current.flags))}catch(e){}if(us(e,Uo()),Bl)throw Bl=!1,e=Hl,Hl=null,e;return 0!=(8&Cl)||Ho(),null}function Cs(){for(;null!==Vl;){var e=Vl.alternate;os||null===rs||(0!=(8&Vl.flags)?Xe(Vl,rs)&&(os=!0):13===Vl.tag&&kl(e,Vl)&&Xe(Vl,rs)&&(os=!0));var t=Vl.flags;0!=(256&t)&&ul(e,Vl),0==(512&t)||$l||($l=!0,Bo(97,(function(){return _s(),null}))),Vl=Vl.nextEffect}}function _s(){if(90!==Ql){var e=97<Ql?97:Ql;return Ql=90,Vo(e,Ts)}return!1}function Ns(e,t){Kl.push(t,e),$l||($l=!0,Bo(97,(function(){return _s(),null})))}function Os(e,t){Jl.push(t,e),$l||($l=!0,Bo(97,(function(){return _s(),null})))}function Ts(){if(null===Gl)return!1;var e=Gl;if(Gl=null,0!=(48&Cl))throw Error(a(331));var t=Cl;Cl|=32;var n=Jl;Jl=[];for(var r=0;r<n.length;r+=2){var o=n[r],i=n[r+1],l=o.destroy;if(o.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===i)throw Error(a(330));As(i,e)}}for(n=Kl,Kl=[],r=0;r<n.length;r+=2){o=n[r],i=n[r+1];try{var s=o.create;o.destroy=s()}catch(e){if(null===i)throw Error(a(330));As(i,e)}}for(s=e.current.firstEffect;null!==s;)e=s.nextEffect,s.nextEffect=null,8&s.flags&&(s.sibling=null,s.stateNode=null),s=e;return Cl=t,Ho(),!0}function Ls(e,t,n){li(e,t=il(0,t=nl(n,t),1)),t=is(),null!==(e=ss(e,1))&&(zt(e,1,t),us(e,t))}function As(e,t){if(3===e.tag)Ls(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Ls(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r))){var o=al(n,e=nl(t,e),1);if(li(n,o),o=is(),null!==(n=ss(n,1)))zt(n,1,o),us(n,o);else if("function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Ps(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=is(),e.pingedLanes|=e.suspendedLanes&n,_l===e&&(Ol&n)===n&&(4===Al||3===Al&&(62914560&Ol)===Ol&&500>Uo()-Fl?ms(e,0):Dl|=n),us(e,t)}function js(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Mo()?1:2:(0===ts&&(ts=jl),0===(t=Ut(62914560&~ts))&&(t=4194304))),n=is(),null!==(e=ss(e,t))&&(zt(e,t,n),us(e,n))}function qs(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Rs(e,t,n,r){return new qs(e,t,n,r)}function Ds(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Is(e,t){var n=e.alternate;return null===n?((n=Rs(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Fs(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Ds(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case S:return Us(n.children,o,i,t);case D:l=8,o|=16;break;case C:l=8,o|=1;break;case _:return(e=Rs(12,n,t,8|o)).elementType=_,e.type=_,e.lanes=i,e;case L:return(e=Rs(13,n,t,o)).type=L,e.elementType=L,e.lanes=i,e;case A:return(e=Rs(19,n,t,o)).elementType=A,e.lanes=i,e;case I:return Ms(n,o,i,t);case F:return(e=Rs(24,n,t,o)).elementType=F,e.lanes=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case N:l=10;break e;case O:l=9;break e;case T:l=11;break e;case P:l=14;break e;case j:l=16,r=null;break e;case q:l=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Rs(l,n,t,o)).elementType=e,t.type=r,t.lanes=i,t}function Us(e,t,n,r){return(e=Rs(7,e,r,t)).lanes=n,e}function Ms(e,t,n,r){return(e=Rs(23,e,r,t)).elementType=I,e.lanes=n,e}function zs(e,t,n){return(e=Rs(6,e,null,t)).lanes=n,e}function Vs(e,t,n){return(t=Rs(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bs(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Mt(0),this.expirationTimes=Mt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Mt(0),this.mutableSourceEagerHydrationData=null}function Hs(e,t,n,r){var o=t.current,i=is(),l=as(o);e:if(n){t:{if(Ke(n=n._reactInternals)!==n||1!==n.tag)throw Error(a(170));var s=n;do{switch(s.tag){case 3:s=s.stateNode.context;break t;case 1:if(po(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break t}}s=s.return}while(null!==s);throw Error(a(171))}if(1===n.tag){var u=n.type;if(po(u)){n=go(n,u,s);break e}}n=s}else n=lo;return null===t.context?t.context=n:t.pendingContext=n,(t=ai(i,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),li(o,t),ls(o,l,i),l}function Ws(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function $s(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Gs(e,t){$s(e,t),(e=e.alternate)&&$s(e,t)}function Qs(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Bs(e,t,null!=n&&!0===n.hydrate),t=Rs(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,oi(t),e[Kr]=n.current,Nr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var o=(t=r[e])._getVersion;o=o(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=n}function Ks(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Js(e,t,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Ws(a);l.call(e)}}Hs(t,a,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Qs(e,0,t?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var s=o;o=function(){var e=Ws(a);s.call(e)}}!function(e,t){var n=Cl;Cl&=-2,Cl|=8;try{e(t)}finally{0===(Cl=n)&&(Ml(),Ho())}}((function(){Hs(t,a,e,o)}))}return Ws(a)}zl=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||uo.current)Pa=!0;else{if(0==(n&r)){switch(Pa=!1,t.tag){case 3:Va(t),Bi();break;case 5:Ai(t);break;case 1:po(t.type)&&vo(t);break;case 4:Ti(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var o=t.type._context;ao(Qo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Ga(e,t,n):(ao(ji,1&ji.current),null!==(t=Xa(e,t,n))?t.sibling:null);ao(ji,1&ji.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Ya(e,t,n);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),ao(ji,ji.current),r)break;return null;case 23:case 24:return t.lanes=0,Ia(e,t,n)}return Xa(e,t,n)}Pa=0!=(16384&e.flags)}else Pa=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=fo(t,so.current),ti(t,n),o=na(null,t,r,e,o,n),t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,po(r)){var i=!0;vo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,oi(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&di(t,r,l,e),o.updater=pi,t.stateNode=o,o._reactInternals=t,vi(t,r,e,n),t=za(null,t,r,!0,i,n)}else t.tag=0,ja(null,t,o,n),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(i=o._init)(o._payload),t.type=o,i=t.tag=function(e){if("function"==typeof e)return Ds(e)?1:0;if(null!=e){if((e=e.$$typeof)===T)return 11;if(e===P)return 14}return 2}(o),e=Go(o,e),i){case 0:t=Ua(null,t,o,e,n);break e;case 1:t=Ma(null,t,o,e,n);break e;case 11:t=qa(null,t,o,e,n);break e;case 14:t=Ra(null,t,o,Go(o.type,e),r,n);break e}throw Error(a(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Ua(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 1:return r=t.type,o=t.pendingProps,Ma(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 3:if(Va(t),r=t.updateQueue,null===e||null===r)throw Error(a(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ii(e,t),ui(t,r,null,n),(r=t.memoizedState.element)===o)Bi(),t=Xa(e,t,n);else{if((i=(o=t.stateNode).hydrate)&&(Di=Br(t.stateNode.containerInfo.firstChild),Ri=t,i=Ii=!0),i){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(i=e[o])._workInProgressVersionPrimary=e[o+1],Hi.push(i);for(n=xi(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else ja(e,t,r,n),Bi();t=t.child}return t;case 5:return Ai(t),null===e&&Mi(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,Ur(r,o)?l=null:null!==i&&Ur(r,i)&&(t.flags|=16),Fa(e,t),ja(e,t,l,n),t.child;case 6:return null===e&&Mi(t),null;case 13:return Ga(e,t,n);case 4:return Ti(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ei(t,null,r,n):ja(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,qa(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 7:return ja(e,t,t.pendingProps,n),t.child;case 8:case 12:return ja(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,l=t.memoizedProps,i=o.value;var s=t.type._context;if(ao(Qo,s._currentValue),s._currentValue=i,null!==l)if(s=l.value,0==(i=ir(s,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(s,i):1073741823))){if(l.children===o.children&&!uo.current){t=Xa(e,t,n);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var u=s.dependencies;if(null!==u){l=s.child;for(var c=u.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&i)){1===s.tag&&((c=ai(-1,n&-n)).tag=2,li(s,c)),s.lanes|=n,null!==(c=s.alternate)&&(c.lanes|=n),ei(s.return,n),u.lanes|=n;break}c=c.next}}else l=10===s.tag&&s.type===t.type?null:s.child;if(null!==l)l.return=s;else for(l=s;null!==l;){if(l===t){l=null;break}if(null!==(s=l.sibling)){s.return=l.return,l=s;break}l=l.return}s=l}ja(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ti(t,n),r=r(o=ni(o,i.unstable_observedBits)),t.flags|=1,ja(e,t,r,n),t.child;case 14:return i=Go(o=t.type,t.pendingProps),Ra(e,t,o,i=Go(o.type,i),r,n);case 15:return Da(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Go(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,po(r)?(e=!0,vo(t)):e=!1,ti(t,n),mi(t,r,o),vi(t,r,o,n),za(null,t,r,!0,e,n);case 19:return Ya(e,t,n);case 23:case 24:return Ia(e,t,n)}throw Error(a(156,t.tag))},Qs.prototype.render=function(e){Hs(e,this._internalRoot,null,null)},Qs.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Hs(null,e,null,(function(){t[Kr]=null}))},Ze=function(e){13===e.tag&&(ls(e,4,is()),Gs(e,4))},et=function(e){13===e.tag&&(ls(e,67108864,is()),Gs(e,67108864))},tt=function(e){if(13===e.tag){var t=is(),n=as(e);ls(e,n,t),Gs(e,n)}},nt=function(e,t){return t()},_e=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=eo(r);if(!o)throw Error(a(90));Y(r),ne(r,o)}}}break;case"textarea":ue(e,n);break;case"select":null!=(t=n.value)&&ae(e,!!n.multiple,t,!1)}},Pe=function(e,t){var n=Cl;Cl|=1;try{return e(t)}finally{0===(Cl=n)&&(Ml(),Ho())}},je=function(e,t,n,r,o){var i=Cl;Cl|=4;try{return Vo(98,e.bind(null,t,n,r,o))}finally{0===(Cl=i)&&(Ml(),Ho())}},qe=function(){0==(49&Cl)&&(function(){if(null!==Yl){var e=Yl;Yl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,us(e,Uo())}))}Ho()}(),_s())},Re=function(e,t){var n=Cl;Cl|=2;try{return e(t)}finally{0===(Cl=n)&&(Ml(),Ho())}};var Ys={findFiberByHostInstance:Yr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},Xs={bundleType:Ys.bundleType,version:Ys.version,rendererPackageName:Ys.rendererPackageName,rendererConfig:Ys.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ke(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return Ye(o),e;if(i===r)return Ye(o),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,s=o.child;s;){if(s===n){l=!0,n=o,r=i;break}if(s===r){l=!0,r=o,n=i;break}s=s.sibling}if(!l){for(s=i.child;s;){if(s===n){l=!0,n=i,r=o;break}if(s===r){l=!0,r=i,n=o;break}s=s.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:Ys.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Zs=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Zs.isDisabled&&Zs.supportsFiber)try{bo=Zs.inject(Xs),wo=Zs}catch(me){}}t.render=function(e,t,n){if(!Ks(t))throw Error(a(200));return Js(null,e,t,!1,n)}},232:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(261)},351:(e,t,n)=>{"use strict";var r=n(653),o=60103,i=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var a=60109,l=60110,s=60112;t.Suspense=60113;var u=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),i=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),a=f("react.provider"),l=f("react.context"),s=f("react.forward_ref"),t.Suspense=f("react.suspense"),u=f("react.memo"),c=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function v(){}function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=g.prototype;var b=y.prototype=new v;b.constructor=y,r(b,g.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,n){var r,i={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)k.call(t,r)&&!E.hasOwnProperty(r)&&(i[r]=t[r]);var s=arguments.length-2;if(1===s)i.children=n;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];i.children=u}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===i[r]&&(i[r]=s[r]);return{$$typeof:o,type:e,key:a,ref:l,props:i,_owner:w.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var C=/\/+/g;function _(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function N(e,t,n,r,a){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var s=!1;if(null===e)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case o:case i:s=!0}}if(s)return a=a(s=e),e=""===r?"."+_(s,0):r,Array.isArray(a)?(n="",null!=e&&(n=e.replace(C,"$&/")+"/"),N(a,t,n,"",(function(e){return e}))):null!=a&&(S(a)&&(a=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(a,n+(!a.key||s&&s.key===a.key?"":(""+a.key).replace(C,"$&/")+"/")+e)),t.push(a)),1;if(s=0,r=""===r?".":r+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=r+_(l=e[u],u);s+=N(l,t,n,c,a)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),u=0;!(l=e.next()).done;)s+=N(l=l.value,t,n,c=r+_(l,u++),a);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return s}function O(e,t,n){if(null==e)return e;var r=[],o=0;return N(e,r,"","",(function(e){return t.call(n,e,o++)})),r}function T(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var L={current:null};function A(){var e=L.current;if(null===e)throw Error(p(321));return e}var P={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:O,forEach:function(e,t,n){O(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(p(143));return e}},t.Component=g,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=P,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var i=r({},e.props),a=e.key,l=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,s=w.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)k.call(t,c)&&!E.hasOwnProperty(c)&&(i[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)i.children=n;else if(1<c){u=Array(c);for(var f=0;f<c;f++)u[f]=arguments[f+2];i.children=u}return{$$typeof:o,type:e.type,key:a,ref:l,props:i,_owner:s}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:a,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:s,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:T}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return A().useCallback(e,t)},t.useContext=function(e,t){return A().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return A().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return A().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return A().useLayoutEffect(e,t)},t.useMemo=function(e,t){return A().useMemo(e,t)},t.useReducer=function(e,t,n){return A().useReducer(e,t,n)},t.useRef=function(e){return A().useRef(e)},t.useState=function(e){return A().useState(e)},t.version="17.0.1"},629:(e,t,n)=>{"use strict";e.exports=n(351)},757:(e,t)=>{"use strict";var n,r,o,i;if("object"==typeof performance&&"function"==typeof performance.now){var a=performance;t.unstable_now=function(){return a.now()}}else{var l=Date,s=l.now();t.unstable_now=function(){return l.now()-s}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,f=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==u?setTimeout(n,0,e):(u=e,setTimeout(f,0))},r=function(e,t){c=setTimeout(e,t)},o=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},i=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,g=null,v=-1,y=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},i=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==g){var e=t.unstable_now();b=e+y;try{g(!0,e)?k.postMessage(null):(m=!1,g=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){g=e,m||(m=!0,k.postMessage(null))},r=function(e,n){v=d((function(){e(t.unstable_now())}),n)},o=function(){p(v),v=-1}}function E(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<C(o,t)))break e;e[r]=t,e[n]=o,n=r}}function x(e){return void 0===(e=e[0])?null:e}function S(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],l=i+1,s=e[l];if(void 0!==a&&0>C(a,n))void 0!==s&&0>C(s,a)?(e[r]=s,e[l]=n,r=l):(e[r]=a,e[i]=n,r=i);else{if(!(void 0!==s&&0>C(s,n)))break e;e[r]=s,e[l]=n,r=l}}}return t}return null}function C(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var _=[],N=[],O=1,T=null,L=3,A=!1,P=!1,j=!1;function q(e){for(var t=x(N);null!==t;){if(null===t.callback)S(N);else{if(!(t.startTime<=e))break;S(N),t.sortIndex=t.expirationTime,E(_,t)}t=x(N)}}function R(e){if(j=!1,q(e),!P)if(null!==x(_))P=!0,n(D);else{var t=x(N);null!==t&&r(R,t.startTime-e)}}function D(e,n){P=!1,j&&(j=!1,o()),A=!0;var i=L;try{for(q(n),T=x(_);null!==T&&(!(T.expirationTime>n)||e&&!t.unstable_shouldYield());){var a=T.callback;if("function"==typeof a){T.callback=null,L=T.priorityLevel;var l=a(T.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?T.callback=l:T===x(_)&&S(_),q(n)}else S(_);T=x(_)}if(null!==T)var s=!0;else{var u=x(N);null!==u&&r(R,u.startTime-n),s=!1}return s}finally{T=null,L=i,A=!1}}var I=i;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){P||A||(P=!0,n(D))},t.unstable_getCurrentPriorityLevel=function(){return L},t.unstable_getFirstCallbackNode=function(){return x(_)},t.unstable_next=function(e){switch(L){case 1:case 2:case 3:var t=3;break;default:t=L}var n=L;L=t;try{return e()}finally{L=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=I,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=L;L=e;try{return t()}finally{L=n}},t.unstable_scheduleCallback=function(e,i,a){var l=t.unstable_now();switch(a="object"==typeof a&&null!==a&&"number"==typeof(a=a.delay)&&0<a?l+a:l,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:O++,callback:i,priorityLevel:e,startTime:a,expirationTime:s=a+s,sortIndex:-1},a>l?(e.sortIndex=a,E(N,e),null===x(_)&&e===x(N)&&(j?o():j=!0,r(R,a-l))):(e.sortIndex=s,E(_,e),P||A||(P=!0,n(D))),e},t.unstable_wrapCallback=function(e){var t=L;return function(){var n=L;L=t;try{return e.apply(this,arguments)}finally{L=n}}}},410:(e,t,n)=>{"use strict";e.exports=n(757)},455:e=>{"use strict";e.exports=a;var t=/(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/,n={reset:["fff","000"],black:"000",red:"ff0000",green:"209805",yellow:"e8bf03",blue:"0000ff",magenta:"ff00ff",cyan:"00ffee",lightgrey:"f0f0f0",darkgrey:"888"},r={30:"black",31:"red",32:"green",33:"yellow",34:"blue",35:"magenta",36:"cyan",37:"lightgrey"},o={1:"font-weight:bold",2:"opacity:0.5",3:"<i>",4:"<u>",8:"display:none",9:"<del>"},i={23:"</i>",24:"</u>",29:"</del>"};function a(e){if(!t.test(e))return e;var n=[],r=e.replace(/\033\[(\d+)*m/g,(function(e,t){var r=o[t];if(r)return~n.indexOf(t)?(n.pop(),"</span>"):(n.push(t),"<"===r[0]?r:'<span style="'+r+';">');var a=i[t];return a?(n.pop(),a):""})),a=n.length;return a>0&&(r+=Array(a+1).join("</span>")),r}function l(e){for(var t in o[0]="font-weight:normal;opacity:1;color:#"+e.reset[0]+";background:#"+e.reset[1],o[7]="color:#"+e.reset[1]+";background:#"+e.reset[0],o[90]="color:#"+e.darkgrey,r){var n=e[r[t]]||"000";o[t]="color:#"+n,t=parseInt(t),o[(t+10).toString()]="background:#"+n}}[0,21,22,27,28,39,49].forEach((function(e){i[e]="</span>"})),a.setColors=function(e){if("object"!=typeof e)throw new Error("`colors` parameter must be an Object.");var t={};for(var r in n){var o=e.hasOwnProperty(r)?e[r]:null;if(o){if("reset"===r){if("string"==typeof o&&(o=[o]),!Array.isArray(o)||0===o.length||o.some((function(e){return"string"!=typeof e})))throw new Error("The value of `"+r+"` property must be an Array and each item could only be a hex string, e.g.: FF0000");var i=n[r];o[0]||(o[0]=i[0]),1!==o.length&&o[1]||(o=[o[0]]).push(i[1]),o=o.slice(0,2)}else if("string"!=typeof o)throw new Error("The value of `"+r+"` property must be a hex string, e.g.: FF0000");t[r]=o}else t[r]=n[r]}l(t)},a.reset=function(){l(n)},a.tags={},Object.defineProperty?(Object.defineProperty(a.tags,"open",{get:function(){return o}}),Object.defineProperty(a.tags,"close",{get:function(){return i}})):(a.tags.open=o,a.tags.close=i),a.reset()},187:e=>{"use strict";var t,n="object"==typeof Reflect?Reflect:null,r=n&&"function"==typeof n.apply?n.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};t=n&&"function"==typeof n.ownKeys?n.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var o=Number.isNaN||function(e){return e!=e};function i(){i.init.call(this)}e.exports=i,e.exports.once=function(e,t){return new Promise((function(n,r){function o(){void 0!==i&&e.removeListener("error",i),n([].slice.call(arguments))}var i;"error"!==t&&(i=function(n){e.removeListener(t,o),r(n)},e.once("error",i)),e.once(t,o)}))},i.EventEmitter=i,i.prototype._events=void 0,i.prototype._eventsCount=0,i.prototype._maxListeners=void 0;var a=10;function l(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function s(e){return void 0===e._maxListeners?i.defaultMaxListeners:e._maxListeners}function u(e,t,n,r){var o,i,a,u;if(l(n),void 0===(i=e._events)?(i=e._events=Object.create(null),e._eventsCount=0):(void 0!==i.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),i=e._events),a=i[t]),void 0===a)a=i[t]=n,++e._eventsCount;else if("function"==typeof a?a=i[t]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),(o=s(e))>0&&a.length>o&&!a.warned){a.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=e,c.type=t,c.count=a.length,u=c,console&&console.warn&&console.warn(u)}return e}function c(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function f(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},o=c.bind(r);return o.listener=n,r.wrapFn=o,o}function d(e,t,n){var r=e._events;if(void 0===r)return[];var o=r[t];return void 0===o?[]:"function"==typeof o?n?[o.listener||o]:[o]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(o):h(o,o.length)}function p(e){var t=this._events;if(void 0!==t){var n=t[e];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function h(e,t){for(var n=new Array(t),r=0;r<t;++r)n[r]=e[r];return n}Object.defineProperty(i,"defaultMaxListeners",{enumerable:!0,get:function(){return a},set:function(e){if("number"!=typeof e||e<0||o(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");a=e}}),i.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},i.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||o(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},i.prototype.getMaxListeners=function(){return s(this)},i.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var o="error"===e,i=this._events;if(void 0!==i)o=o&&void 0===i.error;else if(!o)return!1;if(o){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var l=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw l.context=a,l}var s=i[e];if(void 0===s)return!1;if("function"==typeof s)r(s,this,t);else{var u=s.length,c=h(s,u);for(n=0;n<u;++n)r(c[n],this,t)}return!0},i.prototype.addListener=function(e,t){return u(this,e,t,!1)},i.prototype.on=i.prototype.addListener,i.prototype.prependListener=function(e,t){return u(this,e,t,!0)},i.prototype.once=function(e,t){return l(t),this.on(e,f(this,e,t)),this},i.prototype.prependOnceListener=function(e,t){return l(t),this.prependListener(e,f(this,e,t)),this},i.prototype.removeListener=function(e,t){var n,r,o,i,a;if(l(t),void 0===(r=this._events))return this;if(void 0===(n=r[e]))return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(o=-1,i=n.length-1;i>=0;i--)if(n[i]===t||n[i].listener===t){a=n[i].listener,o=i;break}if(o<0)return this;0===o?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,o),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",e,a||t)}return this},i.prototype.off=i.prototype.removeListener,i.prototype.removeAllListeners=function(e){var t,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var o,i=Object.keys(n);for(r=0;r<i.length;++r)"removeListener"!==(o=i[r])&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},i.prototype.listeners=function(e){return d(this,e,!0)},i.prototype.rawListeners=function(e){return d(this,e,!1)},i.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):p.call(e,t)},i.prototype.listenerCount=p,i.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}},415:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=["apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","Aelig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams"],r=[39,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,34,38,60,62,338,339,352,353,376,710,732,8194,8195,8201,8204,8205,8206,8207,8211,8212,8216,8217,8218,8220,8221,8222,8224,8225,8240,8249,8250,8364,402,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,977,978,982,8226,8230,8242,8243,8254,8260,8472,8465,8476,8482,8501,8592,8593,8594,8595,8596,8629,8656,8657,8658,8659,8660,8704,8706,8707,8709,8711,8712,8713,8715,8719,8721,8722,8727,8730,8733,8734,8736,8743,8744,8745,8746,8747,8756,8764,8773,8776,8800,8801,8804,8805,8834,8835,8836,8838,8839,8853,8855,8869,8901,8968,8969,8970,8971,9001,9002,9674,9824,9827,9829,9830],o={},i={};!function(){for(var e=0,t=n.length;e<t;){var a=n[e],l=r[e];o[a]=String.fromCharCode(l),i[l]=a,e++}}();var a=function(){function e(){}return e.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\w\d]+);?/g,(function(e,t){var n;if("#"===t.charAt(0)){var r="x"===t.charAt(1).toLowerCase()?parseInt(t.substr(2),16):parseInt(t.substr(1));isNaN(r)||r<-32768||r>65535||(n=String.fromCharCode(r))}else n=o[t];return n||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var o=i[e.charCodeAt(r)];n+=o?"&"+o+";":e.charAt(r),r++}return n},e.encode=function(t){return(new e).encode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var o=e.charCodeAt(r),a=i[o];n+=a?"&"+a+";":o<32||o>126?"&#"+o+";":e.charAt(r),r++}return n},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var o=e.charCodeAt(r);o<=255?n+=e[r++]:(n+="&#"+o+";",r++)}return n},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.Html4Entities=a},857:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=[["Aacute",[193]],["aacute",[225]],["Abreve",[258]],["abreve",[259]],["ac",[8766]],["acd",[8767]],["acE",[8766,819]],["Acirc",[194]],["acirc",[226]],["acute",[180]],["Acy",[1040]],["acy",[1072]],["AElig",[198]],["aelig",[230]],["af",[8289]],["Afr",[120068]],["afr",[120094]],["Agrave",[192]],["agrave",[224]],["alefsym",[8501]],["aleph",[8501]],["Alpha",[913]],["alpha",[945]],["Amacr",[256]],["amacr",[257]],["amalg",[10815]],["amp",[38]],["AMP",[38]],["andand",[10837]],["And",[10835]],["and",[8743]],["andd",[10844]],["andslope",[10840]],["andv",[10842]],["ang",[8736]],["ange",[10660]],["angle",[8736]],["angmsdaa",[10664]],["angmsdab",[10665]],["angmsdac",[10666]],["angmsdad",[10667]],["angmsdae",[10668]],["angmsdaf",[10669]],["angmsdag",[10670]],["angmsdah",[10671]],["angmsd",[8737]],["angrt",[8735]],["angrtvb",[8894]],["angrtvbd",[10653]],["angsph",[8738]],["angst",[197]],["angzarr",[9084]],["Aogon",[260]],["aogon",[261]],["Aopf",[120120]],["aopf",[120146]],["apacir",[10863]],["ap",[8776]],["apE",[10864]],["ape",[8778]],["apid",[8779]],["apos",[39]],["ApplyFunction",[8289]],["approx",[8776]],["approxeq",[8778]],["Aring",[197]],["aring",[229]],["Ascr",[119964]],["ascr",[119990]],["Assign",[8788]],["ast",[42]],["asymp",[8776]],["asympeq",[8781]],["Atilde",[195]],["atilde",[227]],["Auml",[196]],["auml",[228]],["awconint",[8755]],["awint",[10769]],["backcong",[8780]],["backepsilon",[1014]],["backprime",[8245]],["backsim",[8765]],["backsimeq",[8909]],["Backslash",[8726]],["Barv",[10983]],["barvee",[8893]],["barwed",[8965]],["Barwed",[8966]],["barwedge",[8965]],["bbrk",[9141]],["bbrktbrk",[9142]],["bcong",[8780]],["Bcy",[1041]],["bcy",[1073]],["bdquo",[8222]],["becaus",[8757]],["because",[8757]],["Because",[8757]],["bemptyv",[10672]],["bepsi",[1014]],["bernou",[8492]],["Bernoullis",[8492]],["Beta",[914]],["beta",[946]],["beth",[8502]],["between",[8812]],["Bfr",[120069]],["bfr",[120095]],["bigcap",[8898]],["bigcirc",[9711]],["bigcup",[8899]],["bigodot",[10752]],["bigoplus",[10753]],["bigotimes",[10754]],["bigsqcup",[10758]],["bigstar",[9733]],["bigtriangledown",[9661]],["bigtriangleup",[9651]],["biguplus",[10756]],["bigvee",[8897]],["bigwedge",[8896]],["bkarow",[10509]],["blacklozenge",[10731]],["blacksquare",[9642]],["blacktriangle",[9652]],["blacktriangledown",[9662]],["blacktriangleleft",[9666]],["blacktriangleright",[9656]],["blank",[9251]],["blk12",[9618]],["blk14",[9617]],["blk34",[9619]],["block",[9608]],["bne",[61,8421]],["bnequiv",[8801,8421]],["bNot",[10989]],["bnot",[8976]],["Bopf",[120121]],["bopf",[120147]],["bot",[8869]],["bottom",[8869]],["bowtie",[8904]],["boxbox",[10697]],["boxdl",[9488]],["boxdL",[9557]],["boxDl",[9558]],["boxDL",[9559]],["boxdr",[9484]],["boxdR",[9554]],["boxDr",[9555]],["boxDR",[9556]],["boxh",[9472]],["boxH",[9552]],["boxhd",[9516]],["boxHd",[9572]],["boxhD",[9573]],["boxHD",[9574]],["boxhu",[9524]],["boxHu",[9575]],["boxhU",[9576]],["boxHU",[9577]],["boxminus",[8863]],["boxplus",[8862]],["boxtimes",[8864]],["boxul",[9496]],["boxuL",[9563]],["boxUl",[9564]],["boxUL",[9565]],["boxur",[9492]],["boxuR",[9560]],["boxUr",[9561]],["boxUR",[9562]],["boxv",[9474]],["boxV",[9553]],["boxvh",[9532]],["boxvH",[9578]],["boxVh",[9579]],["boxVH",[9580]],["boxvl",[9508]],["boxvL",[9569]],["boxVl",[9570]],["boxVL",[9571]],["boxvr",[9500]],["boxvR",[9566]],["boxVr",[9567]],["boxVR",[9568]],["bprime",[8245]],["breve",[728]],["Breve",[728]],["brvbar",[166]],["bscr",[119991]],["Bscr",[8492]],["bsemi",[8271]],["bsim",[8765]],["bsime",[8909]],["bsolb",[10693]],["bsol",[92]],["bsolhsub",[10184]],["bull",[8226]],["bullet",[8226]],["bump",[8782]],["bumpE",[10926]],["bumpe",[8783]],["Bumpeq",[8782]],["bumpeq",[8783]],["Cacute",[262]],["cacute",[263]],["capand",[10820]],["capbrcup",[10825]],["capcap",[10827]],["cap",[8745]],["Cap",[8914]],["capcup",[10823]],["capdot",[10816]],["CapitalDifferentialD",[8517]],["caps",[8745,65024]],["caret",[8257]],["caron",[711]],["Cayleys",[8493]],["ccaps",[10829]],["Ccaron",[268]],["ccaron",[269]],["Ccedil",[199]],["ccedil",[231]],["Ccirc",[264]],["ccirc",[265]],["Cconint",[8752]],["ccups",[10828]],["ccupssm",[10832]],["Cdot",[266]],["cdot",[267]],["cedil",[184]],["Cedilla",[184]],["cemptyv",[10674]],["cent",[162]],["centerdot",[183]],["CenterDot",[183]],["cfr",[120096]],["Cfr",[8493]],["CHcy",[1063]],["chcy",[1095]],["check",[10003]],["checkmark",[10003]],["Chi",[935]],["chi",[967]],["circ",[710]],["circeq",[8791]],["circlearrowleft",[8634]],["circlearrowright",[8635]],["circledast",[8859]],["circledcirc",[8858]],["circleddash",[8861]],["CircleDot",[8857]],["circledR",[174]],["circledS",[9416]],["CircleMinus",[8854]],["CirclePlus",[8853]],["CircleTimes",[8855]],["cir",[9675]],["cirE",[10691]],["cire",[8791]],["cirfnint",[10768]],["cirmid",[10991]],["cirscir",[10690]],["ClockwiseContourIntegral",[8754]],["clubs",[9827]],["clubsuit",[9827]],["colon",[58]],["Colon",[8759]],["Colone",[10868]],["colone",[8788]],["coloneq",[8788]],["comma",[44]],["commat",[64]],["comp",[8705]],["compfn",[8728]],["complement",[8705]],["complexes",[8450]],["cong",[8773]],["congdot",[10861]],["Congruent",[8801]],["conint",[8750]],["Conint",[8751]],["ContourIntegral",[8750]],["copf",[120148]],["Copf",[8450]],["coprod",[8720]],["Coproduct",[8720]],["copy",[169]],["COPY",[169]],["copysr",[8471]],["CounterClockwiseContourIntegral",[8755]],["crarr",[8629]],["cross",[10007]],["Cross",[10799]],["Cscr",[119966]],["cscr",[119992]],["csub",[10959]],["csube",[10961]],["csup",[10960]],["csupe",[10962]],["ctdot",[8943]],["cudarrl",[10552]],["cudarrr",[10549]],["cuepr",[8926]],["cuesc",[8927]],["cularr",[8630]],["cularrp",[10557]],["cupbrcap",[10824]],["cupcap",[10822]],["CupCap",[8781]],["cup",[8746]],["Cup",[8915]],["cupcup",[10826]],["cupdot",[8845]],["cupor",[10821]],["cups",[8746,65024]],["curarr",[8631]],["curarrm",[10556]],["curlyeqprec",[8926]],["curlyeqsucc",[8927]],["curlyvee",[8910]],["curlywedge",[8911]],["curren",[164]],["curvearrowleft",[8630]],["curvearrowright",[8631]],["cuvee",[8910]],["cuwed",[8911]],["cwconint",[8754]],["cwint",[8753]],["cylcty",[9005]],["dagger",[8224]],["Dagger",[8225]],["daleth",[8504]],["darr",[8595]],["Darr",[8609]],["dArr",[8659]],["dash",[8208]],["Dashv",[10980]],["dashv",[8867]],["dbkarow",[10511]],["dblac",[733]],["Dcaron",[270]],["dcaron",[271]],["Dcy",[1044]],["dcy",[1076]],["ddagger",[8225]],["ddarr",[8650]],["DD",[8517]],["dd",[8518]],["DDotrahd",[10513]],["ddotseq",[10871]],["deg",[176]],["Del",[8711]],["Delta",[916]],["delta",[948]],["demptyv",[10673]],["dfisht",[10623]],["Dfr",[120071]],["dfr",[120097]],["dHar",[10597]],["dharl",[8643]],["dharr",[8642]],["DiacriticalAcute",[180]],["DiacriticalDot",[729]],["DiacriticalDoubleAcute",[733]],["DiacriticalGrave",[96]],["DiacriticalTilde",[732]],["diam",[8900]],["diamond",[8900]],["Diamond",[8900]],["diamondsuit",[9830]],["diams",[9830]],["die",[168]],["DifferentialD",[8518]],["digamma",[989]],["disin",[8946]],["div",[247]],["divide",[247]],["divideontimes",[8903]],["divonx",[8903]],["DJcy",[1026]],["djcy",[1106]],["dlcorn",[8990]],["dlcrop",[8973]],["dollar",[36]],["Dopf",[120123]],["dopf",[120149]],["Dot",[168]],["dot",[729]],["DotDot",[8412]],["doteq",[8784]],["doteqdot",[8785]],["DotEqual",[8784]],["dotminus",[8760]],["dotplus",[8724]],["dotsquare",[8865]],["doublebarwedge",[8966]],["DoubleContourIntegral",[8751]],["DoubleDot",[168]],["DoubleDownArrow",[8659]],["DoubleLeftArrow",[8656]],["DoubleLeftRightArrow",[8660]],["DoubleLeftTee",[10980]],["DoubleLongLeftArrow",[10232]],["DoubleLongLeftRightArrow",[10234]],["DoubleLongRightArrow",[10233]],["DoubleRightArrow",[8658]],["DoubleRightTee",[8872]],["DoubleUpArrow",[8657]],["DoubleUpDownArrow",[8661]],["DoubleVerticalBar",[8741]],["DownArrowBar",[10515]],["downarrow",[8595]],["DownArrow",[8595]],["Downarrow",[8659]],["DownArrowUpArrow",[8693]],["DownBreve",[785]],["downdownarrows",[8650]],["downharpoonleft",[8643]],["downharpoonright",[8642]],["DownLeftRightVector",[10576]],["DownLeftTeeVector",[10590]],["DownLeftVectorBar",[10582]],["DownLeftVector",[8637]],["DownRightTeeVector",[10591]],["DownRightVectorBar",[10583]],["DownRightVector",[8641]],["DownTeeArrow",[8615]],["DownTee",[8868]],["drbkarow",[10512]],["drcorn",[8991]],["drcrop",[8972]],["Dscr",[119967]],["dscr",[119993]],["DScy",[1029]],["dscy",[1109]],["dsol",[10742]],["Dstrok",[272]],["dstrok",[273]],["dtdot",[8945]],["dtri",[9663]],["dtrif",[9662]],["duarr",[8693]],["duhar",[10607]],["dwangle",[10662]],["DZcy",[1039]],["dzcy",[1119]],["dzigrarr",[10239]],["Eacute",[201]],["eacute",[233]],["easter",[10862]],["Ecaron",[282]],["ecaron",[283]],["Ecirc",[202]],["ecirc",[234]],["ecir",[8790]],["ecolon",[8789]],["Ecy",[1069]],["ecy",[1101]],["eDDot",[10871]],["Edot",[278]],["edot",[279]],["eDot",[8785]],["ee",[8519]],["efDot",[8786]],["Efr",[120072]],["efr",[120098]],["eg",[10906]],["Egrave",[200]],["egrave",[232]],["egs",[10902]],["egsdot",[10904]],["el",[10905]],["Element",[8712]],["elinters",[9191]],["ell",[8467]],["els",[10901]],["elsdot",[10903]],["Emacr",[274]],["emacr",[275]],["empty",[8709]],["emptyset",[8709]],["EmptySmallSquare",[9723]],["emptyv",[8709]],["EmptyVerySmallSquare",[9643]],["emsp13",[8196]],["emsp14",[8197]],["emsp",[8195]],["ENG",[330]],["eng",[331]],["ensp",[8194]],["Eogon",[280]],["eogon",[281]],["Eopf",[120124]],["eopf",[120150]],["epar",[8917]],["eparsl",[10723]],["eplus",[10865]],["epsi",[949]],["Epsilon",[917]],["epsilon",[949]],["epsiv",[1013]],["eqcirc",[8790]],["eqcolon",[8789]],["eqsim",[8770]],["eqslantgtr",[10902]],["eqslantless",[10901]],["Equal",[10869]],["equals",[61]],["EqualTilde",[8770]],["equest",[8799]],["Equilibrium",[8652]],["equiv",[8801]],["equivDD",[10872]],["eqvparsl",[10725]],["erarr",[10609]],["erDot",[8787]],["escr",[8495]],["Escr",[8496]],["esdot",[8784]],["Esim",[10867]],["esim",[8770]],["Eta",[919]],["eta",[951]],["ETH",[208]],["eth",[240]],["Euml",[203]],["euml",[235]],["euro",[8364]],["excl",[33]],["exist",[8707]],["Exists",[8707]],["expectation",[8496]],["exponentiale",[8519]],["ExponentialE",[8519]],["fallingdotseq",[8786]],["Fcy",[1060]],["fcy",[1092]],["female",[9792]],["ffilig",[64259]],["fflig",[64256]],["ffllig",[64260]],["Ffr",[120073]],["ffr",[120099]],["filig",[64257]],["FilledSmallSquare",[9724]],["FilledVerySmallSquare",[9642]],["fjlig",[102,106]],["flat",[9837]],["fllig",[64258]],["fltns",[9649]],["fnof",[402]],["Fopf",[120125]],["fopf",[120151]],["forall",[8704]],["ForAll",[8704]],["fork",[8916]],["forkv",[10969]],["Fouriertrf",[8497]],["fpartint",[10765]],["frac12",[189]],["frac13",[8531]],["frac14",[188]],["frac15",[8533]],["frac16",[8537]],["frac18",[8539]],["frac23",[8532]],["frac25",[8534]],["frac34",[190]],["frac35",[8535]],["frac38",[8540]],["frac45",[8536]],["frac56",[8538]],["frac58",[8541]],["frac78",[8542]],["frasl",[8260]],["frown",[8994]],["fscr",[119995]],["Fscr",[8497]],["gacute",[501]],["Gamma",[915]],["gamma",[947]],["Gammad",[988]],["gammad",[989]],["gap",[10886]],["Gbreve",[286]],["gbreve",[287]],["Gcedil",[290]],["Gcirc",[284]],["gcirc",[285]],["Gcy",[1043]],["gcy",[1075]],["Gdot",[288]],["gdot",[289]],["ge",[8805]],["gE",[8807]],["gEl",[10892]],["gel",[8923]],["geq",[8805]],["geqq",[8807]],["geqslant",[10878]],["gescc",[10921]],["ges",[10878]],["gesdot",[10880]],["gesdoto",[10882]],["gesdotol",[10884]],["gesl",[8923,65024]],["gesles",[10900]],["Gfr",[120074]],["gfr",[120100]],["gg",[8811]],["Gg",[8921]],["ggg",[8921]],["gimel",[8503]],["GJcy",[1027]],["gjcy",[1107]],["gla",[10917]],["gl",[8823]],["glE",[10898]],["glj",[10916]],["gnap",[10890]],["gnapprox",[10890]],["gne",[10888]],["gnE",[8809]],["gneq",[10888]],["gneqq",[8809]],["gnsim",[8935]],["Gopf",[120126]],["gopf",[120152]],["grave",[96]],["GreaterEqual",[8805]],["GreaterEqualLess",[8923]],["GreaterFullEqual",[8807]],["GreaterGreater",[10914]],["GreaterLess",[8823]],["GreaterSlantEqual",[10878]],["GreaterTilde",[8819]],["Gscr",[119970]],["gscr",[8458]],["gsim",[8819]],["gsime",[10894]],["gsiml",[10896]],["gtcc",[10919]],["gtcir",[10874]],["gt",[62]],["GT",[62]],["Gt",[8811]],["gtdot",[8919]],["gtlPar",[10645]],["gtquest",[10876]],["gtrapprox",[10886]],["gtrarr",[10616]],["gtrdot",[8919]],["gtreqless",[8923]],["gtreqqless",[10892]],["gtrless",[8823]],["gtrsim",[8819]],["gvertneqq",[8809,65024]],["gvnE",[8809,65024]],["Hacek",[711]],["hairsp",[8202]],["half",[189]],["hamilt",[8459]],["HARDcy",[1066]],["hardcy",[1098]],["harrcir",[10568]],["harr",[8596]],["hArr",[8660]],["harrw",[8621]],["Hat",[94]],["hbar",[8463]],["Hcirc",[292]],["hcirc",[293]],["hearts",[9829]],["heartsuit",[9829]],["hellip",[8230]],["hercon",[8889]],["hfr",[120101]],["Hfr",[8460]],["HilbertSpace",[8459]],["hksearow",[10533]],["hkswarow",[10534]],["hoarr",[8703]],["homtht",[8763]],["hookleftarrow",[8617]],["hookrightarrow",[8618]],["hopf",[120153]],["Hopf",[8461]],["horbar",[8213]],["HorizontalLine",[9472]],["hscr",[119997]],["Hscr",[8459]],["hslash",[8463]],["Hstrok",[294]],["hstrok",[295]],["HumpDownHump",[8782]],["HumpEqual",[8783]],["hybull",[8259]],["hyphen",[8208]],["Iacute",[205]],["iacute",[237]],["ic",[8291]],["Icirc",[206]],["icirc",[238]],["Icy",[1048]],["icy",[1080]],["Idot",[304]],["IEcy",[1045]],["iecy",[1077]],["iexcl",[161]],["iff",[8660]],["ifr",[120102]],["Ifr",[8465]],["Igrave",[204]],["igrave",[236]],["ii",[8520]],["iiiint",[10764]],["iiint",[8749]],["iinfin",[10716]],["iiota",[8489]],["IJlig",[306]],["ijlig",[307]],["Imacr",[298]],["imacr",[299]],["image",[8465]],["ImaginaryI",[8520]],["imagline",[8464]],["imagpart",[8465]],["imath",[305]],["Im",[8465]],["imof",[8887]],["imped",[437]],["Implies",[8658]],["incare",[8453]],["in",[8712]],["infin",[8734]],["infintie",[10717]],["inodot",[305]],["intcal",[8890]],["int",[8747]],["Int",[8748]],["integers",[8484]],["Integral",[8747]],["intercal",[8890]],["Intersection",[8898]],["intlarhk",[10775]],["intprod",[10812]],["InvisibleComma",[8291]],["InvisibleTimes",[8290]],["IOcy",[1025]],["iocy",[1105]],["Iogon",[302]],["iogon",[303]],["Iopf",[120128]],["iopf",[120154]],["Iota",[921]],["iota",[953]],["iprod",[10812]],["iquest",[191]],["iscr",[119998]],["Iscr",[8464]],["isin",[8712]],["isindot",[8949]],["isinE",[8953]],["isins",[8948]],["isinsv",[8947]],["isinv",[8712]],["it",[8290]],["Itilde",[296]],["itilde",[297]],["Iukcy",[1030]],["iukcy",[1110]],["Iuml",[207]],["iuml",[239]],["Jcirc",[308]],["jcirc",[309]],["Jcy",[1049]],["jcy",[1081]],["Jfr",[120077]],["jfr",[120103]],["jmath",[567]],["Jopf",[120129]],["jopf",[120155]],["Jscr",[119973]],["jscr",[119999]],["Jsercy",[1032]],["jsercy",[1112]],["Jukcy",[1028]],["jukcy",[1108]],["Kappa",[922]],["kappa",[954]],["kappav",[1008]],["Kcedil",[310]],["kcedil",[311]],["Kcy",[1050]],["kcy",[1082]],["Kfr",[120078]],["kfr",[120104]],["kgreen",[312]],["KHcy",[1061]],["khcy",[1093]],["KJcy",[1036]],["kjcy",[1116]],["Kopf",[120130]],["kopf",[120156]],["Kscr",[119974]],["kscr",[12e4]],["lAarr",[8666]],["Lacute",[313]],["lacute",[314]],["laemptyv",[10676]],["lagran",[8466]],["Lambda",[923]],["lambda",[955]],["lang",[10216]],["Lang",[10218]],["langd",[10641]],["langle",[10216]],["lap",[10885]],["Laplacetrf",[8466]],["laquo",[171]],["larrb",[8676]],["larrbfs",[10527]],["larr",[8592]],["Larr",[8606]],["lArr",[8656]],["larrfs",[10525]],["larrhk",[8617]],["larrlp",[8619]],["larrpl",[10553]],["larrsim",[10611]],["larrtl",[8610]],["latail",[10521]],["lAtail",[10523]],["lat",[10923]],["late",[10925]],["lates",[10925,65024]],["lbarr",[10508]],["lBarr",[10510]],["lbbrk",[10098]],["lbrace",[123]],["lbrack",[91]],["lbrke",[10635]],["lbrksld",[10639]],["lbrkslu",[10637]],["Lcaron",[317]],["lcaron",[318]],["Lcedil",[315]],["lcedil",[316]],["lceil",[8968]],["lcub",[123]],["Lcy",[1051]],["lcy",[1083]],["ldca",[10550]],["ldquo",[8220]],["ldquor",[8222]],["ldrdhar",[10599]],["ldrushar",[10571]],["ldsh",[8626]],["le",[8804]],["lE",[8806]],["LeftAngleBracket",[10216]],["LeftArrowBar",[8676]],["leftarrow",[8592]],["LeftArrow",[8592]],["Leftarrow",[8656]],["LeftArrowRightArrow",[8646]],["leftarrowtail",[8610]],["LeftCeiling",[8968]],["LeftDoubleBracket",[10214]],["LeftDownTeeVector",[10593]],["LeftDownVectorBar",[10585]],["LeftDownVector",[8643]],["LeftFloor",[8970]],["leftharpoondown",[8637]],["leftharpoonup",[8636]],["leftleftarrows",[8647]],["leftrightarrow",[8596]],["LeftRightArrow",[8596]],["Leftrightarrow",[8660]],["leftrightarrows",[8646]],["leftrightharpoons",[8651]],["leftrightsquigarrow",[8621]],["LeftRightVector",[10574]],["LeftTeeArrow",[8612]],["LeftTee",[8867]],["LeftTeeVector",[10586]],["leftthreetimes",[8907]],["LeftTriangleBar",[10703]],["LeftTriangle",[8882]],["LeftTriangleEqual",[8884]],["LeftUpDownVector",[10577]],["LeftUpTeeVector",[10592]],["LeftUpVectorBar",[10584]],["LeftUpVector",[8639]],["LeftVectorBar",[10578]],["LeftVector",[8636]],["lEg",[10891]],["leg",[8922]],["leq",[8804]],["leqq",[8806]],["leqslant",[10877]],["lescc",[10920]],["les",[10877]],["lesdot",[10879]],["lesdoto",[10881]],["lesdotor",[10883]],["lesg",[8922,65024]],["lesges",[10899]],["lessapprox",[10885]],["lessdot",[8918]],["lesseqgtr",[8922]],["lesseqqgtr",[10891]],["LessEqualGreater",[8922]],["LessFullEqual",[8806]],["LessGreater",[8822]],["lessgtr",[8822]],["LessLess",[10913]],["lesssim",[8818]],["LessSlantEqual",[10877]],["LessTilde",[8818]],["lfisht",[10620]],["lfloor",[8970]],["Lfr",[120079]],["lfr",[120105]],["lg",[8822]],["lgE",[10897]],["lHar",[10594]],["lhard",[8637]],["lharu",[8636]],["lharul",[10602]],["lhblk",[9604]],["LJcy",[1033]],["ljcy",[1113]],["llarr",[8647]],["ll",[8810]],["Ll",[8920]],["llcorner",[8990]],["Lleftarrow",[8666]],["llhard",[10603]],["lltri",[9722]],["Lmidot",[319]],["lmidot",[320]],["lmoustache",[9136]],["lmoust",[9136]],["lnap",[10889]],["lnapprox",[10889]],["lne",[10887]],["lnE",[8808]],["lneq",[10887]],["lneqq",[8808]],["lnsim",[8934]],["loang",[10220]],["loarr",[8701]],["lobrk",[10214]],["longleftarrow",[10229]],["LongLeftArrow",[10229]],["Longleftarrow",[10232]],["longleftrightarrow",[10231]],["LongLeftRightArrow",[10231]],["Longleftrightarrow",[10234]],["longmapsto",[10236]],["longrightarrow",[10230]],["LongRightArrow",[10230]],["Longrightarrow",[10233]],["looparrowleft",[8619]],["looparrowright",[8620]],["lopar",[10629]],["Lopf",[120131]],["lopf",[120157]],["loplus",[10797]],["lotimes",[10804]],["lowast",[8727]],["lowbar",[95]],["LowerLeftArrow",[8601]],["LowerRightArrow",[8600]],["loz",[9674]],["lozenge",[9674]],["lozf",[10731]],["lpar",[40]],["lparlt",[10643]],["lrarr",[8646]],["lrcorner",[8991]],["lrhar",[8651]],["lrhard",[10605]],["lrm",[8206]],["lrtri",[8895]],["lsaquo",[8249]],["lscr",[120001]],["Lscr",[8466]],["lsh",[8624]],["Lsh",[8624]],["lsim",[8818]],["lsime",[10893]],["lsimg",[10895]],["lsqb",[91]],["lsquo",[8216]],["lsquor",[8218]],["Lstrok",[321]],["lstrok",[322]],["ltcc",[10918]],["ltcir",[10873]],["lt",[60]],["LT",[60]],["Lt",[8810]],["ltdot",[8918]],["lthree",[8907]],["ltimes",[8905]],["ltlarr",[10614]],["ltquest",[10875]],["ltri",[9667]],["ltrie",[8884]],["ltrif",[9666]],["ltrPar",[10646]],["lurdshar",[10570]],["luruhar",[10598]],["lvertneqq",[8808,65024]],["lvnE",[8808,65024]],["macr",[175]],["male",[9794]],["malt",[10016]],["maltese",[10016]],["Map",[10501]],["map",[8614]],["mapsto",[8614]],["mapstodown",[8615]],["mapstoleft",[8612]],["mapstoup",[8613]],["marker",[9646]],["mcomma",[10793]],["Mcy",[1052]],["mcy",[1084]],["mdash",[8212]],["mDDot",[8762]],["measuredangle",[8737]],["MediumSpace",[8287]],["Mellintrf",[8499]],["Mfr",[120080]],["mfr",[120106]],["mho",[8487]],["micro",[181]],["midast",[42]],["midcir",[10992]],["mid",[8739]],["middot",[183]],["minusb",[8863]],["minus",[8722]],["minusd",[8760]],["minusdu",[10794]],["MinusPlus",[8723]],["mlcp",[10971]],["mldr",[8230]],["mnplus",[8723]],["models",[8871]],["Mopf",[120132]],["mopf",[120158]],["mp",[8723]],["mscr",[120002]],["Mscr",[8499]],["mstpos",[8766]],["Mu",[924]],["mu",[956]],["multimap",[8888]],["mumap",[8888]],["nabla",[8711]],["Nacute",[323]],["nacute",[324]],["nang",[8736,8402]],["nap",[8777]],["napE",[10864,824]],["napid",[8779,824]],["napos",[329]],["napprox",[8777]],["natural",[9838]],["naturals",[8469]],["natur",[9838]],["nbsp",[160]],["nbump",[8782,824]],["nbumpe",[8783,824]],["ncap",[10819]],["Ncaron",[327]],["ncaron",[328]],["Ncedil",[325]],["ncedil",[326]],["ncong",[8775]],["ncongdot",[10861,824]],["ncup",[10818]],["Ncy",[1053]],["ncy",[1085]],["ndash",[8211]],["nearhk",[10532]],["nearr",[8599]],["neArr",[8663]],["nearrow",[8599]],["ne",[8800]],["nedot",[8784,824]],["NegativeMediumSpace",[8203]],["NegativeThickSpace",[8203]],["NegativeThinSpace",[8203]],["NegativeVeryThinSpace",[8203]],["nequiv",[8802]],["nesear",[10536]],["nesim",[8770,824]],["NestedGreaterGreater",[8811]],["NestedLessLess",[8810]],["nexist",[8708]],["nexists",[8708]],["Nfr",[120081]],["nfr",[120107]],["ngE",[8807,824]],["nge",[8817]],["ngeq",[8817]],["ngeqq",[8807,824]],["ngeqslant",[10878,824]],["nges",[10878,824]],["nGg",[8921,824]],["ngsim",[8821]],["nGt",[8811,8402]],["ngt",[8815]],["ngtr",[8815]],["nGtv",[8811,824]],["nharr",[8622]],["nhArr",[8654]],["nhpar",[10994]],["ni",[8715]],["nis",[8956]],["nisd",[8954]],["niv",[8715]],["NJcy",[1034]],["njcy",[1114]],["nlarr",[8602]],["nlArr",[8653]],["nldr",[8229]],["nlE",[8806,824]],["nle",[8816]],["nleftarrow",[8602]],["nLeftarrow",[8653]],["nleftrightarrow",[8622]],["nLeftrightarrow",[8654]],["nleq",[8816]],["nleqq",[8806,824]],["nleqslant",[10877,824]],["nles",[10877,824]],["nless",[8814]],["nLl",[8920,824]],["nlsim",[8820]],["nLt",[8810,8402]],["nlt",[8814]],["nltri",[8938]],["nltrie",[8940]],["nLtv",[8810,824]],["nmid",[8740]],["NoBreak",[8288]],["NonBreakingSpace",[160]],["nopf",[120159]],["Nopf",[8469]],["Not",[10988]],["not",[172]],["NotCongruent",[8802]],["NotCupCap",[8813]],["NotDoubleVerticalBar",[8742]],["NotElement",[8713]],["NotEqual",[8800]],["NotEqualTilde",[8770,824]],["NotExists",[8708]],["NotGreater",[8815]],["NotGreaterEqual",[8817]],["NotGreaterFullEqual",[8807,824]],["NotGreaterGreater",[8811,824]],["NotGreaterLess",[8825]],["NotGreaterSlantEqual",[10878,824]],["NotGreaterTilde",[8821]],["NotHumpDownHump",[8782,824]],["NotHumpEqual",[8783,824]],["notin",[8713]],["notindot",[8949,824]],["notinE",[8953,824]],["notinva",[8713]],["notinvb",[8951]],["notinvc",[8950]],["NotLeftTriangleBar",[10703,824]],["NotLeftTriangle",[8938]],["NotLeftTriangleEqual",[8940]],["NotLess",[8814]],["NotLessEqual",[8816]],["NotLessGreater",[8824]],["NotLessLess",[8810,824]],["NotLessSlantEqual",[10877,824]],["NotLessTilde",[8820]],["NotNestedGreaterGreater",[10914,824]],["NotNestedLessLess",[10913,824]],["notni",[8716]],["notniva",[8716]],["notnivb",[8958]],["notnivc",[8957]],["NotPrecedes",[8832]],["NotPrecedesEqual",[10927,824]],["NotPrecedesSlantEqual",[8928]],["NotReverseElement",[8716]],["NotRightTriangleBar",[10704,824]],["NotRightTriangle",[8939]],["NotRightTriangleEqual",[8941]],["NotSquareSubset",[8847,824]],["NotSquareSubsetEqual",[8930]],["NotSquareSuperset",[8848,824]],["NotSquareSupersetEqual",[8931]],["NotSubset",[8834,8402]],["NotSubsetEqual",[8840]],["NotSucceeds",[8833]],["NotSucceedsEqual",[10928,824]],["NotSucceedsSlantEqual",[8929]],["NotSucceedsTilde",[8831,824]],["NotSuperset",[8835,8402]],["NotSupersetEqual",[8841]],["NotTilde",[8769]],["NotTildeEqual",[8772]],["NotTildeFullEqual",[8775]],["NotTildeTilde",[8777]],["NotVerticalBar",[8740]],["nparallel",[8742]],["npar",[8742]],["nparsl",[11005,8421]],["npart",[8706,824]],["npolint",[10772]],["npr",[8832]],["nprcue",[8928]],["nprec",[8832]],["npreceq",[10927,824]],["npre",[10927,824]],["nrarrc",[10547,824]],["nrarr",[8603]],["nrArr",[8655]],["nrarrw",[8605,824]],["nrightarrow",[8603]],["nRightarrow",[8655]],["nrtri",[8939]],["nrtrie",[8941]],["nsc",[8833]],["nsccue",[8929]],["nsce",[10928,824]],["Nscr",[119977]],["nscr",[120003]],["nshortmid",[8740]],["nshortparallel",[8742]],["nsim",[8769]],["nsime",[8772]],["nsimeq",[8772]],["nsmid",[8740]],["nspar",[8742]],["nsqsube",[8930]],["nsqsupe",[8931]],["nsub",[8836]],["nsubE",[10949,824]],["nsube",[8840]],["nsubset",[8834,8402]],["nsubseteq",[8840]],["nsubseteqq",[10949,824]],["nsucc",[8833]],["nsucceq",[10928,824]],["nsup",[8837]],["nsupE",[10950,824]],["nsupe",[8841]],["nsupset",[8835,8402]],["nsupseteq",[8841]],["nsupseteqq",[10950,824]],["ntgl",[8825]],["Ntilde",[209]],["ntilde",[241]],["ntlg",[8824]],["ntriangleleft",[8938]],["ntrianglelefteq",[8940]],["ntriangleright",[8939]],["ntrianglerighteq",[8941]],["Nu",[925]],["nu",[957]],["num",[35]],["numero",[8470]],["numsp",[8199]],["nvap",[8781,8402]],["nvdash",[8876]],["nvDash",[8877]],["nVdash",[8878]],["nVDash",[8879]],["nvge",[8805,8402]],["nvgt",[62,8402]],["nvHarr",[10500]],["nvinfin",[10718]],["nvlArr",[10498]],["nvle",[8804,8402]],["nvlt",[60,8402]],["nvltrie",[8884,8402]],["nvrArr",[10499]],["nvrtrie",[8885,8402]],["nvsim",[8764,8402]],["nwarhk",[10531]],["nwarr",[8598]],["nwArr",[8662]],["nwarrow",[8598]],["nwnear",[10535]],["Oacute",[211]],["oacute",[243]],["oast",[8859]],["Ocirc",[212]],["ocirc",[244]],["ocir",[8858]],["Ocy",[1054]],["ocy",[1086]],["odash",[8861]],["Odblac",[336]],["odblac",[337]],["odiv",[10808]],["odot",[8857]],["odsold",[10684]],["OElig",[338]],["oelig",[339]],["ofcir",[10687]],["Ofr",[120082]],["ofr",[120108]],["ogon",[731]],["Ograve",[210]],["ograve",[242]],["ogt",[10689]],["ohbar",[10677]],["ohm",[937]],["oint",[8750]],["olarr",[8634]],["olcir",[10686]],["olcross",[10683]],["oline",[8254]],["olt",[10688]],["Omacr",[332]],["omacr",[333]],["Omega",[937]],["omega",[969]],["Omicron",[927]],["omicron",[959]],["omid",[10678]],["ominus",[8854]],["Oopf",[120134]],["oopf",[120160]],["opar",[10679]],["OpenCurlyDoubleQuote",[8220]],["OpenCurlyQuote",[8216]],["operp",[10681]],["oplus",[8853]],["orarr",[8635]],["Or",[10836]],["or",[8744]],["ord",[10845]],["order",[8500]],["orderof",[8500]],["ordf",[170]],["ordm",[186]],["origof",[8886]],["oror",[10838]],["orslope",[10839]],["orv",[10843]],["oS",[9416]],["Oscr",[119978]],["oscr",[8500]],["Oslash",[216]],["oslash",[248]],["osol",[8856]],["Otilde",[213]],["otilde",[245]],["otimesas",[10806]],["Otimes",[10807]],["otimes",[8855]],["Ouml",[214]],["ouml",[246]],["ovbar",[9021]],["OverBar",[8254]],["OverBrace",[9182]],["OverBracket",[9140]],["OverParenthesis",[9180]],["para",[182]],["parallel",[8741]],["par",[8741]],["parsim",[10995]],["parsl",[11005]],["part",[8706]],["PartialD",[8706]],["Pcy",[1055]],["pcy",[1087]],["percnt",[37]],["period",[46]],["permil",[8240]],["perp",[8869]],["pertenk",[8241]],["Pfr",[120083]],["pfr",[120109]],["Phi",[934]],["phi",[966]],["phiv",[981]],["phmmat",[8499]],["phone",[9742]],["Pi",[928]],["pi",[960]],["pitchfork",[8916]],["piv",[982]],["planck",[8463]],["planckh",[8462]],["plankv",[8463]],["plusacir",[10787]],["plusb",[8862]],["pluscir",[10786]],["plus",[43]],["plusdo",[8724]],["plusdu",[10789]],["pluse",[10866]],["PlusMinus",[177]],["plusmn",[177]],["plussim",[10790]],["plustwo",[10791]],["pm",[177]],["Poincareplane",[8460]],["pointint",[10773]],["popf",[120161]],["Popf",[8473]],["pound",[163]],["prap",[10935]],["Pr",[10939]],["pr",[8826]],["prcue",[8828]],["precapprox",[10935]],["prec",[8826]],["preccurlyeq",[8828]],["Precedes",[8826]],["PrecedesEqual",[10927]],["PrecedesSlantEqual",[8828]],["PrecedesTilde",[8830]],["preceq",[10927]],["precnapprox",[10937]],["precneqq",[10933]],["precnsim",[8936]],["pre",[10927]],["prE",[10931]],["precsim",[8830]],["prime",[8242]],["Prime",[8243]],["primes",[8473]],["prnap",[10937]],["prnE",[10933]],["prnsim",[8936]],["prod",[8719]],["Product",[8719]],["profalar",[9006]],["profline",[8978]],["profsurf",[8979]],["prop",[8733]],["Proportional",[8733]],["Proportion",[8759]],["propto",[8733]],["prsim",[8830]],["prurel",[8880]],["Pscr",[119979]],["pscr",[120005]],["Psi",[936]],["psi",[968]],["puncsp",[8200]],["Qfr",[120084]],["qfr",[120110]],["qint",[10764]],["qopf",[120162]],["Qopf",[8474]],["qprime",[8279]],["Qscr",[119980]],["qscr",[120006]],["quaternions",[8461]],["quatint",[10774]],["quest",[63]],["questeq",[8799]],["quot",[34]],["QUOT",[34]],["rAarr",[8667]],["race",[8765,817]],["Racute",[340]],["racute",[341]],["radic",[8730]],["raemptyv",[10675]],["rang",[10217]],["Rang",[10219]],["rangd",[10642]],["range",[10661]],["rangle",[10217]],["raquo",[187]],["rarrap",[10613]],["rarrb",[8677]],["rarrbfs",[10528]],["rarrc",[10547]],["rarr",[8594]],["Rarr",[8608]],["rArr",[8658]],["rarrfs",[10526]],["rarrhk",[8618]],["rarrlp",[8620]],["rarrpl",[10565]],["rarrsim",[10612]],["Rarrtl",[10518]],["rarrtl",[8611]],["rarrw",[8605]],["ratail",[10522]],["rAtail",[10524]],["ratio",[8758]],["rationals",[8474]],["rbarr",[10509]],["rBarr",[10511]],["RBarr",[10512]],["rbbrk",[10099]],["rbrace",[125]],["rbrack",[93]],["rbrke",[10636]],["rbrksld",[10638]],["rbrkslu",[10640]],["Rcaron",[344]],["rcaron",[345]],["Rcedil",[342]],["rcedil",[343]],["rceil",[8969]],["rcub",[125]],["Rcy",[1056]],["rcy",[1088]],["rdca",[10551]],["rdldhar",[10601]],["rdquo",[8221]],["rdquor",[8221]],["CloseCurlyDoubleQuote",[8221]],["rdsh",[8627]],["real",[8476]],["realine",[8475]],["realpart",[8476]],["reals",[8477]],["Re",[8476]],["rect",[9645]],["reg",[174]],["REG",[174]],["ReverseElement",[8715]],["ReverseEquilibrium",[8651]],["ReverseUpEquilibrium",[10607]],["rfisht",[10621]],["rfloor",[8971]],["rfr",[120111]],["Rfr",[8476]],["rHar",[10596]],["rhard",[8641]],["rharu",[8640]],["rharul",[10604]],["Rho",[929]],["rho",[961]],["rhov",[1009]],["RightAngleBracket",[10217]],["RightArrowBar",[8677]],["rightarrow",[8594]],["RightArrow",[8594]],["Rightarrow",[8658]],["RightArrowLeftArrow",[8644]],["rightarrowtail",[8611]],["RightCeiling",[8969]],["RightDoubleBracket",[10215]],["RightDownTeeVector",[10589]],["RightDownVectorBar",[10581]],["RightDownVector",[8642]],["RightFloor",[8971]],["rightharpoondown",[8641]],["rightharpoonup",[8640]],["rightleftarrows",[8644]],["rightleftharpoons",[8652]],["rightrightarrows",[8649]],["rightsquigarrow",[8605]],["RightTeeArrow",[8614]],["RightTee",[8866]],["RightTeeVector",[10587]],["rightthreetimes",[8908]],["RightTriangleBar",[10704]],["RightTriangle",[8883]],["RightTriangleEqual",[8885]],["RightUpDownVector",[10575]],["RightUpTeeVector",[10588]],["RightUpVectorBar",[10580]],["RightUpVector",[8638]],["RightVectorBar",[10579]],["RightVector",[8640]],["ring",[730]],["risingdotseq",[8787]],["rlarr",[8644]],["rlhar",[8652]],["rlm",[8207]],["rmoustache",[9137]],["rmoust",[9137]],["rnmid",[10990]],["roang",[10221]],["roarr",[8702]],["robrk",[10215]],["ropar",[10630]],["ropf",[120163]],["Ropf",[8477]],["roplus",[10798]],["rotimes",[10805]],["RoundImplies",[10608]],["rpar",[41]],["rpargt",[10644]],["rppolint",[10770]],["rrarr",[8649]],["Rrightarrow",[8667]],["rsaquo",[8250]],["rscr",[120007]],["Rscr",[8475]],["rsh",[8625]],["Rsh",[8625]],["rsqb",[93]],["rsquo",[8217]],["rsquor",[8217]],["CloseCurlyQuote",[8217]],["rthree",[8908]],["rtimes",[8906]],["rtri",[9657]],["rtrie",[8885]],["rtrif",[9656]],["rtriltri",[10702]],["RuleDelayed",[10740]],["ruluhar",[10600]],["rx",[8478]],["Sacute",[346]],["sacute",[347]],["sbquo",[8218]],["scap",[10936]],["Scaron",[352]],["scaron",[353]],["Sc",[10940]],["sc",[8827]],["sccue",[8829]],["sce",[10928]],["scE",[10932]],["Scedil",[350]],["scedil",[351]],["Scirc",[348]],["scirc",[349]],["scnap",[10938]],["scnE",[10934]],["scnsim",[8937]],["scpolint",[10771]],["scsim",[8831]],["Scy",[1057]],["scy",[1089]],["sdotb",[8865]],["sdot",[8901]],["sdote",[10854]],["searhk",[10533]],["searr",[8600]],["seArr",[8664]],["searrow",[8600]],["sect",[167]],["semi",[59]],["seswar",[10537]],["setminus",[8726]],["setmn",[8726]],["sext",[10038]],["Sfr",[120086]],["sfr",[120112]],["sfrown",[8994]],["sharp",[9839]],["SHCHcy",[1065]],["shchcy",[1097]],["SHcy",[1064]],["shcy",[1096]],["ShortDownArrow",[8595]],["ShortLeftArrow",[8592]],["shortmid",[8739]],["shortparallel",[8741]],["ShortRightArrow",[8594]],["ShortUpArrow",[8593]],["shy",[173]],["Sigma",[931]],["sigma",[963]],["sigmaf",[962]],["sigmav",[962]],["sim",[8764]],["simdot",[10858]],["sime",[8771]],["simeq",[8771]],["simg",[10910]],["simgE",[10912]],["siml",[10909]],["simlE",[10911]],["simne",[8774]],["simplus",[10788]],["simrarr",[10610]],["slarr",[8592]],["SmallCircle",[8728]],["smallsetminus",[8726]],["smashp",[10803]],["smeparsl",[10724]],["smid",[8739]],["smile",[8995]],["smt",[10922]],["smte",[10924]],["smtes",[10924,65024]],["SOFTcy",[1068]],["softcy",[1100]],["solbar",[9023]],["solb",[10692]],["sol",[47]],["Sopf",[120138]],["sopf",[120164]],["spades",[9824]],["spadesuit",[9824]],["spar",[8741]],["sqcap",[8851]],["sqcaps",[8851,65024]],["sqcup",[8852]],["sqcups",[8852,65024]],["Sqrt",[8730]],["sqsub",[8847]],["sqsube",[8849]],["sqsubset",[8847]],["sqsubseteq",[8849]],["sqsup",[8848]],["sqsupe",[8850]],["sqsupset",[8848]],["sqsupseteq",[8850]],["square",[9633]],["Square",[9633]],["SquareIntersection",[8851]],["SquareSubset",[8847]],["SquareSubsetEqual",[8849]],["SquareSuperset",[8848]],["SquareSupersetEqual",[8850]],["SquareUnion",[8852]],["squarf",[9642]],["squ",[9633]],["squf",[9642]],["srarr",[8594]],["Sscr",[119982]],["sscr",[120008]],["ssetmn",[8726]],["ssmile",[8995]],["sstarf",[8902]],["Star",[8902]],["star",[9734]],["starf",[9733]],["straightepsilon",[1013]],["straightphi",[981]],["strns",[175]],["sub",[8834]],["Sub",[8912]],["subdot",[10941]],["subE",[10949]],["sube",[8838]],["subedot",[10947]],["submult",[10945]],["subnE",[10955]],["subne",[8842]],["subplus",[10943]],["subrarr",[10617]],["subset",[8834]],["Subset",[8912]],["subseteq",[8838]],["subseteqq",[10949]],["SubsetEqual",[8838]],["subsetneq",[8842]],["subsetneqq",[10955]],["subsim",[10951]],["subsub",[10965]],["subsup",[10963]],["succapprox",[10936]],["succ",[8827]],["succcurlyeq",[8829]],["Succeeds",[8827]],["SucceedsEqual",[10928]],["SucceedsSlantEqual",[8829]],["SucceedsTilde",[8831]],["succeq",[10928]],["succnapprox",[10938]],["succneqq",[10934]],["succnsim",[8937]],["succsim",[8831]],["SuchThat",[8715]],["sum",[8721]],["Sum",[8721]],["sung",[9834]],["sup1",[185]],["sup2",[178]],["sup3",[179]],["sup",[8835]],["Sup",[8913]],["supdot",[10942]],["supdsub",[10968]],["supE",[10950]],["supe",[8839]],["supedot",[10948]],["Superset",[8835]],["SupersetEqual",[8839]],["suphsol",[10185]],["suphsub",[10967]],["suplarr",[10619]],["supmult",[10946]],["supnE",[10956]],["supne",[8843]],["supplus",[10944]],["supset",[8835]],["Supset",[8913]],["supseteq",[8839]],["supseteqq",[10950]],["supsetneq",[8843]],["supsetneqq",[10956]],["supsim",[10952]],["supsub",[10964]],["supsup",[10966]],["swarhk",[10534]],["swarr",[8601]],["swArr",[8665]],["swarrow",[8601]],["swnwar",[10538]],["szlig",[223]],["Tab",[9]],["target",[8982]],["Tau",[932]],["tau",[964]],["tbrk",[9140]],["Tcaron",[356]],["tcaron",[357]],["Tcedil",[354]],["tcedil",[355]],["Tcy",[1058]],["tcy",[1090]],["tdot",[8411]],["telrec",[8981]],["Tfr",[120087]],["tfr",[120113]],["there4",[8756]],["therefore",[8756]],["Therefore",[8756]],["Theta",[920]],["theta",[952]],["thetasym",[977]],["thetav",[977]],["thickapprox",[8776]],["thicksim",[8764]],["ThickSpace",[8287,8202]],["ThinSpace",[8201]],["thinsp",[8201]],["thkap",[8776]],["thksim",[8764]],["THORN",[222]],["thorn",[254]],["tilde",[732]],["Tilde",[8764]],["TildeEqual",[8771]],["TildeFullEqual",[8773]],["TildeTilde",[8776]],["timesbar",[10801]],["timesb",[8864]],["times",[215]],["timesd",[10800]],["tint",[8749]],["toea",[10536]],["topbot",[9014]],["topcir",[10993]],["top",[8868]],["Topf",[120139]],["topf",[120165]],["topfork",[10970]],["tosa",[10537]],["tprime",[8244]],["trade",[8482]],["TRADE",[8482]],["triangle",[9653]],["triangledown",[9663]],["triangleleft",[9667]],["trianglelefteq",[8884]],["triangleq",[8796]],["triangleright",[9657]],["trianglerighteq",[8885]],["tridot",[9708]],["trie",[8796]],["triminus",[10810]],["TripleDot",[8411]],["triplus",[10809]],["trisb",[10701]],["tritime",[10811]],["trpezium",[9186]],["Tscr",[119983]],["tscr",[120009]],["TScy",[1062]],["tscy",[1094]],["TSHcy",[1035]],["tshcy",[1115]],["Tstrok",[358]],["tstrok",[359]],["twixt",[8812]],["twoheadleftarrow",[8606]],["twoheadrightarrow",[8608]],["Uacute",[218]],["uacute",[250]],["uarr",[8593]],["Uarr",[8607]],["uArr",[8657]],["Uarrocir",[10569]],["Ubrcy",[1038]],["ubrcy",[1118]],["Ubreve",[364]],["ubreve",[365]],["Ucirc",[219]],["ucirc",[251]],["Ucy",[1059]],["ucy",[1091]],["udarr",[8645]],["Udblac",[368]],["udblac",[369]],["udhar",[10606]],["ufisht",[10622]],["Ufr",[120088]],["ufr",[120114]],["Ugrave",[217]],["ugrave",[249]],["uHar",[10595]],["uharl",[8639]],["uharr",[8638]],["uhblk",[9600]],["ulcorn",[8988]],["ulcorner",[8988]],["ulcrop",[8975]],["ultri",[9720]],["Umacr",[362]],["umacr",[363]],["uml",[168]],["UnderBar",[95]],["UnderBrace",[9183]],["UnderBracket",[9141]],["UnderParenthesis",[9181]],["Union",[8899]],["UnionPlus",[8846]],["Uogon",[370]],["uogon",[371]],["Uopf",[120140]],["uopf",[120166]],["UpArrowBar",[10514]],["uparrow",[8593]],["UpArrow",[8593]],["Uparrow",[8657]],["UpArrowDownArrow",[8645]],["updownarrow",[8597]],["UpDownArrow",[8597]],["Updownarrow",[8661]],["UpEquilibrium",[10606]],["upharpoonleft",[8639]],["upharpoonright",[8638]],["uplus",[8846]],["UpperLeftArrow",[8598]],["UpperRightArrow",[8599]],["upsi",[965]],["Upsi",[978]],["upsih",[978]],["Upsilon",[933]],["upsilon",[965]],["UpTeeArrow",[8613]],["UpTee",[8869]],["upuparrows",[8648]],["urcorn",[8989]],["urcorner",[8989]],["urcrop",[8974]],["Uring",[366]],["uring",[367]],["urtri",[9721]],["Uscr",[119984]],["uscr",[120010]],["utdot",[8944]],["Utilde",[360]],["utilde",[361]],["utri",[9653]],["utrif",[9652]],["uuarr",[8648]],["Uuml",[220]],["uuml",[252]],["uwangle",[10663]],["vangrt",[10652]],["varepsilon",[1013]],["varkappa",[1008]],["varnothing",[8709]],["varphi",[981]],["varpi",[982]],["varpropto",[8733]],["varr",[8597]],["vArr",[8661]],["varrho",[1009]],["varsigma",[962]],["varsubsetneq",[8842,65024]],["varsubsetneqq",[10955,65024]],["varsupsetneq",[8843,65024]],["varsupsetneqq",[10956,65024]],["vartheta",[977]],["vartriangleleft",[8882]],["vartriangleright",[8883]],["vBar",[10984]],["Vbar",[10987]],["vBarv",[10985]],["Vcy",[1042]],["vcy",[1074]],["vdash",[8866]],["vDash",[8872]],["Vdash",[8873]],["VDash",[8875]],["Vdashl",[10982]],["veebar",[8891]],["vee",[8744]],["Vee",[8897]],["veeeq",[8794]],["vellip",[8942]],["verbar",[124]],["Verbar",[8214]],["vert",[124]],["Vert",[8214]],["VerticalBar",[8739]],["VerticalLine",[124]],["VerticalSeparator",[10072]],["VerticalTilde",[8768]],["VeryThinSpace",[8202]],["Vfr",[120089]],["vfr",[120115]],["vltri",[8882]],["vnsub",[8834,8402]],["vnsup",[8835,8402]],["Vopf",[120141]],["vopf",[120167]],["vprop",[8733]],["vrtri",[8883]],["Vscr",[119985]],["vscr",[120011]],["vsubnE",[10955,65024]],["vsubne",[8842,65024]],["vsupnE",[10956,65024]],["vsupne",[8843,65024]],["Vvdash",[8874]],["vzigzag",[10650]],["Wcirc",[372]],["wcirc",[373]],["wedbar",[10847]],["wedge",[8743]],["Wedge",[8896]],["wedgeq",[8793]],["weierp",[8472]],["Wfr",[120090]],["wfr",[120116]],["Wopf",[120142]],["wopf",[120168]],["wp",[8472]],["wr",[8768]],["wreath",[8768]],["Wscr",[119986]],["wscr",[120012]],["xcap",[8898]],["xcirc",[9711]],["xcup",[8899]],["xdtri",[9661]],["Xfr",[120091]],["xfr",[120117]],["xharr",[10231]],["xhArr",[10234]],["Xi",[926]],["xi",[958]],["xlarr",[10229]],["xlArr",[10232]],["xmap",[10236]],["xnis",[8955]],["xodot",[10752]],["Xopf",[120143]],["xopf",[120169]],["xoplus",[10753]],["xotime",[10754]],["xrarr",[10230]],["xrArr",[10233]],["Xscr",[119987]],["xscr",[120013]],["xsqcup",[10758]],["xuplus",[10756]],["xutri",[9651]],["xvee",[8897]],["xwedge",[8896]],["Yacute",[221]],["yacute",[253]],["YAcy",[1071]],["yacy",[1103]],["Ycirc",[374]],["ycirc",[375]],["Ycy",[1067]],["ycy",[1099]],["yen",[165]],["Yfr",[120092]],["yfr",[120118]],["YIcy",[1031]],["yicy",[1111]],["Yopf",[120144]],["yopf",[120170]],["Yscr",[119988]],["yscr",[120014]],["YUcy",[1070]],["yucy",[1102]],["yuml",[255]],["Yuml",[376]],["Zacute",[377]],["zacute",[378]],["Zcaron",[381]],["zcaron",[382]],["Zcy",[1047]],["zcy",[1079]],["Zdot",[379]],["zdot",[380]],["zeetrf",[8488]],["ZeroWidthSpace",[8203]],["Zeta",[918]],["zeta",[950]],["zfr",[120119]],["Zfr",[8488]],["ZHcy",[1046]],["zhcy",[1078]],["zigrarr",[8669]],["zopf",[120171]],["Zopf",[8484]],["Zscr",[119989]],["zscr",[120015]],["zwj",[8205]],["zwnj",[8204]]],r={},o={};!function(e,t){for(var r=n.length;r--;){var o=n[r],i=o[0],a=o[1],l=a[0],s=l<32||l>126||62===l||60===l||38===l||34===l||39===l,u=void 0;if(s&&(u=t[l]=t[l]||{}),a[1]){var c=a[1];e[i]=String.fromCharCode(l)+String.fromCharCode(c),s&&(u[c]=i)}else e[i]=String.fromCharCode(l),s&&(u[""]=i)}}(r,o);var i=function(){function e(){}return e.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\w\d]+);?/g,(function(e,t){var n;if("#"===t.charAt(0)){var o="x"===t.charAt(1)?parseInt(t.substr(2).toLowerCase(),16):parseInt(t.substr(1));isNaN(o)||o<-32768||o>65535||(n=String.fromCharCode(o))}else n=r[t];return n||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var i=o[e.charCodeAt(r)];if(i){var a=i[e.charCodeAt(r+1)];if(a?r++:a=i[""],a){n+="&"+a+";",r++;continue}}n+=e.charAt(r),r++}return n},e.encode=function(t){return(new e).encode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var i=e.charCodeAt(r),a=o[i];if(a){var l=a[e.charCodeAt(r+1)];if(l?r++:l=a[""],l){n+="&"+l+";",r++;continue}}n+=i<32||i>126?"&#"+i+";":e.charAt(r),r++}return n},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var o=e.charCodeAt(r);o<=255?n+=e[r++]:(n+="&#"+o+";",r++)}return n},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.Html5Entities=i},111:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(898);t.XmlEntities=r.XmlEntities;var o=n(415);t.Html4Entities=o.Html4Entities;var i=n(857);t.Html5Entities=i.Html5Entities,t.AllHtmlEntities=i.Html5Entities},898:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={"&lt":"<","&gt":">","&quot":'"',"&apos":"'","&amp":"&","&lt;":"<","&gt;":">","&quot;":'"',"&apos;":"'","&amp;":"&"},r={60:"lt",62:"gt",34:"quot",39:"apos",38:"amp"},o={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;","&":"&amp;"},i=function(){function e(){}return e.prototype.encode=function(e){return e&&e.length?e.replace(/[<>"'&]/g,(function(e){return o[e]})):""},e.encode=function(t){return(new e).encode(t)},e.prototype.decode=function(e){return e&&e.length?e.replace(/&#?[0-9a-zA-Z]+;?/g,(function(e){if("#"===e.charAt(1)){var t="x"===e.charAt(2).toLowerCase()?parseInt(e.substr(3),16):parseInt(e.substr(2));return isNaN(t)||t<-32768||t>65535?"":String.fromCharCode(t)}return n[e]||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",o=0;o<t;){var i=e.charCodeAt(o),a=r[i];a?(n+="&"+a+";",o++):(n+=i<32||i>126?"&#"+i+";":e.charAt(o),o++)}return n},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var o=e.charCodeAt(r);o<=255?n+=e[r++]:(n+="&#"+o+";",r++)}return n},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.XmlEntities=i},43:function(e,t,n){var r,o;!function(i,a){"use strict";void 0===(o="function"==typeof(r=function(){var e=function(){},t="undefined",n=typeof window!==t&&typeof window.navigator!==t&&/Trident\/|MSIE /.test(window.navigator.userAgent),r=["trace","debug","info","warn","error"];function o(e,t){var n=e[t];if("function"==typeof n.bind)return n.bind(e);try{return Function.prototype.bind.call(n,e)}catch(t){return function(){return Function.prototype.apply.apply(n,[e,arguments])}}}function i(){console.log&&(console.log.apply?console.log.apply(console,arguments):Function.prototype.apply.apply(console.log,[console,arguments])),console.trace&&console.trace()}function a(r){return"debug"===r&&(r="log"),typeof console!==t&&("trace"===r&&n?i:void 0!==console[r]?o(console,r):void 0!==console.log?o(console,"log"):e)}function l(t,n){for(var o=0;o<r.length;o++){var i=r[o];this[i]=o<t?e:this.methodFactory(i,t,n)}this.log=this.debug}function s(e,n,r){return function(){typeof console!==t&&(l.call(this,n,r),this[e].apply(this,arguments))}}function u(e,t,n){return a(e)||s.apply(this,arguments)}function c(e,n,o){var i,a=this,s="loglevel";function c(){var e;if(typeof window!==t&&s){try{e=window.localStorage[s]}catch(e){}if(typeof e===t)try{var n=window.document.cookie,r=n.indexOf(encodeURIComponent(s)+"=");-1!==r&&(e=/^([^;]+)/.exec(n.slice(r))[1])}catch(e){}return void 0===a.levels[e]&&(e=void 0),e}}"string"==typeof e?s+=":"+e:"symbol"==typeof e&&(s=void 0),a.name=e,a.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},a.methodFactory=o||u,a.getLevel=function(){return i},a.setLevel=function(n,o){if("string"==typeof n&&void 0!==a.levels[n.toUpperCase()]&&(n=a.levels[n.toUpperCase()]),!("number"==typeof n&&n>=0&&n<=a.levels.SILENT))throw"log.setLevel() called with invalid level: "+n;if(i=n,!1!==o&&function(e){var n=(r[e]||"silent").toUpperCase();if(typeof window!==t&&s){try{return void(window.localStorage[s]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(s)+"="+n+";"}catch(e){}}}(n),l.call(a,n,e),typeof console===t&&n<a.levels.SILENT)return"No console available for logging"},a.setDefaultLevel=function(e){c()||a.setLevel(e,!1)},a.enableAll=function(e){a.setLevel(a.levels.TRACE,e)},a.disableAll=function(e){a.setLevel(a.levels.SILENT,e)};var f=c();null==f&&(f=null==n?"WARN":n),a.setLevel(f,!1)}var f=new c,d={};f.getLogger=function(e){if("symbol"!=typeof e&&"string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=d[e];return t||(t=d[e]=new c(e,f.getLevel(),f.methodFactory)),t};var p=typeof window!==t?window.log:void 0;return f.noConflict=function(){return typeof window!==t&&window.log===f&&(window.log=p),f},f.getLoggers=function(){return d},f.default=f,f})?r.call(t,n,t,e):r)||(e.exports=o)}()},971:function(e,t,n){var r;e=n.nmd(e),function(o){t&&t.nodeType,e&&e.nodeType;var i="object"==typeof n.g&&n.g;i.global!==i&&i.window!==i&&i.self;var a,l=2147483647,s=36,u=/^xn--/,c=/[^\x20-\x7E]/,f=/[\x2E\u3002\uFF0E\uFF61]/g,d={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},p=Math.floor,h=String.fromCharCode;function m(e){throw RangeError(d[e])}function g(e,t){for(var n=e.length,r=[];n--;)r[n]=t(e[n]);return r}function v(e,t){var n=e.split("@"),r="";return n.length>1&&(r=n[0]+"@",e=n[1]),r+g((e=e.replace(f,".")).split("."),t).join(".")}function y(e){for(var t,n,r=[],o=0,i=e.length;o<i;)(t=e.charCodeAt(o++))>=55296&&t<=56319&&o<i?56320==(64512&(n=e.charCodeAt(o++)))?r.push(((1023&t)<<10)+(1023&n)+65536):(r.push(t),o--):r.push(t);return r}function b(e){return g(e,(function(e){var t="";return e>65535&&(t+=h((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+h(e)})).join("")}function w(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function k(e,t,n){var r=0;for(e=n?p(e/700):e>>1,e+=p(e/t);e>455;r+=s)e=p(e/35);return p(r+36*e/(e+38))}function E(e){var t,n,r,o,i,a,u,c,f,d,h,g=[],v=e.length,y=0,w=128,E=72;for((n=e.lastIndexOf("-"))<0&&(n=0),r=0;r<n;++r)e.charCodeAt(r)>=128&&m("not-basic"),g.push(e.charCodeAt(r));for(o=n>0?n+1:0;o<v;){for(i=y,a=1,u=s;o>=v&&m("invalid-input"),((c=(h=e.charCodeAt(o++))-48<10?h-22:h-65<26?h-65:h-97<26?h-97:s)>=s||c>p((l-y)/a))&&m("overflow"),y+=c*a,!(c<(f=u<=E?1:u>=E+26?26:u-E));u+=s)a>p(l/(d=s-f))&&m("overflow"),a*=d;E=k(y-i,t=g.length+1,0==i),p(y/t)>l-w&&m("overflow"),w+=p(y/t),y%=t,g.splice(y++,0,w)}return b(g)}function x(e){var t,n,r,o,i,a,u,c,f,d,g,v,b,E,x,S=[];for(v=(e=y(e)).length,t=128,n=0,i=72,a=0;a<v;++a)(g=e[a])<128&&S.push(h(g));for(r=o=S.length,o&&S.push("-");r<v;){for(u=l,a=0;a<v;++a)(g=e[a])>=t&&g<u&&(u=g);for(u-t>p((l-n)/(b=r+1))&&m("overflow"),n+=(u-t)*b,t=u,a=0;a<v;++a)if((g=e[a])<t&&++n>l&&m("overflow"),g==t){for(c=n,f=s;!(c<(d=f<=i?1:f>=i+26?26:f-i));f+=s)x=c-d,E=s-d,S.push(h(w(d+x%E,0))),c=p(x/E);S.push(h(w(c,0))),i=k(n,b,r==o),n=0,++r}++n,++t}return S.join("")}a={version:"1.3.2",ucs2:{decode:y,encode:b},decode:E,encode:x,toASCII:function(e){return v(e,(function(e){return c.test(e)?"xn--"+x(e):e}))},toUnicode:function(e){return v(e,(function(e){return u.test(e)?E(e.slice(4).toLowerCase()):e}))}},void 0===(r=function(){return a}.call(t,n,t,e))||(e.exports=r)}()},587:e=>{"use strict";function t(e,t){return Object.prototype.hasOwnProperty.call(e,t)}e.exports=function(e,n,r,o){n=n||"&",r=r||"=";var i={};if("string"!=typeof e||0===e.length)return i;var a=/\+/g;e=e.split(n);var l=1e3;o&&"number"==typeof o.maxKeys&&(l=o.maxKeys);var s=e.length;l>0&&s>l&&(s=l);for(var u=0;u<s;++u){var c,f,d,p,h=e[u].replace(a,"%20"),m=h.indexOf(r);m>=0?(c=h.substr(0,m),f=h.substr(m+1)):(c=h,f=""),d=decodeURIComponent(c),p=decodeURIComponent(f),t(i,d)?Array.isArray(i[d])?i[d].push(p):i[d]=[i[d],p]:i[d]=p}return i}},361:e=>{"use strict";var t=function(e){switch(typeof e){case"string":return e;case"boolean":return e?"true":"false";case"number":return isFinite(e)?e:"";default:return""}};e.exports=function(e,n,r,o){return n=n||"&",r=r||"=",null===e&&(e=void 0),"object"==typeof e?Object.keys(e).map((function(o){var i=encodeURIComponent(t(o))+r;return Array.isArray(e[o])?e[o].map((function(e){return i+encodeURIComponent(t(e))})).join(n):i+encodeURIComponent(t(e[o]))})).join(n):o?encodeURIComponent(t(o))+r+encodeURIComponent(t(e)):""}},673:(e,t,n)=>{"use strict";t.decode=t.parse=n(587),t.encode=t.stringify=n(361)},870:(e,t,n)=>{e.exports=function e(t,n,r){function o(a,l){if(!n[a]){if(!t[a]){if(i)return i(a,!0);var s=new Error("Cannot find module '"+a+"'");throw s.code="MODULE_NOT_FOUND",s}var u=n[a]={exports:{}};t[a][0].call(u.exports,(function(e){return o(t[a][1][e]||e)}),u,u.exports,e,t,n,r)}return n[a].exports}for(var i=void 0,a=0;a<r.length;a++)o(r[a]);return o}({1:[function(e,t,r){(function(n){"use strict";var r=e("./transport-list");t.exports=e("./main")(r),"_sockjs_onload"in n&&setTimeout(n._sockjs_onload,1)}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./main":14,"./transport-list":16}],2:[function(e,t,n){"use strict";var r=e("inherits"),o=e("./event");function i(){o.call(this),this.initEvent("close",!1,!1),this.wasClean=!1,this.code=0,this.reason=""}r(i,o),t.exports=i},{"./event":4,inherits:57}],3:[function(e,t,n){"use strict";var r=e("inherits"),o=e("./eventtarget");function i(){o.call(this)}r(i,o),i.prototype.removeAllListeners=function(e){e?delete this._listeners[e]:this._listeners={}},i.prototype.once=function(e,t){var n=this,r=!1;this.on(e,(function o(){n.removeListener(e,o),r||(r=!0,t.apply(this,arguments))}))},i.prototype.emit=function(){var e=arguments[0],t=this._listeners[e];if(t){for(var n=arguments.length,r=new Array(n-1),o=1;o<n;o++)r[o-1]=arguments[o];for(var i=0;i<t.length;i++)t[i].apply(this,r)}},i.prototype.on=i.prototype.addListener=o.prototype.addEventListener,i.prototype.removeListener=o.prototype.removeEventListener,t.exports.EventEmitter=i},{"./eventtarget":5,inherits:57}],4:[function(e,t,n){"use strict";function r(e){this.type=e}r.prototype.initEvent=function(e,t,n){return this.type=e,this.bubbles=t,this.cancelable=n,this.timeStamp=+new Date,this},r.prototype.stopPropagation=function(){},r.prototype.preventDefault=function(){},r.CAPTURING_PHASE=1,r.AT_TARGET=2,r.BUBBLING_PHASE=3,t.exports=r},{}],5:[function(e,t,n){"use strict";function r(){this._listeners={}}r.prototype.addEventListener=function(e,t){e in this._listeners||(this._listeners[e]=[]);var n=this._listeners[e];-1===n.indexOf(t)&&(n=n.concat([t])),this._listeners[e]=n},r.prototype.removeEventListener=function(e,t){var n=this._listeners[e];if(n){var r=n.indexOf(t);-1===r||(n.length>1?this._listeners[e]=n.slice(0,r).concat(n.slice(r+1)):delete this._listeners[e])}},r.prototype.dispatchEvent=function(){var e=arguments[0],t=e.type,n=1===arguments.length?[e]:Array.apply(null,arguments);if(this["on"+t]&&this["on"+t].apply(this,n),t in this._listeners)for(var r=this._listeners[t],o=0;o<r.length;o++)r[o].apply(this,n)},t.exports=r},{}],6:[function(e,t,n){"use strict";var r=e("inherits"),o=e("./event");function i(e){o.call(this),this.initEvent("message",!1,!1),this.data=e}r(i,o),t.exports=i},{"./event":4,inherits:57}],7:[function(e,t,n){"use strict";var r=e("json3"),o=e("./utils/iframe");function i(e){this._transport=e,e.on("message",this._transportMessage.bind(this)),e.on("close",this._transportClose.bind(this))}i.prototype._transportClose=function(e,t){o.postMessage("c",r.stringify([e,t]))},i.prototype._transportMessage=function(e){o.postMessage("t",e)},i.prototype._send=function(e){this._transport.send(e)},i.prototype._close=function(){this._transport.close(),this._transport.removeAllListeners()},t.exports=i},{"./utils/iframe":47,json3:58}],8:[function(e,t,n){(function(n){"use strict";var r=e("./utils/url"),o=e("./utils/event"),i=e("json3"),a=e("./facade"),l=e("./info-iframe-receiver"),s=e("./utils/iframe"),u=e("./location"),c=function(){};"production"!==n.env.NODE_ENV&&(c=e("debug")("sockjs-client:iframe-bootstrap")),t.exports=function(e,t){var n,f={};t.forEach((function(e){e.facadeTransport&&(f[e.facadeTransport.transportName]=e.facadeTransport)})),f[l.transportName]=l,e.bootstrap_iframe=function(){var t;s.currentWindowId=u.hash.slice(1);o.attachEvent("message",(function(o){if(o.source===parent&&(void 0===n&&(n=o.origin),o.origin===n)){var l;try{l=i.parse(o.data)}catch(e){return void c("bad json",o.data)}if(l.windowId===s.currentWindowId)switch(l.type){case"s":var d;try{d=i.parse(l.data)}catch(e){c("bad json",l.data);break}var p=d[0],h=d[1],m=d[2],g=d[3];if(c(p,h,m,g),p!==e.version)throw new Error('Incompatible SockJS! Main site uses: "'+p+'", the iframe: "'+e.version+'".');if(!r.isOriginEqual(m,u.href)||!r.isOriginEqual(g,u.href))throw new Error("Can't connect to different domain from within an iframe. ("+u.href+", "+m+", "+g+")");t=new a(new f[h](m,g));break;case"m":t._send(l.data);break;case"c":t&&t._close(),t=null}}})),s.postMessage("s")}}}).call(this,{env:{}})},{"./facade":7,"./info-iframe-receiver":10,"./location":13,"./utils/event":46,"./utils/iframe":47,"./utils/url":52,debug:55,json3:58}],9:[function(e,t,n){(function(n){"use strict";var r=e("events").EventEmitter,o=e("inherits"),i=e("json3"),a=e("./utils/object"),l=function(){};function s(e,t){r.call(this);var n=this,o=+new Date;this.xo=new t("GET",e),this.xo.once("finish",(function(e,t){var r,s;if(200===e){if(s=+new Date-o,t)try{r=i.parse(t)}catch(e){l("bad json",t)}a.isObject(r)||(r={})}n.emit("finish",r,s),n.removeAllListeners()}))}"production"!==n.env.NODE_ENV&&(l=e("debug")("sockjs-client:info-ajax")),o(s,r),s.prototype.close=function(){this.removeAllListeners(),this.xo.close()},t.exports=s}).call(this,{env:{}})},{"./utils/object":49,debug:55,events:3,inherits:57,json3:58}],10:[function(e,t,n){"use strict";var r=e("inherits"),o=e("events").EventEmitter,i=e("json3"),a=e("./transport/sender/xhr-local"),l=e("./info-ajax");function s(e){var t=this;o.call(this),this.ir=new l(e,a),this.ir.once("finish",(function(e,n){t.ir=null,t.emit("message",i.stringify([e,n]))}))}r(s,o),s.transportName="iframe-info-receiver",s.prototype.close=function(){this.ir&&(this.ir.close(),this.ir=null),this.removeAllListeners()},t.exports=s},{"./info-ajax":9,"./transport/sender/xhr-local":37,events:3,inherits:57,json3:58}],11:[function(e,t,r){(function(n,r){"use strict";var o=e("events").EventEmitter,i=e("inherits"),a=e("json3"),l=e("./utils/event"),s=e("./transport/iframe"),u=e("./info-iframe-receiver"),c=function(){};function f(e,t){var n=this;o.call(this);var i=function(){var r=n.ifr=new s(u.transportName,t,e);r.once("message",(function(e){if(e){var t;try{t=a.parse(e)}catch(t){return c("bad json",e),n.emit("finish"),void n.close()}var r=t[0],o=t[1];n.emit("finish",r,o)}n.close()})),r.once("close",(function(){n.emit("finish"),n.close()}))};r.document.body?i():l.attachEvent("load",i)}"production"!==n.env.NODE_ENV&&(c=e("debug")("sockjs-client:info-iframe")),i(f,o),f.enabled=function(){return s.enabled()},f.prototype.close=function(){this.ifr&&this.ifr.close(),this.removeAllListeners(),this.ifr=null},t.exports=f}).call(this,{env:{}},void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./info-iframe-receiver":10,"./transport/iframe":22,"./utils/event":46,debug:55,events:3,inherits:57,json3:58}],12:[function(e,t,n){(function(n){"use strict";var r=e("events").EventEmitter,o=e("inherits"),i=e("./utils/url"),a=e("./transport/sender/xdr"),l=e("./transport/sender/xhr-cors"),s=e("./transport/sender/xhr-local"),u=e("./transport/sender/xhr-fake"),c=e("./info-iframe"),f=e("./info-ajax"),d=function(){};function p(e,t){d(e);var n=this;r.call(this),setTimeout((function(){n.doXhr(e,t)}),0)}"production"!==n.env.NODE_ENV&&(d=e("debug")("sockjs-client:info-receiver")),o(p,r),p._getReceiver=function(e,t,n){return n.sameOrigin?new f(t,s):l.enabled?new f(t,l):a.enabled&&n.sameScheme?new f(t,a):c.enabled()?new c(e,t):new f(t,u)},p.prototype.doXhr=function(e,t){var n=this,r=i.addPath(e,"/info");d("doXhr",r),this.xo=p._getReceiver(e,r,t),this.timeoutRef=setTimeout((function(){d("timeout"),n._cleanup(!1),n.emit("finish")}),p.timeout),this.xo.once("finish",(function(e,t){d("finish",e,t),n._cleanup(!0),n.emit("finish",e,t)}))},p.prototype._cleanup=function(e){d("_cleanup"),clearTimeout(this.timeoutRef),this.timeoutRef=null,!e&&this.xo&&this.xo.close(),this.xo=null},p.prototype.close=function(){d("close"),this.removeAllListeners(),this._cleanup(!1)},p.timeout=8e3,t.exports=p}).call(this,{env:{}})},{"./info-ajax":9,"./info-iframe":11,"./transport/sender/xdr":34,"./transport/sender/xhr-cors":35,"./transport/sender/xhr-fake":36,"./transport/sender/xhr-local":37,"./utils/url":52,debug:55,events:3,inherits:57}],13:[function(e,t,r){(function(e){"use strict";t.exports=e.location||{origin:"http://localhost:80",protocol:"http:",host:"localhost",port:80,href:"http://localhost/",hash:""}}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],14:[function(e,t,r){(function(n,r){"use strict";e("./shims");var o,i=e("url-parse"),a=e("inherits"),l=e("json3"),s=e("./utils/random"),u=e("./utils/escape"),c=e("./utils/url"),f=e("./utils/event"),d=e("./utils/transport"),p=e("./utils/object"),h=e("./utils/browser"),m=e("./utils/log"),g=e("./event/event"),v=e("./event/eventtarget"),y=e("./location"),b=e("./event/close"),w=e("./event/trans-message"),k=e("./info-receiver"),E=function(){};function x(e,t,n){if(!(this instanceof x))return new x(e,t,n);if(arguments.length<1)throw new TypeError("Failed to construct 'SockJS: 1 argument required, but only 0 present");v.call(this),this.readyState=x.CONNECTING,this.extensions="",this.protocol="",(n=n||{}).protocols_whitelist&&m.warn("'protocols_whitelist' is DEPRECATED. Use 'transports' instead."),this._transportsWhitelist=n.transports,this._transportOptions=n.transportOptions||{},this._timeout=n.timeout||0;var r=n.sessionId||8;if("function"==typeof r)this._generateSessionId=r;else{if("number"!=typeof r)throw new TypeError("If sessionId is used in the options, it needs to be a number or a function.");this._generateSessionId=function(){return s.string(r)}}this._server=n.server||s.numberString(1e3);var o=new i(e);if(!o.host||!o.protocol)throw new SyntaxError("The URL '"+e+"' is invalid");if(o.hash)throw new SyntaxError("The URL must not contain a fragment");if("http:"!==o.protocol&&"https:"!==o.protocol)throw new SyntaxError("The URL's scheme must be either 'http:' or 'https:'. '"+o.protocol+"' is not allowed.");var a="https:"===o.protocol;if("https:"===y.protocol&&!a)throw new Error("SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS");t?Array.isArray(t)||(t=[t]):t=[];var l=t.sort();l.forEach((function(e,t){if(!e)throw new SyntaxError("The protocols entry '"+e+"' is invalid.");if(t<l.length-1&&e===l[t+1])throw new SyntaxError("The protocols entry '"+e+"' is duplicated.")}));var u=c.getOrigin(y.href);this._origin=u?u.toLowerCase():null,o.set("pathname",o.pathname.replace(/\/+$/,"")),this.url=o.href,E("using url",this.url),this._urlInfo={nullOrigin:!h.hasDomain(),sameOrigin:c.isOriginEqual(this.url,y.href),sameScheme:c.isSchemeEqual(this.url,y.href)},this._ir=new k(this.url,this._urlInfo),this._ir.once("finish",this._receiveInfo.bind(this))}function S(e){return 1e3===e||e>=3e3&&e<=4999}"production"!==n.env.NODE_ENV&&(E=e("debug")("sockjs-client:main")),a(x,v),x.prototype.close=function(e,t){if(e&&!S(e))throw new Error("InvalidAccessError: Invalid code");if(t&&t.length>123)throw new SyntaxError("reason argument has an invalid length");if(this.readyState!==x.CLOSING&&this.readyState!==x.CLOSED){this._close(e||1e3,t||"Normal closure",!0)}},x.prototype.send=function(e){if("string"!=typeof e&&(e=""+e),this.readyState===x.CONNECTING)throw new Error("InvalidStateError: The connection has not been established yet");this.readyState===x.OPEN&&this._transport.send(u.quote(e))},x.version=e("./version"),x.CONNECTING=0,x.OPEN=1,x.CLOSING=2,x.CLOSED=3,x.prototype._receiveInfo=function(e,t){if(E("_receiveInfo",t),this._ir=null,e){this._rto=this.countRTO(t),this._transUrl=e.base_url?e.base_url:this.url,e=p.extend(e,this._urlInfo),E("info",e);var n=o.filterToEnabled(this._transportsWhitelist,e);this._transports=n.main,E(this._transports.length+" enabled transports"),this._connect()}else this._close(1002,"Cannot connect to server")},x.prototype._connect=function(){for(var e=this._transports.shift();e;e=this._transports.shift()){if(E("attempt",e.transportName),e.needBody&&(!r.document.body||void 0!==r.document.readyState&&"complete"!==r.document.readyState&&"interactive"!==r.document.readyState))return E("waiting for body"),this._transports.unshift(e),void f.attachEvent("load",this._connect.bind(this));var t=Math.max(this._timeout,this._rto*e.roundTrips||5e3);this._transportTimeoutId=setTimeout(this._transportTimeout.bind(this),t),E("using timeout",t);var n=c.addPath(this._transUrl,"/"+this._server+"/"+this._generateSessionId()),o=this._transportOptions[e.transportName];E("transport url",n);var i=new e(n,this._transUrl,o);return i.on("message",this._transportMessage.bind(this)),i.once("close",this._transportClose.bind(this)),i.transportName=e.transportName,void(this._transport=i)}this._close(2e3,"All transports failed",!1)},x.prototype._transportTimeout=function(){E("_transportTimeout"),this.readyState===x.CONNECTING&&(this._transport&&this._transport.close(),this._transportClose(2007,"Transport timed out"))},x.prototype._transportMessage=function(e){E("_transportMessage",e);var t,n=this,r=e.slice(0,1),o=e.slice(1);switch(r){case"o":return void this._open();case"h":return this.dispatchEvent(new g("heartbeat")),void E("heartbeat",this.transport)}if(o)try{t=l.parse(o)}catch(e){E("bad json",o)}if(void 0!==t)switch(r){case"a":Array.isArray(t)&&t.forEach((function(e){E("message",n.transport,e),n.dispatchEvent(new w(e))}));break;case"m":E("message",this.transport,t),this.dispatchEvent(new w(t));break;case"c":Array.isArray(t)&&2===t.length&&this._close(t[0],t[1],!0)}else E("empty payload",o)},x.prototype._transportClose=function(e,t){E("_transportClose",this.transport,e,t),this._transport&&(this._transport.removeAllListeners(),this._transport=null,this.transport=null),S(e)||2e3===e||this.readyState!==x.CONNECTING?this._close(e,t):this._connect()},x.prototype._open=function(){E("_open",this._transport&&this._transport.transportName,this.readyState),this.readyState===x.CONNECTING?(this._transportTimeoutId&&(clearTimeout(this._transportTimeoutId),this._transportTimeoutId=null),this.readyState=x.OPEN,this.transport=this._transport.transportName,this.dispatchEvent(new g("open")),E("connected",this.transport)):this._close(1006,"Server lost session")},x.prototype._close=function(e,t,n){E("_close",this.transport,e,t,n,this.readyState);var r=!1;if(this._ir&&(r=!0,this._ir.close(),this._ir=null),this._transport&&(this._transport.close(),this._transport=null,this.transport=null),this.readyState===x.CLOSED)throw new Error("InvalidStateError: SockJS has already been closed");this.readyState=x.CLOSING,setTimeout(function(){this.readyState=x.CLOSED,r&&this.dispatchEvent(new g("error"));var o=new b("close");o.wasClean=n||!1,o.code=e||1e3,o.reason=t,this.dispatchEvent(o),this.onmessage=this.onclose=this.onerror=null,E("disconnected")}.bind(this),0)},x.prototype.countRTO=function(e){return e>100?4*e:300+e},t.exports=function(t){return o=d(t),e("./iframe-bootstrap")(x,t),x}}).call(this,{env:{}},void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./event/close":2,"./event/event":4,"./event/eventtarget":5,"./event/trans-message":6,"./iframe-bootstrap":8,"./info-receiver":12,"./location":13,"./shims":15,"./utils/browser":44,"./utils/escape":45,"./utils/event":46,"./utils/log":48,"./utils/object":49,"./utils/random":50,"./utils/transport":51,"./utils/url":52,"./version":53,debug:55,inherits:57,json3:58,"url-parse":61}],15:[function(e,t,n){"use strict";var r,o=Array.prototype,i=Object.prototype,a=Function.prototype,l=String.prototype,s=o.slice,u=i.toString,c=function(e){return"[object Function]"===i.toString.call(e)},f=function(e){return"[object String]"===u.call(e)},d=Object.defineProperty&&function(){try{return Object.defineProperty({},"x",{}),!0}catch(e){return!1}}();r=d?function(e,t,n,r){!r&&t in e||Object.defineProperty(e,t,{configurable:!0,enumerable:!1,writable:!0,value:n})}:function(e,t,n,r){!r&&t in e||(e[t]=n)};var p=function(e,t,n){for(var o in t)i.hasOwnProperty.call(t,o)&&r(e,o,t[o],n)},h=function(e){if(null==e)throw new TypeError("can't convert "+e+" to object");return Object(e)};function m(e){var t=+e;return t!=t?t=0:0!==t&&t!==1/0&&t!==-1/0&&(t=(t>0||-1)*Math.floor(Math.abs(t))),t}function g(){}p(a,{bind:function(e){var t=this;if(!c(t))throw new TypeError("Function.prototype.bind called on incompatible "+t);for(var n=s.call(arguments,1),r=function(){if(this instanceof l){var r=t.apply(this,n.concat(s.call(arguments)));return Object(r)===r?r:this}return t.apply(e,n.concat(s.call(arguments)))},o=Math.max(0,t.length-n.length),i=[],a=0;a<o;a++)i.push("$"+a);var l=Function("binder","return function ("+i.join(",")+"){ return binder.apply(this, arguments); }")(r);return t.prototype&&(g.prototype=t.prototype,l.prototype=new g,g.prototype=null),l}}),p(Array,{isArray:function(e){return"[object Array]"===u.call(e)}});var v,y,b,w=Object("a"),k="a"!==w[0]||!(0 in w);p(o,{forEach:function(e){var t=h(this),n=k&&f(this)?this.split(""):t,r=arguments[1],o=-1,i=n.length>>>0;if(!c(e))throw new TypeError;for(;++o<i;)o in n&&e.call(r,n[o],o,t)}},(v=o.forEach,y=!0,b=!0,v&&(v.call("foo",(function(e,t,n){"object"!=typeof n&&(y=!1)})),v.call([1],(function(){b="string"==typeof this}),"x")),!(v&&y&&b)));var E=Array.prototype.indexOf&&-1!==[0,1].indexOf(1,2);p(o,{indexOf:function(e){var t=k&&f(this)?this.split(""):h(this),n=t.length>>>0;if(!n)return-1;var r=0;for(arguments.length>1&&(r=m(arguments[1])),r=r>=0?r:Math.max(0,n+r);r<n;r++)if(r in t&&t[r]===e)return r;return-1}},E);var x,S=l.split;2!=="ab".split(/(?:ab)*/).length||4!==".".split(/(.?)(.?)/).length||"t"==="tesst".split(/(s)*/)[1]||4!=="test".split(/(?:)/,-1).length||"".split(/.?/).length||".".split(/()()/).length>1?(x=void 0===/()??/.exec("")[1],l.split=function(e,t){var n=this;if(void 0===e&&0===t)return[];if("[object RegExp]"!==u.call(e))return S.call(this,e,t);var r,i,a,l,s=[],c=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.extended?"x":"")+(e.sticky?"y":""),f=0;for(e=new RegExp(e.source,c+"g"),n+="",x||(r=new RegExp("^"+e.source+"$(?!\\s)",c)),t=void 0===t?-1>>>0:t>>>0;(i=e.exec(n))&&!((a=i.index+i[0].length)>f&&(s.push(n.slice(f,i.index)),!x&&i.length>1&&i[0].replace(r,(function(){for(var e=1;e<arguments.length-2;e++)void 0===arguments[e]&&(i[e]=void 0)})),i.length>1&&i.index<n.length&&o.push.apply(s,i.slice(1)),l=i[0].length,f=a,s.length>=t));)e.lastIndex===i.index&&e.lastIndex++;return f===n.length?!l&&e.test("")||s.push(""):s.push(n.slice(f)),s.length>t?s.slice(0,t):s}):"0".split(void 0,0).length&&(l.split=function(e,t){return void 0===e&&0===t?[]:S.call(this,e,t)});var C=l.substr;p(l,{substr:function(e,t){return C.call(this,e<0&&(e=this.length+e)<0?0:e,t)}},"".substr&&"b"!=="0b".substr(-1))},{}],16:[function(e,t,n){"use strict";t.exports=[e("./transport/websocket"),e("./transport/xhr-streaming"),e("./transport/xdr-streaming"),e("./transport/eventsource"),e("./transport/lib/iframe-wrap")(e("./transport/eventsource")),e("./transport/htmlfile"),e("./transport/lib/iframe-wrap")(e("./transport/htmlfile")),e("./transport/xhr-polling"),e("./transport/xdr-polling"),e("./transport/lib/iframe-wrap")(e("./transport/xhr-polling")),e("./transport/jsonp-polling")]},{"./transport/eventsource":20,"./transport/htmlfile":21,"./transport/jsonp-polling":23,"./transport/lib/iframe-wrap":26,"./transport/websocket":38,"./transport/xdr-polling":39,"./transport/xdr-streaming":40,"./transport/xhr-polling":41,"./transport/xhr-streaming":42}],17:[function(e,t,r){(function(n,r){"use strict";var o=e("events").EventEmitter,i=e("inherits"),a=e("../../utils/event"),l=e("../../utils/url"),s=r.XMLHttpRequest,u=function(){};function c(e,t,n,r){u(e,t);var i=this;o.call(this),setTimeout((function(){i._start(e,t,n,r)}),0)}"production"!==n.env.NODE_ENV&&(u=e("debug")("sockjs-client:browser:xhr")),i(c,o),c.prototype._start=function(e,t,n,r){var o=this;try{this.xhr=new s}catch(e){}if(!this.xhr)return u("no xhr"),this.emit("finish",0,"no xhr support"),void this._cleanup();t=l.addQuery(t,"t="+ +new Date),this.unloadRef=a.unloadAdd((function(){u("unload cleanup"),o._cleanup(!0)}));try{this.xhr.open(e,t,!0),this.timeout&&"timeout"in this.xhr&&(this.xhr.timeout=this.timeout,this.xhr.ontimeout=function(){u("xhr timeout"),o.emit("finish",0,""),o._cleanup(!1)})}catch(e){return u("exception",e),this.emit("finish",0,""),void this._cleanup(!1)}if(r&&r.noCredentials||!c.supportsCORS||(u("withCredentials"),this.xhr.withCredentials=!0),r&&r.headers)for(var i in r.headers)this.xhr.setRequestHeader(i,r.headers[i]);this.xhr.onreadystatechange=function(){if(o.xhr){var e,t,n=o.xhr;switch(u("readyState",n.readyState),n.readyState){case 3:try{t=n.status,e=n.responseText}catch(e){}u("status",t),1223===t&&(t=204),200===t&&e&&e.length>0&&(u("chunk"),o.emit("chunk",t,e));break;case 4:t=n.status,u("status",t),1223===t&&(t=204),12005!==t&&12029!==t||(t=0),u("finish",t,n.responseText),o.emit("finish",t,n.responseText),o._cleanup(!1)}}};try{o.xhr.send(n)}catch(e){o.emit("finish",0,""),o._cleanup(!1)}},c.prototype._cleanup=function(e){if(u("cleanup"),this.xhr){if(this.removeAllListeners(),a.unloadDel(this.unloadRef),this.xhr.onreadystatechange=function(){},this.xhr.ontimeout&&(this.xhr.ontimeout=null),e)try{this.xhr.abort()}catch(e){}this.unloadRef=this.xhr=null}},c.prototype.close=function(){u("close"),this._cleanup(!0)},c.enabled=!!s;var f=["Active"].concat("Object").join("X");!c.enabled&&f in r&&(u("overriding xmlhttprequest"),s=function(){try{return new r[f]("Microsoft.XMLHTTP")}catch(e){return null}},c.enabled=!!new s);var d=!1;try{d="withCredentials"in new s}catch(e){}c.supportsCORS=d,t.exports=c}).call(this,{env:{}},void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../utils/event":46,"../../utils/url":52,debug:55,events:3,inherits:57}],18:[function(e,t,r){(function(e){t.exports=e.EventSource}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],19:[function(e,t,r){(function(e){"use strict";var n=e.WebSocket||e.MozWebSocket;t.exports=n?function(e){return new n(e)}:void 0}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],20:[function(e,t,n){"use strict";var r=e("inherits"),o=e("./lib/ajax-based"),i=e("./receiver/eventsource"),a=e("./sender/xhr-cors"),l=e("eventsource");function s(e){if(!s.enabled())throw new Error("Transport created when disabled");o.call(this,e,"/eventsource",i,a)}r(s,o),s.enabled=function(){return!!l},s.transportName="eventsource",s.roundTrips=2,t.exports=s},{"./lib/ajax-based":24,"./receiver/eventsource":29,"./sender/xhr-cors":35,eventsource:18,inherits:57}],21:[function(e,t,n){"use strict";var r=e("inherits"),o=e("./receiver/htmlfile"),i=e("./sender/xhr-local"),a=e("./lib/ajax-based");function l(e){if(!o.enabled)throw new Error("Transport created when disabled");a.call(this,e,"/htmlfile",o,i)}r(l,a),l.enabled=function(e){return o.enabled&&e.sameOrigin},l.transportName="htmlfile",l.roundTrips=2,t.exports=l},{"./lib/ajax-based":24,"./receiver/htmlfile":30,"./sender/xhr-local":37,inherits:57}],22:[function(e,t,n){(function(n){"use strict";var r=e("inherits"),o=e("json3"),i=e("events").EventEmitter,a=e("../version"),l=e("../utils/url"),s=e("../utils/iframe"),u=e("../utils/event"),c=e("../utils/random"),f=function(){};function d(e,t,n){if(!d.enabled())throw new Error("Transport created when disabled");i.call(this);var r=this;this.origin=l.getOrigin(n),this.baseUrl=n,this.transUrl=t,this.transport=e,this.windowId=c.string(8);var o=l.addPath(n,"/iframe.html")+"#"+this.windowId;f(e,t,o),this.iframeObj=s.createIframe(o,(function(e){f("err callback"),r.emit("close",1006,"Unable to load an iframe ("+e+")"),r.close()})),this.onmessageCallback=this._message.bind(this),u.attachEvent("message",this.onmessageCallback)}"production"!==n.env.NODE_ENV&&(f=e("debug")("sockjs-client:transport:iframe")),r(d,i),d.prototype.close=function(){if(f("close"),this.removeAllListeners(),this.iframeObj){u.detachEvent("message",this.onmessageCallback);try{this.postMessage("c")}catch(e){}this.iframeObj.cleanup(),this.iframeObj=null,this.onmessageCallback=this.iframeObj=null}},d.prototype._message=function(e){if(f("message",e.data),l.isOriginEqual(e.origin,this.origin)){var t;try{t=o.parse(e.data)}catch(t){return void f("bad json",e.data)}if(t.windowId===this.windowId)switch(t.type){case"s":this.iframeObj.loaded(),this.postMessage("s",o.stringify([a,this.transport,this.transUrl,this.baseUrl]));break;case"t":this.emit("message",t.data);break;case"c":var n;try{n=o.parse(t.data)}catch(e){return void f("bad json",t.data)}this.emit("close",n[0],n[1]),this.close()}else f("mismatched window id",t.windowId,this.windowId)}else f("not same origin",e.origin,this.origin)},d.prototype.postMessage=function(e,t){f("postMessage",e,t),this.iframeObj.post(o.stringify({windowId:this.windowId,type:e,data:t||""}),this.origin)},d.prototype.send=function(e){f("send",e),this.postMessage("m",e)},d.enabled=function(){return s.iframeEnabled},d.transportName="iframe",d.roundTrips=2,t.exports=d}).call(this,{env:{}})},{"../utils/event":46,"../utils/iframe":47,"../utils/random":50,"../utils/url":52,"../version":53,debug:55,events:3,inherits:57,json3:58}],23:[function(e,t,r){(function(n){"use strict";var r=e("inherits"),o=e("./lib/sender-receiver"),i=e("./receiver/jsonp"),a=e("./sender/jsonp");function l(e){if(!l.enabled())throw new Error("Transport created when disabled");o.call(this,e,"/jsonp",a,i)}r(l,o),l.enabled=function(){return!!n.document},l.transportName="jsonp-polling",l.roundTrips=1,l.needBody=!0,t.exports=l}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./lib/sender-receiver":28,"./receiver/jsonp":31,"./sender/jsonp":33,inherits:57}],24:[function(e,t,n){(function(n){"use strict";var r=e("inherits"),o=e("../../utils/url"),i=e("./sender-receiver"),a=function(){};function l(e,t,n,r){i.call(this,e,t,function(e){return function(t,n,r){a("create ajax sender",t,n);var i={};"string"==typeof n&&(i.headers={"Content-type":"text/plain"});var l=o.addPath(t,"/xhr_send"),s=new e("POST",l,n,i);return s.once("finish",(function(e){if(a("finish",e),s=null,200!==e&&204!==e)return r(new Error("http status "+e));r()})),function(){a("abort"),s.close(),s=null;var e=new Error("Aborted");e.code=1e3,r(e)}}}(r),n,r)}"production"!==n.env.NODE_ENV&&(a=e("debug")("sockjs-client:ajax-based")),r(l,i),t.exports=l}).call(this,{env:{}})},{"../../utils/url":52,"./sender-receiver":28,debug:55,inherits:57}],25:[function(e,t,n){(function(n){"use strict";var r=e("inherits"),o=e("events").EventEmitter,i=function(){};function a(e,t){i(e),o.call(this),this.sendBuffer=[],this.sender=t,this.url=e}"production"!==n.env.NODE_ENV&&(i=e("debug")("sockjs-client:buffered-sender")),r(a,o),a.prototype.send=function(e){i("send",e),this.sendBuffer.push(e),this.sendStop||this.sendSchedule()},a.prototype.sendScheduleWait=function(){i("sendScheduleWait");var e,t=this;this.sendStop=function(){i("sendStop"),t.sendStop=null,clearTimeout(e)},e=setTimeout((function(){i("timeout"),t.sendStop=null,t.sendSchedule()}),25)},a.prototype.sendSchedule=function(){i("sendSchedule",this.sendBuffer.length);var e=this;if(this.sendBuffer.length>0){var t="["+this.sendBuffer.join(",")+"]";this.sendStop=this.sender(this.url,t,(function(t){e.sendStop=null,t?(i("error",t),e.emit("close",t.code||1006,"Sending error: "+t),e.close()):e.sendScheduleWait()})),this.sendBuffer=[]}},a.prototype._cleanup=function(){i("_cleanup"),this.removeAllListeners()},a.prototype.close=function(){i("close"),this._cleanup(),this.sendStop&&(this.sendStop(),this.sendStop=null)},t.exports=a}).call(this,{env:{}})},{debug:55,events:3,inherits:57}],26:[function(e,t,r){(function(n){"use strict";var r=e("inherits"),o=e("../iframe"),i=e("../../utils/object");t.exports=function(e){function t(t,n){o.call(this,e.transportName,t,n)}return r(t,o),t.enabled=function(t,r){if(!n.document)return!1;var a=i.extend({},r);return a.sameOrigin=!0,e.enabled(a)&&o.enabled()},t.transportName="iframe-"+e.transportName,t.needBody=!0,t.roundTrips=o.roundTrips+e.roundTrips-1,t.facadeTransport=e,t}}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../utils/object":49,"../iframe":22,inherits:57}],27:[function(e,t,n){(function(n){"use strict";var r=e("inherits"),o=e("events").EventEmitter,i=function(){};function a(e,t,n){i(t),o.call(this),this.Receiver=e,this.receiveUrl=t,this.AjaxObject=n,this._scheduleReceiver()}"production"!==n.env.NODE_ENV&&(i=e("debug")("sockjs-client:polling")),r(a,o),a.prototype._scheduleReceiver=function(){i("_scheduleReceiver");var e=this,t=this.poll=new this.Receiver(this.receiveUrl,this.AjaxObject);t.on("message",(function(t){i("message",t),e.emit("message",t)})),t.once("close",(function(n,r){i("close",n,r,e.pollIsClosing),e.poll=t=null,e.pollIsClosing||("network"===r?e._scheduleReceiver():(e.emit("close",n||1006,r),e.removeAllListeners()))}))},a.prototype.abort=function(){i("abort"),this.removeAllListeners(),this.pollIsClosing=!0,this.poll&&this.poll.abort()},t.exports=a}).call(this,{env:{}})},{debug:55,events:3,inherits:57}],28:[function(e,t,n){(function(n){"use strict";var r=e("inherits"),o=e("../../utils/url"),i=e("./buffered-sender"),a=e("./polling"),l=function(){};function s(e,t,n,r,s){var u=o.addPath(e,t);l(u);var c=this;i.call(this,e,n),this.poll=new a(r,u,s),this.poll.on("message",(function(e){l("poll message",e),c.emit("message",e)})),this.poll.once("close",(function(e,t){l("poll close",e,t),c.poll=null,c.emit("close",e,t),c.close()}))}"production"!==n.env.NODE_ENV&&(l=e("debug")("sockjs-client:sender-receiver")),r(s,i),s.prototype.close=function(){i.prototype.close.call(this),l("close"),this.removeAllListeners(),this.poll&&(this.poll.abort(),this.poll=null)},t.exports=s}).call(this,{env:{}})},{"../../utils/url":52,"./buffered-sender":25,"./polling":27,debug:55,inherits:57}],29:[function(e,t,n){(function(n){"use strict";var r=e("inherits"),o=e("events").EventEmitter,i=e("eventsource"),a=function(){};function l(e){a(e),o.call(this);var t=this,n=this.es=new i(e);n.onmessage=function(e){a("message",e.data),t.emit("message",decodeURI(e.data))},n.onerror=function(e){a("error",n.readyState,e);var r=2!==n.readyState?"network":"permanent";t._cleanup(),t._close(r)}}"production"!==n.env.NODE_ENV&&(a=e("debug")("sockjs-client:receiver:eventsource")),r(l,o),l.prototype.abort=function(){a("abort"),this._cleanup(),this._close("user")},l.prototype._cleanup=function(){a("cleanup");var e=this.es;e&&(e.onmessage=e.onerror=null,e.close(),this.es=null)},l.prototype._close=function(e){a("close",e);var t=this;setTimeout((function(){t.emit("close",null,e),t.removeAllListeners()}),200)},t.exports=l}).call(this,{env:{}})},{debug:55,events:3,eventsource:18,inherits:57}],30:[function(e,t,r){(function(n,r){"use strict";var o=e("inherits"),i=e("../../utils/iframe"),a=e("../../utils/url"),l=e("events").EventEmitter,s=e("../../utils/random"),u=function(){};function c(e){u(e),l.call(this);var t=this;i.polluteGlobalNamespace(),this.id="a"+s.string(6),e=a.addQuery(e,"c="+decodeURIComponent(i.WPrefix+"."+this.id)),u("using htmlfile",c.htmlfileEnabled);var n=c.htmlfileEnabled?i.createHtmlfile:i.createIframe;r[i.WPrefix][this.id]={start:function(){u("start"),t.iframeObj.loaded()},message:function(e){u("message",e),t.emit("message",e)},stop:function(){u("stop"),t._cleanup(),t._close("network")}},this.iframeObj=n(e,(function(){u("callback"),t._cleanup(),t._close("permanent")}))}"production"!==n.env.NODE_ENV&&(u=e("debug")("sockjs-client:receiver:htmlfile")),o(c,l),c.prototype.abort=function(){u("abort"),this._cleanup(),this._close("user")},c.prototype._cleanup=function(){u("_cleanup"),this.iframeObj&&(this.iframeObj.cleanup(),this.iframeObj=null),delete r[i.WPrefix][this.id]},c.prototype._close=function(e){u("_close",e),this.emit("close",null,e),this.removeAllListeners()},c.htmlfileEnabled=!1;var f=["Active"].concat("Object").join("X");if(f in r)try{c.htmlfileEnabled=!!new r[f]("htmlfile")}catch(e){}c.enabled=c.htmlfileEnabled||i.iframeEnabled,t.exports=c}).call(this,{env:{}},void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../utils/iframe":47,"../../utils/random":50,"../../utils/url":52,debug:55,events:3,inherits:57}],31:[function(e,t,r){(function(n,r){"use strict";var o=e("../../utils/iframe"),i=e("../../utils/random"),a=e("../../utils/browser"),l=e("../../utils/url"),s=e("inherits"),u=e("events").EventEmitter,c=function(){};function f(e){c(e);var t=this;u.call(this),o.polluteGlobalNamespace(),this.id="a"+i.string(6);var n=l.addQuery(e,"c="+encodeURIComponent(o.WPrefix+"."+this.id));r[o.WPrefix][this.id]=this._callback.bind(this),this._createScript(n),this.timeoutId=setTimeout((function(){c("timeout"),t._abort(new Error("JSONP script loaded abnormally (timeout)"))}),f.timeout)}"production"!==n.env.NODE_ENV&&(c=e("debug")("sockjs-client:receiver:jsonp")),s(f,u),f.prototype.abort=function(){if(c("abort"),r[o.WPrefix][this.id]){var e=new Error("JSONP user aborted read");e.code=1e3,this._abort(e)}},f.timeout=35e3,f.scriptErrorTimeout=1e3,f.prototype._callback=function(e){c("_callback",e),this._cleanup(),this.aborting||(e&&(c("message",e),this.emit("message",e)),this.emit("close",null,"network"),this.removeAllListeners())},f.prototype._abort=function(e){c("_abort",e),this._cleanup(),this.aborting=!0,this.emit("close",e.code,e.message),this.removeAllListeners()},f.prototype._cleanup=function(){if(c("_cleanup"),clearTimeout(this.timeoutId),this.script2&&(this.script2.parentNode.removeChild(this.script2),this.script2=null),this.script){var e=this.script;e.parentNode.removeChild(e),e.onreadystatechange=e.onerror=e.onload=e.onclick=null,this.script=null}delete r[o.WPrefix][this.id]},f.prototype._scriptError=function(){c("_scriptError");var e=this;this.errorTimer||(this.errorTimer=setTimeout((function(){e.loadedOkay||e._abort(new Error("JSONP script loaded abnormally (onerror)"))}),f.scriptErrorTimeout))},f.prototype._createScript=function(e){c("_createScript",e);var t,n=this,o=this.script=r.document.createElement("script");if(o.id="a"+i.string(8),o.src=e,o.type="text/javascript",o.charset="UTF-8",o.onerror=this._scriptError.bind(this),o.onload=function(){c("onload"),n._abort(new Error("JSONP script loaded abnormally (onload)"))},o.onreadystatechange=function(){if(c("onreadystatechange",o.readyState),/loaded|closed/.test(o.readyState)){if(o&&o.htmlFor&&o.onclick){n.loadedOkay=!0;try{o.onclick()}catch(e){}}o&&n._abort(new Error("JSONP script loaded abnormally (onreadystatechange)"))}},void 0===o.async&&r.document.attachEvent)if(a.isOpera())(t=this.script2=r.document.createElement("script")).text="try{var a = document.getElementById('"+o.id+"'); if(a)a.onerror();}catch(x){};",o.async=t.async=!1;else{try{o.htmlFor=o.id,o.event="onclick"}catch(e){}o.async=!0}void 0!==o.async&&(o.async=!0);var l=r.document.getElementsByTagName("head")[0];l.insertBefore(o,l.firstChild),t&&l.insertBefore(t,l.firstChild)},t.exports=f}).call(this,{env:{}},void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../utils/browser":44,"../../utils/iframe":47,"../../utils/random":50,"../../utils/url":52,debug:55,events:3,inherits:57}],32:[function(e,t,n){(function(n){"use strict";var r=e("inherits"),o=e("events").EventEmitter,i=function(){};function a(e,t){i(e),o.call(this);var n=this;this.bufferPosition=0,this.xo=new t("POST",e,null),this.xo.on("chunk",this._chunkHandler.bind(this)),this.xo.once("finish",(function(e,t){i("finish",e,t),n._chunkHandler(e,t),n.xo=null;var r=200===e?"network":"permanent";i("close",r),n.emit("close",null,r),n._cleanup()}))}"production"!==n.env.NODE_ENV&&(i=e("debug")("sockjs-client:receiver:xhr")),r(a,o),a.prototype._chunkHandler=function(e,t){if(i("_chunkHandler",e),200===e&&t)for(var n=-1;;this.bufferPosition+=n+1){var r=t.slice(this.bufferPosition);if(-1===(n=r.indexOf("\n")))break;var o=r.slice(0,n);o&&(i("message",o),this.emit("message",o))}},a.prototype._cleanup=function(){i("_cleanup"),this.removeAllListeners()},a.prototype.abort=function(){i("abort"),this.xo&&(this.xo.close(),i("close"),this.emit("close",null,"user"),this.xo=null),this._cleanup()},t.exports=a}).call(this,{env:{}})},{debug:55,events:3,inherits:57}],33:[function(e,t,r){(function(n,r){"use strict";var o,i,a=e("../../utils/random"),l=e("../../utils/url"),s=function(){};"production"!==n.env.NODE_ENV&&(s=e("debug")("sockjs-client:sender:jsonp")),t.exports=function(e,t,n){s(e,t),o||(s("createForm"),(o=r.document.createElement("form")).style.display="none",o.style.position="absolute",o.method="POST",o.enctype="application/x-www-form-urlencoded",o.acceptCharset="UTF-8",(i=r.document.createElement("textarea")).name="d",o.appendChild(i),r.document.body.appendChild(o));var u="a"+a.string(8);o.target=u,o.action=l.addQuery(l.addPath(e,"/jsonp_send"),"i="+u);var c=function(e){s("createIframe",e);try{return r.document.createElement('<iframe name="'+e+'">')}catch(n){var t=r.document.createElement("iframe");return t.name=e,t}}(u);c.id=u,c.style.display="none",o.appendChild(c);try{i.value=t}catch(e){}o.submit();var f=function(e){s("completed",u,e),c.onerror&&(c.onreadystatechange=c.onerror=c.onload=null,setTimeout((function(){s("cleaning up",u),c.parentNode.removeChild(c),c=null}),500),i.value="",n(e))};return c.onerror=function(){s("onerror",u),f()},c.onload=function(){s("onload",u),f()},c.onreadystatechange=function(e){s("onreadystatechange",u,c.readyState,e),"complete"===c.readyState&&f()},function(){s("aborted",u),f(new Error("Aborted"))}}}).call(this,{env:{}},void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../utils/random":50,"../../utils/url":52,debug:55}],34:[function(e,t,r){(function(n,r){"use strict";var o=e("events").EventEmitter,i=e("inherits"),a=e("../../utils/event"),l=e("../../utils/browser"),s=e("../../utils/url"),u=function(){};function c(e,t,n){u(e,t);var r=this;o.call(this),setTimeout((function(){r._start(e,t,n)}),0)}"production"!==n.env.NODE_ENV&&(u=e("debug")("sockjs-client:sender:xdr")),i(c,o),c.prototype._start=function(e,t,n){u("_start");var o=this,i=new r.XDomainRequest;t=s.addQuery(t,"t="+ +new Date),i.onerror=function(){u("onerror"),o._error()},i.ontimeout=function(){u("ontimeout"),o._error()},i.onprogress=function(){u("progress",i.responseText),o.emit("chunk",200,i.responseText)},i.onload=function(){u("load"),o.emit("finish",200,i.responseText),o._cleanup(!1)},this.xdr=i,this.unloadRef=a.unloadAdd((function(){o._cleanup(!0)}));try{this.xdr.open(e,t),this.timeout&&(this.xdr.timeout=this.timeout),this.xdr.send(n)}catch(e){this._error()}},c.prototype._error=function(){this.emit("finish",0,""),this._cleanup(!1)},c.prototype._cleanup=function(e){if(u("cleanup",e),this.xdr){if(this.removeAllListeners(),a.unloadDel(this.unloadRef),this.xdr.ontimeout=this.xdr.onerror=this.xdr.onprogress=this.xdr.onload=null,e)try{this.xdr.abort()}catch(e){}this.unloadRef=this.xdr=null}},c.prototype.close=function(){u("close"),this._cleanup(!0)},c.enabled=!(!r.XDomainRequest||!l.hasDomain()),t.exports=c}).call(this,{env:{}},void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../utils/browser":44,"../../utils/event":46,"../../utils/url":52,debug:55,events:3,inherits:57}],35:[function(e,t,n){"use strict";var r=e("inherits"),o=e("../driver/xhr");function i(e,t,n,r){o.call(this,e,t,n,r)}r(i,o),i.enabled=o.enabled&&o.supportsCORS,t.exports=i},{"../driver/xhr":17,inherits:57}],36:[function(e,t,n){"use strict";var r=e("events").EventEmitter;function o(){var e=this;r.call(this),this.to=setTimeout((function(){e.emit("finish",200,"{}")}),o.timeout)}e("inherits")(o,r),o.prototype.close=function(){clearTimeout(this.to)},o.timeout=2e3,t.exports=o},{events:3,inherits:57}],37:[function(e,t,n){"use strict";var r=e("inherits"),o=e("../driver/xhr");function i(e,t,n){o.call(this,e,t,n,{noCredentials:!0})}r(i,o),i.enabled=o.enabled,t.exports=i},{"../driver/xhr":17,inherits:57}],38:[function(e,t,n){(function(n){"use strict";var r=e("../utils/event"),o=e("../utils/url"),i=e("inherits"),a=e("events").EventEmitter,l=e("./driver/websocket"),s=function(){};function u(e,t,n){if(!u.enabled())throw new Error("Transport created when disabled");a.call(this),s("constructor",e);var i=this,c=o.addPath(e,"/websocket");c="https"===c.slice(0,5)?"wss"+c.slice(5):"ws"+c.slice(4),this.url=c,this.ws=new l(this.url,[],n),this.ws.onmessage=function(e){s("message event",e.data),i.emit("message",e.data)},this.unloadRef=r.unloadAdd((function(){s("unload"),i.ws.close()})),this.ws.onclose=function(e){s("close event",e.code,e.reason),i.emit("close",e.code,e.reason),i._cleanup()},this.ws.onerror=function(e){s("error event",e),i.emit("close",1006,"WebSocket connection broken"),i._cleanup()}}"production"!==n.env.NODE_ENV&&(s=e("debug")("sockjs-client:websocket")),i(u,a),u.prototype.send=function(e){var t="["+e+"]";s("send",t),this.ws.send(t)},u.prototype.close=function(){s("close");var e=this.ws;this._cleanup(),e&&e.close()},u.prototype._cleanup=function(){s("_cleanup");var e=this.ws;e&&(e.onmessage=e.onclose=e.onerror=null),r.unloadDel(this.unloadRef),this.unloadRef=this.ws=null,this.removeAllListeners()},u.enabled=function(){return s("enabled"),!!l},u.transportName="websocket",u.roundTrips=2,t.exports=u}).call(this,{env:{}})},{"../utils/event":46,"../utils/url":52,"./driver/websocket":19,debug:55,events:3,inherits:57}],39:[function(e,t,n){"use strict";var r=e("inherits"),o=e("./lib/ajax-based"),i=e("./xdr-streaming"),a=e("./receiver/xhr"),l=e("./sender/xdr");function s(e){if(!l.enabled)throw new Error("Transport created when disabled");o.call(this,e,"/xhr",a,l)}r(s,o),s.enabled=i.enabled,s.transportName="xdr-polling",s.roundTrips=2,t.exports=s},{"./lib/ajax-based":24,"./receiver/xhr":32,"./sender/xdr":34,"./xdr-streaming":40,inherits:57}],40:[function(e,t,n){"use strict";var r=e("inherits"),o=e("./lib/ajax-based"),i=e("./receiver/xhr"),a=e("./sender/xdr");function l(e){if(!a.enabled)throw new Error("Transport created when disabled");o.call(this,e,"/xhr_streaming",i,a)}r(l,o),l.enabled=function(e){return!e.cookie_needed&&!e.nullOrigin&&a.enabled&&e.sameScheme},l.transportName="xdr-streaming",l.roundTrips=2,t.exports=l},{"./lib/ajax-based":24,"./receiver/xhr":32,"./sender/xdr":34,inherits:57}],41:[function(e,t,n){"use strict";var r=e("inherits"),o=e("./lib/ajax-based"),i=e("./receiver/xhr"),a=e("./sender/xhr-cors"),l=e("./sender/xhr-local");function s(e){if(!l.enabled&&!a.enabled)throw new Error("Transport created when disabled");o.call(this,e,"/xhr",i,a)}r(s,o),s.enabled=function(e){return!e.nullOrigin&&(!(!l.enabled||!e.sameOrigin)||a.enabled)},s.transportName="xhr-polling",s.roundTrips=2,t.exports=s},{"./lib/ajax-based":24,"./receiver/xhr":32,"./sender/xhr-cors":35,"./sender/xhr-local":37,inherits:57}],42:[function(e,t,r){(function(n){"use strict";var r=e("inherits"),o=e("./lib/ajax-based"),i=e("./receiver/xhr"),a=e("./sender/xhr-cors"),l=e("./sender/xhr-local"),s=e("../utils/browser");function u(e){if(!l.enabled&&!a.enabled)throw new Error("Transport created when disabled");o.call(this,e,"/xhr_streaming",i,a)}r(u,o),u.enabled=function(e){return!e.nullOrigin&&!s.isOpera()&&a.enabled},u.transportName="xhr-streaming",u.roundTrips=2,u.needBody=!!n.document,t.exports=u}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../utils/browser":44,"./lib/ajax-based":24,"./receiver/xhr":32,"./sender/xhr-cors":35,"./sender/xhr-local":37,inherits:57}],43:[function(e,t,r){(function(e){"use strict";e.crypto&&e.crypto.getRandomValues?t.exports.randomBytes=function(t){var n=new Uint8Array(t);return e.crypto.getRandomValues(n),n}:t.exports.randomBytes=function(e){for(var t=new Array(e),n=0;n<e;n++)t[n]=Math.floor(256*Math.random());return t}}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],44:[function(e,t,r){(function(e){"use strict";t.exports={isOpera:function(){return e.navigator&&/opera/i.test(e.navigator.userAgent)},isKonqueror:function(){return e.navigator&&/konqueror/i.test(e.navigator.userAgent)},hasDomain:function(){if(!e.document)return!0;try{return!!e.document.domain}catch(e){return!1}}}}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],45:[function(e,t,n){"use strict";var r,o=e("json3"),i=/[\x00-\x1f\ud800-\udfff\ufffe\uffff\u0300-\u0333\u033d-\u0346\u034a-\u034c\u0350-\u0352\u0357-\u0358\u035c-\u0362\u0374\u037e\u0387\u0591-\u05af\u05c4\u0610-\u0617\u0653-\u0654\u0657-\u065b\u065d-\u065e\u06df-\u06e2\u06eb-\u06ec\u0730\u0732-\u0733\u0735-\u0736\u073a\u073d\u073f-\u0741\u0743\u0745\u0747\u07eb-\u07f1\u0951\u0958-\u095f\u09dc-\u09dd\u09df\u0a33\u0a36\u0a59-\u0a5b\u0a5e\u0b5c-\u0b5d\u0e38-\u0e39\u0f43\u0f4d\u0f52\u0f57\u0f5c\u0f69\u0f72-\u0f76\u0f78\u0f80-\u0f83\u0f93\u0f9d\u0fa2\u0fa7\u0fac\u0fb9\u1939-\u193a\u1a17\u1b6b\u1cda-\u1cdb\u1dc0-\u1dcf\u1dfc\u1dfe\u1f71\u1f73\u1f75\u1f77\u1f79\u1f7b\u1f7d\u1fbb\u1fbe\u1fc9\u1fcb\u1fd3\u1fdb\u1fe3\u1feb\u1fee-\u1fef\u1ff9\u1ffb\u1ffd\u2000-\u2001\u20d0-\u20d1\u20d4-\u20d7\u20e7-\u20e9\u2126\u212a-\u212b\u2329-\u232a\u2adc\u302b-\u302c\uaab2-\uaab3\uf900-\ufa0d\ufa10\ufa12\ufa15-\ufa1e\ufa20\ufa22\ufa25-\ufa26\ufa2a-\ufa2d\ufa30-\ufa6d\ufa70-\ufad9\ufb1d\ufb1f\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufb4e\ufff0-\uffff]/g;t.exports={quote:function(e){var t=o.stringify(e);return i.lastIndex=0,i.test(t)?(r||(r=function(e){var t,n={},r=[];for(t=0;t<65536;t++)r.push(String.fromCharCode(t));return e.lastIndex=0,r.join("").replace(e,(function(e){return n[e]="\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4),""})),e.lastIndex=0,n}(i)),t.replace(i,(function(e){return r[e]}))):t}}},{json3:58}],46:[function(e,t,r){(function(n){"use strict";var r=e("./random"),o={},i=!1,a=n.chrome&&n.chrome.app&&n.chrome.app.runtime;t.exports={attachEvent:function(e,t){void 0!==n.addEventListener?n.addEventListener(e,t,!1):n.document&&n.attachEvent&&(n.document.attachEvent("on"+e,t),n.attachEvent("on"+e,t))},detachEvent:function(e,t){void 0!==n.addEventListener?n.removeEventListener(e,t,!1):n.document&&n.detachEvent&&(n.document.detachEvent("on"+e,t),n.detachEvent("on"+e,t))},unloadAdd:function(e){if(a)return null;var t=r.string(8);return o[t]=e,i&&setTimeout(this.triggerUnloadCallbacks,0),t},unloadDel:function(e){e in o&&delete o[e]},triggerUnloadCallbacks:function(){for(var e in o)o[e](),delete o[e]}};a||t.exports.attachEvent("unload",(function(){i||(i=!0,t.exports.triggerUnloadCallbacks())}))}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./random":50}],47:[function(e,t,r){(function(n,r){"use strict";var o=e("./event"),i=e("json3"),a=e("./browser"),l=function(){};"production"!==n.env.NODE_ENV&&(l=e("debug")("sockjs-client:utils:iframe")),t.exports={WPrefix:"_jp",currentWindowId:null,polluteGlobalNamespace:function(){t.exports.WPrefix in r||(r[t.exports.WPrefix]={})},postMessage:function(e,n){r.parent!==r?r.parent.postMessage(i.stringify({windowId:t.exports.currentWindowId,type:e,data:n||""}),"*"):l("Cannot postMessage, no parent window.",e,n)},createIframe:function(e,t){var n,i,a=r.document.createElement("iframe"),s=function(){l("unattach"),clearTimeout(n);try{a.onload=null}catch(e){}a.onerror=null},u=function(){l("cleanup"),a&&(s(),setTimeout((function(){a&&a.parentNode.removeChild(a),a=null}),0),o.unloadDel(i))},c=function(e){l("onerror",e),a&&(u(),t(e))};return a.src=e,a.style.display="none",a.style.position="absolute",a.onerror=function(){c("onerror")},a.onload=function(){l("onload"),clearTimeout(n),n=setTimeout((function(){c("onload timeout")}),2e3)},r.document.body.appendChild(a),n=setTimeout((function(){c("timeout")}),15e3),i=o.unloadAdd(u),{post:function(e,t){l("post",e,t),setTimeout((function(){try{a&&a.contentWindow&&a.contentWindow.postMessage(e,t)}catch(e){}}),0)},cleanup:u,loaded:s}},createHtmlfile:function(e,n){var i,a,s,u=["Active"].concat("Object").join("X"),c=new r[u]("htmlfile"),f=function(){clearTimeout(i),s.onerror=null},d=function(){c&&(f(),o.unloadDel(a),s.parentNode.removeChild(s),s=c=null,CollectGarbage())},p=function(e){l("onerror",e),c&&(d(),n(e))};c.open(),c.write('<html><script>document.domain="'+r.document.domain+'";<\/script></html>'),c.close(),c.parentWindow[t.exports.WPrefix]=r[t.exports.WPrefix];var h=c.createElement("div");return c.body.appendChild(h),s=c.createElement("iframe"),h.appendChild(s),s.src=e,s.onerror=function(){p("onerror")},i=setTimeout((function(){p("timeout")}),15e3),a=o.unloadAdd(d),{post:function(e,t){try{setTimeout((function(){s&&s.contentWindow&&s.contentWindow.postMessage(e,t)}),0)}catch(e){}},cleanup:d,loaded:f}}},t.exports.iframeEnabled=!1,r.document&&(t.exports.iframeEnabled=("function"==typeof r.postMessage||"object"==typeof r.postMessage)&&!a.isKonqueror())}).call(this,{env:{}},void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./browser":44,"./event":46,debug:55,json3:58}],48:[function(e,t,r){(function(e){"use strict";var n={};["log","debug","warn"].forEach((function(t){var r;try{r=e.console&&e.console[t]&&e.console[t].apply}catch(e){}n[t]=r?function(){return e.console[t].apply(e.console,arguments)}:"log"===t?function(){}:n.log})),t.exports=n}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],49:[function(e,t,n){"use strict";t.exports={isObject:function(e){var t=typeof e;return"function"===t||"object"===t&&!!e},extend:function(e){if(!this.isObject(e))return e;for(var t,n,r=1,o=arguments.length;r<o;r++)for(n in t=arguments[r])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}}},{}],50:[function(e,t,n){"use strict";var r=e("crypto"),o="abcdefghijklmnopqrstuvwxyz012345";t.exports={string:function(e){for(var t=o.length,n=r.randomBytes(e),i=[],a=0;a<e;a++)i.push(o.substr(n[a]%t,1));return i.join("")},number:function(e){return Math.floor(Math.random()*e)},numberString:function(e){var t=(""+(e-1)).length;return(new Array(t+1).join("0")+this.number(e)).slice(-t)}}},{crypto:43}],51:[function(e,t,n){(function(n){"use strict";var r=function(){};"production"!==n.env.NODE_ENV&&(r=e("debug")("sockjs-client:utils:transport")),t.exports=function(e){return{filterToEnabled:function(t,n){var o={main:[],facade:[]};return t?"string"==typeof t&&(t=[t]):t=[],e.forEach((function(e){e&&("websocket"!==e.transportName||!1!==n.websocket?t.length&&-1===t.indexOf(e.transportName)?r("not in whitelist",e.transportName):e.enabled(n)?(r("enabled",e.transportName),o.main.push(e),e.facadeTransport&&o.facade.push(e.facadeTransport)):r("disabled",e.transportName):r("disabled from server","websocket"))})),o}}}}).call(this,{env:{}})},{debug:55}],52:[function(e,t,n){(function(n){"use strict";var r=e("url-parse"),o=function(){};"production"!==n.env.NODE_ENV&&(o=e("debug")("sockjs-client:utils:url")),t.exports={getOrigin:function(e){if(!e)return null;var t=new r(e);if("file:"===t.protocol)return null;var n=t.port;return n||(n="https:"===t.protocol?"443":"80"),t.protocol+"//"+t.hostname+":"+n},isOriginEqual:function(e,t){var n=this.getOrigin(e)===this.getOrigin(t);return o("same",e,t,n),n},isSchemeEqual:function(e,t){return e.split(":")[0]===t.split(":")[0]},addPath:function(e,t){var n=e.split("?");return n[0]+t+(n[1]?"?"+n[1]:"")},addQuery:function(e,t){return e+(-1===e.indexOf("?")?"?"+t:"&"+t)}}}).call(this,{env:{}})},{debug:55,"url-parse":61}],53:[function(e,t,n){t.exports="1.4.0"},{}],54:[function(e,t,n){var r=1e3,o=60*r,i=60*o,a=24*i;function l(e,t,n,r){var o=t>=1.5*n;return Math.round(e/n)+" "+r+(o?"s":"")}t.exports=function(e,t){t=t||{};var n,s,u=typeof e;if("string"===u&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var t=/^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var n=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*n;case"weeks":case"week":case"w":return 6048e5*n;case"days":case"day":case"d":return n*a;case"hours":case"hour":case"hrs":case"hr":case"h":return n*i;case"minutes":case"minute":case"mins":case"min":case"m":return n*o;case"seconds":case"second":case"secs":case"sec":case"s":return n*r;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return n;default:return}}}}(e);if("number"===u&&!1===isNaN(e))return t.long?(n=e,(s=Math.abs(n))>=a?l(n,s,a,"day"):s>=i?l(n,s,i,"hour"):s>=o?l(n,s,o,"minute"):s>=r?l(n,s,r,"second"):n+" ms"):function(e){var t=Math.abs(e);return t>=a?Math.round(e/a)+"d":t>=i?Math.round(e/i)+"h":t>=o?Math.round(e/o)+"m":t>=r?Math.round(e/r)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},{}],55:[function(e,t,n){(function(r){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}n.log=function(){var e;return"object"===("undefined"==typeof console?"undefined":o(console))&&console.log&&(e=console).log.apply(e,arguments)},n.formatArgs=function(e){if(e[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+e[0]+(this.useColors?"%c ":" ")+"+"+t.exports.humanize(this.diff),this.useColors){var n="color: "+this.color;e.splice(1,0,n,"color: inherit");var r=0,o=0;e[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(r++,"%c"===e&&(o=r))})),e.splice(o,0,n)}},n.save=function(e){try{e?n.storage.setItem("debug",e):n.storage.removeItem("debug")}catch(e){}},n.load=function(){var e;try{e=n.storage.getItem("debug")}catch(e){}return!e&&void 0!==r&&"env"in r&&(e=r.env.DEBUG),e},n.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},n.storage=function(){try{return localStorage}catch(e){}}(),n.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.exports=e("./common")(n),t.exports.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}}).call(this,{env:{}})},{"./common":56}],56:[function(e,t,n){"use strict";t.exports=function(t){function n(e){for(var t=0,n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return r.colors[Math.abs(t)%r.colors.length]}function r(e){var t;function a(){for(var e=arguments.length,n=new Array(e),o=0;o<e;o++)n[o]=arguments[o];if(a.enabled){var i=a,l=Number(new Date),s=l-(t||l);i.diff=s,i.prev=t,i.curr=l,t=l,n[0]=r.coerce(n[0]),"string"!=typeof n[0]&&n.unshift("%O");var u=0;n[0]=n[0].replace(/%([a-zA-Z%])/g,(function(e,t){if("%%"===e)return e;u++;var o=r.formatters[t];if("function"==typeof o){var a=n[u];e=o.call(i,a),n.splice(u,1),u--}return e})),r.formatArgs.call(i,n),(i.log||r.log).apply(i,n)}}return a.namespace=e,a.enabled=r.enabled(e),a.useColors=r.useColors(),a.color=n(e),a.destroy=o,a.extend=i,"function"==typeof r.init&&r.init(a),r.instances.push(a),a}function o(){var e=r.instances.indexOf(this);return-1!==e&&(r.instances.splice(e,1),!0)}function i(e,t){return r(this.namespace+(void 0===t?":":t)+e)}return r.debug=r,r.default=r,r.coerce=function(e){return e instanceof Error?e.stack||e.message:e},r.disable=function(){r.enable("")},r.enable=function(e){var t;r.save(e),r.names=[],r.skips=[];var n=("string"==typeof e?e:"").split(/[\s,]+/),o=n.length;for(t=0;t<o;t++)n[t]&&("-"===(e=n[t].replace(/\*/g,".*?"))[0]?r.skips.push(new RegExp("^"+e.substr(1)+"$")):r.names.push(new RegExp("^"+e+"$")));for(t=0;t<r.instances.length;t++){var i=r.instances[t];i.enabled=r.enabled(i.namespace)}},r.enabled=function(e){if("*"===e[e.length-1])return!0;var t,n;for(t=0,n=r.skips.length;t<n;t++)if(r.skips[t].test(e))return!1;for(t=0,n=r.names.length;t<n;t++)if(r.names[t].test(e))return!0;return!1},r.humanize=e("ms"),Object.keys(t).forEach((function(e){r[e]=t[e]})),r.instances=[],r.names=[],r.skips=[],r.formatters={},r.selectColor=n,r.enable(r.load()),r}},{ms:54}],57:[function(e,t,n){"function"==typeof Object.create?t.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},{}],58:[function(e,t,r){(function(e){(function(){var n={function:!0,object:!0},o=n[typeof r]&&r&&!r.nodeType&&r,i=n[typeof window]&&window||this,a=o&&n[typeof t]&&t&&!t.nodeType&&"object"==typeof e&&e;function l(e,t){e||(e=i.Object()),t||(t=i.Object());var r=e.Number||i.Number,o=e.String||i.String,a=e.Object||i.Object,s=e.Date||i.Date,u=e.SyntaxError||i.SyntaxError,c=e.TypeError||i.TypeError,f=e.Math||i.Math,d=e.JSON||i.JSON;"object"==typeof d&&d&&(t.stringify=d.stringify,t.parse=d.parse);var p,h,m,g=a.prototype,v=g.toString,y=new s(-0xc782b5b800cec);try{y=-109252==y.getUTCFullYear()&&0===y.getUTCMonth()&&1===y.getUTCDate()&&10==y.getUTCHours()&&37==y.getUTCMinutes()&&6==y.getUTCSeconds()&&708==y.getUTCMilliseconds()}catch(e){}function b(e){if(b[e]!==m)return b[e];var n;if("bug-string-char-index"==e)n="a"!="a"[0];else if("json"==e)n=b("json-stringify")&&b("json-parse");else{var i,a='{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';if("json-stringify"==e){var l=t.stringify,u="function"==typeof l&&y;if(u){(i=function(){return 1}).toJSON=i;try{u="0"===l(0)&&"0"===l(new r)&&'""'==l(new o)&&l(v)===m&&l(m)===m&&l()===m&&"1"===l(i)&&"[1]"==l([i])&&"[null]"==l([m])&&"null"==l(null)&&"[null,null,null]"==l([m,v,null])&&l({a:[i,!0,!1,null,"\0\b\n\f\r\t"]})==a&&"1"===l(null,i)&&"[\n 1,\n 2\n]"==l([1,2],null,1)&&'"-271821-04-20T00:00:00.000Z"'==l(new s(-864e13))&&'"+275760-09-13T00:00:00.000Z"'==l(new s(864e13))&&'"-000001-01-01T00:00:00.000Z"'==l(new s(-621987552e5))&&'"1969-12-31T23:59:59.999Z"'==l(new s(-1))}catch(e){u=!1}}n=u}if("json-parse"==e){var c=t.parse;if("function"==typeof c)try{if(0===c("0")&&!c(!1)){var f=5==(i=c(a)).a.length&&1===i.a[0];if(f){try{f=!c('"\t"')}catch(e){}if(f)try{f=1!==c("01")}catch(e){}if(f)try{f=1!==c("1.")}catch(e){}}}}catch(e){f=!1}n=f}}return b[e]=!!n}if(!b("json")){var w="[object Function]",k="[object Number]",E="[object String]",x="[object Array]",S=b("bug-string-char-index");if(!y)var C=f.floor,_=[0,31,59,90,120,151,181,212,243,273,304,334],N=function(e,t){return _[t]+365*(e-1970)+C((e-1969+(t=+(t>1)))/4)-C((e-1901+t)/100)+C((e-1601+t)/400)};if((p=g.hasOwnProperty)||(p=function(e){var t,n={};return(n.__proto__=null,n.__proto__={toString:1},n).toString!=v?p=function(e){var t=this.__proto__,n=e in(this.__proto__=null,this);return this.__proto__=t,n}:(t=n.constructor,p=function(e){var n=(this.constructor||t).prototype;return e in this&&!(e in n&&this[e]===n[e])}),n=null,p.call(this,e)}),h=function(e,t){var r,o,i,a=0;for(i in(r=function(){this.valueOf=0}).prototype.valueOf=0,o=new r)p.call(o,i)&&a++;return r=o=null,a?h=2==a?function(e,t){var n,r={},o=v.call(e)==w;for(n in e)o&&"prototype"==n||p.call(r,n)||!(r[n]=1)||!p.call(e,n)||t(n)}:function(e,t){var n,r,o=v.call(e)==w;for(n in e)o&&"prototype"==n||!p.call(e,n)||(r="constructor"===n)||t(n);(r||p.call(e,n="constructor"))&&t(n)}:(o=["valueOf","toString","toLocaleString","propertyIsEnumerable","isPrototypeOf","hasOwnProperty","constructor"],h=function(e,t){var r,i,a=v.call(e)==w,l=!a&&"function"!=typeof e.constructor&&n[typeof e.hasOwnProperty]&&e.hasOwnProperty||p;for(r in e)a&&"prototype"==r||!l.call(e,r)||t(r);for(i=o.length;r=o[--i];l.call(e,r)&&t(r));}),h(e,t)},!b("json-stringify")){var O={92:"\\\\",34:'\\"',8:"\\b",12:"\\f",10:"\\n",13:"\\r",9:"\\t"},T=function(e,t){return("000000"+(t||0)).slice(-e)},L=function(e){for(var t='"',n=0,r=e.length,o=!S||r>10,i=o&&(S?e.split(""):e);n<r;n++){var a=e.charCodeAt(n);switch(a){case 8:case 9:case 10:case 12:case 13:case 34:case 92:t+=O[a];break;default:if(a<32){t+="\\u00"+T(2,a.toString(16));break}t+=o?i[n]:e.charAt(n)}}return t+'"'},A=function(e,t,n,r,o,i,a){var l,s,u,f,d,g,y,b,w,S,_,O,P,j,q,R;try{l=t[e]}catch(e){}if("object"==typeof l&&l)if("[object Date]"!=(s=v.call(l))||p.call(l,"toJSON"))"function"==typeof l.toJSON&&(s!=k&&s!=E&&s!=x||p.call(l,"toJSON"))&&(l=l.toJSON(e));else if(l>-1/0&&l<1/0){if(N){for(d=C(l/864e5),u=C(d/365.2425)+1970-1;N(u+1,0)<=d;u++);for(f=C((d-N(u,0))/30.42);N(u,f+1)<=d;f++);d=1+d-N(u,f),y=C((g=(l%864e5+864e5)%864e5)/36e5)%24,b=C(g/6e4)%60,w=C(g/1e3)%60,S=g%1e3}else u=l.getUTCFullYear(),f=l.getUTCMonth(),d=l.getUTCDate(),y=l.getUTCHours(),b=l.getUTCMinutes(),w=l.getUTCSeconds(),S=l.getUTCMilliseconds();l=(u<=0||u>=1e4?(u<0?"-":"+")+T(6,u<0?-u:u):T(4,u))+"-"+T(2,f+1)+"-"+T(2,d)+"T"+T(2,y)+":"+T(2,b)+":"+T(2,w)+"."+T(3,S)+"Z"}else l=null;if(n&&(l=n.call(t,e,l)),null===l)return"null";if("[object Boolean]"==(s=v.call(l)))return""+l;if(s==k)return l>-1/0&&l<1/0?""+l:"null";if(s==E)return L(""+l);if("object"==typeof l){for(j=a.length;j--;)if(a[j]===l)throw c();if(a.push(l),_=[],q=i,i+=o,s==x){for(P=0,j=l.length;P<j;P++)O=A(P,l,n,r,o,i,a),_.push(O===m?"null":O);R=_.length?o?"[\n"+i+_.join(",\n"+i)+"\n"+q+"]":"["+_.join(",")+"]":"[]"}else h(r||l,(function(e){var t=A(e,l,n,r,o,i,a);t!==m&&_.push(L(e)+":"+(o?" ":"")+t)})),R=_.length?o?"{\n"+i+_.join(",\n"+i)+"\n"+q+"}":"{"+_.join(",")+"}":"{}";return a.pop(),R}};t.stringify=function(e,t,r){var o,i,a,l;if(n[typeof t]&&t)if((l=v.call(t))==w)i=t;else if(l==x){a={};for(var s,u=0,c=t.length;u<c;s=t[u++],((l=v.call(s))==E||l==k)&&(a[s]=1));}if(r)if((l=v.call(r))==k){if((r-=r%1)>0)for(o="",r>10&&(r=10);o.length<r;o+=" ");}else l==E&&(o=r.length<=10?r:r.slice(0,10));return A("",((s={})[""]=e,s),i,a,o,"",[])}}if(!b("json-parse")){var P,j,q=o.fromCharCode,R={92:"\\",34:'"',47:"/",98:"\b",116:"\t",110:"\n",102:"\f",114:"\r"},D=function(){throw P=j=null,u()},I=function(){for(var e,t,n,r,o,i=j,a=i.length;P<a;)switch(o=i.charCodeAt(P)){case 9:case 10:case 13:case 32:P++;break;case 123:case 125:case 91:case 93:case 58:case 44:return e=S?i.charAt(P):i[P],P++,e;case 34:for(e="@",P++;P<a;)if((o=i.charCodeAt(P))<32)D();else if(92==o)switch(o=i.charCodeAt(++P)){case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:e+=R[o],P++;break;case 117:for(t=++P,n=P+4;P<n;P++)(o=i.charCodeAt(P))>=48&&o<=57||o>=97&&o<=102||o>=65&&o<=70||D();e+=q("0x"+i.slice(t,P));break;default:D()}else{if(34==o)break;for(o=i.charCodeAt(P),t=P;o>=32&&92!=o&&34!=o;)o=i.charCodeAt(++P);e+=i.slice(t,P)}if(34==i.charCodeAt(P))return P++,e;D();default:if(t=P,45==o&&(r=!0,o=i.charCodeAt(++P)),o>=48&&o<=57){for(48==o&&(o=i.charCodeAt(P+1))>=48&&o<=57&&D(),r=!1;P<a&&(o=i.charCodeAt(P))>=48&&o<=57;P++);if(46==i.charCodeAt(P)){for(n=++P;n<a&&(o=i.charCodeAt(n))>=48&&o<=57;n++);n==P&&D(),P=n}if(101==(o=i.charCodeAt(P))||69==o){for(43!=(o=i.charCodeAt(++P))&&45!=o||P++,n=P;n<a&&(o=i.charCodeAt(n))>=48&&o<=57;n++);n==P&&D(),P=n}return+i.slice(t,P)}if(r&&D(),"true"==i.slice(P,P+4))return P+=4,!0;if("false"==i.slice(P,P+5))return P+=5,!1;if("null"==i.slice(P,P+4))return P+=4,null;D()}return"$"},F=function(e){var t,n;if("$"==e&&D(),"string"==typeof e){if("@"==(S?e.charAt(0):e[0]))return e.slice(1);if("["==e){for(t=[];"]"!=(e=I());n||(n=!0))n&&(","==e?"]"==(e=I())&&D():D()),","==e&&D(),t.push(F(e));return t}if("{"==e){for(t={};"}"!=(e=I());n||(n=!0))n&&(","==e?"}"==(e=I())&&D():D()),","!=e&&"string"==typeof e&&"@"==(S?e.charAt(0):e[0])&&":"==I()||D(),t[e.slice(1)]=F(I());return t}D()}return e},U=function(e,t,n){var r=M(e,t,n);r===m?delete e[t]:e[t]=r},M=function(e,t,n){var r,o=e[t];if("object"==typeof o&&o)if(v.call(o)==x)for(r=o.length;r--;)U(o,r,n);else h(o,(function(e){U(o,e,n)}));return n.call(e,t,o)};t.parse=function(e,t){var n,r;return P=0,j=""+e,n=F(I()),"$"!=I()&&D(),P=j=null,t&&v.call(t)==w?M(((r={})[""]=n,r),"",t):n}}}return t.runInContext=l,t}if(!a||a.global!==a&&a.window!==a&&a.self!==a||(i=a),o)l(i,o);else{var s=i.JSON,u=i.JSON3,c=!1,f=l(i,i.JSON3={noConflict:function(){return c||(c=!0,i.JSON=s,i.JSON3=u,s=u=null),f}});i.JSON={parse:f.parse,stringify:f.stringify}}}).call(this)}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],59:[function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty;function o(e){return decodeURIComponent(e.replace(/\+/g," "))}n.stringify=function(e,t){t=t||"";var n=[];for(var o in"string"!=typeof t&&(t="?"),e)r.call(e,o)&&n.push(encodeURIComponent(o)+"="+encodeURIComponent(e[o]));return n.length?t+n.join("&"):""},n.parse=function(e){for(var t,n=/([^=?&]+)=?([^&]*)/g,r={};t=n.exec(e);){var i=o(t[1]),a=o(t[2]);i in r||(r[i]=a)}return r}},{}],60:[function(e,t,n){"use strict";t.exports=function(e,t){if(t=t.split(":")[0],!(e=+e))return!1;switch(t){case"http":case"ws":return 80!==e;case"https":case"wss":return 443!==e;case"ftp":return 21!==e;case"gopher":return 70!==e;case"file":return!1}return 0!==e}},{}],61:[function(e,t,r){(function(n){"use strict";var r=e("requires-port"),o=e("querystringify"),i=/^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i,a=/^[A-Za-z][A-Za-z0-9+-.]*:\/\//,l=[["#","hash"],["?","query"],function(e){return e.replace("\\","/")},["/","pathname"],["@","auth",1],[NaN,"host",void 0,1,1],[/:(\d+)$/,"port",void 0,1],[NaN,"hostname",void 0,1,1]],s={hash:1,query:1};function u(e){var t,r=n&&n.location||{},o={},i=typeof(e=e||r);if("blob:"===e.protocol)o=new f(unescape(e.pathname),{});else if("string"===i)for(t in o=new f(e,{}),s)delete o[t];else if("object"===i){for(t in e)t in s||(o[t]=e[t]);void 0===o.slashes&&(o.slashes=a.test(e.href))}return o}function c(e){var t=i.exec(e);return{protocol:t[1]?t[1].toLowerCase():"",slashes:!!t[2],rest:t[3]}}function f(e,t,n){if(!(this instanceof f))return new f(e,t,n);var i,a,s,d,p,h,m=l.slice(),g=typeof t,v=this,y=0;for("object"!==g&&"string"!==g&&(n=t,t=null),n&&"function"!=typeof n&&(n=o.parse),t=u(t),i=!(a=c(e||"")).protocol&&!a.slashes,v.slashes=a.slashes||i&&t.slashes,v.protocol=a.protocol||t.protocol||"",e=a.rest,a.slashes||(m[3]=[/(.*)/,"pathname"]);y<m.length;y++)"function"!=typeof(d=m[y])?(s=d[0],h=d[1],s!=s?v[h]=e:"string"==typeof s?~(p=e.indexOf(s))&&("number"==typeof d[2]?(v[h]=e.slice(0,p),e=e.slice(p+d[2])):(v[h]=e.slice(p),e=e.slice(0,p))):(p=s.exec(e))&&(v[h]=p[1],e=e.slice(0,p.index)),v[h]=v[h]||i&&d[3]&&t[h]||"",d[4]&&(v[h]=v[h].toLowerCase())):e=d(e);n&&(v.query=n(v.query)),i&&t.slashes&&"/"!==v.pathname.charAt(0)&&(""!==v.pathname||""!==t.pathname)&&(v.pathname=function(e,t){for(var n=(t||"/").split("/").slice(0,-1).concat(e.split("/")),r=n.length,o=n[r-1],i=!1,a=0;r--;)"."===n[r]?n.splice(r,1):".."===n[r]?(n.splice(r,1),a++):a&&(0===r&&(i=!0),n.splice(r,1),a--);return i&&n.unshift(""),"."!==o&&".."!==o||n.push(""),n.join("/")}(v.pathname,t.pathname)),r(v.port,v.protocol)||(v.host=v.hostname,v.port=""),v.username=v.password="",v.auth&&(d=v.auth.split(":"),v.username=d[0]||"",v.password=d[1]||""),v.origin=v.protocol&&v.host&&"file:"!==v.protocol?v.protocol+"//"+v.host:"null",v.href=v.toString()}f.prototype={set:function(e,t,n){var i=this;switch(e){case"query":"string"==typeof t&&t.length&&(t=(n||o.parse)(t)),i[e]=t;break;case"port":i[e]=t,r(t,i.protocol)?t&&(i.host=i.hostname+":"+t):(i.host=i.hostname,i[e]="");break;case"hostname":i[e]=t,i.port&&(t+=":"+i.port),i.host=t;break;case"host":i[e]=t,/:\d+$/.test(t)?(t=t.split(":"),i.port=t.pop(),i.hostname=t.join(":")):(i.hostname=t,i.port="");break;case"protocol":i.protocol=t.toLowerCase(),i.slashes=!n;break;case"pathname":case"hash":if(t){var a="pathname"===e?"/":"#";i[e]=t.charAt(0)!==a?a+t:t}else i[e]=t;break;default:i[e]=t}for(var s=0;s<l.length;s++){var u=l[s];u[4]&&(i[u[1]]=i[u[1]].toLowerCase())}return i.origin=i.protocol&&i.host&&"file:"!==i.protocol?i.protocol+"//"+i.host:"null",i.href=i.toString(),i},toString:function(e){e&&"function"==typeof e||(e=o.stringify);var t,n=this,r=n.protocol;r&&":"!==r.charAt(r.length-1)&&(r+=":");var i=r+(n.slashes?"//":"");return n.username&&(i+=n.username,n.password&&(i+=":"+n.password),i+="@"),i+=n.host+n.pathname,(t="object"==typeof n.query?e(n.query):n.query)&&(i+="?"!==t.charAt(0)?"?"+t:t),n.hash&&(i+=n.hash),i}},f.extractProtocol=c,f.location=u,f.qs=o,t.exports=f}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{querystringify:59,"requires-port":60}]},{},[1])(1)},575:(e,t,n)=>{"use strict";var r=n(971),o=n(502);function i(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}t.parse=b,t.resolve=function(e,t){return b(e,!1,!0).resolve(t)},t.resolveObject=function(e,t){return e?b(e,!1,!0).resolveObject(t):t},t.format=function(e){return o.isString(e)&&(e=b(e)),e instanceof i?e.format():i.prototype.format.call(e)},t.Url=i;var a=/^([a-z0-9.+-]+:)/i,l=/:[0-9]*$/,s=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,u=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),c=["'"].concat(u),f=["%","/","?",";","#"].concat(c),d=["/","?","#"],p=/^[+a-z0-9A-Z_-]{0,63}$/,h=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,m={javascript:!0,"javascript:":!0},g={javascript:!0,"javascript:":!0},v={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},y=n(673);function b(e,t,n){if(e&&o.isObject(e)&&e instanceof i)return e;var r=new i;return r.parse(e,t,n),r}i.prototype.parse=function(e,t,n){if(!o.isString(e))throw new TypeError("Parameter 'url' must be a string, not "+typeof e);var i=e.indexOf("?"),l=-1!==i&&i<e.indexOf("#")?"?":"#",u=e.split(l);u[0]=u[0].replace(/\\/g,"/");var b=e=u.join(l);if(b=b.trim(),!n&&1===e.split("#").length){var w=s.exec(b);if(w)return this.path=b,this.href=b,this.pathname=w[1],w[2]?(this.search=w[2],this.query=t?y.parse(this.search.substr(1)):this.search.substr(1)):t&&(this.search="",this.query={}),this}var k=a.exec(b);if(k){var E=(k=k[0]).toLowerCase();this.protocol=E,b=b.substr(k.length)}if(n||k||b.match(/^\/\/[^@\/]+@[^@\/]+/)){var x="//"===b.substr(0,2);!x||k&&g[k]||(b=b.substr(2),this.slashes=!0)}if(!g[k]&&(x||k&&!v[k])){for(var S,C,_=-1,N=0;N<d.length;N++)-1!==(O=b.indexOf(d[N]))&&(-1===_||O<_)&&(_=O);for(-1!==(C=-1===_?b.lastIndexOf("@"):b.lastIndexOf("@",_))&&(S=b.slice(0,C),b=b.slice(C+1),this.auth=decodeURIComponent(S)),_=-1,N=0;N<f.length;N++){var O;-1!==(O=b.indexOf(f[N]))&&(-1===_||O<_)&&(_=O)}-1===_&&(_=b.length),this.host=b.slice(0,_),b=b.slice(_),this.parseHost(),this.hostname=this.hostname||"";var T="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!T)for(var L=this.hostname.split(/\./),A=(N=0,L.length);N<A;N++){var P=L[N];if(P&&!P.match(p)){for(var j="",q=0,R=P.length;q<R;q++)P.charCodeAt(q)>127?j+="x":j+=P[q];if(!j.match(p)){var D=L.slice(0,N),I=L.slice(N+1),F=P.match(h);F&&(D.push(F[1]),I.unshift(F[2])),I.length&&(b="/"+I.join(".")+b),this.hostname=D.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),T||(this.hostname=r.toASCII(this.hostname));var U=this.port?":"+this.port:"",M=this.hostname||"";this.host=M+U,this.href+=this.host,T&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==b[0]&&(b="/"+b))}if(!m[E])for(N=0,A=c.length;N<A;N++){var z=c[N];if(-1!==b.indexOf(z)){var V=encodeURIComponent(z);V===z&&(V=escape(z)),b=b.split(z).join(V)}}var B=b.indexOf("#");-1!==B&&(this.hash=b.substr(B),b=b.slice(0,B));var H=b.indexOf("?");if(-1!==H?(this.search=b.substr(H),this.query=b.substr(H+1),t&&(this.query=y.parse(this.query)),b=b.slice(0,H)):t&&(this.search="",this.query={}),b&&(this.pathname=b),v[E]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){U=this.pathname||"";var W=this.search||"";this.path=U+W}return this.href=this.format(),this},i.prototype.format=function(){var e=this.auth||"";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,":"),e+="@");var t=this.protocol||"",n=this.pathname||"",r=this.hash||"",i=!1,a="";this.host?i=e+this.host:this.hostname&&(i=e+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(i+=":"+this.port)),this.query&&o.isObject(this.query)&&Object.keys(this.query).length&&(a=y.stringify(this.query));var l=this.search||a&&"?"+a||"";return t&&":"!==t.substr(-1)&&(t+=":"),this.slashes||(!t||v[t])&&!1!==i?(i="//"+(i||""),n&&"/"!==n.charAt(0)&&(n="/"+n)):i||(i=""),r&&"#"!==r.charAt(0)&&(r="#"+r),l&&"?"!==l.charAt(0)&&(l="?"+l),t+i+(n=n.replace(/[?#]/g,(function(e){return encodeURIComponent(e)})))+(l=l.replace("#","%23"))+r},i.prototype.resolve=function(e){return this.resolveObject(b(e,!1,!0)).format()},i.prototype.resolveObject=function(e){if(o.isString(e)){var t=new i;t.parse(e,!1,!0),e=t}for(var n=new i,r=Object.keys(this),a=0;a<r.length;a++){var l=r[a];n[l]=this[l]}if(n.hash=e.hash,""===e.href)return n.href=n.format(),n;if(e.slashes&&!e.protocol){for(var s=Object.keys(e),u=0;u<s.length;u++){var c=s[u];"protocol"!==c&&(n[c]=e[c])}return v[n.protocol]&&n.hostname&&!n.pathname&&(n.path=n.pathname="/"),n.href=n.format(),n}if(e.protocol&&e.protocol!==n.protocol){if(!v[e.protocol]){for(var f=Object.keys(e),d=0;d<f.length;d++){var p=f[d];n[p]=e[p]}return n.href=n.format(),n}if(n.protocol=e.protocol,e.host||g[e.protocol])n.pathname=e.pathname;else{for(var h=(e.pathname||"").split("/");h.length&&!(e.host=h.shift()););e.host||(e.host=""),e.hostname||(e.hostname=""),""!==h[0]&&h.unshift(""),h.length<2&&h.unshift(""),n.pathname=h.join("/")}if(n.search=e.search,n.query=e.query,n.host=e.host||"",n.auth=e.auth,n.hostname=e.hostname||e.host,n.port=e.port,n.pathname||n.search){var m=n.pathname||"",y=n.search||"";n.path=m+y}return n.slashes=n.slashes||e.slashes,n.href=n.format(),n}var b=n.pathname&&"/"===n.pathname.charAt(0),w=e.host||e.pathname&&"/"===e.pathname.charAt(0),k=w||b||n.host&&e.pathname,E=k,x=n.pathname&&n.pathname.split("/")||[],S=(h=e.pathname&&e.pathname.split("/")||[],n.protocol&&!v[n.protocol]);if(S&&(n.hostname="",n.port=null,n.host&&(""===x[0]?x[0]=n.host:x.unshift(n.host)),n.host="",e.protocol&&(e.hostname=null,e.port=null,e.host&&(""===h[0]?h[0]=e.host:h.unshift(e.host)),e.host=null),k=k&&(""===h[0]||""===x[0])),w)n.host=e.host||""===e.host?e.host:n.host,n.hostname=e.hostname||""===e.hostname?e.hostname:n.hostname,n.search=e.search,n.query=e.query,x=h;else if(h.length)x||(x=[]),x.pop(),x=x.concat(h),n.search=e.search,n.query=e.query;else if(!o.isNullOrUndefined(e.search))return S&&(n.hostname=n.host=x.shift(),(T=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=T.shift(),n.host=n.hostname=T.shift())),n.search=e.search,n.query=e.query,o.isNull(n.pathname)&&o.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.href=n.format(),n;if(!x.length)return n.pathname=null,n.search?n.path="/"+n.search:n.path=null,n.href=n.format(),n;for(var C=x.slice(-1)[0],_=(n.host||e.host||x.length>1)&&("."===C||".."===C)||""===C,N=0,O=x.length;O>=0;O--)"."===(C=x[O])?x.splice(O,1):".."===C?(x.splice(O,1),N++):N&&(x.splice(O,1),N--);if(!k&&!E)for(;N--;N)x.unshift("..");!k||""===x[0]||x[0]&&"/"===x[0].charAt(0)||x.unshift(""),_&&"/"!==x.join("/").substr(-1)&&x.push("");var T,L=""===x[0]||x[0]&&"/"===x[0].charAt(0);return S&&(n.hostname=n.host=L?"":x.length?x.shift():"",(T=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=T.shift(),n.host=n.hostname=T.shift())),(k=k||n.host&&x.length)&&!L&&x.unshift(""),x.length?n.pathname=x.join("/"):(n.pathname=null,n.path=null),o.isNull(n.pathname)&&o.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.auth=e.auth||n.auth,n.slashes=n.slashes||e.slashes,n.href=n.format(),n},i.prototype.parseHost=function(){var e=this.host,t=l.exec(e);t&&(":"!==(t=t[0])&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)}},502:e=>{"use strict";e.exports={isString:function(e){return"string"==typeof e},isObject:function(e){return"object"==typeof e&&null!==e},isNull:function(e){return null===e},isNullOrUndefined:function(e){return null==e}}},822:e=>{"use strict";function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}e.exports=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var n,r;return n=e,r=[{key:"getClientPath",value:function(e){throw new Error("Client needs implementation")}}],null&&t(n.prototype,null),r&&t(n,r),e}()},59:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t){return(i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var s=n(870),u=n(822);e.exports=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&i(e,t)}(d,e);var t,n,r,u,c,f=(u=d,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=l(u);if(c){var n=l(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return a(this,e)});function d(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,d),(t=f.call(this)).sock=new s(e),t.sock.onerror=function(e){},t}return t=d,r=[{key:"getClientPath",value:function(e){return 59}}],(n=[{key:"onOpen",value:function(e){this.sock.onopen=e}},{key:"onClose",value:function(e){this.sock.onclose=e}},{key:"onMessage",value:function(e){this.sock.onmessage=function(t){e(t.data)}}}])&&o(t.prototype,n),r&&o(t,r),d}(u)},770:(e,t,n)=>{"use strict";var r=n(455),o=new(0,n(111).AllHtmlEntities),i={reset:["transparent","transparent"],black:"181818",red:"E36049",green:"B3CB74",yellow:"FFD080",blue:"7CAFC2",magenta:"7FACCA",cyan:"C3C2EF",lightgrey:"EBE7E3",darkgrey:"6D7891"},a=null,l=null,s=null;r.setColors(i),e.exports={clear:function(){l&&(document.body.removeChild(a),l=null,a=null,s=null)},showMessage:function(e){var t,n,u;t=function(t){t.innerHTML='<span style="color: #'.concat(i.red,'">Failed to compile.</span><br><br>').concat(r(o.encode(e[0])))},l?t(l):(s=t,a||(n=function(){var e,t;(t=(e=a).contentDocument.createElement("div")).id="webpack-dev-server-client-overlay-div",t.style.position="fixed",t.style.boxSizing="border-box",t.style.left=0,t.style.top=0,t.style.right=0,t.style.bottom=0,t.style.width="100vw",t.style.height="100vh",t.style.backgroundColor="rgba(0, 0, 0, 0.85)",t.style.color="#E8E8E8",t.style.fontFamily="Menlo, Consolas, monospace",t.style.fontSize="large",t.style.padding="2rem",t.style.lineHeight="1.2",t.style.whiteSpace="pre-wrap",t.style.overflow="auto",e.contentDocument.body.appendChild(t),s(l=t)},(u=document.createElement("iframe")).id="webpack-dev-server-client-overlay",u.src="about:blank",u.style.position="fixed",u.style.left=0,u.style.top=0,u.style.right=0,u.style.bottom=0,u.style.width="100vw",u.style.height="100vh",u.style.border="none",u.style.zIndex=9999999999,u.onload=n,a=u,document.body.appendChild(a)))}}},466:(e,t,n)=>{"use strict";var r=n(59),o=void 0!==r?r:n(59),i=0,a=null,l=function(e,t){(a=new o(e)).onOpen((function(){i=0})),a.onClose((function(){if(0===i&&t.close(),a=null,i<=10){var n=1e3*Math.pow(2,i)+100*Math.random();i+=1,setTimeout((function(){l(e,t)}),n)}})),a.onMessage((function(e){var n=JSON.parse(e);t[n.type]&&t[n.type](n.data)}))};e.exports=l},758:(e,t,n)=>{"use strict";var r=n(575),o=n(50);e.exports=function(e,t){var n;if("string"==typeof e&&""!==e)n=r.parse(e.substr(1).replace("&","?"),!0);else{var i=o();n=r.parse(i||"/",!0,!0)}return function(e,t){var n=e.auth,o=e.query,i=e.hostname,a=e.protocol,l=e.port;l&&"0"!==l||(l=t.port),"0.0.0.0"!==i&&"::"!==i||!t.hostname||0!==t.protocol.indexOf("http")||(i=t.hostname),!i||"127.0.0.1"===i||"https:"!==t.protocol&&"0.0.0.0"!==e.hostname||(a=t.protocol);var s=o.sockHost||i,u=o.sockPath||"/sockjs-node",c=o.sockPort||l;return"location"===c&&(c=t.port),r.format({protocol:a,auth:n,hostname:s,port:c,pathname:u})}(n,t="string"==typeof t&&""!==t?r.parse(t):self.location)}},50:e=>{"use strict";e.exports=function(){if(document.currentScript)return document.currentScript.getAttribute("src");var e=document.scripts||[],t=e[e.length-1];if(t)return t.getAttribute("src");throw new Error("[WDS] Failed to get current script source.")}},935:(e,t,n)=>{"use strict";var r=n(43).getLogger("webpack-dev-server"),o="info";r.setDefaultLevel(o),e.exports={log:r,setLogLevel:function(e){switch(e){case o:case"warn":case"error":case"debug":case"trace":r.setLevel(e);break;case"warning":r.setLevel("warn");break;case"none":case"silent":r.disableAll();break;default:r.error("[WDS] Unknown clientLogLevel '".concat(e,"'"))}}}},429:(e,t,n)=>{"use strict";var r=n(935).log;e.exports=function(e,t){var o=e.hotReload,i=e.hot,a=e.liveReload,l=t.isUnloading,s=t.currentHash;if(!l&&o)if(i)r.info("[WDS] App hot update..."),n(208).emit("webpackHotUpdate",s),"undefined"!=typeof self&&self.window&&self.postMessage("webpackHotUpdate".concat(s),"*");else if(a)var u=self,c=self.setInterval((function(){("about:"!==u.location.protocol||(u=u.parent).parent===u)&&function(e,t){clearInterval(t),r.info("[WDS] App updated. Reloading..."),e.location.reload()}(u,c)}))}},747:e=>{"use strict";e.exports=function(e,t){"undefined"==typeof self||"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope||self.postMessage({type:"webpack".concat(e),data:t},"*")}},493:e=>{"use strict";e.exports=function(){return/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g}},193:(e,t,n)=>{"use strict";var r=n(493)();e.exports=function(e){return"string"==typeof e?e.replace(r,""):e}},208:(e,t,n)=>{var r=n(187);e.exports=new r},919:e=>{var t="info";function n(){}function r(e){return"info"===t&&"info"===e||["info","warning"].indexOf(t)>=0&&"warning"===e||["info","warning","error"].indexOf(t)>=0&&"error"===e}function o(e){return function(t,n){r(t)&&e(n)}}e.exports=function(e,t){r(e)&&("info"===e?console.log(t):"warning"===e?console.warn(t):"error"===e&&console.error(t))};var i=console.group||n,a=console.groupCollapsed||n,l=console.groupEnd||n;e.exports.group=o(i),e.exports.groupCollapsed=o(a),e.exports.groupEnd=o(l),e.exports.setLogLevel=function(e){t=e},e.exports.formatError=function(e){var t=e.message,n=e.stack;return n?n.indexOf(t)<0?t+"\n"+n:n:t}},461:(e,t,n)=>{var r={"./log":919};function o(e){var t=i(e);return n(t)}function i(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=i,e.exports=o,o.id=461}},t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e=n(629),t=n(232);function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}const u=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(d,t);var n,r,u,c,f=(u=d,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(u);if(c){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return l(this,e)});function d(){return o(this,d),f.apply(this,arguments)}return n=d,(r=[{key:"render",value:function(){return e.createElement("h1",null,"Hello World...")}}])&&i(n.prototype,r),d}(e.Component);document.addEventListener("DOMContentLoaded",(function(){t.render(e.createElement(u,null),document.getElementById("root"))}))})(),(()=>{"use strict";var e=n(193),t=n(466),r=n(770),o=n(935),i=o.log,a=o.setLogLevel,l=n(747),s=n(429),u=n(758),c={isUnloading:!1,currentHash:""},f={hot:!1,hotReload:!0,liveReload:!1,initial:!0,useWarningOverlay:!1,useErrorOverlay:!1,useProgress:!1},d=u("?http://localhost:5000");if(self.addEventListener("beforeunload",(function(){c.isUnloading=!0})),"undefined"!=typeof window){var p=window.location.search.toLowerCase();f.hotReload=-1===p.indexOf("hotreload=false")}t(d,{hot:function(){f.hot=!0,i.info("[WDS] Hot Module Replacement enabled.")},liveReload:function(){f.liveReload=!0,i.info("[WDS] Live Reloading enabled.")},invalid:function(){i.info("[WDS] App updated. Recompiling..."),(f.useWarningOverlay||f.useErrorOverlay)&&r.clear(),l("Invalid")},hash:function(e){c.currentHash=e},"still-ok":function(){i.info("[WDS] Nothing changed."),(f.useWarningOverlay||f.useErrorOverlay)&&r.clear(),l("StillOk")},"log-level":function(e){var t=n(461);-1!==t.keys().indexOf("./log")&&t("./log").setLogLevel(e),a(e)},overlay:function(e){"undefined"!=typeof document&&("boolean"==typeof e?(f.useWarningOverlay=!1,f.useErrorOverlay=e):e&&(f.useWarningOverlay=e.warnings,f.useErrorOverlay=e.errors))},progress:function(e){"undefined"!=typeof document&&(f.useProgress=e)},"progress-update":function(e){f.useProgress&&i.info("[WDS] ".concat(e.percent,"% - ").concat(e.msg,".")),l("Progress",e)},ok:function(){if(l("Ok"),(f.useWarningOverlay||f.useErrorOverlay)&&r.clear(),f.initial)return f.initial=!1;s(f,c)},"content-changed":function(){i.info("[WDS] Content base changed. Reloading..."),self.location.reload()},warnings:function(t){i.warn("[WDS] Warnings while compiling.");var n=t.map((function(t){return e(t)}));l("Warnings",n);for(var o=0;o<n.length;o++)i.warn(n[o]);if(f.useWarningOverlay&&r.showMessage(t),f.initial)return f.initial=!1;s(f,c)},errors:function(t){i.error("[WDS] Errors while compiling. Reload prevented.");var n=t.map((function(t){return e(t)}));l("Errors",n);for(var o=0;o<n.length;o++)i.error(n[o]);f.useErrorOverlay&&r.showMessage(t),f.initial=!1},error:function(e){i.error(e)},close:function(){i.error("[WDS] Disconnected!"),l("Close")}})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mb290YmFsbGFwcC8uL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly9mb290YmFsbGFwcC8uL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9mcm9udGVuZC9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9mcm9udGVuZC9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9mcm9udGVuZC9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL2Fuc2ktaHRtbC9pbmRleC5qcyIsIndlYnBhY2s6Ly9mb290YmFsbGFwcC8uL25vZGVfbW9kdWxlcy9ldmVudHMvZXZlbnRzLmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL2h0bWwtZW50aXRpZXMvbGliL2h0bWw0LWVudGl0aWVzLmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL2h0bWwtZW50aXRpZXMvbGliL2h0bWw1LWVudGl0aWVzLmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL2h0bWwtZW50aXRpZXMvbGliL2luZGV4LmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL2h0bWwtZW50aXRpZXMvbGliL3htbC1lbnRpdGllcy5qcyIsIndlYnBhY2s6Ly9mb290YmFsbGFwcC8uL25vZGVfbW9kdWxlcy9sb2dsZXZlbC9saWIvbG9nbGV2ZWwuanMiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9ub2RlX21vZHVsZXMvcHVueWNvZGUvcHVueWNvZGUuanMiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmcvZGVjb2RlLmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nL2VuY29kZS5qcyIsIndlYnBhY2s6Ly9mb290YmFsbGFwcC8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy9pbmRleC5qcyIsIndlYnBhY2s6Ly9mb290YmFsbGFwcC8uL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2Rpc3Qvc29ja2pzLmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL3VybC91cmwuanMiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9ub2RlX21vZHVsZXMvdXJsL3V0aWwuanMiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC9jbGllbnRzL0Jhc2VDbGllbnQuanMiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC9jbGllbnRzL1NvY2tKU0NsaWVudC5qcyIsIndlYnBhY2s6Ly9mb290YmFsbGFwcC8uL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRldi1zZXJ2ZXIvY2xpZW50L292ZXJsYXkuanMiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC9zb2NrZXQuanMiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC91dGlscy9jcmVhdGVTb2NrZXRVcmwuanMiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC91dGlscy9nZXRDdXJyZW50U2NyaXB0U291cmNlLmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL3dlYnBhY2stZGV2LXNlcnZlci9jbGllbnQvdXRpbHMvbG9nLmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL3dlYnBhY2stZGV2LXNlcnZlci9jbGllbnQvdXRpbHMvcmVsb2FkQXBwLmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL3dlYnBhY2stZGV2LXNlcnZlci9jbGllbnQvdXRpbHMvc2VuZE1lc3NhZ2UuanMiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL25vZGVfbW9kdWxlcy9hbnNpLXJlZ2V4L2luZGV4LmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL3dlYnBhY2stZGV2LXNlcnZlci9ub2RlX21vZHVsZXMvc3RyaXAtYW5zaS9pbmRleC5qcyIsIndlYnBhY2s6Ly9mb290YmFsbGFwcC8uL25vZGVfbW9kdWxlcy93ZWJwYWNrL2hvdC9lbWl0dGVyLmpzIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL3dlYnBhY2svaG90L2xvZy5qcyIsIndlYnBhY2s6Ly9mb290YmFsbGFwcC8vVXNlcnMvYmVuL0Rlc2t0b3AvZXhwcmVzcy1yZWFjdC1tb25nby13ZWJwYWNrLWJhYmVsLWJvaWxlcnBsYXRlL25vZGVfbW9kdWxlcy93ZWJwYWNrL2hvdHxzeW5jfG5vbnJlY3Vyc2l2ZXwvXlxcLlxcL2xvZyQvIiwid2VicGFjazovL2Zvb3RiYWxsYXBwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2Zvb3RiYWxsYXBwL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9mb290YmFsbGFwcC93ZWJwYWNrL3J1bnRpbWUvbm9kZSBtb2R1bGUgZGVjb3JhdG9yIiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvcm9vdC5qc3giLCJ3ZWJwYWNrOi8vZm9vdGJhbGxhcHAvLi9mcm9udGVuZC9zcmMvaW5kZXguanN4Iiwid2VicGFjazovL2Zvb3RiYWxsYXBwLy4vbm9kZV9tb2R1bGVzL3dlYnBhY2stZGV2LXNlcnZlci9jbGllbnQvaW5kZXguanMiXSwibmFtZXMiOlsiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiT2JqZWN0IiwiaGFzT3duUHJvcGVydHkiLCJwcm90b3R5cGUiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsIlR5cGVFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImkiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJuIiwiam9pbiIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwia2V5cyIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsInNvdXJjZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJzIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwia2V5IiwiY2FsbCIsImFhIiwibSIsInIiLCJ5IiwiYSIsImIiLCJjIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiRXJyb3IiLCJiYSIsIlNldCIsImNhIiwiZGEiLCJlYSIsImFkZCIsImZhIiwid2luZG93IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaGEiLCJpYSIsImphIiwia2EiLCJCIiwiZCIsImUiLCJmIiwiZyIsInRoaXMiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwidHlwZSIsInNhbml0aXplVVJMIiwicmVtb3ZlRW1wdHlTdHJpbmciLCJEIiwidG9Mb3dlckNhc2UiLCJvYSIsInBhIiwidG9VcHBlckNhc2UiLCJxYSIsInNsaWNlIiwibWEiLCJpc05hTiIsIm5hIiwidGVzdCIsImxhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJyZXBsYWNlIiwieGxpbmtIcmVmIiwicmEiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsInNhIiwidGEiLCJ1YSIsIndhIiwieGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJTeW1ib2wiLCJmb3IiLCJFIiwiTWEiLCJLYSIsIml0ZXJhdG9yIiwiTGEiLCJOYSIsInN0YWNrIiwidHJpbSIsIm1hdGNoIiwiT2EiLCJQYSIsInByZXBhcmVTdGFja1RyYWNlIiwiZGVmaW5lUHJvcGVydHkiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiayIsImgiLCJkaXNwbGF5TmFtZSIsIm5hbWUiLCJRYSIsInRhZyIsInJlbmRlciIsIl9yZW5kZXIiLCJSYSIsIiQkdHlwZW9mIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiU2EiLCJUYSIsIm5vZGVOYW1lIiwiVmEiLCJfdmFsdWVUcmFja2VyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiY29uc3RydWN0b3IiLCJnZXQiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlVhIiwiV2EiLCJjaGVja2VkIiwidmFsdWUiLCJYYSIsImFjdGl2ZUVsZW1lbnQiLCJib2R5IiwiWWEiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIlphIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIiRhIiwiYWIiLCJiYiIsImNiIiwib3duZXJEb2N1bWVudCIsImViIiwiY2hpbGRyZW4iLCJDaGlsZHJlbiIsImRiIiwiZmIiLCJvcHRpb25zIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsIkFycmF5IiwiaXNBcnJheSIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwidG9TdHJpbmciLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJwYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwicWIiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsInJiIiwic2IiLCJ0YiIsInN0eWxlIiwiaW5kZXhPZiIsInNldFByb3BlcnR5IiwiY2hhckF0Iiwic3Vic3RyaW5nIiwidWIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ2YiIsIndiIiwiaXMiLCJ4YiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJ5YiIsInpiIiwiQWIiLCJCYiIsIkNiIiwic3RhdGVOb2RlIiwiRGIiLCJFYiIsInB1c2giLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiT2IiLCJQYiIsIlFiIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJSYiIsImwiLCJhcHBseSIsIm9uRXJyb3IiLCJTYiIsIlRiIiwiVWIiLCJWYiIsIldiIiwiWGIiLCJaYiIsImFsdGVybmF0ZSIsInJldHVybiIsImZsYWdzIiwiJGIiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsImFjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJuYyIsIk1hcCIsIm9jIiwicGMiLCJxYyIsInJjIiwiYmxvY2tlZE9uIiwiZG9tRXZlbnROYW1lIiwiZXZlbnRTeXN0ZW1GbGFncyIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0Q29udGFpbmVycyIsInNjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwidGMiLCJ2YyIsIndjIiwibGFuZVByaW9yaXR5IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiY29udGFpbmVySW5mbyIsInhjIiwieWMiLCJzaGlmdCIsInpjIiwiQWMiLCJCYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsIkNjIiwiRGMiLCJFYyIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIkZjIiwiR2MiLCJIYyIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJJYyIsIkpjIiwiS2MiLCJMYyIsIk1jIiwiTmMiLCJPYyIsIlBjIiwiUWMiLCJ1bnN0YWJsZV9ub3ciLCJGIiwiUmMiLCJVYyIsInBlbmRpbmdMYW5lcyIsImV4cGlyZWRMYW5lcyIsInN1c3BlbmRlZExhbmVzIiwicGluZ2VkTGFuZXMiLCJWYyIsImVudGFuZ2xlZExhbmVzIiwiZW50YW5nbGVtZW50cyIsIldjIiwiWGMiLCJZYyIsIlpjIiwiJGMiLCJldmVudFRpbWVzIiwiTWF0aCIsImNsejMyIiwiYmQiLCJjZCIsImxvZyIsIkxOMiIsImRkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJlZCIsImZkIiwiZ2QiLCJoZCIsImlkIiwiYmluZCIsInVjIiwiamQiLCJrZCIsImxkIiwibWQiLCJuZCIsIm9kIiwia2V5Q29kZSIsImNoYXJDb2RlIiwicGQiLCJxZCIsInJkIiwiX3JlYWN0TmFtZSIsIl90YXJnZXRJbnN0IiwiY3VycmVudFRhcmdldCIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiaXNQZXJzaXN0ZW50Iiwid2QiLCJ4ZCIsInlkIiwic2QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwidGQiLCJ1ZCIsInZpZXciLCJkZXRhaWwiLCJ2ZCIsIkFkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiZ2V0TW9kaWZpZXJTdGF0ZSIsInpkIiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIkJkIiwiRGQiLCJkYXRhVHJhbnNmZXIiLCJGZCIsIkhkIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIkpkIiwiY2xpcGJvYXJkRGF0YSIsIkxkIiwiZGF0YSIsIk1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIk5kIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsIk9kIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBkIiwiUmQiLCJjb2RlIiwibG9jYXRpb24iLCJyZXBlYXQiLCJsb2NhbGUiLCJ3aGljaCIsIlRkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiVmQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwiWGQiLCJaZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiJGQiLCJhZSIsImJlIiwiZG9jdW1lbnRNb2RlIiwiY2UiLCJkZSIsImVlIiwiZmUiLCJnZSIsImhlIiwiaWUiLCJsZSIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZW1haWwiLCJtb250aCIsIm51bWJlciIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsInVybCIsIndlZWsiLCJtZSIsIm5lIiwib2UiLCJldmVudCIsImxpc3RlbmVycyIsInBlIiwicWUiLCJyZSIsInNlIiwidGUiLCJ1ZSIsInZlIiwid2UiLCJ4ZSIsInllIiwiemUiLCJvbmlucHV0IiwiQWUiLCJkZXRhY2hFdmVudCIsIkJlIiwiQ2UiLCJhdHRhY2hFdmVudCIsIkRlIiwiRWUiLCJGZSIsIkhlIiwiSWUiLCJKZSIsIktlIiwiTGUiLCJub2RlIiwib2Zmc2V0IiwibmV4dFNpYmxpbmciLCJNZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJOZSIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImhyZWYiLCJPZSIsImNvbnRlbnRFZGl0YWJsZSIsIlBlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZGVmYXVsdFZpZXciLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsIlZlIiwiV2UiLCJYZSIsIlllIiwiY29uY2F0IiwiWmUiLCJZYiIsImluc3RhbmNlIiwibGlzdGVuZXIiLCJHIiwiJGUiLCJoYXMiLCJhZiIsImJmIiwicmFuZG9tIiwiY2YiLCJkZiIsImNhcHR1cmUiLCJwYXNzaXZlIiwiTmIiLCJ4IiwidyIsInoiLCJ1IiwicSIsInQiLCJ2IiwiZWYiLCJmZiIsInBhcmVudFdpbmRvdyIsImdmIiwiaGYiLCJKIiwiSyIsIlEiLCJMIiwiamUiLCJjaGFyIiwia2UiLCJ1bnNoaWZ0IiwiamYiLCJrZiIsImxmIiwibWYiLCJhdXRvRm9jdXMiLCJuZiIsIl9faHRtbCIsIm9mIiwic2V0VGltZW91dCIsInBmIiwiY2xlYXJUaW1lb3V0IiwicWYiLCJyZiIsInNmIiwicHJldmlvdXNTaWJsaW5nIiwidGYiLCJ2ZiIsIndmIiwieGYiLCJ5ZiIsImNoaWxkIiwiemYiLCJBZiIsIkJmIiwiY3VycmVudCIsIkgiLCJJIiwiQ2YiLCJNIiwiTiIsIkRmIiwiRWYiLCJjb250ZXh0VHlwZXMiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJGZiIsImNoaWxkQ29udGV4dFR5cGVzIiwiR2YiLCJIZiIsIklmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiSmYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiUWYiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlJmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiU2YiLCJUZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiVWYiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlZmIiwiV2YiLCJYZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiWWYiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJPIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsImxnIiwiZGVmYXVsdFByb3BzIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwiX2N1cnJlbnRWYWx1ZSIsInNnIiwiY2hpbGRMYW5lcyIsInRnIiwiZGVwZW5kZW5jaWVzIiwiZmlyc3RDb250ZXh0IiwibGFuZXMiLCJ1ZyIsInZnIiwiY29udGV4dCIsIm9ic2VydmVkQml0cyIsIm5leHQiLCJyZXNwb25kZXJzIiwid2ciLCJ4ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsInlnIiwiemciLCJldmVudFRpbWUiLCJsYW5lIiwicGF5bG9hZCIsImNhbGxiYWNrIiwiQWciLCJCZyIsIkNnIiwiQSIsInAiLCJDIiwiRGciLCJFZyIsIkZnIiwiQ29tcG9uZW50IiwicmVmcyIsIkdnIiwiS2ciLCJpc01vdW50ZWQiLCJfcmVhY3RJbnRlcm5hbHMiLCJlbnF1ZXVlU2V0U3RhdGUiLCJIZyIsIklnIiwiSmciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiTGciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIk1nIiwiY29udGV4dFR5cGUiLCJzdGF0ZSIsInVwZGF0ZXIiLCJOZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk9nIiwicHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIlBnIiwiUWciLCJyZWYiLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwiUmciLCJTZyIsImxhc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJzaWJsaW5nIiwiaW5kZXgiLCJUZyIsIlVnIiwibW9kZSIsImVsZW1lbnRUeXBlIiwiVmciLCJpbXBsZW1lbnRhdGlvbiIsIldnIiwiWGciLCJkb25lIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImNoIiwiZGgiLCJlaCIsImRvY3VtZW50RWxlbWVudCIsInRhZ05hbWUiLCJmaCIsImdoIiwiaGgiLCJQIiwiaWgiLCJtZW1vaXplZFByb3BzIiwicmV2ZWFsT3JkZXIiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwZW5kaW5nUHJvcHMiLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJfd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeSIsInZoIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIndoIiwieGgiLCJSIiwiUyIsIlQiLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsImJhc2VRdWV1ZSIsInF1ZXVlIiwiSWgiLCJKaCIsIktoIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImFjdGlvbiIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwiTGgiLCJNaCIsIl9nZXRWZXJzaW9uIiwiX3NvdXJjZSIsIm11dGFibGVSZWFkTGFuZXMiLCJOaCIsIlUiLCJ1c2VTdGF0ZSIsImdldFNuYXBzaG90Iiwic3Vic2NyaWJlIiwidXNlRWZmZWN0Iiwic2V0U25hcHNob3QiLCJPaCIsIlBoIiwiUWgiLCJSaCIsImNyZWF0ZSIsImRlc3Ryb3kiLCJkZXBzIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZURlYnVnVmFsdWUiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsInVzZU11dGFibGVTb3VyY2UiLCJ1c2VPcGFxdWVJZGVudGlmaWVyIiwidW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyIiwidWYiLCJlaSIsIlJlYWN0Q3VycmVudE93bmVyIiwiZmkiLCJnaSIsImhpIiwiaWkiLCJqaSIsImNvbXBhcmUiLCJraSIsImxpIiwibWkiLCJiYXNlTGFuZXMiLCJuaSIsIm9pIiwicGkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJxaSIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsInJpIiwicGVuZGluZ0NvbnRleHQiLCJCaSIsIkRpIiwiRWkiLCJzaSIsInJldHJ5TGFuZSIsInRpIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsInVpIiwidW5zdGFibGVfZXhwZWN0ZWRMb2FkVGltZSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbE1vZGUiLCJBaSIsIkZpIiwiR2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25DbGljayIsIm9uY2xpY2siLCJzaXplIiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlVGV4dE5vZGUiLCJWIiwiSGkiLCJJaSIsIlciLCJKaSIsIktpIiwiTGkiLCJNaSIsIm1lc3NhZ2UiLCJOaSIsImNvbnNvbGUiLCJlcnJvciIsIk9pIiwiV2Vha01hcCIsIlBpIiwiZWxlbWVudCIsIlFpIiwiUmkiLCJTaSIsImNvbXBvbmVudERpZENhdGNoIiwiVGkiLCJjb21wb25lbnRTdGFjayIsIlVpIiwiV2Vha1NldCIsIlZpIiwiV2kiLCJYaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiWWkiLCJaaSIsIiRpIiwiZm9jdXMiLCJhaiIsImRpc3BsYXkiLCJiaiIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJjaiIsImRqIiwiZWoiLCJmaiIsImdqIiwiaGoiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiaWoiLCJqaiIsImtqIiwibGoiLCJ0aGVuIiwibWoiLCJuaiIsImNlaWwiLCJvaiIsInBqIiwiWCIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJJbmZpbml0eSIsIndqIiwiY2siLCJaIiwieGoiLCJ5aiIsInpqIiwiQWoiLCJCaiIsIkNqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsIklqIiwiSmoiLCJTYyIsIktqIiwiTGoiLCJNaiIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImNhbGxiYWNrUHJpb3JpdHkiLCJUYyIsIk5qIiwiT2oiLCJQaiIsIlFqIiwiUmoiLCJTaiIsIlRqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsIlVqIiwidGltZW91dEhhbmRsZSIsInBpbmdDYWNoZSIsIllqIiwiWmoiLCJ2YSIsImFrIiwiYmsiLCJkayIsInJhbmdlQ291bnQiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiZWsiLCJtaW4iLCJleHRlbmQiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsIm9uQ29tbWl0RmliZXJSb290IiwiZmsiLCJnayIsImlrIiwiaXNSZWFjdENvbXBvbmVudCIsInBlbmRpbmdDaGlsZHJlbiIsImprIiwibXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YSIsImxrIiwibWsiLCJuayIsIm9rIiwicWsiLCJoeWRyYXRpb25PcHRpb25zIiwibXV0YWJsZVNvdXJjZXMiLCJfaW50ZXJuYWxSb290IiwicmsiLCJ0ayIsImhhc0F0dHJpYnV0ZSIsInNrIiwiWGoiLCJoayIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiSlNPTiIsInN0cmluZ2lmeSIsImZvcm0iLCJWaiIsIndrIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwidmVyc2lvbiIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJ4ayIsInJlbmRlcmVyQ29uZmlnIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGgiLCJvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGgiLCJvdmVycmlkZVByb3BzIiwib3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGgiLCJvdmVycmlkZVByb3BzUmVuYW1lUGF0aCIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJjIiwiY2MiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsInlrIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJjaGVja0RDRSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlByb2ZpbGVyIiwiU3VzcGVuc2UiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJlc2NhcGUiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImRlZmF1bHQiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsImNvdW50IiwidG9BcnJheSIsIm9ubHkiLCJQdXJlQ29tcG9uZW50IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwibWVtbyIsInBlcmZvcm1hbmNlIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJwb3AiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJhbnNpSFRNTCIsIl9yZWdBTlNJIiwiX2RlZkNvbG9ycyIsInJlc2V0IiwiYmxhY2siLCJyZWQiLCJncmVlbiIsInllbGxvdyIsImJsdWUiLCJtYWdlbnRhIiwiY3lhbiIsImxpZ2h0Z3JleSIsImRhcmtncmV5IiwiX3N0eWxlcyIsIjMwIiwiMzEiLCJfb3BlblRhZ3MiLCJfY2xvc2VUYWdzIiwiYW5zaUNvZGVzIiwicmV0Iiwic2VxIiwib3QiLCJjdCIsIl9zZXRUYWdzIiwiY29sb3JzIiwib3JpQ29sb3IiLCJwYXJzZUludCIsInNldENvbG9ycyIsIl9maW5hbENvbG9ycyIsImhleCIsInNvbWUiLCJkZWZIZXhDb2xvciIsInRhZ3MiLCJvcGVuIiwiY2xvc2UiLCJSZWZsZWN0T3duS2V5cyIsIlJlZmxlY3RBcHBseSIsInJlY2VpdmVyIiwiYXJncyIsIkZ1bmN0aW9uIiwib3duS2V5cyIsIk51bWJlcklzTmFOIiwiTnVtYmVyIiwiRXZlbnRFbWl0dGVyIiwiaW5pdCIsIm9uY2UiLCJlbWl0dGVyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJldmVudExpc3RlbmVyIiwidW5kZWZpbmVkIiwiZXJyb3JMaXN0ZW5lciIsInJlbW92ZUxpc3RlbmVyIiwiX2V2ZW50cyIsIl9ldmVudHNDb3VudCIsIl9tYXhMaXN0ZW5lcnMiLCJkZWZhdWx0TWF4TGlzdGVuZXJzIiwiY2hlY2tMaXN0ZW5lciIsIl9nZXRNYXhMaXN0ZW5lcnMiLCJ0aGF0IiwiX2FkZExpc3RlbmVyIiwicHJlcGVuZCIsImV2ZW50cyIsImV4aXN0aW5nIiwid2FybmluZyIsIm5ld0xpc3RlbmVyIiwiZW1pdCIsIndhcm5lZCIsIndhcm4iLCJvbmNlV3JhcHBlciIsImZpcmVkIiwid3JhcEZuIiwiX29uY2VXcmFwIiwid3JhcHBlZCIsIl9saXN0ZW5lcnMiLCJ1bndyYXAiLCJldmxpc3RlbmVyIiwiYXJyIiwidW53cmFwTGlzdGVuZXJzIiwiYXJyYXlDbG9uZSIsImxpc3RlbmVyQ291bnQiLCJjb3B5IiwiYXJnIiwiUmFuZ2VFcnJvciIsImdldFByb3RvdHlwZU9mIiwic2V0TWF4TGlzdGVuZXJzIiwiZ2V0TWF4TGlzdGVuZXJzIiwiZG9FcnJvciIsImVyIiwiaGFuZGxlciIsImxlbiIsImFkZExpc3RlbmVyIiwib24iLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwibGlzdCIsInBvc2l0aW9uIiwib3JpZ2luYWxMaXN0ZW5lciIsInNwbGljZU9uZSIsIm9mZiIsInJlbW92ZUFsbExpc3RlbmVycyIsInJhd0xpc3RlbmVycyIsImV2ZW50TmFtZXMiLCJIVE1MX0FMUEhBIiwiSFRNTF9DT0RFUyIsImFscGhhSW5kZXgiLCJudW1JbmRleCIsIkh0bWw0RW50aXRpZXMiLCJkZWNvZGUiLCJzdHIiLCJlbnRpdHkiLCJjaHIiLCJzdWJzdHIiLCJlbmNvZGUiLCJzdHJMZW5ndGgiLCJyZXN1bHQiLCJhbHBoYSIsImNoYXJDb2RlQXQiLCJlbmNvZGVOb25VVEYiLCJlbmNvZGVOb25BU0NJSSIsIkVOVElUSUVTIiwiY2hhckluZGV4IiwiY2hhcnMiLCJhZGRDaGFyIiwiY2hhckluZm8iLCJjaHIyIiwiY3JlYXRlSW5kZXhlcyIsIkh0bWw1RW50aXRpZXMiLCJ4bWxfZW50aXRpZXNfMSIsIlhtbEVudGl0aWVzIiwiaHRtbDRfZW50aXRpZXNfMSIsImh0bWw1X2VudGl0aWVzXzEiLCJBbGxIdG1sRW50aXRpZXMiLCJBTFBIQV9JTkRFWCIsIkNIQVJfSU5ERVgiLCI2MCIsIjYyIiwiQ0hBUl9TX0lOREVYIiwiJyIsInN0ckxlbmdodCIsInJvb3QiLCJkZWZpbml0aW9uIiwibm9vcCIsInVuZGVmaW5lZFR5cGUiLCJpc0lFIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibG9nTWV0aG9kcyIsImJpbmRNZXRob2QiLCJvYmoiLCJtZXRob2ROYW1lIiwibWV0aG9kIiwidHJhY2VGb3JJRSIsInRyYWNlIiwicmVhbE1ldGhvZCIsInJlcGxhY2VMb2dnaW5nTWV0aG9kcyIsImxldmVsIiwibG9nZ2VyTmFtZSIsIm1ldGhvZEZhY3RvcnkiLCJkZWJ1ZyIsImVuYWJsZUxvZ2dpbmdXaGVuQ29uc29sZUFycml2ZXMiLCJkZWZhdWx0TWV0aG9kRmFjdG9yeSIsIkxvZ2dlciIsImRlZmF1bHRMZXZlbCIsImZhY3RvcnkiLCJjdXJyZW50TGV2ZWwiLCJzZWxmIiwic3RvcmFnZUtleSIsImdldFBlcnNpc3RlZExldmVsIiwic3RvcmVkTGV2ZWwiLCJsb2NhbFN0b3JhZ2UiLCJpZ25vcmUiLCJjb29raWUiLCJleGVjIiwibGV2ZWxzIiwiZ2V0TGV2ZWwiLCJzZXRMZXZlbCIsIlNJTEVOVCIsImxldmVsTnVtIiwibGV2ZWxOYW1lIiwicGVyc2lzdExldmVsSWZQb3NzaWJsZSIsInNldERlZmF1bHRMZXZlbCIsImVuYWJsZUFsbCIsIlRSQUNFIiwiZGlzYWJsZUFsbCIsImluaXRpYWxMZXZlbCIsImRlZmF1bHRMb2dnZXIiLCJfbG9nZ2Vyc0J5TmFtZSIsImdldExvZ2dlciIsImxvZ2dlciIsIl9sb2ciLCJub0NvbmZsaWN0IiwiZ2V0TG9nZ2VycyIsImZyZWVHbG9iYWwiLCJnbG9iYWwiLCJwdW55Y29kZSIsIm1heEludCIsInJlZ2V4UHVueWNvZGUiLCJyZWdleE5vbkFTQ0lJIiwicmVnZXhTZXBhcmF0b3JzIiwiZXJyb3JzIiwic3RyaW5nRnJvbUNoYXJDb2RlIiwiYXJyYXkiLCJmbiIsIm1hcERvbWFpbiIsInN0cmluZyIsInBhcnRzIiwidWNzMmRlY29kZSIsImV4dHJhIiwib3V0cHV0IiwiY291bnRlciIsInVjczJlbmNvZGUiLCJkaWdpdFRvQmFzaWMiLCJkaWdpdCIsImZsYWciLCJhZGFwdCIsImRlbHRhIiwibnVtUG9pbnRzIiwiZmlyc3RUaW1lIiwiYmFzZU1pbnVzVE1pbiIsIm91dCIsImJhc2ljIiwiaiIsIm9sZGkiLCJiYXNlTWludXNUIiwiY29kZVBvaW50IiwiaW5wdXRMZW5ndGgiLCJiaWFzIiwibGFzdEluZGV4T2YiLCJzcGxpY2UiLCJoYW5kbGVkQ1BDb3VudCIsImJhc2ljTGVuZ3RoIiwiY3VycmVudFZhbHVlIiwiaGFuZGxlZENQQ291bnRQbHVzT25lIiwicU1pbnVzVCIsInByb3AiLCJxcyIsInNlcCIsImVxIiwicmVnZXhwIiwibWF4S2V5cyIsImtzdHIiLCJ2c3RyIiwiaWR4IiwiZGVjb2RlVVJJQ29tcG9uZW50Iiwic3RyaW5naWZ5UHJpbWl0aXZlIiwiaXNGaW5pdGUiLCJrcyIsInBhcnNlIiwibyIsIjEiLCJyZXF1aXJlIiwidHJhbnNwb3J0TGlzdCIsIl9zb2NranNfb25sb2FkIiwiMiIsImluaGVyaXRzIiwiRXZlbnQiLCJDbG9zZUV2ZW50IiwiaW5pdEV2ZW50Iiwid2FzQ2xlYW4iLCJyZWFzb24iLCIzIiwiRXZlbnRUYXJnZXQiLCI0IiwiZXZlbnRUeXBlIiwiY2FuQnViYmxlIiwiQ0FQVFVSSU5HX1BIQVNFIiwiQVRfVEFSR0VUIiwiQlVCQkxJTkdfUEhBU0UiLCI1IiwiZGlzcGF0Y2hFdmVudCIsIjYiLCJUcmFuc3BvcnRNZXNzYWdlRXZlbnQiLCI3IiwiSlNPTjMiLCJpZnJhbWVVdGlscyIsIkZhY2FkZUpTIiwidHJhbnNwb3J0IiwiX3RyYW5zcG9ydCIsIl90cmFuc3BvcnRNZXNzYWdlIiwiX3RyYW5zcG9ydENsb3NlIiwiZnJhbWUiLCJfc2VuZCIsInNlbmQiLCJfY2xvc2UiLCJwcm9jZXNzIiwidXJsVXRpbHMiLCJldmVudFV0aWxzIiwiSW5mb0lmcmFtZVJlY2VpdmVyIiwibG9jIiwiZW52IiwiTk9ERV9FTlYiLCJTb2NrSlMiLCJhdmFpbGFibGVUcmFuc3BvcnRzIiwicGFyZW50T3JpZ2luIiwidHJhbnNwb3J0TWFwIiwiYXQiLCJmYWNhZGVUcmFuc3BvcnQiLCJ0cmFuc3BvcnROYW1lIiwiYm9vdHN0cmFwX2lmcmFtZSIsImZhY2FkZSIsImN1cnJlbnRXaW5kb3dJZCIsImhhc2giLCJwYXJlbnQiLCJvcmlnaW4iLCJpZnJhbWVNZXNzYWdlIiwiaWdub3JlZCIsIndpbmRvd0lkIiwidHJhbnNVcmwiLCJiYXNlVXJsIiwiaXNPcmlnaW5FcXVhbCIsIm9iamVjdFV0aWxzIiwiSW5mb0FqYXgiLCJBamF4T2JqZWN0IiwidDAiLCJ4byIsInN0YXR1cyIsImluZm8iLCJydHQiLCJpc09iamVjdCIsIjEwIiwiWEhSTG9jYWxPYmplY3QiLCJJbmZvUmVjZWl2ZXJJZnJhbWUiLCJpciIsIjExIiwidXRpbHMiLCJJZnJhbWVUcmFuc3BvcnQiLCJJbmZvSWZyYW1lIiwiZ28iLCJpZnIiLCJtc2ciLCJlbmFibGVkIiwiWERSIiwiWEhSQ29ycyIsIlhIUkxvY2FsIiwiWEhSRmFrZSIsIkluZm9SZWNlaXZlciIsInVybEluZm8iLCJkb1hociIsIl9nZXRSZWNlaXZlciIsInNhbWVPcmlnaW4iLCJzYW1lU2NoZW1lIiwiYWRkUGF0aCIsInRpbWVvdXRSZWYiLCJfY2xlYW51cCIsInRpbWVvdXQiLCJwcm90b2NvbCIsImhvc3QiLCJwb3J0IiwiMTQiLCJ0cmFuc3BvcnRzIiwiVVJMIiwiYnJvd3NlciIsInByb3RvY29scyIsInJlYWR5U3RhdGUiLCJDT05ORUNUSU5HIiwiZXh0ZW5zaW9ucyIsInByb3RvY29sc193aGl0ZWxpc3QiLCJfdHJhbnNwb3J0c1doaXRlbGlzdCIsIl90cmFuc3BvcnRPcHRpb25zIiwidHJhbnNwb3J0T3B0aW9ucyIsIl90aW1lb3V0Iiwic2Vzc2lvbklkIiwiX2dlbmVyYXRlU2Vzc2lvbklkIiwiX3NlcnZlciIsInNlcnZlciIsIm51bWJlclN0cmluZyIsInBhcnNlZFVybCIsIlN5bnRheEVycm9yIiwic2VjdXJlIiwic29ydGVkUHJvdG9jb2xzIiwic29ydCIsInByb3RvIiwiZ2V0T3JpZ2luIiwiX29yaWdpbiIsInBhdGhuYW1lIiwiX3VybEluZm8iLCJudWxsT3JpZ2luIiwiaGFzRG9tYWluIiwiaXNTY2hlbWVFcXVhbCIsIl9pciIsIl9yZWNlaXZlSW5mbyIsInVzZXJTZXRDb2RlIiwiQ0xPU0lORyIsIkNMT1NFRCIsIk9QRU4iLCJxdW90ZSIsIl9ydG8iLCJjb3VudFJUTyIsIl90cmFuc1VybCIsImJhc2VfdXJsIiwiZW5hYmxlZFRyYW5zcG9ydHMiLCJmaWx0ZXJUb0VuYWJsZWQiLCJfdHJhbnNwb3J0cyIsIm1haW4iLCJfY29ubmVjdCIsIlRyYW5zcG9ydCIsIm5lZWRCb2R5IiwidGltZW91dE1zIiwibWF4Iiwicm91bmRUcmlwcyIsIl90cmFuc3BvcnRUaW1lb3V0SWQiLCJfdHJhbnNwb3J0VGltZW91dCIsInRyYW5zcG9ydFVybCIsInRyYW5zcG9ydE9iaiIsImNvbnRlbnQiLCJfb3BlbiIsImZvcmNlRmFpbCIsIm9uY2xvc2UiLCJvbmVycm9yIiwiMTUiLCJBcnJheVByb3RvdHlwZSIsIk9iamVjdFByb3RvdHlwZSIsIkZ1bmN0aW9uUHJvdG90eXBlIiwiU3RyaW5nUHJvdG90eXBlIiwiYXJyYXlfc2xpY2UiLCJfdG9TdHJpbmciLCJpc0Z1bmN0aW9uIiwiaXNTdHJpbmciLCJzdXBwb3J0c0Rlc2NyaXB0b3JzIiwib2JqZWN0IiwiZm9yY2VBc3NpZ24iLCJ3cml0YWJsZSIsImRlZmluZVByb3BlcnRpZXMiLCJ0b0ludGVnZXIiLCJudW0iLCJhYnMiLCJFbXB0eSIsImJpbmRlciIsImJvdW5kIiwiYm91bmRMZW5ndGgiLCJib3VuZEFyZ3MiLCJwcm9wZXJseUJveGVzTm9uU3RyaWN0IiwicHJvcGVybHlCb3hlc1N0cmljdCIsImJveGVkU3RyaW5nIiwic3BsaXRTdHJpbmciLCJmdW4iLCJ0aGlzcCIsIl8iLCJfXyIsImhhc0ZpcmVmb3gySW5kZXhPZkJ1ZyIsInNvdWdodCIsImNvbXBsaWFudEV4ZWNOcGNnIiwic3RyaW5nX3NwbGl0Iiwic2VwYXJhdG9yIiwibGltaXQiLCJzZXBhcmF0b3IyIiwibGFzdEluZGV4IiwibGFzdExlbmd0aCIsImlnbm9yZUNhc2UiLCJtdWx0aWxpbmUiLCJleHRlbmRlZCIsInN0aWNreSIsImxhc3RMYXN0SW5kZXgiLCJSZWdFeHAiLCJzdHJpbmdfc3Vic3RyIiwiWEhSIiwiWE1MSHR0cFJlcXVlc3QiLCJBYnN0cmFjdFhIUk9iamVjdCIsIm9wdHMiLCJfc3RhcnQiLCJ4aHIiLCJhZGRRdWVyeSIsInVubG9hZFJlZiIsInVubG9hZEFkZCIsIm9udGltZW91dCIsIm5vQ3JlZGVudGlhbHMiLCJzdXBwb3J0c0NPUlMiLCJ3aXRoQ3JlZGVudGlhbHMiLCJoZWFkZXJzIiwic2V0UmVxdWVzdEhlYWRlciIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlc3BvbnNlVGV4dCIsImFib3J0IiwidW5sb2FkRGVsIiwiYXhvIiwiY29ycyIsIkV2ZW50U291cmNlIiwiRHJpdmVyIiwiV2ViU29ja2V0IiwiTW96V2ViU29ja2V0IiwiQWpheEJhc2VkVHJhbnNwb3J0IiwiRXZlbnRTb3VyY2VSZWNlaXZlciIsIlhIUkNvcnNPYmplY3QiLCJFdmVudFNvdXJjZURyaXZlciIsIkV2ZW50U291cmNlVHJhbnNwb3J0IiwiMjEiLCJIdG1sZmlsZVJlY2VpdmVyIiwiSHRtbEZpbGVUcmFuc3BvcnQiLCIyMiIsImlmcmFtZVVybCIsImlmcmFtZU9iaiIsImNyZWF0ZUlmcmFtZSIsIm9ubWVzc2FnZUNhbGxiYWNrIiwiX21lc3NhZ2UiLCJjbGVhbnVwIiwibG9hZGVkIiwiY2RhdGEiLCJwb3N0IiwiaWZyYW1lRW5hYmxlZCIsIjIzIiwiU2VuZGVyUmVjZWl2ZXIiLCJKc29ucFJlY2VpdmVyIiwianNvbnBTZW5kZXIiLCJKc29uUFRyYW5zcG9ydCIsIjI0IiwidXJsU3VmZml4IiwiUmVjZWl2ZXIiLCJvcHQiLCJhamF4VXJsIiwiY3JlYXRlQWpheFNlbmRlciIsIjI1IiwiQnVmZmVyZWRTZW5kZXIiLCJzZW5kZXIiLCJzZW5kQnVmZmVyIiwic2VuZFN0b3AiLCJzZW5kU2NoZWR1bGUiLCJzZW5kU2NoZWR1bGVXYWl0IiwidHJlZiIsIjI2IiwiSWZyYW1lV3JhcFRyYW5zcG9ydCIsImlmcmFtZUluZm8iLCJQb2xsaW5nIiwicmVjZWl2ZVVybCIsIl9zY2hlZHVsZVJlY2VpdmVyIiwicG9sbCIsInBvbGxJc0Nsb3NpbmciLCIyOCIsInNlbmRlckZ1bmMiLCJwb2xsVXJsIiwiMjkiLCJlcyIsImRlY29kZVVSSSIsInBvbGx1dGVHbG9iYWxOYW1lc3BhY2UiLCJXUHJlZml4IiwiaHRtbGZpbGVFbmFibGVkIiwiY29uc3RydWN0RnVuYyIsImNyZWF0ZUh0bWxmaWxlIiwic3RvcCIsInVybFdpdGhJZCIsIl9jYWxsYmFjayIsIl9jcmVhdGVTY3JpcHQiLCJ0aW1lb3V0SWQiLCJfYWJvcnQiLCJzY3JpcHRFcnJvclRpbWVvdXQiLCJhYm9ydGluZyIsInNjcmlwdDIiLCJzY3JpcHQiLCJvbmxvYWQiLCJfc2NyaXB0RXJyb3IiLCJlcnJvclRpbWVyIiwibG9hZGVkT2theSIsInNyYyIsImNoYXJzZXQiLCJodG1sRm9yIiwiYXN5bmMiLCJpc09wZXJhIiwiaGVhZCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiWGhyUmVjZWl2ZXIiLCJidWZmZXJQb3NpdGlvbiIsIl9jaHVua0hhbmRsZXIiLCJidWYiLCJlbmN0eXBlIiwiYWNjZXB0Q2hhcnNldCIsImlmcmFtZSIsInN1Ym1pdCIsImNvbXBsZXRlZCIsIlhEUk9iamVjdCIsInhkciIsIlhEb21haW5SZXF1ZXN0IiwiX2Vycm9yIiwib25wcm9ncmVzcyIsIlhockRyaXZlciIsIldlYnNvY2tldERyaXZlciIsIldlYlNvY2tldFRyYW5zcG9ydCIsIndzIiwiWGRyU3RyZWFtaW5nVHJhbnNwb3J0IiwiWGRyUG9sbGluZ1RyYW5zcG9ydCIsImNvb2tpZV9uZWVkZWQiLCI0MSIsIlhoclBvbGxpbmdUcmFuc3BvcnQiLCI0MiIsIlhoclN0cmVhbWluZ1RyYW5zcG9ydCIsIjQzIiwiY3J5cHRvIiwiZ2V0UmFuZG9tVmFsdWVzIiwicmFuZG9tQnl0ZXMiLCJieXRlcyIsIlVpbnQ4QXJyYXkiLCI0NCIsImlzS29ucXVlcm9yIiwiZG9tYWluIiwiZXh0cmFMb29rdXAiLCJleHRyYUVzY2FwYWJsZSIsInF1b3RlZCIsImVzY2FwYWJsZSIsInVucm9sbGVkIiwidW5yb2xsTG9va3VwIiwib25VbmxvYWQiLCJhZnRlclVubG9hZCIsImlzQ2hyb21lUGFja2FnZWRBcHAiLCJjaHJvbWUiLCJhcHAiLCJydW50aW1lIiwidHJpZ2dlclVubG9hZENhbGxiYWNrcyIsIjQ3IiwiZXJyb3JDYWxsYmFjayIsInVuYXR0YWNoIiwiZG9jIiwiQ29sbGVjdEdhcmJhZ2UiLCJ3cml0ZSIsIjQ4IiwibG9nT2JqZWN0IiwibGV2ZWxFeGlzdHMiLCI0OSIsIjUwIiwiX3JhbmRvbVN0cmluZ0NoYXJzIiwiNTEiLCJ0cmFuc3BvcnRzV2hpdGVsaXN0IiwidHJhbnMiLCJ3ZWJzb2NrZXQiLCI1MiIsImhvc3RuYW1lIiwicmVzIiwicGF0aCIsIjUzIiwiNTQiLCJwbHVyYWwiLCJtcyIsIm1zQWJzIiwiaXNQbHVyYWwiLCJyb3VuZCIsInBhcnNlRmxvYXQiLCJsb25nIiwiZm10U2hvcnQiLCI1NSIsIl90eXBlb2YiLCJfY29uc29sZSIsImZvcm1hdEFyZ3MiLCJ1c2VDb2xvcnMiLCJuYW1lc3BhY2UiLCJodW1hbml6ZSIsImRpZmYiLCJsYXN0QyIsInNhdmUiLCJuYW1lc3BhY2VzIiwic3RvcmFnZSIsInNldEl0ZW0iLCJyZW1vdmVJdGVtIiwibG9hZCIsImdldEl0ZW0iLCJERUJVRyIsIl9fbndqcyIsIldlYmtpdEFwcGVhcmFuY2UiLCJmaXJlYnVnIiwiZXhjZXB0aW9uIiwidGFibGUiLCIkMSIsImxvY2Fsc3RvcmFnZSIsImZvcm1hdHRlcnMiLCI1NiIsInNlbGVjdENvbG9yIiwiY3JlYXRlRGVidWciLCJwcmV2VGltZSIsIl9sZW4iLCJfa2V5IiwiY3VyciIsInByZXYiLCJjb2VyY2UiLCJmb3JtYXQiLCJmb3JtYXR0ZXIiLCJpbnN0YW5jZXMiLCJkZWxpbWl0ZXIiLCJkaXNhYmxlIiwiZW5hYmxlIiwibmFtZXMiLCJza2lwcyIsIjU3IiwiY3RvciIsInN1cGVyQ3RvciIsInN1cGVyXyIsIlRlbXBDdG9yIiwiNTgiLCJvYmplY3RUeXBlcyIsImZyZWVFeHBvcnRzIiwicnVuSW5Db250ZXh0IiwibmF0aXZlSlNPTiIsImlzUHJvcGVydHkiLCJ1bmRlZiIsIm9iamVjdFByb3RvIiwiZ2V0Q2xhc3MiLCJpc0V4dGVuZGVkIiwiZ2V0VVRDRnVsbFllYXIiLCJnZXRVVENNb250aCIsImdldFVUQ0RhdGUiLCJnZXRVVENIb3VycyIsImdldFVUQ01pbnV0ZXMiLCJnZXRVVENTZWNvbmRzIiwiZ2V0VVRDTWlsbGlzZWNvbmRzIiwiaXNTdXBwb3J0ZWQiLCJzZXJpYWxpemVkIiwic3RyaW5naWZ5U3VwcG9ydGVkIiwidG9KU09OIiwicGFyc2VTdXBwb3J0ZWQiLCJmdW5jdGlvbkNsYXNzIiwibnVtYmVyQ2xhc3MiLCJzdHJpbmdDbGFzcyIsImFycmF5Q2xhc3MiLCJjaGFySW5kZXhCdWdneSIsIk1vbnRocyIsImdldERheSIsInllYXIiLCJwcm9wZXJ0eSIsIm1lbWJlcnMiLCJfX3Byb3RvX18iLCJvcmlnaW5hbCIsIlByb3BlcnRpZXMiLCJpc0NvbnN0cnVjdG9yIiwiaGFzUHJvcGVydHkiLCJFc2NhcGVzIiwiOTIiLCJ0b1BhZGRlZFN0cmluZyIsInVzZUNoYXJJbmRleCIsInNlcmlhbGl6ZSIsInByb3BlcnRpZXMiLCJ3aGl0ZXNwYWNlIiwiaW5kZW50YXRpb24iLCJjbGFzc05hbWUiLCJob3VycyIsIm1pbnV0ZXMiLCJzZWNvbmRzIiwibWlsbGlzZWNvbmRzIiwicmVzdWx0cyIsInByZWZpeCIsImZpbHRlciIsIkluZGV4IiwiU291cmNlIiwiVW5lc2NhcGVzIiwiOTgiLCIxMTAiLCIxMDIiLCJsZXgiLCJiZWdpbiIsImlzU2lnbmVkIiwiaGFzTWVtYmVycyIsInVwZGF0ZSIsIndhbGsiLCJwcmV2aW91c0pTT04iLCJpc1Jlc3RvcmVkIiwiNTkiLCJwYWlycyIsInF1ZXJ5IiwicGFydCIsInBhcnNlciIsIjYxIiwicmVxdWlyZWQiLCJwcm90b2NvbHJlIiwic2xhc2hlcyIsInJ1bGVzIiwiYWRkcmVzcyIsIk5hTiIsImxvbGNhdGlvbiIsImZpbmFsZGVzdGluYXRpb24iLCJVcmwiLCJ1bmVzY2FwZSIsImV4dHJhY3RQcm90b2NvbCIsInJlc3QiLCJyZWxhdGl2ZSIsImV4dHJhY3RlZCIsImluc3RydWN0aW9uIiwiaW5zdHJ1Y3Rpb25zIiwidXAiLCJ1c2VybmFtZSIsImF1dGgiLCJpbnMiLCJ1dGlsIiwidXJsUGFyc2UiLCJyZXNvbHZlT2JqZWN0IiwicHJvdG9jb2xQYXR0ZXJuIiwicG9ydFBhdHRlcm4iLCJzaW1wbGVQYXRoUGF0dGVybiIsInVud2lzZSIsImF1dG9Fc2NhcGUiLCJub25Ib3N0Q2hhcnMiLCJob3N0RW5kaW5nQ2hhcnMiLCJob3N0bmFtZVBhcnRQYXR0ZXJuIiwiaG9zdG5hbWVQYXJ0U3RhcnQiLCJ1bnNhZmVQcm90b2NvbCIsImhvc3RsZXNzUHJvdG9jb2wiLCJzbGFzaGVkUHJvdG9jb2wiLCJxdWVyeXN0cmluZyIsInBhcnNlUXVlcnlTdHJpbmciLCJzbGFzaGVzRGVub3RlSG9zdCIsInF1ZXJ5SW5kZXgiLCJzcGxpdHRlciIsInVTcGxpdCIsInNpbXBsZVBhdGgiLCJsb3dlclByb3RvIiwiYXRTaWduIiwiaG9zdEVuZCIsImhlYyIsInBhcnNlSG9zdCIsImlwdjZIb3N0bmFtZSIsImhvc3RwYXJ0cyIsIm5ld3BhcnQiLCJ2YWxpZFBhcnRzIiwibm90SG9zdCIsImJpdCIsInRvQVNDSUkiLCJlc2MiLCJxbSIsInJlbCIsInRrZXlzIiwidGtleSIsInJrZXlzIiwicmtleSIsInJlbFBhdGgiLCJpc1NvdXJjZUFicyIsImlzUmVsQWJzIiwibXVzdEVuZEFicyIsInJlbW92ZUFsbERvdHMiLCJzcmNQYXRoIiwicHN5Y2hvdGljIiwiaXNOdWxsT3JVbmRlZmluZWQiLCJhdXRoSW5Ib3N0IiwiaXNOdWxsIiwiaGFzVHJhaWxpbmdTbGFzaCIsImlzQWJzb2x1dGUiLCJfZGVmaW5lUHJvcGVydGllcyIsImRlc2NyaXB0b3IiLCJCYXNlQ2xpZW50IiwiQ29uc3RydWN0b3IiLCJfY2xhc3NDYWxsQ2hlY2siLCJzdGF0aWNQcm9wcyIsIl9zZXRQcm90b3R5cGVPZiIsInNldFByb3RvdHlwZU9mIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJSZWZlcmVuY2VFcnJvciIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJfZ2V0UHJvdG90eXBlT2YiLCJfQmFzZUNsaWVudCIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsIl9pbmhlcml0cyIsIlNvY2tKU0NsaWVudCIsInByb3RvUHJvcHMiLCJEZXJpdmVkIiwiaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9zdXBlciIsInNoYW0iLCJQcm94eSIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJTdXBlciIsIk5ld1RhcmdldCIsIl90aGlzIiwic29jayIsIm9ub3BlbiIsImVudGl0aWVzIiwib3ZlcmxheUlmcmFtZSIsIm92ZXJsYXlEaXYiLCJsYXN0T25PdmVybGF5RGl2UmVhZHkiLCJjbGVhciIsInNob3dNZXNzYWdlIiwibWVzc2FnZXMiLCJvbk92ZXJsYXlEaXZSZWFkeSIsIm9uSWZyYW1lTG9hZCIsImRpdiIsImNvbnRlbnREb2N1bWVudCIsImJveFNpemluZyIsInJpZ2h0IiwiYm90dG9tIiwiYmFja2dyb3VuZENvbG9yIiwiZm9udEZhbWlseSIsImZvbnRTaXplIiwicGFkZGluZyIsIndoaXRlU3BhY2UiLCJvdmVyZmxvdyIsImJvcmRlciIsIkNsaWVudCIsIl9fd2VicGFja19kZXZfc2VydmVyX2NsaWVudF9fIiwicmV0cmllcyIsImNsaWVudCIsInNvY2tldCIsImhhbmRsZXJzIiwib25PcGVuIiwib25DbG9zZSIsInJldHJ5SW5NcyIsInBvdyIsIm9uTWVzc2FnZSIsImdldEN1cnJlbnRTY3JpcHRTb3VyY2UiLCJyZXNvdXJjZVF1ZXJ5IiwiY3VycmVudExvY2F0aW9uIiwidXJsUGFydHMiLCJzY3JpcHRIb3N0Iiwic29ja0hvc3QiLCJzb2NrUGF0aCIsInNvY2tQb3J0IiwiZ2V0U29ja2V0VXJsIiwiY3VycmVudFNjcmlwdCIsImdldEF0dHJpYnV0ZSIsInNjcmlwdEVsZW1lbnRzIiwic2NyaXB0cyIsIklORk8iLCJzZXRMb2dMZXZlbCIsIl9yZWYiLCJfcmVmMiIsImhvdFJlbG9hZCIsImhvdCIsImxpdmVSZWxvYWQiLCJpc1VubG9hZGluZyIsImN1cnJlbnRIYXNoIiwicm9vdFdpbmRvdyIsImludGVydmFsSWQiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJyZWxvYWQiLCJhcHBseVJlbG9hZCIsIldvcmtlckdsb2JhbFNjb3BlIiwiYW5zaVJlZ2V4IiwibG9nTGV2ZWwiLCJkdW1teSIsInNob3VsZExvZyIsImxvZ0dyb3VwIiwibG9nRm4iLCJncm91cCIsImdyb3VwQ29sbGFwc2VkIiwiZ3JvdXBFbmQiLCJmb3JtYXRFcnJvciIsIndlYnBhY2tDb250ZXh0IiwicmVxIiwid2VicGFja0NvbnRleHRSZXNvbHZlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIm1vZHVsZUlkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImdsb2JhbFRoaXMiLCJubWQiLCJwYXRocyIsIlJlYWN0IiwiUmVhY3RET00iLCJnZXRFbGVtZW50QnlJZCIsInN0cmlwQW5zaSIsIm92ZXJsYXkiLCJfcmVxdWlyZSIsInNlbmRNZXNzYWdlIiwicmVsb2FkQXBwIiwiY3JlYXRlU29ja2V0VXJsIiwiaW5pdGlhbCIsInVzZVdhcm5pbmdPdmVybGF5IiwidXNlRXJyb3JPdmVybGF5IiwidXNlUHJvZ3Jlc3MiLCJzb2NrZXRVcmwiLCJpbnZhbGlkIiwiX2hhc2giLCJob3RDdHgiLCJ3YXJuaW5ncyIsInByb2dyZXNzIiwiX3Byb2dyZXNzIiwicGVyY2VudCIsIl93YXJuaW5ncyIsInN0cmlwcGVkV2FybmluZ3MiLCJfZXJyb3JzIiwic3RyaXBwZWRFcnJvcnMiXSwibWFwcGluZ3MiOiI7a0NBUUEsSUFBSUEsRUFBd0JDLE9BQU9ELHNCQUMvQkUsRUFBaUJELE9BQU9FLFVBQVVELGVBQ2xDRSxFQUFtQkgsT0FBT0UsVUFBVUUscUJBRXhDLFNBQVNDLEVBQVNDLEdBQ2pCLEdBQUlBLFFBQ0gsTUFBTSxJQUFJQyxVQUFVLHlEQUdyQixPQUFPUCxPQUFPTSxHQStDZkUsRUFBT0MsUUE1Q1AsV0FDQyxJQUNDLElBQUtULE9BQU9VLE9BQ1gsT0FBTyxFQU1SLElBQUlDLEVBQVEsSUFBSUMsT0FBTyxPQUV2QixHQURBRCxFQUFNLEdBQUssS0FDa0MsTUFBekNYLE9BQU9hLG9CQUFvQkYsR0FBTyxHQUNyQyxPQUFPLEVBS1IsSUFEQSxJQUFJRyxFQUFRLEdBQ0hDLEVBQUksRUFBR0EsRUFBSSxHQUFJQSxJQUN2QkQsRUFBTSxJQUFNRixPQUFPSSxhQUFhRCxJQUFNQSxFQUt2QyxHQUF3QixlQUhYZixPQUFPYSxvQkFBb0JDLEdBQU9HLEtBQUksU0FBVUMsR0FDNUQsT0FBT0osRUFBTUksTUFFSEMsS0FBSyxJQUNmLE9BQU8sRUFJUixJQUFJQyxFQUFRLEdBSVosTUFIQSx1QkFBdUJDLE1BQU0sSUFBSUMsU0FBUSxTQUFVQyxHQUNsREgsRUFBTUcsR0FBVUEsS0FHZix5QkFERXZCLE9BQU93QixLQUFLeEIsT0FBT1UsT0FBTyxHQUFJVSxJQUFRRCxLQUFLLElBTTlD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UUFBUyxRQUFTLFNBQVUsU0FBVSxPQUFRLE9BQVEsUUFBUyxPQUFRLE9BQVEsU0FBVSxPQUFRLE1BQU8sTUFBTyxNQUFPLFFBQVMsUUFBUyxRQUFTLFFBQVMsUUFBUyxRQUFTLFFBQVMsUUFBUyxTQUFVLFNBQVUsU0FBVSxTQUFVLFNBQVUsT0FBUSxPQUFRLFFBQVMsT0FBUSxRQUFTLFFBQVMsVUFBVyxPQUFRLE1BQU8sUUFBUyxPQUFRLFFBQVMsU0FBVSxLQUFNLEtBQU0sS0FBTSxVQUFXLEtBQU0sTUFBTyxRQUFTLE1BQU8sVUFBVyxNQUFPLE1BQU8sTUFBTyxRQUFTLFFBQVMsT0FBUSxRQUFTLFFBQVMsVUFBVyxPQUFRLE1BQU8sUUFBUyxPQUFRLFFBQVMsU0FBVSxLQUFNLEtBQU0sS0FBTSxVQUFXLEtBQU0sTUFBTyxTQUFVLFFBQVMsTUFBTyxVQUFXLE1BQU8sTUFBTyxNQUFPLFFBQVMsV0FBWSxRQUFTLE1BQU8sT0FBUSxTQUFVLFFBQVMsUUFBUyxRQUFTLFFBQVMsU0FBVSxRQUFTLE9BQVEsUUFBUyxVQUFXLE9BQVEsT0FBUSxPQUFRLE9BQVEsT0FBUSxRQUFTLE9BQVEsT0FBUSxPQUFRLE9BQVEsT0FBUSxTQUFVLE9BQVEsUUFBUyxRQUFTLFFBQVMsT0FBUSxRQUFTLEtBQU0sT0FBUSxNQUFPLFFBQVMsU0FBVSxRQUFTLE9BQVEsUUFBUyxNQUFPLE1BQU8sS0FBTSxNQUFPLE1BQU8sTUFBTyxTQUFVLE1BQU8sT0FBUSxRQUFTLEtBQU0sUUFBUyxLQUFNLEtBQU0sTUFBTyxNQUFPLE9BQVEsT0FBUSxPQUFRLFFBQVMsU0FBVSxPQUFRLE9BQVEsUUFBUyxRQUFTLFNBQVUsU0FBVSxPQUFRLE9BQVEsTUFBTyxTQUFVLFFBQVMsU0FBVSxTQUN6b0VDLEVBQWEsQ0FBQyxHQUFJLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLEdBQUksR0FBSSxHQUFJLEdBQUksSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssS0FBTSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtBQU0sS0FBTSxLQUFNLEtB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QUFRLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxXQUFZLENBQUMsUUFBUyxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxXQUFZLENBQUMsUUFBUyxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxLQUFNLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxLQUFNLENBQUMsZ0JBQWlCLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLEtBQU0sQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxjQUFlLENBQUMsT0FBUSxDQUFDLFlBQWEsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxZQUFhLENBQUMsT0FBUSxDQUFDLFlBQWEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLGFBQWMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxXQUFZLENBQUMsUUFBUyxDQUFDLFlBQWEsQ0FBQyxRQUFTLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLGtCQUFtQixDQUFDLE9BQVEsQ0FBQyxnQkFBaUIsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxlQUFnQixDQUFDLFFBQVMsQ0FBQyxjQUFlLENBQUMsT0FBUSxDQUFDLGdCQUFpQixDQUFDLE9BQVEsQ0FBQyxvQkFBcUIsQ0FBQyxPQUFRLENBQUMsb0JBQXFCLENBQUMsT0FBUSxDQUFDLHFCQUFzQixDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLEdBQUksT0FBUSxDQUFDLFVBQVcsQ0FBQyxLQUFNLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxLQUFNLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLHVCQUF3QixDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsS0FBTSxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxVQUFXLENBQUMsTUFBTyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxZQUFhLENBQUMsTUFBTyxDQUFDLFlBQWEsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFlBQWEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxrQkFBbUIsQ0FBQyxPQUFRLENBQUMsbUJBQW9CLENBQUMsT0FBUSxDQUFDLGFBQWMsQ0FBQyxPQUFRLENBQUMsY0FBZSxDQUFDLE9BQVEsQ0FBQyxjQUFlLENBQUMsT0FBUSxDQUFDLFlBQWEsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE1BQU8sQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLGNBQWUsQ0FBQyxPQUFRLENBQUMsYUFBYyxDQUFDLE9BQVEsQ0FBQyxjQUFlLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLDJCQUE0QixDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLEtBQU0sQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxLQUFNLENBQUMsU0FBVSxDQUFDLEtBQU0sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsYUFBYyxDQUFDLE9BQVEsQ0FBQyxZQUFhLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxZQUFhLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxrQkFBbUIsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsWUFBYSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxrQ0FBbUMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxXQUFZLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLEtBQU0sUUFBUyxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxjQUFlLENBQUMsT0FBUSxDQUFDLGNBQWUsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxhQUFjLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLGtCQUFtQixDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLEtBQU0sQ0FBQyxPQUFRLENBQUMsS0FBTSxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLG1CQUFvQixDQUFDLE1BQU8sQ0FBQyxpQkFBa0IsQ0FBQyxNQUFPLENBQUMseUJBQTBCLENBQUMsTUFBTyxDQUFDLG1CQUFvQixDQUFDLEtBQU0sQ0FBQyxtQkFBb0IsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsY0FBZSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsZ0JBQWlCLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsZ0JBQWlCLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsS0FBTSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsWUFBYSxDQUFDLE9BQVEsQ0FBQyxpQkFBa0IsQ0FBQyxPQUFRLENBQUMsd0JBQXlCLENBQUMsT0FBUSxDQUFDLFlBQWEsQ0FBQyxNQUFPLENBQUMsa0JBQW1CLENBQUMsT0FBUSxDQUFDLGtCQUFtQixDQUFDLE9BQVEsQ0FBQyx1QkFBd0IsQ0FBQyxPQUFRLENBQUMsZ0JBQWlCLENBQUMsUUFBUyxDQUFDLHNCQUF1QixDQUFDLFFBQVMsQ0FBQywyQkFBNEIsQ0FBQyxRQUFTLENBQUMsdUJBQXdCLENBQUMsUUFBUyxDQUFDLG1CQUFvQixDQUFDLE9BQVEsQ0FBQyxpQkFBa0IsQ0FBQyxPQUFRLENBQUMsZ0JBQWlCLENBQUMsT0FBUSxDQUFDLG9CQUFxQixDQUFDLE9BQVEsQ0FBQyxvQkFBcUIsQ0FBQyxPQUFRLENBQUMsZUFBZ0IsQ0FBQyxRQUFTLENBQUMsWUFBYSxDQUFDLE9BQVEsQ0FBQyxZQUFhLENBQUMsT0FBUSxDQUFDLFlBQWEsQ0FBQyxPQUFRLENBQUMsbUJBQW9CLENBQUMsT0FBUSxDQUFDLFlBQWEsQ0FBQyxNQUFPLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLGtCQUFtQixDQUFDLE9BQVEsQ0FBQyxtQkFBb0IsQ0FBQyxPQUFRLENBQUMsc0JBQXVCLENBQUMsUUFBUyxDQUFDLG9CQUFxQixDQUFDLFFBQVMsQ0FBQyxvQkFBcUIsQ0FBQyxRQUFTLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLHFCQUFzQixDQUFDLFFBQVMsQ0FBQyxxQkFBc0IsQ0FBQyxRQUFTLENBQUMsa0JBQW1CLENBQUMsT0FBUSxDQUFDLGVBQWdCLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxLQUFNLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLEtBQU0sQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxLQUFNLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLG1CQUFvQixDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLHVCQUF3QixDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsVUFBVyxDQUFDLE1BQU8sQ0FBQyxVQUFXLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsYUFBYyxDQUFDLFFBQVMsQ0FBQyxjQUFlLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLEtBQU0sQ0FBQyxhQUFjLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsY0FBZSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLEtBQU0sQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsY0FBZSxDQUFDLE9BQVEsQ0FBQyxlQUFnQixDQUFDLE9BQVEsQ0FBQyxlQUFnQixDQUFDLE9BQVEsQ0FBQyxnQkFBaUIsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsb0JBQXFCLENBQUMsT0FBUSxDQUFDLHdCQUF5QixDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsSUFBSyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxhQUFjLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxLQUFNLENBQUMsT0FBUSxDQUFDLEtBQU0sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsS0FBTSxRQUFTLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsS0FBTSxDQUFDLE9BQVEsQ0FBQyxLQUFNLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxLQUFNLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsS0FBTSxDQUFDLGVBQWdCLENBQUMsT0FBUSxDQUFDLG1CQUFvQixDQUFDLE9BQVEsQ0FBQyxtQkFBb0IsQ0FBQyxPQUFRLENBQUMsaUJBQWtCLENBQUMsUUFBUyxDQUFDLGNBQWUsQ0FBQyxPQUFRLENBQUMsb0JBQXFCLENBQUMsUUFBUyxDQUFDLGVBQWdCLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsS0FBTSxDQUFDLEtBQU0sQ0FBQyxLQUFNLENBQUMsS0FBTSxDQUFDLEtBQU0sQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsWUFBYSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsWUFBYSxDQUFDLE9BQVEsQ0FBQyxhQUFjLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxZQUFhLENBQUMsS0FBTSxRQUFTLENBQUMsT0FBUSxDQUFDLEtBQU0sUUFBUyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLEtBQU0sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFlBQWEsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxlQUFnQixDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsUUFBUyxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLGdCQUFpQixDQUFDLE9BQVEsQ0FBQyxpQkFBa0IsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxlQUFnQixDQUFDLE9BQVEsQ0FBQyxZQUFhLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsS0FBTSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLEtBQU0sQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsYUFBYyxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxLQUFNLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsS0FBTSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxlQUFnQixDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLGlCQUFrQixDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxLQUFNLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBVSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLGFBQWMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFD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QixDQUFDLFFBQVMsQ0FBQyxpQkFBa0IsQ0FBQyxRQUFTLENBQUMsZ0JBQWlCLENBQUMsT0FBUSxDQUFDLGlCQUFrQixDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsS0FBTSxDQUFDLGlCQUFrQixDQUFDLE9BQVEsQ0FBQyxrQkFBbUIsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLEtBQU0sQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsS0FBTSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLEtBQU0sQ0FBQyxLQUFNLENBQUMsS0FBTSxDQUFDLEtBQU0sQ0FBQyxLQUFNLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxZQUFhLENBQUMsS0FBTSxRQUFTLENBQUMsT0FBUSxDQUFDLEtBQU0sUUFBUyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsYUFBYyxDQUFDLE9BQVEsQ0FBQyxhQUFjLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsZ0JBQWlCLENBQUMsT0FBUSxDQUFDLGNBQWUsQ0FBQyxPQUFRLENBQUMsWUFBYSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxLQUFNLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxZQUFhLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLEtBQU0sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsS0FBTSxDQUFDLE1BQU8sQ0FBQyxLQUFNLENBQUMsTUFBTyxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsS0FBTSxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsTUFBTyxNQUFPLENBQUMsUUFBUyxDQUFDLEtBQU0sTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxLQUFNLE1BQU8sQ0FBQyxTQUFVLENBQUMsS0FBTSxNQUFPLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE1BQU8sTUFBTyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxLQUFNLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxLQUFNLE1BQU8sQ0FBQyxzQkFBdUIsQ0FBQyxPQUFRLENBQUMscUJBQXNCLENBQUMsT0FBUSxDQUFDLG9CQUFxQixDQUFDLE9BQVEsQ0FBQyx3QkFBeUIsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxLQUFNLE1BQU8sQ0FBQyx1QkFBd0IsQ0FBQyxPQUFRLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLEtBQU0sTUFBTyxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsS0FBTSxNQUFPLENBQUMsWUFBYSxDQUFDLE1BQU8sTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLE1BQU8sQ0FBQyxNQUFPLENBQUMsS0FBTSxNQUFPLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsS0FBTSxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxLQUFNLE1BQU8sQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxLQUFNLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsS0FBTSxNQUFPLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxhQUFjLENBQUMsT0FBUSxDQUFDLGFBQWMsQ0FBQyxPQUFRLENBQUMsa0JBQW1CLENB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QyxnQkFBaUIsQ0FBQyxPQUFRLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLFlBQWEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsTUFBTyxPQUFRLENBQUMsUUFBUyxDQUFDLEtBQU0sTUFBTyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLE1BQU8sTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxNQUFPLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxLQUFNLE1BQU8sQ0FBQyxjQUFlLENBQUMsT0FBUSxDQUFDLGNBQWUsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsTUFBTyxNQUFPLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFlBQWEsQ0FBQyxPQUFRLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxNQUFPLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsS0FBTSxPQUFRLENBQUMsWUFBYSxDQUFDLE9BQVEsQ0FBQyxhQUFjLENBQUMsTUFBTyxNQUFPLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsTUFBTyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxNQUFPLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsS0FBTSxPQUFRLENBQUMsWUFBYSxDQUFDLE9BQVEsQ0FBQyxhQUFjLENBQUMsTUFBTyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxnQkFBaUIsQ0FBQyxPQUFRLENBQUMsa0JBQW1CLENBQUMsT0FBUSxDQUFDLGlCQUFrQixDQUFDLE9BQVEsQ0FBQyxtQkFBb0IsQ0FBQyxPQUFRLENBQUMsS0FBTSxDQUFDLE1BQU8sQ0FBQyxLQUFNLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxLQUFNLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxLQUFNLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxLQUFNLE9BQVEsQ0FBQyxPQUFRLENBQUMsR0FBSSxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLEtBQU0sT0FBUSxDQUFDLE9BQVEsQ0FBQyxHQUFJLE9BQVEsQ0FBQyxVQUFXLENBQUMsS0FBTSxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxVQUFXLENBQUMsS0FBTSxPQUFRLENBQUMsUUFBUyxDQUFDLEtBQU0sT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsVUFBVyxDQUFDLE1BQU8sQ0FBQyxVQUFXLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyx1QkFBd0IsQ0FBQyxPQUFRLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLEtBQU0sQ0FBQyxRQUFTLENBQUMsS0FBTSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxLQUFNLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxZQUFhLENBQUMsT0FBUSxDQUFDLGNBQWUsQ0FBQyxPQUFRLENBQUMsa0JBQW1CLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxLQUFNLENBQUMsU0FBVSxDQUFDLEtBQU0sQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLEtBQU0sQ0FBQyxNQUFPLENBQUMsS0FBTSxDQUFDLE1BQU8sQ0FBQyxZQUFhLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLEtBQU0sQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxZQUFhLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLEtBQU0sQ0FBQyxNQUFPLENBQUMsZ0JBQWlCLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxLQUFNLENBQUMsUUFBUyxDQUFDLEtBQU0sQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxhQUFjLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsY0FBZSxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLGdCQUFpQixDQUFDLFFBQVMsQ0FBQyxxQkFBc0IsQ0FBQyxPQUFRLENBQUMsZ0JBQWlCLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsY0FBZSxDQUFDLFFBQVMsQ0FBQyxXQUFZLENBQUMsUUFBUyxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsZUFBZ0IsQ0FBQyxPQUFRLENBQUMsYUFBYyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLGNBQWUsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsS0FBTSxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLEtBQU0sQ0FBQyxPQUFRLENBQUMsS0FBTSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLEtBQU0sTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsWUFBYSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLEtBQU0sQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyx3QkFBeUIsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLEtBQU0sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLHFCQUFzQixDQUFDLE9BQVEsQ0FBQyx1QkFBd0IsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLG9CQUFxQixDQUFDLFFBQVMsQ0FBQyxnQkFBaUIsQ0FBQyxPQUFRLENBQUMsYUFBYyxDQUFDLE9BQVEsQ0FBQyxhQUFjLENBQUMsT0FBUSxDQUFDLGFBQWMsQ0FBQyxPQUFRLENBQUMsc0JBQXVCLENBQUMsT0FBUSxDQUFDLGlCQUFrQixDQUFDLE9BQVEsQ0FBQyxlQUFnQixDQUFDLE9BQVEsQ0FBQyxxQkFBc0IsQ0FBQyxRQUFTLENBQUMscUJBQXNCLENBQUMsUUFBUyxDQUFDLHFCQUFzQixDQUFDLFFBQVMsQ0FBQyxrQkFBbUIsQ0FBQyxPQUFRLENBQUMsYUFBYyxDQUFDLE9BQVEsQ0FBQyxtQkFBb0IsQ0FBQyxPQUFRLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLGtCQUFtQixDQUFDLE9BQVEsQ0FBQyxvQkFBcUIsQ0FBQyxPQUFRLENBQUMsbUJBQW9CLENBQUMsT0FBUSxDQUFDLGtCQUFtQixDQUFDLE9BQVEsQ0FBQyxnQkFBaUIsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxpQkFBa0IsQ0FBQyxRQUFTLENBQUMsa0JBQW1CLENBQUMsT0FBUSxDQUFDLG1CQUFvQixDQUFDLFFBQVMsQ0FBQyxnQkFBaUIsQ0FBQyxPQUFRLENBQUMscUJBQXNCLENBQUMsT0FBUSxDQUFDLG9CQUFxQixDQUFDLFFBQVMsQ0FBQyxtQkFBb0IsQ0FBQyxRQUFTLENBQUMsbUJBQW9CLENBQUMsUUFBUyxDQUFDLGdCQUFpQixDQUFDLE9BQVEsQ0FBQyxpQkFBa0IsQ0FBQyxRQUFTLENBQUMsY0FBZSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLGVBQWdCLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLGFBQWMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxlQUFnQixDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsS0FBTSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLGNBQWUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxLQUFNLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLGtCQUFtQixDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxjQUFlLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsS0FBTSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxLQUFNLENBQUMsUUFBUyxDQUFDLEtBQU0sQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsS0FBTSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLGlCQUFrQixDQUFDLE9BQVEsQ0FBQyxpQkFBa0IsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxnQkFBaUIsQ0FBQyxPQUFRLENBQUMsa0JBQW1CLENBQUMsT0FBUSxDQUFDLGVBQWdCLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxjQUFlLENBQUMsT0FBUSxDQUFDLGdCQUFpQixDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsTUFBTyxRQUFTLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsS0FBTSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFlBQWEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxLQUFNLFFBQVMsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxLQUFNLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLGFBQWMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsYUFBYyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMscUJBQXNCLENBQUMsT0FBUSxDQUFDLGVBQWdCLENBQUMsT0FBUSxDQUFDLG9CQUFxQixDQUFDLE9BQVEsQ0FBQyxpQkFBa0IsQ0FBQyxPQUFRLENBQUMsc0JBQXVCLENBQUMsT0FBUSxDQUFDLGNBQWUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsa0JBQW1CLENBQUMsT0FBUSxDQUFDLGNBQWUsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsWUFBYSxDQUFDLFFBQVMsQ0FBQyxjQUFlLENBQUMsT0FBUSxDQUFDLFlBQWEsQ0FBQyxPQUFRLENBQUMsYUFBYyxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxhQUFjLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsY0FBZSxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLGdCQUFpQixDQUFDLFFBQVMsQ0FBQyxxQkFBc0IsQ0FBQyxPQUFRLENBQUMsZ0JBQWlCLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsY0FBZSxDQUFDLFFBQVMsQ0FBQyxXQUFZLENBQUMsUUFBUyxDQUFDLFdBQVksQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxnQkFBaUIsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxZQUFhLENBQUMsUUFBUyxDQUFDLFlBQWEsQ0FBQyxPQUFRLENBQUMsYUFBYyxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsSUFBSyxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFlBQWEsQ0FBQyxPQUFRLENBQUMsWUFBYSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsV0FBWSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLGNBQWUsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE9BQVEsQ0FBQyxhQUFjLENBQUMsS0FBTSxPQUFRLENBQUMsWUFBYSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLGFBQWMsQ0FBQyxPQUFRLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLGFBQWMsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLGVBQWdCLENBQUMsT0FBUSxDQUFDLGVBQWdCLENBQUMsT0FBUSxDQUFDLGlCQUFrQixDQUFDLE9BQVEsQ0FBQyxZQUFhLENBQUMsT0FBUSxDQUFDLGdCQUFpQixDQUFDLE9BQVEsQ0FBQyxrQkFBbUIsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsWUFBYSxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsVUFBVyxDQUFDLFFBQVMsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLG1CQUFvQixDQUFDLE9BQVEsQ0FBQyxvQkFBcUIsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFdBQVksQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxXQUFZLENBQUMsS0FBTSxDQUFDLGFBQWMsQ0FBQyxPQUFRLENBQUMsZUFBZ0IsQ0FBQyxPQUFRLENBQUMsbUJBQW9CLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsWUFBYSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLGFBQWMsQ0FBQyxRQUFTLENBQUMsVUFBVyxDQUFDLE9BQVEsQ0FBQyxVQUFXLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxPQUFRLENBQUMsbUJBQW9CLENBQUMsT0FBUSxDQUFDLGNBQWUsQ0FBQyxPQUFRLENBQUMsY0FBZSxDQUFDLE9BQVEsQ0FBQyxjQUFlLENBQUMsT0FBUSxDQUFDLGdCQUFpQixDQUFDLFFBQVMsQ0FBQyxnQkFBaUIsQ0FBQyxPQUFRLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsaUJBQWtCLENBQUMsT0FBUSxDQUFDLGtCQUFtQixDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxVQUFXLENBQUMsTUFBTyxDQUFDLFVBQVcsQ0FBQyxNQUFPLENBQUMsYUFBYyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLGFBQWMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxVQUFXLENBQUMsUUFBUyxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsYUFBYyxDQUFDLE9BQVEsQ0FBQyxXQUFZLENBQUMsT0FBUSxDQUFDLGFBQWMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFlBQWEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsV0FBWSxDQUFDLE1BQU8sQ0FBQyxlQUFnQixDQUFDLEtBQU0sUUFBUyxDQUFDLGdCQUFpQixDQUFDLE1BQU8sUUFBUyxDQUFDLGVBQWdCLENBQUMsS0FBTSxRQUFTLENBQUMsZ0JBQWlCLENBQUMsTUFBTyxRQUFTLENBQUMsV0FBWSxDQUFDLE1BQU8sQ0FBQyxrQkFBbUIsQ0FBQyxPQUFRLENBQUMsbUJBQW9CLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsY0FBZSxDQUFDLE9BQVEsQ0FBQyxlQUFnQixDQUFDLE1BQU8sQ0FBQyxvQkFBcUIsQ0FBQyxRQUFTLENBQUMsZ0JBQWlCLENBQUMsT0FBUSxDQUFDLGdCQUFpQixDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsS0FBTSxPQUFRLENBQUMsUUFBUyxDQUFDLEtBQU0sT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLFNBQVUsQ0FBQyxNQUFPLFFBQVMsQ0FBQyxTQUFVLENBQUMsS0FBTSxRQUFTLENBQUMsU0FBVSxDQUFDLE1BQU8sUUFBUyxDQUFDLFNBQVUsQ0FBQyxLQUFNLFFBQVMsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFVBQVcsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLEtBQU0sQ0FBQyxPQUFRLENBQUMsS0FBTSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxRQUFTLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsS0FBTSxDQUFDLE1BQU8sQ0FBQyxLQUFNLENBQUMsTUFBTyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxRQUFTLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsU0FBVSxDQUFDLFFBQVMsQ0FBQyxTQUFVLENBQUMsUUFBUyxDQUFDLFFBQVMsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxNQUFPLENBQUMsU0FBVSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsUUFBUyxDQUFDLE1BQU8sQ0FBQyxRQUFTLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLE9BQVEsQ0FBQyxNQUFPLENBQUMsTUFBTyxDQUFDLE1BQU8sQ0FBQyxTQUFVLENBQUMsTUFBTyxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsU0FBVSxDQUFDLE9BQVEsQ0FBQyxTQUFVLENBQUMsT0FBUSxDQUFDLFNBQVUsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE9BQVEsQ0FBQyxPQUFRLENBQUMsT0FBUSxDQUFDLE1BQU8sQ0FBQyxPQUFRLENBQUMsTUFBTyxDQUFDLFNBQVUs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QyxNQUFPLFNBQWV5eEIsR0FDcEJyNUMsRUFBSTRuQixNQUFNeXhCLElBRVoxaEIsTUFBTyxXQUNMMzNCLEVBQUk0bkIsTUFBTSx1QkFDVitvQyxFQUFZLGEiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4xXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxtPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiB5KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWlmKCFhYSl0aHJvdyBFcnJvcih5KDIyNykpO3ZhciBiYT1uZXcgU2V0LGNhPXt9O2Z1bmN0aW9uIGRhKGEsYil7ZWEoYSxiKTtlYShhK1wiQ2FwdHVyZVwiLGIpfVxuZnVuY3Rpb24gZWEoYSxiKXtjYVthXT1iO2ZvcihhPTA7YTxiLmxlbmd0aDthKyspYmEuYWRkKGJbYV0pfVxudmFyIGZhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxoYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8saWE9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxcbmphPXt9LGthPXt9O2Z1bmN0aW9uIGxhKGEpe2lmKGlhLmNhbGwoa2EsYSkpcmV0dXJuITA7aWYoaWEuY2FsbChqYSxhKSlyZXR1cm4hMTtpZihoYS50ZXN0KGEpKXJldHVybiBrYVthXT0hMDtqYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBtYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIG5hKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fG1hKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gQihhLGIsYyxkLGUsZixnKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zjt0aGlzLnJlbW92ZUVtcHR5U3RyaW5nPWd9dmFyIEQ9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwwLCExLGEsbnVsbCwhMSwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07RFtiXT1uZXcgQihiLDEsITEsYVsxXSxudWxsLCExLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEsbnVsbCwhMSwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBkaXNhYmxlUmVtb3RlUGxheWJhY2sgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMywhMCxhLG51bGwsITEsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNCwhMSxhLG51bGwsITEsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw2LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO3ZhciBvYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHBhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLFxucGEpO0RbYl09bmV3IEIoYiwxLCExLGEsbnVsbCwhMSwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxwYSk7RFtiXT1uZXcgQihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxwYSk7RFtiXT1uZXcgQihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuRC54bGlua0hyZWY9bmV3IEIoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwLCExKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwLCEwKX0pO1xuZnVuY3Rpb24gcWEoYSxiLGMsZCl7dmFyIGU9RC5oYXNPd25Qcm9wZXJ0eShiKT9EW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwobmEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP2xhKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG52YXIgcmE9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQsc2E9NjAxMDMsdGE9NjAxMDYsdWE9NjAxMDcsd2E9NjAxMDgseGE9NjAxMTQseWE9NjAxMDksemE9NjAxMTAsQWE9NjAxMTIsQmE9NjAxMTMsQ2E9NjAxMjAsRGE9NjAxMTUsRWE9NjAxMTYsRmE9NjAxMjEsR2E9NjAxMjgsSGE9NjAxMjksSWE9NjAxMzAsSmE9NjAxMzE7XG5pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgRT1TeW1ib2wuZm9yO3NhPUUoXCJyZWFjdC5lbGVtZW50XCIpO3RhPUUoXCJyZWFjdC5wb3J0YWxcIik7dWE9RShcInJlYWN0LmZyYWdtZW50XCIpO3dhPUUoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTt4YT1FKFwicmVhY3QucHJvZmlsZXJcIik7eWE9RShcInJlYWN0LnByb3ZpZGVyXCIpO3phPUUoXCJyZWFjdC5jb250ZXh0XCIpO0FhPUUoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTtCYT1FKFwicmVhY3Quc3VzcGVuc2VcIik7Q2E9RShcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik7RGE9RShcInJlYWN0Lm1lbW9cIik7RWE9RShcInJlYWN0LmxhenlcIik7RmE9RShcInJlYWN0LmJsb2NrXCIpO0UoXCJyZWFjdC5zY29wZVwiKTtHYT1FKFwicmVhY3Qub3BhcXVlLmlkXCIpO0hhPUUoXCJyZWFjdC5kZWJ1Z190cmFjZV9tb2RlXCIpO0lhPUUoXCJyZWFjdC5vZmZzY3JlZW5cIik7SmE9RShcInJlYWN0LmxlZ2FjeV9oaWRkZW5cIil9XG52YXIgS2E9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIExhKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1LYSYmYVtLYV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH12YXIgTWE7ZnVuY3Rpb24gTmEoYSl7aWYodm9pZCAwPT09TWEpdHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGMpe3ZhciBiPWMuc3RhY2sudHJpbSgpLm1hdGNoKC9cXG4oICooYXQgKT8pLyk7TWE9YiYmYlsxXXx8XCJcIn1yZXR1cm5cIlxcblwiK01hK2F9dmFyIE9hPSExO1xuZnVuY3Rpb24gUGEoYSxiKXtpZighYXx8T2EpcmV0dXJuXCJcIjtPYT0hMDt2YXIgYz1FcnJvci5wcmVwYXJlU3RhY2tUcmFjZTtFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT12b2lkIDA7dHJ5e2lmKGIpaWYoYj1mdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYi5wcm90b3R5cGUsXCJwcm9wc1wiLHtzZXQ6ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO319KSxcIm9iamVjdFwiPT09dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuY29uc3RydWN0KXt0cnl7UmVmbGVjdC5jb25zdHJ1Y3QoYixbXSl9Y2F0Y2goayl7dmFyIGQ9a31SZWZsZWN0LmNvbnN0cnVjdChhLFtdLGIpfWVsc2V7dHJ5e2IuY2FsbCgpfWNhdGNoKGspe2Q9a31hLmNhbGwoYi5wcm90b3R5cGUpfWVsc2V7dHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGspe2Q9a31hKCl9fWNhdGNoKGspe2lmKGsmJmQmJlwic3RyaW5nXCI9PT10eXBlb2Ygay5zdGFjayl7Zm9yKHZhciBlPWsuc3RhY2suc3BsaXQoXCJcXG5cIiksXG5mPWQuc3RhY2suc3BsaXQoXCJcXG5cIiksZz1lLmxlbmd0aC0xLGg9Zi5sZW5ndGgtMTsxPD1nJiYwPD1oJiZlW2ddIT09ZltoXTspaC0tO2Zvcig7MTw9ZyYmMDw9aDtnLS0saC0tKWlmKGVbZ10hPT1mW2hdKXtpZigxIT09Z3x8MSE9PWgpe2RvIGlmKGctLSxoLS0sMD5ofHxlW2ddIT09ZltoXSlyZXR1cm5cIlxcblwiK2VbZ10ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO3doaWxlKDE8PWcmJjA8PWgpfWJyZWFrfX19ZmluYWxseXtPYT0hMSxFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT1jfXJldHVybihhPWE/YS5kaXNwbGF5TmFtZXx8YS5uYW1lOlwiXCIpP05hKGEpOlwiXCJ9XG5mdW5jdGlvbiBRYShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTpyZXR1cm4gTmEoYS50eXBlKTtjYXNlIDE2OnJldHVybiBOYShcIkxhenlcIik7Y2FzZSAxMzpyZXR1cm4gTmEoXCJTdXNwZW5zZVwiKTtjYXNlIDE5OnJldHVybiBOYShcIlN1c3BlbnNlTGlzdFwiKTtjYXNlIDA6Y2FzZSAyOmNhc2UgMTU6cmV0dXJuIGE9UGEoYS50eXBlLCExKSxhO2Nhc2UgMTE6cmV0dXJuIGE9UGEoYS50eXBlLnJlbmRlciwhMSksYTtjYXNlIDIyOnJldHVybiBhPVBhKGEudHlwZS5fcmVuZGVyLCExKSxhO2Nhc2UgMTpyZXR1cm4gYT1QYShhLnR5cGUsITApLGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIFJhKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgdGE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIHhhOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIHdhOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgQmE6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgQ2E6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgemE6cmV0dXJuKGEuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgeWE6cmV0dXJuKGEuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgQWE6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7XG5yZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIERhOnJldHVybiBSYShhLnR5cGUpO2Nhc2UgRmE6cmV0dXJuIFJhKGEuX3JlbmRlcik7Y2FzZSBFYTpiPWEuX3BheWxvYWQ7YT1hLl9pbml0O3RyeXtyZXR1cm4gUmEoYShiKSl9Y2F0Y2goYyl7fX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBTYShhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gVGEoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFVhKGEpe3ZhciBiPVRhKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBWYShhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9VWEoYSkpfWZ1bmN0aW9uIFdhKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1UYShhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIFhhKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1cbmZ1bmN0aW9uIFlhKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBtKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBaYShhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1TYShudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uICRhKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmcWEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIGFiKGEsYil7JGEoYSxiKTt2YXIgYz1TYShiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9iYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZiYihhLGIudHlwZSxTYShiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIGNiKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBiYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fFhhKGEub3duZXJEb2N1bWVudCkhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBkYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBlYihhLGIpe2E9bSh7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPWRiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIGZiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIitTYShjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gZ2IoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHkoOTEpKTtyZXR1cm4gbSh7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBoYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcih5KDkyKSk7aWYoQXJyYXkuaXNBcnJheShjKSl7aWYoISgxPj1jLmxlbmd0aCkpdGhyb3cgRXJyb3IoeSg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOlNhKGMpfX1cbmZ1bmN0aW9uIGliKGEsYil7dmFyIGM9U2EoYi52YWx1ZSksZD1TYShiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGpiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9dmFyIGtiPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIGxiKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gbWIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2xiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG5iLG9iPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PWtiLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle25iPW5ifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO25iLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPW5iLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIHBiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcWI9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scmI9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHFiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JiLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cWJbYl09cWJbYV19KX0pO2Z1bmN0aW9uIHNiKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxxYi5oYXNPd25Qcm9wZXJ0eShhKSYmcWJbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gdGIoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9c2IoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdWI9bSh7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHZiKGEsYil7aWYoYil7aWYodWJbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih5KDEzNyxhKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih5KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih5KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih5KDYyKSk7fX1cbmZ1bmN0aW9uIHdiKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1mdW5jdGlvbiB4YihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9dmFyIHliPW51bGwsemI9bnVsbCxBYj1udWxsO1xuZnVuY3Rpb24gQmIoYSl7aWYoYT1DYihhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHliKXRocm93IEVycm9yKHkoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9RGIoYikseWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRWIoYSl7emI/QWI/QWIucHVzaChhKTpBYj1bYV06emI9YX1mdW5jdGlvbiBGYigpe2lmKHpiKXt2YXIgYT16YixiPUFiO0FiPXpiPW51bGw7QmIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUJiKGJbYV0pfX1mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKGEsYixjLGQsZSl7cmV0dXJuIGEoYixjLGQsZSl9ZnVuY3Rpb24gSWIoKXt9dmFyIEpiPUdiLEtiPSExLExiPSExO2Z1bmN0aW9uIE1iKCl7aWYobnVsbCE9PXpifHxudWxsIT09QWIpSWIoKSxGYigpfVxuZnVuY3Rpb24gTmIoYSxiLGMpe2lmKExiKXJldHVybiBhKGIsYyk7TGI9ITA7dHJ5e3JldHVybiBKYihhLGIsYyl9ZmluYWxseXtMYj0hMSxNYigpfX1cbmZ1bmN0aW9uIE9iKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9RGIoYyk7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGMpdGhyb3cgRXJyb3IoeSgyMzEsYix0eXBlb2YgYykpO3JldHVybiBjfXZhciBQYj0hMTtpZihmYSl0cnl7dmFyIFFiPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShRYixcInBhc3NpdmVcIix7Z2V0OmZ1bmN0aW9uKCl7UGI9ITB9fSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsUWIsUWIpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKX1jYXRjaChhKXtQYj0hMX1mdW5jdGlvbiBSYihhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobil7dGhpcy5vbkVycm9yKG4pfX12YXIgU2I9ITEsVGI9bnVsbCxVYj0hMSxWYj1udWxsLFdiPXtvbkVycm9yOmZ1bmN0aW9uKGEpe1NiPSEwO1RiPWF9fTtmdW5jdGlvbiBYYihhLGIsYyxkLGUsZixnLGgsayl7U2I9ITE7VGI9bnVsbDtSYi5hcHBseShXYixhcmd1bWVudHMpfVxuZnVuY3Rpb24gWWIoYSxiLGMsZCxlLGYsZyxoLGspe1hiLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihTYil7aWYoU2Ipe3ZhciBsPVRiO1NiPSExO1RiPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih5KDE5OCkpO1VifHwoVWI9ITAsVmI9bCl9fWZ1bmN0aW9uIFpiKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5mbGFncyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gJGIoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBhYyhhKXtpZihaYihhKSE9PWEpdGhyb3cgRXJyb3IoeSgxODgpKTt9XG5mdW5jdGlvbiBiYyhhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1aYihhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcih5KDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBhYyhlKSxhO2lmKGY9PT1kKXJldHVybiBhYyhlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHkoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IoeSgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcih5KDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGNjKGEpe2E9YmMoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkYyhhLGIpe2Zvcih2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09Yjspe2lmKGI9PT1hfHxiPT09YylyZXR1cm4hMDtiPWIucmV0dXJufXJldHVybiExfXZhciBlYyxmYyxnYyxoYyxpYz0hMSxqYz1bXSxrYz1udWxsLGxjPW51bGwsbWM9bnVsbCxuYz1uZXcgTWFwLG9jPW5ldyBNYXAscGM9W10scWM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gcmMoYSxiLGMsZCxlKXtyZXR1cm57YmxvY2tlZE9uOmEsZG9tRXZlbnROYW1lOmIsZXZlbnRTeXN0ZW1GbGFnczpjfDE2LG5hdGl2ZUV2ZW50OmUsdGFyZ2V0Q29udGFpbmVyczpbZF19fWZ1bmN0aW9uIHNjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6Y2FzZSBcImZvY3Vzb3V0XCI6a2M9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmxjPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOm1jPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpuYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpvYy5kZWxldGUoYi5wb2ludGVySWQpfX1cbmZ1bmN0aW9uIHRjKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9cmMoYixjLGQsZSxmKSxudWxsIT09YiYmKGI9Q2IoYiksbnVsbCE9PWImJmZjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtiPWEudGFyZ2V0Q29udGFpbmVycztudWxsIT09ZSYmLTE9PT1iLmluZGV4T2YoZSkmJmIucHVzaChlKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHVjKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c2luXCI6cmV0dXJuIGtjPXRjKGtjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBsYz10YyhsYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gbWM9dGMobWMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtuYy5zZXQoZix0YyhuYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsb2Muc2V0KGYsdGMob2MuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gdmMoYSl7dmFyIGI9d2MoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1aYihiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj0kYihjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtoYyhhLmxhbmVQcmlvcml0eSxmdW5jdGlvbigpe3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXtnYyhjKX0pfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5oeWRyYXRlKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1cbmZ1bmN0aW9uIHhjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTtmb3IodmFyIGI9YS50YXJnZXRDb250YWluZXJzOzA8Yi5sZW5ndGg7KXt2YXIgYz15YyhhLmRvbUV2ZW50TmFtZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYlswXSxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09YylyZXR1cm4gYj1DYihjKSxudWxsIT09YiYmZmMoYiksYS5ibG9ja2VkT249YywhMTtiLnNoaWZ0KCl9cmV0dXJuITB9ZnVuY3Rpb24gemMoYSxiLGMpe3hjKGEpJiZjLmRlbGV0ZShiKX1cbmZ1bmN0aW9uIEFjKCl7Zm9yKGljPSExOzA8amMubGVuZ3RoOyl7dmFyIGE9amNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPUNiKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmZWMoYSk7YnJlYWt9Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpe2EuYmxvY2tlZE9uPWM7YnJlYWt9Yi5zaGlmdCgpfW51bGw9PT1hLmJsb2NrZWRPbiYmamMuc2hpZnQoKX1udWxsIT09a2MmJnhjKGtjKSYmKGtjPW51bGwpO251bGwhPT1sYyYmeGMobGMpJiYobGM9bnVsbCk7bnVsbCE9PW1jJiZ4YyhtYykmJihtYz1udWxsKTtuYy5mb3JFYWNoKHpjKTtvYy5mb3JFYWNoKHpjKX1cbmZ1bmN0aW9uIEJjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCxpY3x8KGljPSEwLHIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LEFjKSkpfVxuZnVuY3Rpb24gQ2MoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gQmMoYixhKX1pZigwPGpjLmxlbmd0aCl7QmMoamNbMF0sYSk7Zm9yKHZhciBjPTE7YzxqYy5sZW5ndGg7YysrKXt2YXIgZD1qY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PWtjJiZCYyhrYyxhKTtudWxsIT09bGMmJkJjKGxjLGEpO251bGwhPT1tYyYmQmMobWMsYSk7bmMuZm9yRWFjaChiKTtvYy5mb3JFYWNoKGIpO2ZvcihjPTA7YzxwYy5sZW5ndGg7YysrKWQ9cGNbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPHBjLmxlbmd0aCYmKGM9cGNbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspdmMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZwYy5zaGlmdCgpfVxuZnVuY3Rpb24gRGMoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgRWM9e2FuaW1hdGlvbmVuZDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOkRjKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sRmM9e30sR2M9e307XG5mYSYmKEdjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIEVjLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIEVjLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIEVjLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIEVjLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gSGMoYSl7aWYoRmNbYV0pcmV0dXJuIEZjW2FdO2lmKCFFY1thXSlyZXR1cm4gYTt2YXIgYj1FY1thXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBHYylyZXR1cm4gRmNbYV09YltjXTtyZXR1cm4gYX1cbnZhciBJYz1IYyhcImFuaW1hdGlvbmVuZFwiKSxKYz1IYyhcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxLYz1IYyhcImFuaW1hdGlvbnN0YXJ0XCIpLExjPUhjKFwidHJhbnNpdGlvbmVuZFwiKSxNYz1uZXcgTWFwLE5jPW5ldyBNYXAsT2M9W1wiYWJvcnRcIixcImFib3J0XCIsSWMsXCJhbmltYXRpb25FbmRcIixKYyxcImFuaW1hdGlvbkl0ZXJhdGlvblwiLEtjLFwiYW5pbWF0aW9uU3RhcnRcIixcImNhbnBsYXlcIixcImNhblBsYXlcIixcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiLFwiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCIsXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiLFwiZW5kZWRcIixcImVuZGVkXCIsXCJlcnJvclwiLFwiZXJyb3JcIixcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiLFwibG9hZFwiLFwibG9hZFwiLFwibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLFwibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCIsXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiLFxuXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLFwicGxheWluZ1wiLFwicGxheWluZ1wiLFwicHJvZ3Jlc3NcIixcInByb2dyZXNzXCIsXCJzZWVraW5nXCIsXCJzZWVraW5nXCIsXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsTGMsXCJ0cmFuc2l0aW9uRW5kXCIsXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdO2Z1bmN0aW9uIFBjKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKz0yKXt2YXIgZD1hW2NdLGU9YVtjKzFdO2U9XCJvblwiKyhlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSk7TmMuc2V0KGQsYik7TWMuc2V0KGQsZSk7ZGEoZSxbZF0pfX12YXIgUWM9ci51bnN0YWJsZV9ub3c7UWMoKTt2YXIgRj04O1xuZnVuY3Rpb24gUmMoYSl7aWYoMCE9PSgxJmEpKXJldHVybiBGPTE1LDE7aWYoMCE9PSgyJmEpKXJldHVybiBGPTE0LDI7aWYoMCE9PSg0JmEpKXJldHVybiBGPTEzLDQ7dmFyIGI9MjQmYTtpZigwIT09YilyZXR1cm4gRj0xMixiO2lmKDAhPT0oYSYzMikpcmV0dXJuIEY9MTEsMzI7Yj0xOTImYTtpZigwIT09YilyZXR1cm4gRj0xMCxiO2lmKDAhPT0oYSYyNTYpKXJldHVybiBGPTksMjU2O2I9MzU4NCZhO2lmKDAhPT1iKXJldHVybiBGPTgsYjtpZigwIT09KGEmNDA5NikpcmV0dXJuIEY9Nyw0MDk2O2I9NDE4NjExMiZhO2lmKDAhPT1iKXJldHVybiBGPTYsYjtiPTYyOTE0NTYwJmE7aWYoMCE9PWIpcmV0dXJuIEY9NSxiO2lmKGEmNjcxMDg4NjQpcmV0dXJuIEY9NCw2NzEwODg2NDtpZigwIT09KGEmMTM0MjE3NzI4KSlyZXR1cm4gRj0zLDEzNDIxNzcyODtiPTgwNTMwNjM2OCZhO2lmKDAhPT1iKXJldHVybiBGPTIsYjtpZigwIT09KDEwNzM3NDE4MjQmYSkpcmV0dXJuIEY9MSwxMDczNzQxODI0O1xuRj04O3JldHVybiBhfWZ1bmN0aW9uIFNjKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiAxNTtjYXNlIDk4OnJldHVybiAxMDtjYXNlIDk3OmNhc2UgOTY6cmV0dXJuIDg7Y2FzZSA5NTpyZXR1cm4gMjtkZWZhdWx0OnJldHVybiAwfX1mdW5jdGlvbiBUYyhhKXtzd2l0Y2goYSl7Y2FzZSAxNTpjYXNlIDE0OnJldHVybiA5OTtjYXNlIDEzOmNhc2UgMTI6Y2FzZSAxMTpjYXNlIDEwOnJldHVybiA5ODtjYXNlIDk6Y2FzZSA4OmNhc2UgNzpjYXNlIDY6Y2FzZSA0OmNhc2UgNTpyZXR1cm4gOTc7Y2FzZSAzOmNhc2UgMjpjYXNlIDE6cmV0dXJuIDk1O2Nhc2UgMDpyZXR1cm4gOTA7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDM1OCxhKSk7fX1cbmZ1bmN0aW9uIFVjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXM7aWYoMD09PWMpcmV0dXJuIEY9MDt2YXIgZD0wLGU9MCxmPWEuZXhwaXJlZExhbmVzLGc9YS5zdXNwZW5kZWRMYW5lcyxoPWEucGluZ2VkTGFuZXM7aWYoMCE9PWYpZD1mLGU9Rj0xNTtlbHNlIGlmKGY9YyYxMzQyMTc3MjcsMCE9PWYpe3ZhciBrPWYmfmc7MCE9PWs/KGQ9UmMoayksZT1GKTooaCY9ZiwwIT09aCYmKGQ9UmMoaCksZT1GKSl9ZWxzZSBmPWMmfmcsMCE9PWY/KGQ9UmMoZiksZT1GKTowIT09aCYmKGQ9UmMoaCksZT1GKTtpZigwPT09ZClyZXR1cm4gMDtkPTMxLVZjKGQpO2Q9YyYoKDA+ZD8wOjE8PGQpPDwxKS0xO2lmKDAhPT1iJiZiIT09ZCYmMD09PShiJmcpKXtSYyhiKTtpZihlPD1GKXJldHVybiBiO0Y9ZX1iPWEuZW50YW5nbGVkTGFuZXM7aWYoMCE9PWIpZm9yKGE9YS5lbnRhbmdsZW1lbnRzLGImPWQ7MDxiOyljPTMxLVZjKGIpLGU9MTw8YyxkfD1hW2NdLGImPX5lO3JldHVybiBkfVxuZnVuY3Rpb24gV2MoYSl7YT1hLnBlbmRpbmdMYW5lcyYtMTA3Mzc0MTgyNTtyZXR1cm4gMCE9PWE/YTphJjEwNzM3NDE4MjQ/MTA3Mzc0MTgyNDowfWZ1bmN0aW9uIFhjKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTU6cmV0dXJuIDE7Y2FzZSAxNDpyZXR1cm4gMjtjYXNlIDEyOnJldHVybiBhPVljKDI0Jn5iKSwwPT09YT9YYygxMCxiKTphO2Nhc2UgMTA6cmV0dXJuIGE9WWMoMTkyJn5iKSwwPT09YT9YYyg4LGIpOmE7Y2FzZSA4OnJldHVybiBhPVljKDM1ODQmfmIpLDA9PT1hJiYoYT1ZYyg0MTg2MTEyJn5iKSwwPT09YSYmKGE9NTEyKSksYTtjYXNlIDI6cmV0dXJuIGI9WWMoODA1MzA2MzY4Jn5iKSwwPT09YiYmKGI9MjY4NDM1NDU2KSxifXRocm93IEVycm9yKHkoMzU4LGEpKTt9ZnVuY3Rpb24gWWMoYSl7cmV0dXJuIGEmLWF9ZnVuY3Rpb24gWmMoYSl7Zm9yKHZhciBiPVtdLGM9MDszMT5jO2MrKyliLnB1c2goYSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiAkYyhhLGIsYyl7YS5wZW5kaW5nTGFuZXN8PWI7dmFyIGQ9Yi0xO2Euc3VzcGVuZGVkTGFuZXMmPWQ7YS5waW5nZWRMYW5lcyY9ZDthPWEuZXZlbnRUaW1lcztiPTMxLVZjKGIpO2FbYl09Y312YXIgVmM9TWF0aC5jbHozMj9NYXRoLmNsejMyOmFkLGJkPU1hdGgubG9nLGNkPU1hdGguTE4yO2Z1bmN0aW9uIGFkKGEpe3JldHVybiAwPT09YT8zMjozMS0oYmQoYSkvY2R8MCl8MH12YXIgZGQ9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxlZD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxmZD0hMDtmdW5jdGlvbiBnZChhLGIsYyxkKXtLYnx8SWIoKTt2YXIgZT1oZCxmPUtiO0tiPSEwO3RyeXtIYihlLGEsYixjLGQpfWZpbmFsbHl7KEtiPWYpfHxNYigpfX1mdW5jdGlvbiBpZChhLGIsYyxkKXtlZChkZCxoZC5iaW5kKG51bGwsYSxiLGMsZCkpfVxuZnVuY3Rpb24gaGQoYSxiLGMsZCl7aWYoZmQpe3ZhciBlO2lmKChlPTA9PT0oYiY0KSkmJjA8amMubGVuZ3RoJiYtMTxxYy5pbmRleE9mKGEpKWE9cmMobnVsbCxhLGIsYyxkKSxqYy5wdXNoKGEpO2Vsc2V7dmFyIGY9eWMoYSxiLGMsZCk7aWYobnVsbD09PWYpZSYmc2MoYSxkKTtlbHNle2lmKGUpe2lmKC0xPHFjLmluZGV4T2YoYSkpe2E9cmMoZixhLGIsYyxkKTtqYy5wdXNoKGEpO3JldHVybn1pZih1YyhmLGEsYixjLGQpKXJldHVybjtzYyhhLGQpfWpkKGEsYixkLG51bGwsYyl9fX19XG5mdW5jdGlvbiB5YyhhLGIsYyxkKXt2YXIgZT14YihkKTtlPXdjKGUpO2lmKG51bGwhPT1lKXt2YXIgZj1aYihlKTtpZihudWxsPT09ZillPW51bGw7ZWxzZXt2YXIgZz1mLnRhZztpZigxMz09PWcpe2U9JGIoZik7aWYobnVsbCE9PWUpcmV0dXJuIGU7ZT1udWxsfWVsc2UgaWYoMz09PWcpe2lmKGYuc3RhdGVOb2RlLmh5ZHJhdGUpcmV0dXJuIDM9PT1mLnRhZz9mLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7ZT1udWxsfWVsc2UgZiE9PWUmJihlPW51bGwpfX1qZChhLGIsZCxlLGMpO3JldHVybiBudWxsfXZhciBrZD1udWxsLGxkPW51bGwsbWQ9bnVsbDtcbmZ1bmN0aW9uIG5kKCl7aWYobWQpcmV0dXJuIG1kO3ZhciBhLGI9bGQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gbWQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBvZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1mdW5jdGlvbiBwZCgpe3JldHVybiEwfWZ1bmN0aW9uIHFkKCl7cmV0dXJuITF9XG5mdW5jdGlvbiByZChhKXtmdW5jdGlvbiBiKGIsZCxlLGYsZyl7dGhpcy5fcmVhY3ROYW1lPWI7dGhpcy5fdGFyZ2V0SW5zdD1lO3RoaXMudHlwZT1kO3RoaXMubmF0aXZlRXZlbnQ9Zjt0aGlzLnRhcmdldD1nO3RoaXMuY3VycmVudFRhcmdldD1udWxsO2Zvcih2YXIgYyBpbiBhKWEuaGFzT3duUHJvcGVydHkoYykmJihiPWFbY10sdGhpc1tjXT1iP2IoZik6ZltjXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWYuZGVmYXVsdFByZXZlbnRlZD9mLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1mLnJldHVyblZhbHVlKT9wZDpxZDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXFkO3JldHVybiB0aGlzfW0oYi5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJlxuKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPXBkKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXBkKX0scGVyc2lzdDpmdW5jdGlvbigpe30saXNQZXJzaXN0ZW50OnBkfSk7cmV0dXJuIGJ9XG52YXIgc2Q9e2V2ZW50UGhhc2U6MCxidWJibGVzOjAsY2FuY2VsYWJsZTowLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6MCxpc1RydXN0ZWQ6MH0sdGQ9cmQoc2QpLHVkPW0oe30sc2Qse3ZpZXc6MCxkZXRhaWw6MH0pLHZkPXJkKHVkKSx3ZCx4ZCx5ZCxBZD1tKHt9LHVkLHtzY3JlZW5YOjAsc2NyZWVuWTowLGNsaWVudFg6MCxjbGllbnRZOjAscGFnZVg6MCxwYWdlWTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkLGJ1dHRvbjowLGJ1dHRvbnM6MCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiB2b2lkIDA9PT1hLnJlbGF0ZWRUYXJnZXQ/YS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50OmEucmVsYXRlZFRhcmdldH0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpblxuYSlyZXR1cm4gYS5tb3ZlbWVudFg7YSE9PXlkJiYoeWQmJlwibW91c2Vtb3ZlXCI9PT1hLnR5cGU/KHdkPWEuc2NyZWVuWC15ZC5zY3JlZW5YLHhkPWEuc2NyZWVuWS15ZC5zY3JlZW5ZKTp4ZD13ZD0wLHlkPWEpO3JldHVybiB3ZH0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe3JldHVyblwibW92ZW1lbnRZXCJpbiBhP2EubW92ZW1lbnRZOnhkfX0pLEJkPXJkKEFkKSxDZD1tKHt9LEFkLHtkYXRhVHJhbnNmZXI6MH0pLERkPXJkKENkKSxFZD1tKHt9LHVkLHtyZWxhdGVkVGFyZ2V0OjB9KSxGZD1yZChFZCksR2Q9bSh7fSxzZCx7YW5pbWF0aW9uTmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksSGQ9cmQoR2QpLElkPW0oe30sc2Qse2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxKZD1yZChJZCksS2Q9bSh7fSxzZCx7ZGF0YTowfSksTGQ9cmQoS2QpLE1kPXtFc2M6XCJFc2NhcGVcIixcblNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LE5kPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLDExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLFxuMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxPZD17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGQoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIHpkKCl7cmV0dXJuIFBkfVxudmFyIFFkPW0oe30sdWQse2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9TWRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2QoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP05kW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sY29kZTowLGxvY2F0aW9uOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLHJlcGVhdDowLGxvY2FsZTowLGdldE1vZGlmaWVyU3RhdGU6emQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29kKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2QoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxSZD1yZChRZCksU2Q9bSh7fSxBZCx7cG9pbnRlcklkOjAsd2lkdGg6MCxoZWlnaHQ6MCxwcmVzc3VyZTowLHRhbmdlbnRpYWxQcmVzc3VyZTowLHRpbHRYOjAsdGlsdFk6MCx0d2lzdDowLHBvaW50ZXJUeXBlOjAsaXNQcmltYXJ5OjB9KSxUZD1yZChTZCksVWQ9bSh7fSx1ZCx7dG91Y2hlczowLHRhcmdldFRvdWNoZXM6MCxjaGFuZ2VkVG91Y2hlczowLGFsdEtleTowLG1ldGFLZXk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkfSksVmQ9cmQoVWQpLFdkPW0oe30sc2Qse3Byb3BlcnR5TmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksWGQ9cmQoV2QpLFlkPW0oe30sQWQse2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LFxuZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOjAsZGVsdGFNb2RlOjB9KSxaZD1yZChZZCksJGQ9WzksMTMsMjcsMzJdLGFlPWZhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxiZT1udWxsO2ZhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihiZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO3ZhciBjZT1mYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWJlLGRlPWZhJiYoIWFlfHxiZSYmODxiZSYmMTE+PWJlKSxlZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxmZT0hMTtcbmZ1bmN0aW9uIGdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09JGQuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImZvY3Vzb3V0XCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gaGUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgaWU9ITE7ZnVuY3Rpb24gamUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGhlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtmZT0hMDtyZXR1cm4gZWU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09ZWUmJmZlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIGtlKGEsYil7aWYoaWUpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWFlJiZnZShhLGIpPyhhPW5kKCksbWQ9bGQ9a2Q9bnVsbCxpZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gZGUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIGxlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIG1lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhbGVbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIG5lKGEsYixjLGQpe0ViKGQpO2I9b2UoYixcIm9uQ2hhbmdlXCIpOzA8Yi5sZW5ndGgmJihjPW5ldyB0ZChcIm9uQ2hhbmdlXCIsXCJjaGFuZ2VcIixudWxsLGMsZCksYS5wdXNoKHtldmVudDpjLGxpc3RlbmVyczpifSkpfXZhciBwZT1udWxsLHFlPW51bGw7ZnVuY3Rpb24gcmUoYSl7c2UoYSwwKX1mdW5jdGlvbiB0ZShhKXt2YXIgYj11ZShhKTtpZihXYShiKSlyZXR1cm4gYX1cbmZ1bmN0aW9uIHZlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIHdlPSExO2lmKGZhKXt2YXIgeGU7aWYoZmEpe3ZhciB5ZT1cIm9uaW5wdXRcImluIGRvY3VtZW50O2lmKCF5ZSl7dmFyIHplPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7emUuc2V0QXR0cmlidXRlKFwib25pbnB1dFwiLFwicmV0dXJuO1wiKTt5ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgemUub25pbnB1dH14ZT15ZX1lbHNlIHhlPSExO3dlPXhlJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpfWZ1bmN0aW9uIEFlKCl7cGUmJihwZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkscWU9cGU9bnVsbCl9ZnVuY3Rpb24gQmUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJnRlKHFlKSl7dmFyIGI9W107bmUoYixxZSxhLHhiKGEpKTthPXJlO2lmKEtiKWEoYik7ZWxzZXtLYj0hMDt0cnl7R2IoYSxiKX1maW5hbGx5e0tiPSExLE1iKCl9fX19XG5mdW5jdGlvbiBDZShhLGIsYyl7XCJmb2N1c2luXCI9PT1hPyhBZSgpLHBlPWIscWU9YyxwZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkpOlwiZm9jdXNvdXRcIj09PWEmJkFlKCl9ZnVuY3Rpb24gRGUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gdGUocWUpfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gRmUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gR2UoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBIZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpHZSxJZT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gSmUoYSxiKXtpZihIZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIUllLmNhbGwoYixjW2RdKXx8IUhlKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gS2UoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gTGUoYSxiKXt2YXIgYz1LZShhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZShjKX19ZnVuY3Rpb24gTWUoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZShhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBOZSgpe2Zvcih2YXIgYT13aW5kb3csYj1YYSgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1YYShhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBPZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxudmFyIFBlPWZhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsUWU9bnVsbCxSZT1udWxsLFNlPW51bGwsVGU9ITE7XG5mdW5jdGlvbiBVZShhLGIsYyl7dmFyIGQ9Yy53aW5kb3c9PT1jP2MuZG9jdW1lbnQ6OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7VGV8fG51bGw9PVFlfHxRZSE9PVhhKGQpfHwoZD1RZSxcInNlbGVjdGlvblN0YXJ0XCJpbiBkJiZPZShkKT9kPXtzdGFydDpkLnNlbGVjdGlvblN0YXJ0LGVuZDpkLnNlbGVjdGlvbkVuZH06KGQ9KGQub3duZXJEb2N1bWVudCYmZC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGQ9e2FuY2hvck5vZGU6ZC5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpkLmFuY2hvck9mZnNldCxmb2N1c05vZGU6ZC5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6ZC5mb2N1c09mZnNldH0pLFNlJiZKZShTZSxkKXx8KFNlPWQsZD1vZShSZSxcIm9uU2VsZWN0XCIpLDA8ZC5sZW5ndGgmJihiPW5ldyB0ZChcIm9uU2VsZWN0XCIsXCJzZWxlY3RcIixudWxsLGIsYyksYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpkfSksYi50YXJnZXQ9UWUpKSl9XG5QYyhcImNhbmNlbCBjYW5jZWwgY2xpY2sgY2xpY2sgY2xvc2UgY2xvc2UgY29udGV4dG1lbnUgY29udGV4dE1lbnUgY29weSBjb3B5IGN1dCBjdXQgYXV4Y2xpY2sgYXV4Q2xpY2sgZGJsY2xpY2sgZG91YmxlQ2xpY2sgZHJhZ2VuZCBkcmFnRW5kIGRyYWdzdGFydCBkcmFnU3RhcnQgZHJvcCBkcm9wIGZvY3VzaW4gZm9jdXMgZm9jdXNvdXQgYmx1ciBpbnB1dCBpbnB1dCBpbnZhbGlkIGludmFsaWQga2V5ZG93biBrZXlEb3duIGtleXByZXNzIGtleVByZXNzIGtleXVwIGtleVVwIG1vdXNlZG93biBtb3VzZURvd24gbW91c2V1cCBtb3VzZVVwIHBhc3RlIHBhc3RlIHBhdXNlIHBhdXNlIHBsYXkgcGxheSBwb2ludGVyY2FuY2VsIHBvaW50ZXJDYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlckRvd24gcG9pbnRlcnVwIHBvaW50ZXJVcCByYXRlY2hhbmdlIHJhdGVDaGFuZ2UgcmVzZXQgcmVzZXQgc2Vla2VkIHNlZWtlZCBzdWJtaXQgc3VibWl0IHRvdWNoY2FuY2VsIHRvdWNoQ2FuY2VsIHRvdWNoZW5kIHRvdWNoRW5kIHRvdWNoc3RhcnQgdG91Y2hTdGFydCB2b2x1bWVjaGFuZ2Ugdm9sdW1lQ2hhbmdlXCIuc3BsaXQoXCIgXCIpLFxuMCk7UGMoXCJkcmFnIGRyYWcgZHJhZ2VudGVyIGRyYWdFbnRlciBkcmFnZXhpdCBkcmFnRXhpdCBkcmFnbGVhdmUgZHJhZ0xlYXZlIGRyYWdvdmVyIGRyYWdPdmVyIG1vdXNlbW92ZSBtb3VzZU1vdmUgbW91c2VvdXQgbW91c2VPdXQgbW91c2VvdmVyIG1vdXNlT3ZlciBwb2ludGVybW92ZSBwb2ludGVyTW92ZSBwb2ludGVyb3V0IHBvaW50ZXJPdXQgcG9pbnRlcm92ZXIgcG9pbnRlck92ZXIgc2Nyb2xsIHNjcm9sbCB0b2dnbGUgdG9nZ2xlIHRvdWNobW92ZSB0b3VjaE1vdmUgd2hlZWwgd2hlZWxcIi5zcGxpdChcIiBcIiksMSk7UGMoT2MsMik7Zm9yKHZhciBWZT1cImNoYW5nZSBzZWxlY3Rpb25jaGFuZ2UgdGV4dElucHV0IGNvbXBvc2l0aW9uc3RhcnQgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb251cGRhdGVcIi5zcGxpdChcIiBcIiksV2U9MDtXZTxWZS5sZW5ndGg7V2UrKylOYy5zZXQoVmVbV2VdLDApO2VhKFwib25Nb3VzZUVudGVyXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7XG5lYShcIm9uTW91c2VMZWF2ZVwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2VhKFwib25Qb2ludGVyRW50ZXJcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZWEoXCJvblBvaW50ZXJMZWF2ZVwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtkYShcIm9uQ2hhbmdlXCIsXCJjaGFuZ2UgY2xpY2sgZm9jdXNpbiBmb2N1c291dCBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvblNlbGVjdFwiLFwiZm9jdXNvdXQgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1c2luIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQmVmb3JlSW5wdXRcIixbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl0pO2RhKFwib25Db21wb3NpdGlvbkVuZFwiLFwiY29tcG9zaXRpb25lbmQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO1xuZGEoXCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcImNvbXBvc2l0aW9uc3RhcnQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO2RhKFwib25Db21wb3NpdGlvblVwZGF0ZVwiLFwiY29tcG9zaXRpb251cGRhdGUgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO3ZhciBYZT1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksWWU9bmV3IFNldChcImNhbmNlbCBjbG9zZSBpbnZhbGlkIGxvYWQgc2Nyb2xsIHRvZ2dsZVwiLnNwbGl0KFwiIFwiKS5jb25jYXQoWGUpKTtcbmZ1bmN0aW9uIFplKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1jO1liKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG5mdW5jdGlvbiBzZShhLGIpe2I9MCE9PShiJjQpO2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD1hW2NdLGU9ZC5ldmVudDtkPWQubGlzdGVuZXJzO2E6e3ZhciBmPXZvaWQgMDtpZihiKWZvcih2YXIgZz1kLmxlbmd0aC0xOzA8PWc7Zy0tKXt2YXIgaD1kW2ddLGs9aC5pbnN0YW5jZSxsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9ZWxzZSBmb3IoZz0wO2c8ZC5sZW5ndGg7ZysrKXtoPWRbZ107az1oLmluc3RhbmNlO2w9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7WmUoZSxoLGwpO2Y9a319fWlmKFViKXRocm93IGE9VmIsVWI9ITEsVmI9bnVsbCxhO31cbmZ1bmN0aW9uIEcoYSxiKXt2YXIgYz0kZShiKSxkPWErXCJfX2J1YmJsZVwiO2MuaGFzKGQpfHwoYWYoYixhLDIsITEpLGMuYWRkKGQpKX12YXIgYmY9XCJfcmVhY3RMaXN0ZW5pbmdcIitNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTtmdW5jdGlvbiBjZihhKXthW2JmXXx8KGFbYmZdPSEwLGJhLmZvckVhY2goZnVuY3Rpb24oYil7WWUuaGFzKGIpfHxkZihiLCExLGEsbnVsbCk7ZGYoYiwhMCxhLG51bGwpfSkpfVxuZnVuY3Rpb24gZGYoYSxiLGMsZCl7dmFyIGU9NDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0/YXJndW1lbnRzWzRdOjAsZj1jO1wic2VsZWN0aW9uY2hhbmdlXCI9PT1hJiY5IT09Yy5ub2RlVHlwZSYmKGY9Yy5vd25lckRvY3VtZW50KTtpZihudWxsIT09ZCYmIWImJlllLmhhcyhhKSl7aWYoXCJzY3JvbGxcIiE9PWEpcmV0dXJuO2V8PTI7Zj1kfXZhciBnPSRlKGYpLGg9YStcIl9fXCIrKGI/XCJjYXB0dXJlXCI6XCJidWJibGVcIik7Zy5oYXMoaCl8fChiJiYoZXw9NCksYWYoZixhLGUsYiksZy5hZGQoaCkpfVxuZnVuY3Rpb24gYWYoYSxiLGMsZCl7dmFyIGU9TmMuZ2V0KGIpO3N3aXRjaCh2b2lkIDA9PT1lPzI6ZSl7Y2FzZSAwOmU9Z2Q7YnJlYWs7Y2FzZSAxOmU9aWQ7YnJlYWs7ZGVmYXVsdDplPWhkfWM9ZS5iaW5kKG51bGwsYixjLGEpO2U9dm9pZCAwOyFQYnx8XCJ0b3VjaHN0YXJ0XCIhPT1iJiZcInRvdWNobW92ZVwiIT09YiYmXCJ3aGVlbFwiIT09Ynx8KGU9ITApO2Q/dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtjYXB0dXJlOiEwLHBhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITApOnZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7cGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSl9XG5mdW5jdGlvbiBqZChhLGIsYyxkLGUpe3ZhciBmPWQ7aWYoMD09PShiJjEpJiYwPT09KGImMikmJm51bGwhPT1kKWE6Zm9yKDs7KXtpZihudWxsPT09ZClyZXR1cm47dmFyIGc9ZC50YWc7aWYoMz09PWd8fDQ9PT1nKXt2YXIgaD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKGg9PT1lfHw4PT09aC5ub2RlVHlwZSYmaC5wYXJlbnROb2RlPT09ZSlicmVhaztpZig0PT09Zylmb3IoZz1kLnJldHVybjtudWxsIT09Zzspe3ZhciBrPWcudGFnO2lmKDM9PT1rfHw0PT09aylpZihrPWcuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8saz09PWV8fDg9PT1rLm5vZGVUeXBlJiZrLnBhcmVudE5vZGU9PT1lKXJldHVybjtnPWcucmV0dXJufWZvcig7bnVsbCE9PWg7KXtnPXdjKGgpO2lmKG51bGw9PT1nKXJldHVybjtrPWcudGFnO2lmKDU9PT1rfHw2PT09ayl7ZD1mPWc7Y29udGludWUgYX1oPWgucGFyZW50Tm9kZX19ZD1kLnJldHVybn1OYihmdW5jdGlvbigpe3ZhciBkPWYsZT14YihjKSxnPVtdO1xuYTp7dmFyIGg9TWMuZ2V0KGEpO2lmKHZvaWQgMCE9PWgpe3ZhciBrPXRkLHg9YTtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9kKGMpKWJyZWFrIGE7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjprPVJkO2JyZWFrO2Nhc2UgXCJmb2N1c2luXCI6eD1cImZvY3VzXCI7az1GZDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjp4PVwiYmx1clwiO2s9RmQ7YnJlYWs7Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6az1GZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pYnJlYWsgYTtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOms9QmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6az1cbkRkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOms9VmQ7YnJlYWs7Y2FzZSBJYzpjYXNlIEpjOmNhc2UgS2M6az1IZDticmVhaztjYXNlIExjOms9WGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOms9dmQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6az1aZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjprPUpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOms9VGR9dmFyIHc9MCE9PShiJjQpLHo9IXcmJlwic2Nyb2xsXCI9PT1hLHU9dz9udWxsIT09aD9oK1wiQ2FwdHVyZVwiOm51bGw6aDt3PVtdO2Zvcih2YXIgdD1kLHE7bnVsbCE9PVxudDspe3E9dDt2YXIgdj1xLnN0YXRlTm9kZTs1PT09cS50YWcmJm51bGwhPT12JiYocT12LG51bGwhPT11JiYodj1PYih0LHUpLG51bGwhPXYmJncucHVzaChlZih0LHYscSkpKSk7aWYoeilicmVhazt0PXQucmV0dXJufTA8dy5sZW5ndGgmJihoPW5ldyBrKGgseCxudWxsLGMsZSksZy5wdXNoKHtldmVudDpoLGxpc3RlbmVyczp3fSkpfX1pZigwPT09KGImNykpe2E6e2g9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWE7az1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoaCYmMD09PShiJjE2KSYmKHg9Yy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KSYmKHdjKHgpfHx4W2ZmXSkpYnJlYWsgYTtpZihrfHxoKXtoPWUud2luZG93PT09ZT9lOihoPWUub3duZXJEb2N1bWVudCk/aC5kZWZhdWx0Vmlld3x8aC5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGspe2lmKHg9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCxrPWQseD14P3djKHgpOm51bGwsbnVsbCE9PVxueCYmKHo9WmIoeCkseCE9PXp8fDUhPT14LnRhZyYmNiE9PXgudGFnKSl4PW51bGx9ZWxzZSBrPW51bGwseD1kO2lmKGshPT14KXt3PUJkO3Y9XCJvbk1vdXNlTGVhdmVcIjt1PVwib25Nb3VzZUVudGVyXCI7dD1cIm1vdXNlXCI7aWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKXc9VGQsdj1cIm9uUG9pbnRlckxlYXZlXCIsdT1cIm9uUG9pbnRlckVudGVyXCIsdD1cInBvaW50ZXJcIjt6PW51bGw9PWs/aDp1ZShrKTtxPW51bGw9PXg/aDp1ZSh4KTtoPW5ldyB3KHYsdCtcImxlYXZlXCIsayxjLGUpO2gudGFyZ2V0PXo7aC5yZWxhdGVkVGFyZ2V0PXE7dj1udWxsO3djKGUpPT09ZCYmKHc9bmV3IHcodSx0K1wiZW50ZXJcIix4LGMsZSksdy50YXJnZXQ9cSx3LnJlbGF0ZWRUYXJnZXQ9eix2PXcpO3o9djtpZihrJiZ4KWI6e3c9azt1PXg7dD0wO2ZvcihxPXc7cTtxPWdmKHEpKXQrKztxPTA7Zm9yKHY9dTt2O3Y9Z2YodikpcSsrO2Zvcig7MDx0LXE7KXc9Z2YodyksdC0tO2Zvcig7MDxxLXQ7KXU9XG5nZih1KSxxLS07Zm9yKDt0LS07KXtpZih3PT09dXx8bnVsbCE9PXUmJnc9PT11LmFsdGVybmF0ZSlicmVhayBiO3c9Z2Yodyk7dT1nZih1KX13PW51bGx9ZWxzZSB3PW51bGw7bnVsbCE9PWsmJmhmKGcsaCxrLHcsITEpO251bGwhPT14JiZudWxsIT09eiYmaGYoZyx6LHgsdywhMCl9fX1hOntoPWQ/dWUoZCk6d2luZG93O2s9aC5ub2RlTmFtZSYmaC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1rfHxcImlucHV0XCI9PT1rJiZcImZpbGVcIj09PWgudHlwZSl2YXIgSj12ZTtlbHNlIGlmKG1lKGgpKWlmKHdlKUo9RmU7ZWxzZXtKPURlO3ZhciBLPUNlfWVsc2Uoaz1oLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09ay50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09aC50eXBlfHxcInJhZGlvXCI9PT1oLnR5cGUpJiYoSj1FZSk7aWYoSiYmKEo9SihhLGQpKSl7bmUoZyxKLGMsZSk7YnJlYWsgYX1LJiZLKGEsaCxkKTtcImZvY3Vzb3V0XCI9PT1hJiYoSz1oLl93cmFwcGVyU3RhdGUpJiZcbksuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWgudHlwZSYmYmIoaCxcIm51bWJlclwiLGgudmFsdWUpfUs9ZD91ZShkKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6aWYobWUoSyl8fFwidHJ1ZVwiPT09Sy5jb250ZW50RWRpdGFibGUpUWU9SyxSZT1kLFNlPW51bGw7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6U2U9UmU9UWU9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6VGU9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOlRlPSExO1VlKGcsYyxlKTticmVhaztjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUGUpYnJlYWs7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpVZShnLGMsZSl9dmFyIFE7aWYoYWUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIEw9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIjticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOkw9XCJvbkNvbXBvc2l0aW9uRW5kXCI7YnJlYWsgYjtcbmNhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOkw9XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCI7YnJlYWsgYn1MPXZvaWQgMH1lbHNlIGllP2dlKGEsYykmJihMPVwib25Db21wb3NpdGlvbkVuZFwiKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKEw9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIik7TCYmKGRlJiZcImtvXCIhPT1jLmxvY2FsZSYmKGllfHxcIm9uQ29tcG9zaXRpb25TdGFydFwiIT09TD9cIm9uQ29tcG9zaXRpb25FbmRcIj09PUwmJmllJiYoUT1uZCgpKTooa2Q9ZSxsZD1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxpZT0hMCkpLEs9b2UoZCxMKSwwPEsubGVuZ3RoJiYoTD1uZXcgTGQoTCxhLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OkwsbGlzdGVuZXJzOkt9KSxRP0wuZGF0YT1ROihRPWhlKGMpLG51bGwhPT1RJiYoTC5kYXRhPVEpKSkpO2lmKFE9Y2U/amUoYSxjKTprZShhLGMpKWQ9b2UoZCxcIm9uQmVmb3JlSW5wdXRcIiksMDxkLmxlbmd0aCYmKGU9bmV3IExkKFwib25CZWZvcmVJbnB1dFwiLFxuXCJiZWZvcmVpbnB1dFwiLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmUsbGlzdGVuZXJzOmR9KSxlLmRhdGE9USl9c2UoZyxiKX0pfWZ1bmN0aW9uIGVmKGEsYixjKXtyZXR1cm57aW5zdGFuY2U6YSxsaXN0ZW5lcjpiLGN1cnJlbnRUYXJnZXQ6Y319ZnVuY3Rpb24gb2UoYSxiKXtmb3IodmFyIGM9YitcIkNhcHR1cmVcIixkPVtdO251bGwhPT1hOyl7dmFyIGU9YSxmPWUuc3RhdGVOb2RlOzU9PT1lLnRhZyYmbnVsbCE9PWYmJihlPWYsZj1PYihhLGMpLG51bGwhPWYmJmQudW5zaGlmdChlZihhLGYsZSkpLGY9T2IoYSxiKSxudWxsIT1mJiZkLnB1c2goZWYoYSxmLGUpKSk7YT1hLnJldHVybn1yZXR1cm4gZH1mdW5jdGlvbiBnZihhKXtpZihudWxsPT09YSlyZXR1cm4gbnVsbDtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gaGYoYSxiLGMsZCxlKXtmb3IodmFyIGY9Yi5fcmVhY3ROYW1lLGc9W107bnVsbCE9PWMmJmMhPT1kOyl7dmFyIGg9YyxrPWguYWx0ZXJuYXRlLGw9aC5zdGF0ZU5vZGU7aWYobnVsbCE9PWsmJms9PT1kKWJyZWFrOzU9PT1oLnRhZyYmbnVsbCE9PWwmJihoPWwsZT8oaz1PYihjLGYpLG51bGwhPWsmJmcudW5zaGlmdChlZihjLGssaCkpKTplfHwoaz1PYihjLGYpLG51bGwhPWsmJmcucHVzaChlZihjLGssaCkpKSk7Yz1jLnJldHVybn0wIT09Zy5sZW5ndGgmJmEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6Z30pfWZ1bmN0aW9uIGpmKCl7fXZhciBrZj1udWxsLGxmPW51bGw7ZnVuY3Rpb24gbWYoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gbmYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBvZj1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxwZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7ZnVuY3Rpb24gcWYoYSl7MT09PWEubm9kZVR5cGU/YS50ZXh0Q29udGVudD1cIlwiOjk9PT1hLm5vZGVUeXBlJiYoYT1hLmJvZHksbnVsbCE9YSYmKGEudGV4dENvbnRlbnQ9XCJcIikpfVxuZnVuY3Rpb24gcmYoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9ZnVuY3Rpb24gc2YoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIiRcIj09PWN8fFwiJCFcIj09PWN8fFwiJD9cIj09PWMpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlXCIvJFwiPT09YyYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIHRmPTA7ZnVuY3Rpb24gdWYoYSl7cmV0dXJueyQkdHlwZW9mOkdhLHRvU3RyaW5nOmEsdmFsdWVPZjphfX12YXIgdmY9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksd2Y9XCJfX3JlYWN0RmliZXIkXCIrdmYseGY9XCJfX3JlYWN0UHJvcHMkXCIrdmYsZmY9XCJfX3JlYWN0Q29udGFpbmVyJFwiK3ZmLHlmPVwiX19yZWFjdEV2ZW50cyRcIit2ZjtcbmZ1bmN0aW9uIHdjKGEpe3ZhciBiPWFbd2ZdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW2ZmXXx8Y1t3Zl0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1zZihhKTtudWxsIT09YTspe2lmKGM9YVt3Zl0pcmV0dXJuIGM7YT1zZihhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQ2IoYSl7YT1hW3dmXXx8YVtmZl07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIHVlKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih5KDMzKSk7fWZ1bmN0aW9uIERiKGEpe3JldHVybiBhW3hmXXx8bnVsbH1cbmZ1bmN0aW9uICRlKGEpe3ZhciBiPWFbeWZdO3ZvaWQgMD09PWImJihiPWFbeWZdPW5ldyBTZXQpO3JldHVybiBifXZhciB6Zj1bXSxBZj0tMTtmdW5jdGlvbiBCZihhKXtyZXR1cm57Y3VycmVudDphfX1mdW5jdGlvbiBIKGEpezA+QWZ8fChhLmN1cnJlbnQ9emZbQWZdLHpmW0FmXT1udWxsLEFmLS0pfWZ1bmN0aW9uIEkoYSxiKXtBZisrO3pmW0FmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIENmPXt9LE09QmYoQ2YpLE49QmYoITEpLERmPUNmO1xuZnVuY3Rpb24gRWYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBDZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBGZihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEdmKCl7SChOKTtIKE0pfWZ1bmN0aW9uIEhmKGEsYixjKXtpZihNLmN1cnJlbnQhPT1DZil0aHJvdyBFcnJvcih5KDE2OCkpO0koTSxiKTtJKE4sYyl9XG5mdW5jdGlvbiBJZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGEpKXRocm93IEVycm9yKHkoMTA4LFJhKGIpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIG0oe30sYyxkKX1mdW5jdGlvbiBKZihhKXthPShhPWEuc3RhdGVOb2RlKSYmYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8Q2Y7RGY9TS5jdXJyZW50O0koTSxhKTtJKE4sTi5jdXJyZW50KTtyZXR1cm4hMH1mdW5jdGlvbiBLZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IoeSgxNjkpKTtjPyhhPUlmKGEsYixEZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEgoTiksSChNKSxJKE0sYSkpOkgoTik7SShOLGMpfVxudmFyIExmPW51bGwsTWY9bnVsbCxOZj1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxPZj1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssUGY9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxRZj1yLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFJmPXIudW5zdGFibGVfcmVxdWVzdFBhaW50LFNmPXIudW5zdGFibGVfbm93LFRmPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsVWY9ci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxWZj1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFdmPXIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksWGY9ci51bnN0YWJsZV9Mb3dQcmlvcml0eSxZZj1yLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxaZj17fSwkZj12b2lkIDAhPT1SZj9SZjpmdW5jdGlvbigpe30sYWc9bnVsbCxiZz1udWxsLGNnPSExLGRnPVNmKCksTz0xRTQ+ZGc/U2Y6ZnVuY3Rpb24oKXtyZXR1cm4gU2YoKS1kZ307XG5mdW5jdGlvbiBlZygpe3N3aXRjaChUZigpKXtjYXNlIFVmOnJldHVybiA5OTtjYXNlIFZmOnJldHVybiA5ODtjYXNlIFdmOnJldHVybiA5NztjYXNlIFhmOnJldHVybiA5NjtjYXNlIFlmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHkoMzMyKSk7fX1mdW5jdGlvbiBmZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gVWY7Y2FzZSA5ODpyZXR1cm4gVmY7Y2FzZSA5NzpyZXR1cm4gV2Y7Y2FzZSA5NjpyZXR1cm4gWGY7Y2FzZSA5NTpyZXR1cm4gWWY7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZ2coYSxiKXthPWZnKGEpO3JldHVybiBOZihhLGIpfWZ1bmN0aW9uIGhnKGEsYixjKXthPWZnKGEpO3JldHVybiBPZihhLGIsYyl9ZnVuY3Rpb24gaWcoKXtpZihudWxsIT09Ymcpe3ZhciBhPWJnO2JnPW51bGw7UGYoYSl9amcoKX1cbmZ1bmN0aW9uIGpnKCl7aWYoIWNnJiZudWxsIT09YWcpe2NnPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPWFnO2dnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTthZz1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1hZyYmKGFnPWFnLnNsaWNlKGErMSkpLE9mKFVmLGlnKSxjO31maW5hbGx5e2NnPSExfX19dmFyIGtnPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnO2Z1bmN0aW9uIGxnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bSh7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pO3JldHVybiBifXJldHVybiBifXZhciBtZz1CZihudWxsKSxuZz1udWxsLG9nPW51bGwscGc9bnVsbDtmdW5jdGlvbiBxZygpe3BnPW9nPW5nPW51bGx9XG5mdW5jdGlvbiByZyhhKXt2YXIgYj1tZy5jdXJyZW50O0gobWcpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gc2coYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5hbHRlcm5hdGU7aWYoKGEuY2hpbGRMYW5lcyZiKT09PWIpaWYobnVsbD09PWN8fChjLmNoaWxkTGFuZXMmYik9PT1iKWJyZWFrO2Vsc2UgYy5jaGlsZExhbmVzfD1iO2Vsc2UgYS5jaGlsZExhbmVzfD1iLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKTthPWEucmV0dXJufX1mdW5jdGlvbiB0ZyhhLGIpe25nPWE7cGc9b2c9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJigwIT09KGEubGFuZXMmYikmJih1Zz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiB2ZyhhLGIpe2lmKHBnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilwZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09b2cpe2lmKG51bGw9PT1uZyl0aHJvdyBFcnJvcih5KDMwOCkpO29nPWI7bmcuZGVwZW5kZW5jaWVzPXtsYW5lczowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBvZz1vZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgd2c9ITE7ZnVuY3Rpb24geGcoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6bnVsbCxsYXN0QmFzZVVwZGF0ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24geWcoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmEuZmlyc3RCYXNlVXBkYXRlLGxhc3RCYXNlVXBkYXRlOmEubGFzdEJhc2VVcGRhdGUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gemcoYSxiKXtyZXR1cm57ZXZlbnRUaW1lOmEsbGFuZTpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH19ZnVuY3Rpb24gQWcoYSxiKXthPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWEpe2E9YS5zaGFyZWQ7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn19XG5mdW5jdGlvbiBCZyhhLGIpe3ZhciBjPWEudXBkYXRlUXVldWUsZD1hLmFsdGVybmF0ZTtpZihudWxsIT09ZCYmKGQ9ZC51cGRhdGVRdWV1ZSxjPT09ZCkpe3ZhciBlPW51bGwsZj1udWxsO2M9Yy5maXJzdEJhc2VVcGRhdGU7aWYobnVsbCE9PWMpe2Rve3ZhciBnPXtldmVudFRpbWU6Yy5ldmVudFRpbWUsbGFuZTpjLmxhbmUsdGFnOmMudGFnLHBheWxvYWQ6Yy5wYXlsb2FkLGNhbGxiYWNrOmMuY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09Zj9lPWY9ZzpmPWYubmV4dD1nO2M9Yy5uZXh0fXdoaWxlKG51bGwhPT1jKTtudWxsPT09Zj9lPWY9YjpmPWYubmV4dD1ifWVsc2UgZT1mPWI7Yz17YmFzZVN0YXRlOmQuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTplLGxhc3RCYXNlVXBkYXRlOmYsc2hhcmVkOmQuc2hhcmVkLGVmZmVjdHM6ZC5lZmZlY3RzfTthLnVwZGF0ZVF1ZXVlPWM7cmV0dXJufWE9Yy5sYXN0QmFzZVVwZGF0ZTtudWxsPT09YT9jLmZpcnN0QmFzZVVwZGF0ZT1iOmEubmV4dD1cbmI7Yy5sYXN0QmFzZVVwZGF0ZT1ifVxuZnVuY3Rpb24gQ2coYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt3Zz0hMTt2YXIgZj1lLmZpcnN0QmFzZVVwZGF0ZSxnPWUubGFzdEJhc2VVcGRhdGUsaD1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1oKXtlLnNoYXJlZC5wZW5kaW5nPW51bGw7dmFyIGs9aCxsPWsubmV4dDtrLm5leHQ9bnVsbDtudWxsPT09Zz9mPWw6Zy5uZXh0PWw7Zz1rO3ZhciBuPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1uKXtuPW4udXBkYXRlUXVldWU7dmFyIEE9bi5sYXN0QmFzZVVwZGF0ZTtBIT09ZyYmKG51bGw9PT1BP24uZmlyc3RCYXNlVXBkYXRlPWw6QS5uZXh0PWwsbi5sYXN0QmFzZVVwZGF0ZT1rKX19aWYobnVsbCE9PWYpe0E9ZS5iYXNlU3RhdGU7Zz0wO249bD1rPW51bGw7ZG97aD1mLmxhbmU7dmFyIHA9Zi5ldmVudFRpbWU7aWYoKGQmaCk9PT1oKXtudWxsIT09biYmKG49bi5uZXh0PXtldmVudFRpbWU6cCxsYW5lOjAsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssXG5uZXh0Om51bGx9KTthOnt2YXIgQz1hLHg9ZjtoPWI7cD1jO3N3aXRjaCh4LnRhZyl7Y2FzZSAxOkM9eC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDKXtBPUMuY2FsbChwLEEsaCk7YnJlYWsgYX1BPUM7YnJlYWsgYTtjYXNlIDM6Qy5mbGFncz1DLmZsYWdzJi00MDk3fDY0O2Nhc2UgMDpDPXgucGF5bG9hZDtoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBDP0MuY2FsbChwLEEsaCk6QztpZihudWxsPT09aHx8dm9pZCAwPT09aClicmVhayBhO0E9bSh7fSxBLGgpO2JyZWFrIGE7Y2FzZSAyOndnPSEwfX1udWxsIT09Zi5jYWxsYmFjayYmKGEuZmxhZ3N8PTMyLGg9ZS5lZmZlY3RzLG51bGw9PT1oP2UuZWZmZWN0cz1bZl06aC5wdXNoKGYpKX1lbHNlIHA9e2V2ZW50VGltZTpwLGxhbmU6aCx0YWc6Zi50YWcscGF5bG9hZDpmLnBheWxvYWQsY2FsbGJhY2s6Zi5jYWxsYmFjayxuZXh0Om51bGx9LG51bGw9PT1uPyhsPW49cCxrPUEpOm49bi5uZXh0PXAsZ3w9aDtmPWYubmV4dDtpZihudWxsPT09XG5mKWlmKGg9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09aClicmVhaztlbHNlIGY9aC5uZXh0LGgubmV4dD1udWxsLGUubGFzdEJhc2VVcGRhdGU9aCxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSk7bnVsbD09PW4mJihrPUEpO2UuYmFzZVN0YXRlPWs7ZS5maXJzdEJhc2VVcGRhdGU9bDtlLmxhc3RCYXNlVXBkYXRlPW47RGd8PWc7YS5sYW5lcz1nO2EubWVtb2l6ZWRTdGF0ZT1BfX1mdW5jdGlvbiBFZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGUpdGhyb3cgRXJyb3IoeSgxOTEsZSkpO2UuY2FsbChkKX19fXZhciBGZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztcbmZ1bmN0aW9uIEdnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjptKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEubGFuZXMmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBLZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxzKT9aYihhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1IZygpLGU9SWcoYSksZj16ZyhkLGUpO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1IZygpLGU9SWcoYSksZj16ZyhkLGUpO2YudGFnPTE7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO0FnKGEsZik7SmcoYSxlLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBjPUhnKCksZD1JZyhhKSxlPXpnKGMsZCk7ZS50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGUuY2FsbGJhY2s9XG5iKTtBZyhhLGUpO0pnKGEsZCxjKX19O2Z1bmN0aW9uIExnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IUplKGMsZCl8fCFKZShlLGYpOiEwfVxuZnVuY3Rpb24gTWcoYSxiLGMpe3ZhciBkPSExLGU9Q2Y7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9dmcoZik6KGU9RmYoYik/RGY6TS5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/RWYoYSxlKTpDZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPUtnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbHM9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gTmcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJktnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gT2coYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1GZzt4ZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXZnKGYpOihmPUZmKGIpP0RmOk0uY3VycmVudCxlLmNvbnRleHQ9RWYoYSxmKSk7Q2coYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKEdnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxuKGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJktnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLENnKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZmxhZ3N8PTQpfXZhciBQZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gUWcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHkoMTQ3LGEpKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PUZnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHkoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHkoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiBSZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih5KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO31cbmZ1bmN0aW9uIFNnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZmxhZ3M9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9VGcoYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZmxhZ3M9MixcbmMpOmQ7Yi5mbGFncz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5mbGFncz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9VWcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9UWcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVZnKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVFnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVxuV2coYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG4oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVhnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gQShhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9VWcoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGM9VmcoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9UWcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIHRhOnJldHVybiBiPVdnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihQZyhiKXx8TGEoYikpcmV0dXJuIGI9WGcoYixcbmEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtSZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHAoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT11YT9uKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgdGE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoUGcoYyl8fExhKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm4oYSxiLGMsZCxudWxsKTtSZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8XG5udWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09dWE/bihiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgdGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoUGcoZCl8fExhKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG4oYixhLGQsZSxudWxsKTtSZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsdD1udWxsLHU9Zyx6PWc9MCxxPW51bGw7bnVsbCE9PXUmJno8aC5sZW5ndGg7eisrKXt1LmluZGV4Pno/KHE9dSx1PW51bGwpOnE9dS5zaWJsaW5nO3ZhciBuPXAoZSx1LGhbel0sayk7aWYobnVsbD09PW4pe251bGw9PT11JiYodT1xKTticmVha31hJiZ1JiZudWxsPT09XG5uLmFsdGVybmF0ZSYmYihlLHUpO2c9ZihuLGcseik7bnVsbD09PXQ/bD1uOnQuc2libGluZz1uO3Q9bjt1PXF9aWYoej09PWgubGVuZ3RoKXJldHVybiBjKGUsdSksbDtpZihudWxsPT09dSl7Zm9yKDt6PGgubGVuZ3RoO3orKyl1PUEoZSxoW3pdLGspLG51bGwhPT11JiYoZz1mKHUsZyx6KSxudWxsPT09dD9sPXU6dC5zaWJsaW5nPXUsdD11KTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7ejxoLmxlbmd0aDt6KyspcT1DKHUsZSx6LGhbel0sayksbnVsbCE9PXEmJihhJiZudWxsIT09cS5hbHRlcm5hdGUmJnUuZGVsZXRlKG51bGw9PT1xLmtleT96OnEua2V5KSxnPWYocSxnLHopLG51bGw9PT10P2w9cTp0LnNpYmxpbmc9cSx0PXEpO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gdyhlLGcsaCxrKXt2YXIgbD1MYShoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgbCl0aHJvdyBFcnJvcih5KDE1MCkpO2g9bC5jYWxsKGgpO2lmKG51bGw9PVxuaCl0aHJvdyBFcnJvcih5KDE1MSkpO2Zvcih2YXIgdD1sPW51bGwsdT1nLHo9Zz0wLHE9bnVsbCxuPWgubmV4dCgpO251bGwhPT11JiYhbi5kb25lO3orKyxuPWgubmV4dCgpKXt1LmluZGV4Pno/KHE9dSx1PW51bGwpOnE9dS5zaWJsaW5nO3ZhciB3PXAoZSx1LG4udmFsdWUsayk7aWYobnVsbD09PXcpe251bGw9PT11JiYodT1xKTticmVha31hJiZ1JiZudWxsPT09dy5hbHRlcm5hdGUmJmIoZSx1KTtnPWYodyxnLHopO251bGw9PT10P2w9dzp0LnNpYmxpbmc9dzt0PXc7dT1xfWlmKG4uZG9uZSlyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7IW4uZG9uZTt6Kyssbj1oLm5leHQoKSluPUEoZSxuLnZhbHVlLGspLG51bGwhPT1uJiYoZz1mKG4sZyx6KSxudWxsPT09dD9sPW46dC5zaWJsaW5nPW4sdD1uKTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7IW4uZG9uZTt6Kyssbj1oLm5leHQoKSluPUModSxlLHosbi52YWx1ZSxrKSxudWxsIT09biYmKGEmJm51bGwhPT1uLmFsdGVybmF0ZSYmXG51LmRlbGV0ZShudWxsPT09bi5rZXk/ejpuLmtleSksZz1mKG4sZyx6KSxudWxsPT09dD9sPW46dC5zaWJsaW5nPW4sdD1uKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT11YSYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBzYTphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpe3N3aXRjaChrLnRhZyl7Y2FzZSA3OmlmKGYudHlwZT09PXVhKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWJyZWFrO2RlZmF1bHQ6aWYoay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7XG5kPWUoayxmLnByb3BzKTtkLnJlZj1RZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PXVhPyhkPVhnKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1WZyhmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1RZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgdGE6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9XG5XZyhmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1VZyhmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihQZyhmKSlyZXR1cm4geChhLGQsZixoKTtpZihMYShmKSlyZXR1cm4gdyhhLGQsZixoKTtsJiZSZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAyMjpjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRocm93IEVycm9yKHkoMTUyLFJhKGEudHlwZSl8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIFlnPVNnKCEwKSxaZz1TZyghMSksJGc9e30sYWg9QmYoJGcpLGJoPUJmKCRnKSxjaD1CZigkZyk7XG5mdW5jdGlvbiBkaChhKXtpZihhPT09JGcpdGhyb3cgRXJyb3IoeSgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiBlaChhLGIpe0koY2gsYik7SShiaCxhKTtJKGFoLCRnKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOm1iKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1tYihiLGEpfUgoYWgpO0koYWgsYil9ZnVuY3Rpb24gZmgoKXtIKGFoKTtIKGJoKTtIKGNoKX1mdW5jdGlvbiBnaChhKXtkaChjaC5jdXJyZW50KTt2YXIgYj1kaChhaC5jdXJyZW50KTt2YXIgYz1tYihiLGEudHlwZSk7YiE9PWMmJihJKGJoLGEpLEkoYWgsYykpfWZ1bmN0aW9uIGhoKGEpe2JoLmN1cnJlbnQ9PT1hJiYoSChhaCksSChiaCkpfXZhciBQPUJmKDApO1xuZnVuY3Rpb24gaWgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8XCIkP1wiPT09Yy5kYXRhfHxcIiQhXCI9PT1jLmRhdGEpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZmxhZ3MmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH12YXIgamg9bnVsbCxraD1udWxsLGxoPSExO1xuZnVuY3Rpb24gbWgoYSxiKXt2YXIgYz1uaCg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5mbGFncz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24gb2goYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHBoKGEpe2lmKGxoKXt2YXIgYj1raDtpZihiKXt2YXIgYz1iO2lmKCFvaChhLGIpKXtiPXJmKGMubmV4dFNpYmxpbmcpO2lmKCFifHwhb2goYSxiKSl7YS5mbGFncz1hLmZsYWdzJi0xMDI1fDI7bGg9ITE7amg9YTtyZXR1cm59bWgoamgsYyl9amg9YTtraD1yZihiLmZpcnN0Q2hpbGQpfWVsc2UgYS5mbGFncz1hLmZsYWdzJi0xMDI1fDIsbGg9ITEsamg9YX19ZnVuY3Rpb24gcWgoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO2poPWF9XG5mdW5jdGlvbiByaChhKXtpZihhIT09amgpcmV0dXJuITE7aWYoIWxoKXJldHVybiBxaChhKSxsaD0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIW5mKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1raDtiOyltaChhLGIpLGI9cmYoYi5uZXh0U2libGluZyk7cWgoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih5KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiLyRcIj09PWMpe2lmKDA9PT1iKXtraD1yZihhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlXCIkXCIhPT1jJiZcIiQhXCIhPT1jJiZcIiQ/XCIhPT1jfHxiKyt9YT1hLm5leHRTaWJsaW5nfWtoPW51bGx9fWVsc2Uga2g9amg/cmYoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBzaCgpe2toPWpoPW51bGw7bGg9ITF9dmFyIHRoPVtdO2Z1bmN0aW9uIHVoKCl7Zm9yKHZhciBhPTA7YTx0aC5sZW5ndGg7YSsrKXRoW2FdLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PW51bGw7dGgubGVuZ3RoPTB9dmFyIHZoPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsd2g9cmEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcseGg9MCxSPW51bGwsUz1udWxsLFQ9bnVsbCx5aD0hMSx6aD0hMTtmdW5jdGlvbiBBaCgpe3Rocm93IEVycm9yKHkoMzIxKSk7fWZ1bmN0aW9uIEJoKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIUhlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBDaChhLGIsYyxkLGUsZil7eGg9ZjtSPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IubGFuZXM9MDt2aC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP0RoOkVoO2E9YyhkLGUpO2lmKHpoKXtmPTA7ZG97emg9ITE7aWYoISgyNT5mKSl0aHJvdyBFcnJvcih5KDMwMSkpO2YrPTE7VD1TPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO3ZoLmN1cnJlbnQ9Rmg7YT1jKGQsZSl9d2hpbGUoemgpfXZoLmN1cnJlbnQ9R2g7Yj1udWxsIT09UyYmbnVsbCE9PVMubmV4dDt4aD0wO1Q9Uz1SPW51bGw7eWg9ITE7aWYoYil0aHJvdyBFcnJvcih5KDMwMCkpO3JldHVybiBhfWZ1bmN0aW9uIEhoKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlPVQ9YTpUPVQubmV4dD1hO3JldHVybiBUfVxuZnVuY3Rpb24gSWgoKXtpZihudWxsPT09Uyl7dmFyIGE9Ui5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Uy5uZXh0O3ZhciBiPW51bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZTpULm5leHQ7aWYobnVsbCE9PWIpVD1iLFM9YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHkoMzEwKSk7Uz1hO2E9e21lbW9pemVkU3RhdGU6Uy5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpTLmJhc2VTdGF0ZSxiYXNlUXVldWU6Uy5iYXNlUXVldWUscXVldWU6Uy5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YX1yZXR1cm4gVH1mdW5jdGlvbiBKaChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIEtoKGEpe3ZhciBiPUloKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHkoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9UyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtlPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9Zj1udWxsLGs9ZTtkb3t2YXIgbD1rLmxhbmU7aWYoKHhoJmwpPT09bCludWxsIT09aCYmKGg9aC5uZXh0PXtsYW5lOjAsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxkPWsuZWFnZXJSZWR1Y2VyPT09YT9rLmVhZ2VyU3RhdGU6YShkLGsuYWN0aW9uKTtlbHNle3ZhciBuPXtsYW5lOmwsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixcbmVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWg/KGc9aD1uLGY9ZCk6aD1oLm5leHQ9bjtSLmxhbmVzfD1sO0RnfD1sfWs9ay5uZXh0fXdoaWxlKG51bGwhPT1rJiZrIT09ZSk7bnVsbD09PWg/Zj1kOmgubmV4dD1nO0hlKGQsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1mO2IuYmFzZVF1ZXVlPWg7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiBMaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7SGUoZixiLm1lbW9pemVkU3RhdGUpfHwodWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cbmZ1bmN0aW9uIE1oKGEsYixjKXt2YXIgZD1iLl9nZXRWZXJzaW9uO2Q9ZChiLl9zb3VyY2UpO3ZhciBlPWIuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk7aWYobnVsbCE9PWUpYT1lPT09ZDtlbHNlIGlmKGE9YS5tdXRhYmxlUmVhZExhbmVzLGE9KHhoJmEpPT09YSliLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PWQsdGgucHVzaChiKTtpZihhKXJldHVybiBjKGIuX3NvdXJjZSk7dGgucHVzaChiKTt0aHJvdyBFcnJvcih5KDM1MCkpO31cbmZ1bmN0aW9uIE5oKGEsYixjLGQpe3ZhciBlPVU7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IoeSgzNDkpKTt2YXIgZj1iLl9nZXRWZXJzaW9uLGc9ZihiLl9zb3VyY2UpLGg9dmguY3VycmVudCxrPWgudXNlU3RhdGUoZnVuY3Rpb24oKXtyZXR1cm4gTWgoZSxiLGMpfSksbD1rWzFdLG49a1swXTtrPVQ7dmFyIEE9YS5tZW1vaXplZFN0YXRlLHA9QS5yZWZzLEM9cC5nZXRTbmFwc2hvdCx4PUEuc291cmNlO0E9QS5zdWJzY3JpYmU7dmFyIHc9UjthLm1lbW9pemVkU3RhdGU9e3JlZnM6cCxzb3VyY2U6YixzdWJzY3JpYmU6ZH07aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtwLmdldFNuYXBzaG90PWM7cC5zZXRTbmFwc2hvdD1sO3ZhciBhPWYoYi5fc291cmNlKTtpZighSGUoZyxhKSl7YT1jKGIuX3NvdXJjZSk7SGUobixhKXx8KGwoYSksYT1JZyh3KSxlLm11dGFibGVSZWFkTGFuZXN8PWEmZS5wZW5kaW5nTGFuZXMpO2E9ZS5tdXRhYmxlUmVhZExhbmVzO2UuZW50YW5nbGVkTGFuZXN8PWE7Zm9yKHZhciBkPVxuZS5lbnRhbmdsZW1lbnRzLGg9YTswPGg7KXt2YXIgaz0zMS1WYyhoKSx2PTE8PGs7ZFtrXXw9YTtoJj1+dn19fSxbYyxiLGRdKTtoLnVzZUVmZmVjdChmdW5jdGlvbigpe3JldHVybiBkKGIuX3NvdXJjZSxmdW5jdGlvbigpe3ZhciBhPXAuZ2V0U25hcHNob3QsYz1wLnNldFNuYXBzaG90O3RyeXtjKGEoYi5fc291cmNlKSk7dmFyIGQ9SWcodyk7ZS5tdXRhYmxlUmVhZExhbmVzfD1kJmUucGVuZGluZ0xhbmVzfWNhdGNoKHEpe2MoZnVuY3Rpb24oKXt0aHJvdyBxO30pfX0pfSxbYixkXSk7SGUoQyxjKSYmSGUoeCxiKSYmSGUoQSxkKXx8KGE9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6bn0sYS5kaXNwYXRjaD1sPU9oLmJpbmQobnVsbCxSLGEpLGsucXVldWU9YSxrLmJhc2VRdWV1ZT1udWxsLG49TWgoZSxiLGMpLGsubWVtb2l6ZWRTdGF0ZT1rLmJhc2VTdGF0ZT1uKTtyZXR1cm4gbn1cbmZ1bmN0aW9uIFBoKGEsYixjKXt2YXIgZD1JaCgpO3JldHVybiBOaChkLGEsYixjKX1mdW5jdGlvbiBRaChhKXt2YXIgYj1IaCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpKaCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1cbmZ1bmN0aW9uIFJoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPVIudXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbH0sUi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1mdW5jdGlvbiBTaChhKXt2YXIgYj1IaCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfWZ1bmN0aW9uIFRoKCl7cmV0dXJuIEloKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBVaChhLGIsYyxkKXt2YXIgZT1IaCgpO1IuZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPVJoKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiBWaChhLGIsYyxkKXt2YXIgZT1JaCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1TKXt2YXIgZz1TLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJkJoKGQsZy5kZXBzKSl7UmgoYixjLGYsZCk7cmV0dXJufX1SLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyxmLGQpfWZ1bmN0aW9uIFdoKGEsYil7cmV0dXJuIFVoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWGgoYSxiKXtyZXR1cm4gVmgoNTE2LDQsYSxiKX1mdW5jdGlvbiBZaChhLGIpe3JldHVybiBWaCg0LDIsYSxiKX1mdW5jdGlvbiBaaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fVxuZnVuY3Rpb24gJGgoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBWaCg0LDIsWmguYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gYWkoKXt9ZnVuY3Rpb24gYmkoYSxiKXt2YXIgYz1JaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmQmgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gY2koYSxiKXt2YXIgYz1JaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmQmgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBkaShhLGIpe3ZhciBjPWVnKCk7Z2coOTg+Yz85ODpjLGZ1bmN0aW9uKCl7YSghMCl9KTtnZyg5NzxjPzk3OmMsZnVuY3Rpb24oKXt2YXIgYz13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7YSghMSksYigpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1jfX0pfVxuZnVuY3Rpb24gT2goYSxiLGMpe3ZhciBkPUhnKCksZT1JZyhhKSxmPXtsYW5lOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sZz1iLnBlbmRpbmc7bnVsbD09PWc/Zi5uZXh0PWY6KGYubmV4dD1nLm5leHQsZy5uZXh0PWYpO2IucGVuZGluZz1mO2c9YS5hbHRlcm5hdGU7aWYoYT09PVJ8fG51bGwhPT1nJiZnPT09Uil6aD15aD0hMDtlbHNle2lmKDA9PT1hLmxhbmVzJiYobnVsbD09PWd8fDA9PT1nLmxhbmVzKSYmKGc9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1nKSl0cnl7dmFyIGg9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxrPWcoaCxjKTtmLmVhZ2VyUmVkdWNlcj1nO2YuZWFnZXJTdGF0ZT1rO2lmKEhlKGssaCkpcmV0dXJufWNhdGNoKGwpe31maW5hbGx5e31KZyhhLGUsZCl9fVxudmFyIEdoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpBaCx1c2VDb250ZXh0OkFoLHVzZUVmZmVjdDpBaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkFoLHVzZUxheW91dEVmZmVjdDpBaCx1c2VNZW1vOkFoLHVzZVJlZHVjZXI6QWgsdXNlUmVmOkFoLHVzZVN0YXRlOkFoLHVzZURlYnVnVmFsdWU6QWgsdXNlRGVmZXJyZWRWYWx1ZTpBaCx1c2VUcmFuc2l0aW9uOkFoLHVzZU11dGFibGVTb3VyY2U6QWgsdXNlT3BhcXVlSWRlbnRpZmllcjpBaCx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LERoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe0hoKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OldoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBVaCg0LDIsWmguYmluZChudWxsLFxuYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFVoKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9SGgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9SGgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD1PaC5iaW5kKG51bGwsUixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6U2gsdXNlU3RhdGU6UWgsdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPVFoKGEpLGM9YlswXSxkPWJbMV07V2goZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO1xud2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPVFoKCExKSxiPWFbMF07YT1kaS5iaW5kKG51bGwsYVsxXSk7U2goYSk7cmV0dXJuW2EsYl19LHVzZU11dGFibGVTb3VyY2U6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7ZC5tZW1vaXplZFN0YXRlPXtyZWZzOntnZXRTbmFwc2hvdDpiLHNldFNuYXBzaG90Om51bGx9LHNvdXJjZTphLHN1YnNjcmliZTpjfTtyZXR1cm4gTmgoZCxhLGIsYyl9LHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtpZihsaCl7dmFyIGE9ITEsYj11ZihmdW5jdGlvbigpe2F8fChhPSEwLGMoXCJyOlwiKyh0ZisrKS50b1N0cmluZygzNikpKTt0aHJvdyBFcnJvcih5KDM1NSkpO30pLGM9UWgoYilbMV07MD09PShSLm1vZGUmMikmJihSLmZsYWdzfD01MTYsUmgoNSxmdW5jdGlvbigpe2MoXCJyOlwiKyh0ZisrKS50b1N0cmluZygzNikpfSxcbnZvaWQgMCxudWxsKSk7cmV0dXJuIGJ9Yj1cInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KTtRaChiKTtyZXR1cm4gYn0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxFaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6YmksdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6WGgsdXNlSW1wZXJhdGl2ZUhhbmRsZTokaCx1c2VMYXlvdXRFZmZlY3Q6WWgsdXNlTWVtbzpjaSx1c2VSZWR1Y2VyOktoLHVzZVJlZjpUaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBLaChKaCl9LHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1LaChKaCksYz1iWzBdLGQ9YlsxXTtYaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPUtoKEpoKVswXTtyZXR1cm5bVGgoKS5jdXJyZW50LFxuYV19LHVzZU11dGFibGVTb3VyY2U6UGgsdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe3JldHVybiBLaChKaClbMF19LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRmg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpMaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gTGgoSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9TGgoSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1MaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gTGgoSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LGVpPXJhLlJlYWN0Q3VycmVudE93bmVyLHVnPSExO2Z1bmN0aW9uIGZpKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WmcoYixudWxsLGMsZCk6WWcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gZ2koYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3RnKGIsZSk7ZD1DaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF1ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS01MTcsYS5sYW5lcyY9fmUsaGkoYSxiLGUpO2IuZmxhZ3N8PTE7ZmkoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBpaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIWppKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLGtpKGEsYixnLGQsZSxmKTthPVZnKGMudHlwZSxudWxsLGQsYixiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZigwPT09KGUmZikmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6SmUsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gaGkoYSxiLGYpO2IuZmxhZ3N8PTE7YT1UZyhnLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGtpKGEsYixjLGQsZSxmKXtpZihudWxsIT09YSYmSmUoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmKWlmKHVnPSExLDAhPT0oZiZlKSkwIT09KGEuZmxhZ3MmMTYzODQpJiYodWc9ITApO2Vsc2UgcmV0dXJuIGIubGFuZXM9YS5sYW5lcyxoaShhLGIsZik7cmV0dXJuIGxpKGEsYixjLGQsZil9XG5mdW5jdGlvbiBtaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLmNoaWxkcmVuLGY9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7aWYoXCJoaWRkZW5cIj09PWQubW9kZXx8XCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiPT09ZC5tb2RlKWlmKDA9PT0oYi5tb2RlJjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsYyk7ZWxzZSBpZigwIT09KGMmMTA3Mzc0MTgyNCkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MH0sbmkoYixudWxsIT09Zj9mLmJhc2VMYW5lczpjKTtlbHNlIHJldHVybiBhPW51bGwhPT1mP2YuYmFzZUxhbmVzfGM6YyxiLmxhbmVzPWIuY2hpbGRMYW5lcz0xMDczNzQxODI0LGIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmF9LG5pKGIsYSksbnVsbDtlbHNlIG51bGwhPT1mPyhkPWYuYmFzZUxhbmVzfGMsYi5tZW1vaXplZFN0YXRlPW51bGwpOmQ9YyxuaShiLGQpO2ZpKGEsYixlLGMpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gb2koYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5mbGFnc3w9MTI4fWZ1bmN0aW9uIGxpKGEsYixjLGQsZSl7dmFyIGY9RmYoYyk/RGY6TS5jdXJyZW50O2Y9RWYoYixmKTt0ZyhiLGUpO2M9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gcGkoYSxiLGMsZCxlKXtpZihGZihjKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO3RnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpLE1nKGIsYyxkKSxPZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD12ZyhsKToobD1GZihjKT9EZjpNLmN1cnJlbnQsbD1FZihiLGwpKTt2YXIgbj1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBufHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTmcoYixnLGQsbCk7d2c9ITE7dmFyIHA9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cDtDZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8cCE9PWt8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBuJiYoR2coYixjLG4sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXdnfHxMZyhiLGMsaCxkLHAsayxsKSk/KEF8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpLGQ9ITEpfWVsc2V7Zz1iLnN0YXRlTm9kZTt5ZyhhLGIpO2g9Yi5tZW1vaXplZFByb3BzO2w9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOmxnKGIudHlwZSxoKTtnLnByb3BzPWw7QT1iLnBlbmRpbmdQcm9wcztwPWcuY29udGV4dDtrPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPXZnKGspOihrPUZmKGMpP0RmOk0uY3VycmVudCxrPUVmKGIsaykpO3ZhciBDPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOyhuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBDfHxcblwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09QXx8cCE9PWspJiZOZyhiLGcsZCxrKTt3Zz0hMTtwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7dmFyIHg9Yi5tZW1vaXplZFN0YXRlO2ghPT1BfHxwIT09eHx8Ti5jdXJyZW50fHx3Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIEMmJihHZyhiLGMsQyxkKSx4PWIubWVtb2l6ZWRTdGF0ZSksKGw9d2d8fExnKGIsYyxsLGQscCx4LGspKT8obnx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxcbngsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZmxhZ3N8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWssZD1sKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxcbmg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTI1NiksZD0hMSl9cmV0dXJuIHFpKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIHFpKGEsYixjLGQsZSxmKXtvaShhLGIpO3ZhciBnPTAhPT0oYi5mbGFncyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZLZihiLGMsITEpLGhpKGEsYixmKTtkPWIuc3RhdGVOb2RlO2VpLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZmxhZ3N8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9WWcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1ZZyhiLG51bGwsaCxmKSk6ZmkoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmS2YoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiByaShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0hmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkhmKGEsYi5jb250ZXh0LCExKTtlaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgc2k9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeUxhbmU6MH07XG5mdW5jdGlvbiB0aShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1QLmN1cnJlbnQsZj0hMSxnOyhnPTAhPT0oYi5mbGFncyY2NCkpfHwoZz1udWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZT8hMTowIT09KGUmMikpO2c/KGY9ITAsYi5mbGFncyY9LTY1KTpudWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZXx8dm9pZCAwPT09ZC5mYWxsYmFja3x8ITA9PT1kLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwoZXw9MSk7SShQLGUmMSk7aWYobnVsbD09PWEpe3ZvaWQgMCE9PWQuZmFsbGJhY2smJnBoKGIpO2E9ZC5jaGlsZHJlbjtlPWQuZmFsbGJhY2s7aWYoZilyZXR1cm4gYT11aShiLGEsZSxjKSxiLmNoaWxkLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczpjfSxiLm1lbW9pemVkU3RhdGU9c2ksYTtpZihcIm51bWJlclwiPT09dHlwZW9mIGQudW5zdGFibGVfZXhwZWN0ZWRMb2FkVGltZSlyZXR1cm4gYT11aShiLGEsZSxjKSxiLmNoaWxkLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczpjfSxcbmIubWVtb2l6ZWRTdGF0ZT1zaSxiLmxhbmVzPTMzNTU0NDMyLGE7Yz12aSh7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjphfSxiLm1vZGUsYyxudWxsKTtjLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWN9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTp7YmFzZUxhbmVzOmUuYmFzZUxhbmVzfGN9LGYuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmMsYi5tZW1vaXplZFN0YXRlPXNpLGQ7Yz14aShhLGIsZC5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gY31pZihmKXJldHVybiBkPXdpKGEsYixkLmNoaWxkcmVuLGQuZmFsbGJhY2ssYyksZj1iLmNoaWxkLGU9YS5jaGlsZC5tZW1vaXplZFN0YXRlLGYubWVtb2l6ZWRTdGF0ZT1udWxsPT09ZT97YmFzZUxhbmVzOmN9Olxue2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9ZnVuY3Rpb24gdWkoYSxiLGMsZCl7dmFyIGU9YS5tb2RlLGY9YS5jaGlsZDtiPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Yn07MD09PShlJjIpJiZudWxsIT09Zj8oZi5jaGlsZExhbmVzPTAsZi5wZW5kaW5nUHJvcHM9Yik6Zj12aShiLGUsMCxudWxsKTtjPVhnKGMsZSxkLG51bGwpO2YucmV0dXJuPWE7Yy5yZXR1cm49YTtmLnNpYmxpbmc9YzthLmNoaWxkPWY7cmV0dXJuIGN9XG5mdW5jdGlvbiB4aShhLGIsYyxkKXt2YXIgZT1hLmNoaWxkO2E9ZS5zaWJsaW5nO2M9VGcoZSx7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpjfSk7MD09PShiLm1vZGUmMikmJihjLmxhbmVzPWQpO2MucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGw7bnVsbCE9PWEmJihhLm5leHRFZmZlY3Q9bnVsbCxhLmZsYWdzPTgsYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YSk7cmV0dXJuIGIuY2hpbGQ9Y31cbmZ1bmN0aW9uIHdpKGEsYixjLGQsZSl7dmFyIGY9Yi5tb2RlLGc9YS5jaGlsZDthPWcuc2libGluZzt2YXIgaD17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmN9OzA9PT0oZiYyKSYmYi5jaGlsZCE9PWc/KGM9Yi5jaGlsZCxjLmNoaWxkTGFuZXM9MCxjLnBlbmRpbmdQcm9wcz1oLGc9Yy5sYXN0RWZmZWN0LG51bGwhPT1nPyhiLmZpcnN0RWZmZWN0PWMuZmlyc3RFZmZlY3QsYi5sYXN0RWZmZWN0PWcsZy5uZXh0RWZmZWN0PW51bGwpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGwpOmM9VGcoZyxoKTtudWxsIT09YT9kPVRnKGEsZCk6KGQ9WGcoZCxmLGUsbnVsbCksZC5mbGFnc3w9Mik7ZC5yZXR1cm49YjtjLnJldHVybj1iO2Muc2libGluZz1kO2IuY2hpbGQ9YztyZXR1cm4gZH1mdW5jdGlvbiB5aShhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtzZyhhLnJldHVybixiKX1cbmZ1bmN0aW9uIHppKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBBaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO2ZpKGEsYixkLmNoaWxkcmVuLGMpO2Q9UC5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZmxhZ3N8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5mbGFncyY2NCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZ5aShhLGMpO2Vsc2UgaWYoMTk9PT1hLnRhZyl5aShhLGMpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1JKFAsZCk7aWYoMD09PShiLm1vZGUmMikpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PWloKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7emkoYiwhMSxlLGMsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09aWgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfXppKGIsITAsYyxudWxsLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwidG9nZXRoZXJcIjp6aShiLCExLG51bGwsbnVsbCx2b2lkIDAsYi5sYXN0RWZmZWN0KTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaGkoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO0RnfD1iLmxhbmVzO2lmKDAhPT0oYyZiLmNoaWxkTGFuZXMpKXtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IoeSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9VGcoYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVRnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9cmV0dXJuIG51bGx9dmFyIEJpLENpLERpLEVpO1xuQmk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0NpPWZ1bmN0aW9uKCl7fTtcbkRpPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWEubWVtb2l6ZWRQcm9wcztpZihlIT09ZCl7YT1iLnN0YXRlTm9kZTtkaChhaC5jdXJyZW50KTt2YXIgZj1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjplPVlhKGEsZSk7ZD1ZYShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZWIoYSxlKTtkPWViKGEsZCk7Zj1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6ZT1tKHt9LGUse3ZhbHVlOnZvaWQgMH0pO2Q9bSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtmPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmU9Z2IoYSxlKTtkPWdiKGEsZCk7Zj1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihhLm9uY2xpY2s9amYpfXZiKGMsZCk7dmFyIGc7Yz1udWxsO2ZvcihsIGluIGUpaWYoIWQuaGFzT3duUHJvcGVydHkobCkmJmUuaGFzT3duUHJvcGVydHkobCkmJm51bGwhPWVbbF0paWYoXCJzdHlsZVwiPT09XG5sKXt2YXIgaD1lW2xdO2ZvcihnIGluIGgpaC5oYXNPd25Qcm9wZXJ0eShnKSYmKGN8fChjPXt9KSxjW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1sJiZcImNoaWxkcmVuXCIhPT1sJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJlwiYXV0b0ZvY3VzXCIhPT1sJiYoY2EuaGFzT3duUHJvcGVydHkobCk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGwsbnVsbCkpO2ZvcihsIGluIGQpe3ZhciBrPWRbbF07aD1udWxsIT1lP2VbbF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkobCkmJmshPT1oJiYobnVsbCE9a3x8bnVsbCE9aCkpaWYoXCJzdHlsZVwiPT09bClpZihoKXtmb3IoZyBpbiBoKSFoLmhhc093blByb3BlcnR5KGcpfHxrJiZrLmhhc093blByb3BlcnR5KGcpfHwoY3x8KGM9e30pLGNbZ109XCJcIik7Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiZoW2ddIT09a1tnXSYmKGN8fFxuKGM9e30pLGNbZ109a1tnXSl9ZWxzZSBjfHwoZnx8KGY9W10pLGYucHVzaChsLGMpKSxjPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWw/KGs9az9rLl9faHRtbDp2b2lkIDAsaD1oP2guX19odG1sOnZvaWQgMCxudWxsIT1rJiZoIT09ayYmKGY9Znx8W10pLnB1c2gobCxrKSk6XCJjaGlsZHJlblwiPT09bD9cInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2gobCxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpPyhudWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1sJiZHKFwic2Nyb2xsXCIsYSksZnx8aD09PWt8fChmPVtdKSk6XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09ayYmay4kJHR5cGVvZj09PUdhP2sudG9TdHJpbmcoKTooZj1mfHxbXSkucHVzaChsLGspKX1jJiYoZj1mfHxbXSkucHVzaChcInN0eWxlXCIsXG5jKTt2YXIgbD1mO2lmKGIudXBkYXRlUXVldWU9bCliLmZsYWdzfD00fX07RWk9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmZsYWdzfD00KX07ZnVuY3Rpb24gRmkoYSxiKXtpZighbGgpc3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIEdpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTpyZXR1cm4gRmYoYi50eXBlKSYmR2YoKSxudWxsO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2Q9Yi5zdGF0ZU5vZGU7ZC5wZW5kaW5nQ29udGV4dCYmKGQuY29udGV4dD1kLnBlbmRpbmdDb250ZXh0LGQucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKXJoKGIpP2IuZmxhZ3N8PTQ6ZC5oeWRyYXRlfHwoYi5mbGFnc3w9MjU2KTtDaShiKTtyZXR1cm4gbnVsbDtjYXNlIDU6aGgoYik7dmFyIGU9ZGgoY2guY3VycmVudCk7Yz1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKURpKGEsYixjLGQsZSksYS5yZWYhPT1iLnJlZiYmKGIuZmxhZ3N8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PVxuYi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjYpKTtyZXR1cm4gbnVsbH1hPWRoKGFoLmN1cnJlbnQpO2lmKHJoKGIpKXtkPWIuc3RhdGVOb2RlO2M9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW3dmXT1iO2RbeGZdPWY7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpHKFwiY2FuY2VsXCIsZCk7RyhcImNsb3NlXCIsZCk7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihhPTA7YTxYZS5sZW5ndGg7YSsrKUcoWGVbYV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkcoXCJlcnJvclwiLGQpO0coXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoZCxmKTtHKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtHKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGQsZiksRyhcImludmFsaWRcIixkKX12YihjLGYpO2E9bnVsbDtmb3IodmFyIGcgaW4gZilmLmhhc093blByb3BlcnR5KGcpJiYoZT1mW2ddLFwiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBlP2QudGV4dENvbnRlbnQhPT1lJiYoYT1bXCJjaGlsZHJlblwiLGVdKTpcIm51bWJlclwiPT09dHlwZW9mIGUmJmQudGV4dENvbnRlbnQhPT1cIlwiK2UmJihhPVtcImNoaWxkcmVuXCIsXCJcIitlXSk6Y2EuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWUmJlwib25TY3JvbGxcIj09PWcmJkcoXCJzY3JvbGxcIixkKSk7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGQpO2NiKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoZCk7amIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJihkLm9uY2xpY2s9XG5qZil9ZD1hO2IudXBkYXRlUXVldWU9ZDtudWxsIT09ZCYmKGIuZmxhZ3N8PTQpfWVsc2V7Zz05PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudDthPT09a2IuaHRtbCYmKGE9bGIoYykpO2E9PT1rYi5odG1sP1wic2NyaXB0XCI9PT1jPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoYyx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChjKSxcInNlbGVjdFwiPT09YyYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsYyk7YVt3Zl09YjthW3hmXT1kO0JpKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTtnPXdiKGMsZCk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpHKFwiY2FuY2VsXCIsYSk7RyhcImNsb3NlXCIsYSk7XG5lPWQ7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8WGUubGVuZ3RoO2UrKylHKFhlW2VdLGEpO2U9ZDticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkcoXCJlcnJvclwiLGEpO0coXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpaYShhLGQpO2U9WWEoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtlPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihhLGQpO2U9XG5nYihhLGQpO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7ZGVmYXVsdDplPWR9dmIoYyxlKTt2YXIgaD1lO2ZvcihmIGluIGgpaWYoaC5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGs9aFtmXTtcInN0eWxlXCI9PT1mP3RiKGEsayk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZvYihhLGspKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09Y3x8XCJcIiE9PWspJiZwYihhLGspOlwibnVtYmVyXCI9PT10eXBlb2YgayYmcGIoYSxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJihjYS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1mJiZHKFwic2Nyb2xsXCIsYSk6bnVsbCE9ayYmcWEoYSxmLGssZykpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShhKTtjYihhLGQsITEpO1xuYnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoYSk7amIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK1NhKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Zj1kLnZhbHVlO251bGwhPWY/ZmIoYSwhIWQubXVsdGlwbGUsZiwhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJmZiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLm9uQ2xpY2smJihhLm9uY2xpY2s9amYpfW1mKGMsZCkmJihiLmZsYWdzfD00KX1udWxsIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlFaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjYpKTtcbmM9ZGgoY2guY3VycmVudCk7ZGgoYWguY3VycmVudCk7cmgoYik/KGQ9Yi5zdGF0ZU5vZGUsYz1iLm1lbW9pemVkUHJvcHMsZFt3Zl09YixkLm5vZGVWYWx1ZSE9PWMmJihiLmZsYWdzfD00KSk6KGQ9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxkW3dmXT1iLGIuc3RhdGVOb2RlPWQpfXJldHVybiBudWxsO2Nhc2UgMTM6SChQKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZmxhZ3MmNjQpKXJldHVybiBiLmxhbmVzPWMsYjtkPW51bGwhPT1kO2M9ITE7bnVsbD09PWE/dm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLmZhbGxiYWNrJiZyaChiKTpjPW51bGwhPT1hLm1lbW9pemVkU3RhdGU7aWYoZCYmIWMmJjAhPT0oYi5tb2RlJjIpKWlmKG51bGw9PT1hJiYhMCE9PWIubWVtb2l6ZWRQcm9wcy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8MCE9PShQLmN1cnJlbnQmMSkpMD09PVYmJihWPTMpO2Vsc2V7aWYoMD09PVZ8fDM9PT1WKVY9XG40O251bGw9PT1VfHwwPT09KERnJjEzNDIxNzcyNykmJjA9PT0oSGkmMTM0MjE3NzI3KXx8SWkoVSxXKX1pZihkfHxjKWIuZmxhZ3N8PTQ7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLENpKGIpLG51bGw9PT1hJiZjZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxudWxsO2Nhc2UgMTA6cmV0dXJuIHJnKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gRmYoYi50eXBlKSYmR2YoKSxudWxsO2Nhc2UgMTk6SChQKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtmPTAhPT0oYi5mbGFncyY2NCk7Zz1kLnJlbmRlcmluZztpZihudWxsPT09ZylpZihmKUZpKGQsITEpO2Vsc2V7aWYoMCE9PVZ8fG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtnPWloKGEpO2lmKG51bGwhPT1nKXtiLmZsYWdzfD02NDtGaShkLCExKTtmPWcudXBkYXRlUXVldWU7bnVsbCE9PWYmJihiLnVwZGF0ZVF1ZXVlPWYsYi5mbGFnc3w9NCk7XG5udWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2Q9Yztmb3IoYz1iLmNoaWxkO251bGwhPT1jOylmPWMsYT1kLGYuZmxhZ3MmPTIsZi5uZXh0RWZmZWN0PW51bGwsZi5maXJzdEVmZmVjdD1udWxsLGYubGFzdEVmZmVjdD1udWxsLGc9Zi5hbHRlcm5hdGUsbnVsbD09PWc/KGYuY2hpbGRMYW5lcz0wLGYubGFuZXM9YSxmLmNoaWxkPW51bGwsZi5tZW1vaXplZFByb3BzPW51bGwsZi5tZW1vaXplZFN0YXRlPW51bGwsZi51cGRhdGVRdWV1ZT1udWxsLGYuZGVwZW5kZW5jaWVzPW51bGwsZi5zdGF0ZU5vZGU9bnVsbCk6KGYuY2hpbGRMYW5lcz1nLmNoaWxkTGFuZXMsZi5sYW5lcz1nLmxhbmVzLGYuY2hpbGQ9Zy5jaGlsZCxmLm1lbW9pemVkUHJvcHM9Zy5tZW1vaXplZFByb3BzLGYubWVtb2l6ZWRTdGF0ZT1nLm1lbW9pemVkU3RhdGUsZi51cGRhdGVRdWV1ZT1nLnVwZGF0ZVF1ZXVlLGYudHlwZT1nLnR5cGUsYT1nLmRlcGVuZGVuY2llcyxcbmYuZGVwZW5kZW5jaWVzPW51bGw9PT1hP251bGw6e2xhbmVzOmEubGFuZXMsZmlyc3RDb250ZXh0OmEuZmlyc3RDb250ZXh0fSksYz1jLnNpYmxpbmc7SShQLFAuY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWE9YS5zaWJsaW5nfW51bGwhPT1kLnRhaWwmJk8oKT5KaSYmKGIuZmxhZ3N8PTY0LGY9ITAsRmkoZCwhMSksYi5sYW5lcz0zMzU1NDQzMil9ZWxzZXtpZighZilpZihhPWloKGcpLG51bGwhPT1hKXtpZihiLmZsYWdzfD02NCxmPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmZsYWdzfD00KSxGaShkLCEwKSxudWxsPT09ZC50YWlsJiZcImhpZGRlblwiPT09ZC50YWlsTW9kZSYmIWcuYWx0ZXJuYXRlJiYhbGgpcmV0dXJuIGI9Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdCxudWxsIT09YiYmKGIubmV4dEVmZmVjdD1udWxsKSxudWxsfWVsc2UgMipPKCktZC5yZW5kZXJpbmdTdGFydFRpbWU+SmkmJjEwNzM3NDE4MjQhPT1jJiYoYi5mbGFnc3w9XG42NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpO2QuaXNCYWNrd2FyZHM/KGcuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zyk6KGM9ZC5sYXN0LG51bGwhPT1jP2Muc2libGluZz1nOmIuY2hpbGQ9ZyxkLmxhc3Q9Zyl9cmV0dXJuIG51bGwhPT1kLnRhaWw/KGM9ZC50YWlsLGQucmVuZGVyaW5nPWMsZC50YWlsPWMuc2libGluZyxkLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0LGQucmVuZGVyaW5nU3RhcnRUaW1lPU8oKSxjLnNpYmxpbmc9bnVsbCxiPVAuY3VycmVudCxJKFAsZj9iJjF8MjpiJjEpLGMpOm51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBLaSgpLG51bGwhPT1hJiZudWxsIT09YS5tZW1vaXplZFN0YXRlIT09KG51bGwhPT1iLm1lbW9pemVkU3RhdGUpJiZcInVuc3RhYmxlLWRlZmVyLXdpdGhvdXQtaGlkaW5nXCIhPT1kLm1vZGUmJihiLmZsYWdzfD00KSxudWxsfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7fVxuZnVuY3Rpb24gTGkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6RmYoYS50eXBlKSYmR2YoKTt2YXIgYj1hLmZsYWdzO3JldHVybiBiJjQwOTY/KGEuZmxhZ3M9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2I9YS5mbGFncztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHkoMjg1KSk7YS5mbGFncz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gaGgoYSksbnVsbDtjYXNlIDEzOnJldHVybiBIKFApLGI9YS5mbGFncyxiJjQwOTY/KGEuZmxhZ3M9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEgoUCksbnVsbDtjYXNlIDQ6cmV0dXJuIGZoKCksbnVsbDtjYXNlIDEwOnJldHVybiByZyhhKSxudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gTWkoYSxiKXt0cnl7dmFyIGM9XCJcIixkPWI7ZG8gYys9UWEoZCksZD1kLnJldHVybjt3aGlsZShkKTt2YXIgZT1jfWNhdGNoKGYpe2U9XCJcXG5FcnJvciBnZW5lcmF0aW5nIHN0YWNrOiBcIitmLm1lc3NhZ2UrXCJcXG5cIitmLnN0YWNrfXJldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOmV9fWZ1bmN0aW9uIE5pKGEsYil7dHJ5e2NvbnNvbGUuZXJyb3IoYi52YWx1ZSl9Y2F0Y2goYyl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGM7fSl9fXZhciBPaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBQaShhLGIsYyl7Yz16ZygtMSxjKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtRaXx8KFFpPSEwLFJpPWQpO05pKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gU2koYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe05pKGEsYik7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1UaT9UaT1uZXcgU2V0KFt0aGlzXSk6VGkuYWRkKHRoaXMpLE5pKGEsYikpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfXZhciBVaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtcbmZ1bmN0aW9uIFZpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe1dpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1mdW5jdGlvbiBYaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOnJldHVybjtjYXNlIDE6aWYoYi5mbGFncyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOmxnKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9cmV0dXJuO2Nhc2UgMzpiLmZsYWdzJjI1NiYmcWYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7cmV0dXJuO2Nhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fVxuZnVuY3Rpb24gWWkoYSxiLGMpe3N3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOmI9Yy51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXthPWI9Yi5uZXh0O2Rve2lmKDM9PT0oYS50YWcmMykpe3ZhciBkPWEuY3JlYXRlO2EuZGVzdHJveT1kKCl9YT1hLm5leHR9d2hpbGUoYSE9PWIpfWI9Yy51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXthPWI9Yi5uZXh0O2Rve3ZhciBlPWE7ZD1lLm5leHQ7ZT1lLnRhZzswIT09KGUmNCkmJjAhPT0oZSYxKSYmKFppKGMsYSksJGkoYyxhKSk7YT1kfXdoaWxlKGEhPT1iKX1yZXR1cm47Y2FzZSAxOmE9Yy5zdGF0ZU5vZGU7Yy5mbGFncyY0JiYobnVsbD09PWI/YS5jb21wb25lbnREaWRNb3VudCgpOihkPWMuZWxlbWVudFR5cGU9PT1jLnR5cGU/Yi5tZW1vaXplZFByb3BzOmxnKGMudHlwZSxiLm1lbW9pemVkUHJvcHMpLGEuY29tcG9uZW50RGlkVXBkYXRlKGQsXG5iLm1lbW9pemVkU3RhdGUsYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSkpKTtiPWMudXBkYXRlUXVldWU7bnVsbCE9PWImJkVnKGMsYixhKTtyZXR1cm47Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9Yy5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmE9Yy5jaGlsZC5zdGF0ZU5vZGV9RWcoYyxiLGEpfXJldHVybjtjYXNlIDU6YT1jLnN0YXRlTm9kZTtudWxsPT09YiYmYy5mbGFncyY0JiZtZihjLnR5cGUsYy5tZW1vaXplZFByb3BzKSYmYS5mb2N1cygpO3JldHVybjtjYXNlIDY6cmV0dXJuO2Nhc2UgNDpyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsPT09Yy5tZW1vaXplZFN0YXRlJiYoYz1jLmFsdGVybmF0ZSxudWxsIT09YyYmKGM9Yy5tZW1vaXplZFN0YXRlLG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbCE9PWMmJkNjKGMpKSkpO1xucmV0dXJuO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6Y2FzZSAyMzpjYXNlIDI0OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIGFqKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQ9ZC5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5zZXRQcm9wZXJ0eT9kLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmQuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1zYihcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigoMjMhPT1jLnRhZyYmMjQhPT1jLnRhZ3x8bnVsbD09PWMubWVtb2l6ZWRTdGF0ZXx8Yz09PWEpJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PVxuYSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YSlyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIGJqKGEsYil7aWYoTWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBNZi5vbkNvbW1pdEZpYmVyVW5tb3VudCl0cnl7TWYub25Db21taXRGaWJlclVubW91bnQoTGYsYil9Y2F0Y2goZil7fXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgYz1hPWEubmV4dDtkb3t2YXIgZD1jLGU9ZC5kZXN0cm95O2Q9ZC50YWc7aWYodm9pZCAwIT09ZSlpZigwIT09KGQmNCkpWmkoYixjKTtlbHNle2Q9Yjt0cnl7ZSgpfWNhdGNoKGYpe1dpKGQsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1hKX1icmVhaztjYXNlIDE6VmkoYik7YT1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7YS5wcm9wcz1iLm1lbW9pemVkUHJvcHMsYS5zdGF0ZT1iLm1lbW9pemVkU3RhdGUsYS5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe1dpKGIsXG5mKX1icmVhaztjYXNlIDU6VmkoYik7YnJlYWs7Y2FzZSA0OmNqKGEsYil9fWZ1bmN0aW9uIGRqKGEpe2EuYWx0ZXJuYXRlPW51bGw7YS5jaGlsZD1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5yZXR1cm49bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGx9ZnVuY3Rpb24gZWooYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBmaihhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihlaihiKSlicmVhayBhO2I9Yi5yZXR1cm59dGhyb3cgRXJyb3IoeSgxNjApKTt9dmFyIGM9YjtiPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgxNjEpKTt9Yy5mbGFncyYxNiYmKHBiKGIsXCJcIiksYy5mbGFncyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGVqKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZmxhZ3MmMiljb250aW51ZSBiO2lmKG51bGw9PT1cbmMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmZsYWdzJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/Z2ooYSxjLGIpOmhqKGEsYyxiKX1cbmZ1bmN0aW9uIGdqKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1qZikpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihnaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KWdqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIGhqKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoaGooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOyloaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBjaihhLGIpe2Zvcih2YXIgYz1iLGQ9ITEsZSxmOzspe2lmKCFkKXtkPWMucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZCl0aHJvdyBFcnJvcih5KDE2MCkpO2U9ZC5zdGF0ZU5vZGU7c3dpdGNoKGQudGFnKXtjYXNlIDU6Zj0hMTticmVhayBhO2Nhc2UgMzplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGE7Y2FzZSA0OmU9ZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYX1kPWQucmV0dXJufWQ9ITB9aWYoNT09PWMudGFnfHw2PT09Yy50YWcpe2E6Zm9yKHZhciBnPWEsaD1jLGs9aDs7KWlmKGJqKGcsayksbnVsbCE9PWsuY2hpbGQmJjQhPT1rLnRhZylrLmNoaWxkLnJldHVybj1rLGs9ay5jaGlsZDtlbHNle2lmKGs9PT1oKWJyZWFrIGE7Zm9yKDtudWxsPT09ay5zaWJsaW5nOyl7aWYobnVsbD09PWsucmV0dXJufHxrLnJldHVybj09PWgpYnJlYWsgYTtrPWsucmV0dXJufWsuc2libGluZy5yZXR1cm49ay5yZXR1cm47az1rLnNpYmxpbmd9Zj8oZz1lLGg9Yy5zdGF0ZU5vZGUsXG44PT09Zy5ub2RlVHlwZT9nLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaCk6Zy5yZW1vdmVDaGlsZChoKSk6ZS5yZW1vdmVDaGlsZChjLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yy50YWcpe2lmKG51bGwhPT1jLmNoaWxkKXtlPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zj0hMDtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX19ZWxzZSBpZihiaihhLGMpLG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybjs0PT09Yy50YWcmJihkPSExKX1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIGlqKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjp2YXIgYz1iLnVwZGF0ZVF1ZXVlO2M9bnVsbCE9PWM/Yy5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWMpe3ZhciBkPWM9Yy5uZXh0O2RvIDM9PT0oZC50YWcmMykmJihhPWQuZGVzdHJveSxkLmRlc3Ryb3k9dm9pZCAwLHZvaWQgMCE9PWEmJmEoKSksZD1kLm5leHQ7d2hpbGUoZCE9PWMpfXJldHVybjtjYXNlIDE6cmV0dXJuO2Nhc2UgNTpjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe2Q9Yi5tZW1vaXplZFByb3BzO3ZhciBlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW3hmXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiYkYShjLGQpO3diKGEsZSk7Yj13YihhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz1cbjIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz90YihjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/b2IoYyxoKTpcImNoaWxkcmVuXCI9PT1nP3BiKGMsaCk6cWEoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOmFiKGMsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YT1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxmPWQudmFsdWUsbnVsbCE9Zj9mYihjLCEhZC5tdWx0aXBsZSxmLCExKTphIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/ZmIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOmZiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19cmV0dXJuO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9XG5iLm1lbW9pemVkUHJvcHM7cmV0dXJuO2Nhc2UgMzpjPWIuc3RhdGVOb2RlO2MuaHlkcmF0ZSYmKGMuaHlkcmF0ZT0hMSxDYyhjLmNvbnRhaW5lckluZm8pKTtyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsIT09Yi5tZW1vaXplZFN0YXRlJiYoamo9TygpLGFqKGIuY2hpbGQsITApKTtraihiKTtyZXR1cm47Y2FzZSAxOTpraihiKTtyZXR1cm47Y2FzZSAxNzpyZXR1cm47Y2FzZSAyMzpjYXNlIDI0OmFqKGIsbnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSk7cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fWZ1bmN0aW9uIGtqKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IFVpKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9bGouYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG5mdW5jdGlvbiBtaihhLGIpe3JldHVybiBudWxsIT09YSYmKGE9YS5tZW1vaXplZFN0YXRlLG51bGw9PT1hfHxudWxsIT09YS5kZWh5ZHJhdGVkKT8oYj1iLm1lbW9pemVkU3RhdGUsbnVsbCE9PWImJm51bGw9PT1iLmRlaHlkcmF0ZWQpOiExfXZhciBuaj1NYXRoLmNlaWwsb2o9cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixwaj1yYS5SZWFjdEN1cnJlbnRPd25lcixYPTAsVT1udWxsLFk9bnVsbCxXPTAscWo9MCxyaj1CZigwKSxWPTAsc2o9bnVsbCx0aj0wLERnPTAsSGk9MCx1aj0wLHZqPW51bGwsamo9MCxKaT1JbmZpbml0eTtmdW5jdGlvbiB3aigpe0ppPU8oKSs1MDB9dmFyIFo9bnVsbCxRaT0hMSxSaT1udWxsLFRpPW51bGwseGo9ITEseWo9bnVsbCx6aj05MCxBaj1bXSxCaj1bXSxDaj1udWxsLERqPTAsRWo9bnVsbCxGaj0tMSxHaj0wLEhqPTAsSWo9bnVsbCxKaj0hMTtmdW5jdGlvbiBIZygpe3JldHVybiAwIT09KFgmNDgpP08oKTotMSE9PUZqP0ZqOkZqPU8oKX1cbmZ1bmN0aW9uIElnKGEpe2E9YS5tb2RlO2lmKDA9PT0oYSYyKSlyZXR1cm4gMTtpZigwPT09KGEmNCkpcmV0dXJuIDk5PT09ZWcoKT8xOjI7MD09PUdqJiYoR2o9dGopO2lmKDAhPT1rZy50cmFuc2l0aW9uKXswIT09SGomJihIaj1udWxsIT09dmo/dmoucGVuZGluZ0xhbmVzOjApO2E9R2o7dmFyIGI9NDE4NjExMiZ+SGo7YiY9LWI7MD09PWImJihhPTQxODYxMTImfmEsYj1hJi1hLDA9PT1iJiYoYj04MTkyKSk7cmV0dXJuIGJ9YT1lZygpOzAhPT0oWCY0KSYmOTg9PT1hP2E9WGMoMTIsR2opOihhPVNjKGEpLGE9WGMoYSxHaikpO3JldHVybiBhfVxuZnVuY3Rpb24gSmcoYSxiLGMpe2lmKDUwPERqKXRocm93IERqPTAsRWo9bnVsbCxFcnJvcih5KDE4NSkpO2E9S2ooYSxiKTtpZihudWxsPT09YSlyZXR1cm4gbnVsbDskYyhhLGIsYyk7YT09PVUmJihIaXw9Yiw0PT09ViYmSWkoYSxXKSk7dmFyIGQ9ZWcoKTsxPT09Yj8wIT09KFgmOCkmJjA9PT0oWCY0OCk/TGooYSk6KE1qKGEsYyksMD09PVgmJih3aigpLGlnKCkpKTooMD09PShYJjQpfHw5OCE9PWQmJjk5IT09ZHx8KG51bGw9PT1Daj9Daj1uZXcgU2V0KFthXSk6Q2ouYWRkKGEpKSxNaihhLGMpKTt2aj1hfWZ1bmN0aW9uIEtqKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO2M9YTtmb3IoYT1hLnJldHVybjtudWxsIT09YTspYS5jaGlsZExhbmVzfD1iLGM9YS5hbHRlcm5hdGUsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpLGM9YSxhPWEucmV0dXJuO3JldHVybiAzPT09Yy50YWc/Yy5zdGF0ZU5vZGU6bnVsbH1cbmZ1bmN0aW9uIE1qKGEsYil7Zm9yKHZhciBjPWEuY2FsbGJhY2tOb2RlLGQ9YS5zdXNwZW5kZWRMYW5lcyxlPWEucGluZ2VkTGFuZXMsZj1hLmV4cGlyYXRpb25UaW1lcyxnPWEucGVuZGluZ0xhbmVzOzA8Zzspe3ZhciBoPTMxLVZjKGcpLGs9MTw8aCxsPWZbaF07aWYoLTE9PT1sKXtpZigwPT09KGsmZCl8fDAhPT0oayZlKSl7bD1iO1JjKGspO3ZhciBuPUY7ZltoXT0xMDw9bj9sKzI1MDo2PD1uP2wrNUUzOi0xfX1lbHNlIGw8PWImJihhLmV4cGlyZWRMYW5lc3w9ayk7ZyY9fmt9ZD1VYyhhLGE9PT1VP1c6MCk7Yj1GO2lmKDA9PT1kKW51bGwhPT1jJiYoYyE9PVpmJiZQZihjKSxhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tQcmlvcml0eT0wKTtlbHNle2lmKG51bGwhPT1jKXtpZihhLmNhbGxiYWNrUHJpb3JpdHk9PT1iKXJldHVybjtjIT09WmYmJlBmKGMpfTE1PT09Yj8oYz1Mai5iaW5kKG51bGwsYSksbnVsbD09PWFnPyhhZz1bY10sYmc9T2YoVWYsamcpKTphZy5wdXNoKGMpLFxuYz1aZik6MTQ9PT1iP2M9aGcoOTksTGouYmluZChudWxsLGEpKTooYz1UYyhiKSxjPWhnKGMsTmouYmluZChudWxsLGEpKSk7YS5jYWxsYmFja1ByaW9yaXR5PWI7YS5jYWxsYmFja05vZGU9Y319XG5mdW5jdGlvbiBOaihhKXtGaj0tMTtIaj1Haj0wO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTt2YXIgYj1hLmNhbGxiYWNrTm9kZTtpZihPaigpJiZhLmNhbGxiYWNrTm9kZSE9PWIpcmV0dXJuIG51bGw7dmFyIGM9VWMoYSxhPT09VT9XOjApO2lmKDA9PT1jKXJldHVybiBudWxsO3ZhciBkPWM7dmFyIGU9WDtYfD0xNjt2YXIgZj1QaigpO2lmKFUhPT1hfHxXIT09ZCl3aigpLFFqKGEsZCk7ZG8gdHJ5e1JqKCk7YnJlYWt9Y2F0Y2goaCl7U2ooYSxoKX13aGlsZSgxKTtxZygpO29qLmN1cnJlbnQ9ZjtYPWU7bnVsbCE9PVk/ZD0wOihVPW51bGwsVz0wLGQ9Vik7aWYoMCE9PSh0aiZIaSkpUWooYSwwKTtlbHNlIGlmKDAhPT1kKXsyPT09ZCYmKFh8PTY0LGEuaHlkcmF0ZSYmKGEuaHlkcmF0ZT0hMSxxZihhLmNvbnRhaW5lckluZm8pKSxjPVdjKGEpLDAhPT1jJiYoZD1UaihhLGMpKSk7aWYoMT09PWQpdGhyb3cgYj1zaixRaihhLDApLElpKGEsYyksTWooYSxPKCkpLGI7YS5maW5pc2hlZFdvcms9XG5hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1jO3N3aXRjaChkKXtjYXNlIDA6Y2FzZSAxOnRocm93IEVycm9yKHkoMzQ1KSk7Y2FzZSAyOlVqKGEpO2JyZWFrO2Nhc2UgMzpJaShhLGMpO2lmKChjJjYyOTE0NTYwKT09PWMmJihkPWpqKzUwMC1PKCksMTA8ZCkpe2lmKDAhPT1VYyhhLDApKWJyZWFrO2U9YS5zdXNwZW5kZWRMYW5lcztpZigoZSZjKSE9PWMpe0hnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZlO2JyZWFrfWEudGltZW91dEhhbmRsZT1vZihVai5iaW5kKG51bGwsYSksZCk7YnJlYWt9VWooYSk7YnJlYWs7Y2FzZSA0OklpKGEsYyk7aWYoKGMmNDE4NjExMik9PT1jKWJyZWFrO2Q9YS5ldmVudFRpbWVzO2ZvcihlPS0xOzA8Yzspe3ZhciBnPTMxLVZjKGMpO2Y9MTw8ZztnPWRbZ107Zz5lJiYoZT1nKTtjJj1+Zn1jPWU7Yz1PKCktYztjPSgxMjA+Yz8xMjA6NDgwPmM/NDgwOjEwODA+Yz8xMDgwOjE5MjA+Yz8xOTIwOjNFMz5jPzNFMzo0MzIwPlxuYz80MzIwOjE5NjAqbmooYy8xOTYwKSktYztpZigxMDxjKXthLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGMpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNTpVaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMzI5KSk7fX1NaihhLE8oKSk7cmV0dXJuIGEuY2FsbGJhY2tOb2RlPT09Yj9Oai5iaW5kKG51bGwsYSk6bnVsbH1mdW5jdGlvbiBJaShhLGIpe2ImPX51ajtiJj1+SGk7YS5zdXNwZW5kZWRMYW5lc3w9YjthLnBpbmdlZExhbmVzJj1+Yjtmb3IoYT1hLmV4cGlyYXRpb25UaW1lczswPGI7KXt2YXIgYz0zMS1WYyhiKSxkPTE8PGM7YVtjXT0tMTtiJj1+ZH19XG5mdW5jdGlvbiBMaihhKXtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7T2ooKTtpZihhPT09VSYmMCE9PShhLmV4cGlyZWRMYW5lcyZXKSl7dmFyIGI9Vzt2YXIgYz1UaihhLGIpOzAhPT0odGomSGkpJiYoYj1VYyhhLGIpLGM9VGooYSxiKSl9ZWxzZSBiPVVjKGEsMCksYz1UaihhLGIpOzAhPT1hLnRhZyYmMj09PWMmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYj1XYyhhKSwwIT09YiYmKGM9VGooYSxiKSkpO2lmKDE9PT1jKXRocm93IGM9c2osUWooYSwwKSxJaShhLGIpLE1qKGEsTygpKSxjO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWI7VWooYSk7TWooYSxPKCkpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gVmooKXtpZihudWxsIT09Q2ope3ZhciBhPUNqO0NqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2EuZXhwaXJlZExhbmVzfD0yNCZhLnBlbmRpbmdMYW5lcztNaihhLE8oKSl9KX1pZygpfWZ1bmN0aW9uIFdqKGEsYil7dmFyIGM9WDtYfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fWZ1bmN0aW9uIFhqKGEsYil7dmFyIGM9WDtYJj0tMjtYfD04O3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fWZ1bmN0aW9uIG5pKGEsYil7SShyaixxaik7cWp8PWI7dGp8PWJ9ZnVuY3Rpb24gS2koKXtxaj1yai5jdXJyZW50O0gocmopfVxuZnVuY3Rpb24gUWooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEscGYoYykpO2lmKG51bGwhPT1ZKWZvcihjPVkucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmR2YoKTticmVhaztjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTticmVhaztjYXNlIDU6aGgoZCk7YnJlYWs7Y2FzZSA0OmZoKCk7YnJlYWs7Y2FzZSAxMzpIKFApO2JyZWFrO2Nhc2UgMTk6SChQKTticmVhaztjYXNlIDEwOnJnKGQpO2JyZWFrO2Nhc2UgMjM6Y2FzZSAyNDpLaSgpfWM9Yy5yZXR1cm59VT1hO1k9VGcoYS5jdXJyZW50LG51bGwpO1c9cWo9dGo9YjtWPTA7c2o9bnVsbDt1aj1IaT1EZz0wfVxuZnVuY3Rpb24gU2ooYSxiKXtkb3t2YXIgYz1ZO3RyeXtxZygpO3ZoLmN1cnJlbnQ9R2g7aWYoeWgpe2Zvcih2YXIgZD1SLm1lbW9pemVkU3RhdGU7bnVsbCE9PWQ7KXt2YXIgZT1kLnF1ZXVlO251bGwhPT1lJiYoZS5wZW5kaW5nPW51bGwpO2Q9ZC5uZXh0fXloPSExfXhoPTA7VD1TPVI9bnVsbDt6aD0hMTtwai5jdXJyZW50PW51bGw7aWYobnVsbD09PWN8fG51bGw9PT1jLnJldHVybil7Vj0xO3NqPWI7WT1udWxsO2JyZWFrfWE6e3ZhciBmPWEsZz1jLnJldHVybixoPWMsaz1iO2I9VztoLmZsYWdzfD0yMDQ4O2guZmlyc3RFZmZlY3Q9aC5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWsmJlwib2JqZWN0XCI9PT10eXBlb2YgayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGsudGhlbil7dmFyIGw9aztpZigwPT09KGgubW9kZSYyKSl7dmFyIG49aC5hbHRlcm5hdGU7bj8oaC51cGRhdGVRdWV1ZT1uLnVwZGF0ZVF1ZXVlLGgubWVtb2l6ZWRTdGF0ZT1uLm1lbW9pemVkU3RhdGUsaC5sYW5lcz1uLmxhbmVzKTpcbihoLnVwZGF0ZVF1ZXVlPW51bGwsaC5tZW1vaXplZFN0YXRlPW51bGwpfXZhciBBPTAhPT0oUC5jdXJyZW50JjEpLHA9Zztkb3t2YXIgQztpZihDPTEzPT09cC50YWcpe3ZhciB4PXAubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eClDPW51bGwhPT14LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgdz1wLm1lbW9pemVkUHJvcHM7Qz12b2lkIDA9PT13LmZhbGxiYWNrPyExOiEwIT09dy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDpBPyExOiEwfX1pZihDKXt2YXIgej1wLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT16KXt2YXIgdT1uZXcgU2V0O3UuYWRkKGwpO3AudXBkYXRlUXVldWU9dX1lbHNlIHouYWRkKGwpO2lmKDA9PT0ocC5tb2RlJjIpKXtwLmZsYWdzfD02NDtoLmZsYWdzfD0xNjM4NDtoLmZsYWdzJj0tMjk4MTtpZigxPT09aC50YWcpaWYobnVsbD09PWguYWx0ZXJuYXRlKWgudGFnPTE3O2Vsc2V7dmFyIHQ9emcoLTEsMSk7dC50YWc9MjtBZyhoLHQpfWgubGFuZXN8PTE7YnJlYWsgYX1rPVxudm9pZCAwO2g9Yjt2YXIgcT1mLnBpbmdDYWNoZTtudWxsPT09cT8ocT1mLnBpbmdDYWNoZT1uZXcgT2ksaz1uZXcgU2V0LHEuc2V0KGwsaykpOihrPXEuZ2V0KGwpLHZvaWQgMD09PWsmJihrPW5ldyBTZXQscS5zZXQobCxrKSkpO2lmKCFrLmhhcyhoKSl7ay5hZGQoaCk7dmFyIHY9WWouYmluZChudWxsLGYsbCxoKTtsLnRoZW4odix2KX1wLmZsYWdzfD00MDk2O3AubGFuZXM9YjticmVhayBhfXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApO2s9RXJyb3IoKFJhKGgudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIil9NSE9PVYmJihWPTIpO2s9TWkoayxoKTtwPVxuZztkb3tzd2l0Y2gocC50YWcpe2Nhc2UgMzpmPWs7cC5mbGFnc3w9NDA5NjtiJj0tYjtwLmxhbmVzfD1iO3ZhciBKPVBpKHAsZixiKTtCZyhwLEopO2JyZWFrIGE7Y2FzZSAxOmY9azt2YXIgSz1wLnR5cGUsUT1wLnN0YXRlTm9kZTtpZigwPT09KHAuZmxhZ3MmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEsuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09USYmXCJmdW5jdGlvblwiPT09dHlwZW9mIFEuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoUSkpKSl7cC5mbGFnc3w9NDA5NjtiJj0tYjtwLmxhbmVzfD1iO3ZhciBMPVNpKHAsZixiKTtCZyhwLEwpO2JyZWFrIGF9fXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApfVpqKGMpfWNhdGNoKHZhKXtiPXZhO1k9PT1jJiZudWxsIT09YyYmKFk9Yz1jLnJldHVybik7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9XG5mdW5jdGlvbiBQaigpe3ZhciBhPW9qLmN1cnJlbnQ7b2ouY3VycmVudD1HaDtyZXR1cm4gbnVsbD09PWE/R2g6YX1mdW5jdGlvbiBUaihhLGIpe3ZhciBjPVg7WHw9MTY7dmFyIGQ9UGooKTtVPT09YSYmVz09PWJ8fFFqKGEsYik7ZG8gdHJ5e2FrKCk7YnJlYWt9Y2F0Y2goZSl7U2ooYSxlKX13aGlsZSgxKTtxZygpO1g9Yztvai5jdXJyZW50PWQ7aWYobnVsbCE9PVkpdGhyb3cgRXJyb3IoeSgyNjEpKTtVPW51bGw7Vz0wO3JldHVybiBWfWZ1bmN0aW9uIGFrKCl7Zm9yKDtudWxsIT09WTspYmsoWSl9ZnVuY3Rpb24gUmooKXtmb3IoO251bGwhPT1ZJiYhUWYoKTspYmsoWSl9ZnVuY3Rpb24gYmsoYSl7dmFyIGI9Y2soYS5hbHRlcm5hdGUsYSxxaik7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iP1pqKGEpOlk9Yjtwai5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBaaihhKXt2YXIgYj1hO2Rve3ZhciBjPWIuYWx0ZXJuYXRlO2E9Yi5yZXR1cm47aWYoMD09PShiLmZsYWdzJjIwNDgpKXtjPUdpKGMsYixxaik7aWYobnVsbCE9PWMpe1k9YztyZXR1cm59Yz1iO2lmKDI0IT09Yy50YWcmJjIzIT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fDAhPT0ocWomMTA3Mzc0MTgyNCl8fDA9PT0oYy5tb2RlJjQpKXtmb3IodmFyIGQ9MCxlPWMuY2hpbGQ7bnVsbCE9PWU7KWR8PWUubGFuZXN8ZS5jaGlsZExhbmVzLGU9ZS5zaWJsaW5nO2MuY2hpbGRMYW5lcz1kfW51bGwhPT1hJiYwPT09KGEuZmxhZ3MmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9Yi5maXJzdEVmZmVjdCksbnVsbCE9PWIubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0KSwxPGIuZmxhZ3MmJihudWxsIT09XG5hLmxhc3RFZmZlY3Q/YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YjphLmZpcnN0RWZmZWN0PWIsYS5sYXN0RWZmZWN0PWIpKX1lbHNle2M9TGkoYik7aWYobnVsbCE9PWMpe2MuZmxhZ3MmPTIwNDc7WT1jO3JldHVybn1udWxsIT09YSYmKGEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PW51bGwsYS5mbGFnc3w9MjA0OCl9Yj1iLnNpYmxpbmc7aWYobnVsbCE9PWIpe1k9YjtyZXR1cm59WT1iPWF9d2hpbGUobnVsbCE9PWIpOzA9PT1WJiYoVj01KX1mdW5jdGlvbiBVaihhKXt2YXIgYj1lZygpO2dnKDk5LGRrLmJpbmQobnVsbCxhLGIpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGRrKGEsYil7ZG8gT2ooKTt3aGlsZShudWxsIT09eWopO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTt2YXIgYz1hLmZpbmlzaGVkV29yaztpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IoeSgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO3ZhciBkPWMubGFuZXN8Yy5jaGlsZExhbmVzLGU9ZCxmPWEucGVuZGluZ0xhbmVzJn5lO2EucGVuZGluZ0xhbmVzPWU7YS5zdXNwZW5kZWRMYW5lcz0wO2EucGluZ2VkTGFuZXM9MDthLmV4cGlyZWRMYW5lcyY9ZTthLm11dGFibGVSZWFkTGFuZXMmPWU7YS5lbnRhbmdsZWRMYW5lcyY9ZTtlPWEuZW50YW5nbGVtZW50cztmb3IodmFyIGc9YS5ldmVudFRpbWVzLGg9YS5leHBpcmF0aW9uVGltZXM7MDxmOyl7dmFyIGs9MzEtVmMoZiksbD0xPDxrO2Vba109MDtnW2tdPS0xO2hba109LTE7ZiY9fmx9bnVsbCE9PVxuQ2omJjA9PT0oZCYyNCkmJkNqLmhhcyhhKSYmQ2ouZGVsZXRlKGEpO2E9PT1VJiYoWT1VPW51bGwsVz0wKTsxPGMuZmxhZ3M/bnVsbCE9PWMubGFzdEVmZmVjdD8oYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxkPWMuZmlyc3RFZmZlY3QpOmQ9YzpkPWMuZmlyc3RFZmZlY3Q7aWYobnVsbCE9PWQpe2U9WDtYfD0zMjtwai5jdXJyZW50PW51bGw7a2Y9ZmQ7Zz1OZSgpO2lmKE9lKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKWg9e3N0YXJ0Omcuc2VsZWN0aW9uU3RhcnQsZW5kOmcuc2VsZWN0aW9uRW5kfTtlbHNlIGE6aWYoaD0oaD1nLm93bmVyRG9jdW1lbnQpJiZoLmRlZmF1bHRWaWV3fHx3aW5kb3csKGw9aC5nZXRTZWxlY3Rpb24mJmguZ2V0U2VsZWN0aW9uKCkpJiYwIT09bC5yYW5nZUNvdW50KXtoPWwuYW5jaG9yTm9kZTtmPWwuYW5jaG9yT2Zmc2V0O2s9bC5mb2N1c05vZGU7bD1sLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLGsubm9kZVR5cGV9Y2F0Y2godmEpe2g9bnVsbDtcbmJyZWFrIGF9dmFyIG49MCxBPS0xLHA9LTEsQz0wLHg9MCx3PWcsej1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHU7Oyl7dyE9PWh8fDAhPT1mJiYzIT09dy5ub2RlVHlwZXx8KEE9bitmKTt3IT09a3x8MCE9PWwmJjMhPT13Lm5vZGVUeXBlfHwocD1uK2wpOzM9PT13Lm5vZGVUeXBlJiYobis9dy5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHU9dy5maXJzdENoaWxkKSlicmVhazt6PXc7dz11fWZvcig7Oyl7aWYodz09PWcpYnJlYWsgYjt6PT09aCYmKytDPT09ZiYmKEE9bik7ej09PWsmJisreD09PWwmJihwPW4pO2lmKG51bGwhPT0odT13Lm5leHRTaWJsaW5nKSlicmVhazt3PXo7ej13LnBhcmVudE5vZGV9dz11fWg9LTE9PT1BfHwtMT09PXA/bnVsbDp7c3RhcnQ6QSxlbmQ6cH19ZWxzZSBoPW51bGw7aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPW51bGw7bGY9e2ZvY3VzZWRFbGVtOmcsc2VsZWN0aW9uUmFuZ2U6aH07ZmQ9ITE7SWo9bnVsbDtKaj0hMTtaPWQ7ZG8gdHJ5e2VrKCl9Y2F0Y2godmEpe2lmKG51bGw9PT1cblopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7SWo9bnVsbDtaPWQ7ZG8gdHJ5e2ZvcihnPWE7bnVsbCE9PVo7KXt2YXIgdD1aLmZsYWdzO3QmMTYmJnBiKFouc3RhdGVOb2RlLFwiXCIpO2lmKHQmMTI4KXt2YXIgcT1aLmFsdGVybmF0ZTtpZihudWxsIT09cSl7dmFyIHY9cS5yZWY7bnVsbCE9PXYmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdj92KG51bGwpOnYuY3VycmVudD1udWxsKX19c3dpdGNoKHQmMTAzOCl7Y2FzZSAyOmZqKFopO1ouZmxhZ3MmPS0zO2JyZWFrO2Nhc2UgNjpmaihaKTtaLmZsYWdzJj0tMztpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDEwMjQ6Wi5mbGFncyY9LTEwMjU7YnJlYWs7Y2FzZSAxMDI4OlouZmxhZ3MmPS0xMDI1O2lqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgNDppaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDg6aD1aO2NqKGcsaCk7dmFyIEo9aC5hbHRlcm5hdGU7ZGooaCk7bnVsbCE9PVxuSiYmZGooSil9Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTt2PWxmO3E9TmUoKTt0PXYuZm9jdXNlZEVsZW07Zz12LnNlbGVjdGlvblJhbmdlO2lmKHEhPT10JiZ0JiZ0Lm93bmVyRG9jdW1lbnQmJk1lKHQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsdCkpe251bGwhPT1nJiZPZSh0KSYmKHE9Zy5zdGFydCx2PWcuZW5kLHZvaWQgMD09PXYmJih2PXEpLFwic2VsZWN0aW9uU3RhcnRcImluIHQ/KHQuc2VsZWN0aW9uU3RhcnQ9cSx0LnNlbGVjdGlvbkVuZD1NYXRoLm1pbih2LHQudmFsdWUubGVuZ3RoKSk6KHY9KHE9dC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJnEuZGVmYXVsdFZpZXd8fHdpbmRvdyx2LmdldFNlbGVjdGlvbiYmKHY9di5nZXRTZWxlY3Rpb24oKSxoPXQudGV4dENvbnRlbnQubGVuZ3RoLEo9TWF0aC5taW4oZy5zdGFydCxoKSxnPXZvaWQgMD09PVxuZy5lbmQ/SjpNYXRoLm1pbihnLmVuZCxoKSwhdi5leHRlbmQmJko+ZyYmKGg9ZyxnPUosSj1oKSxoPUxlKHQsSiksZj1MZSh0LGcpLGgmJmYmJigxIT09di5yYW5nZUNvdW50fHx2LmFuY2hvck5vZGUhPT1oLm5vZGV8fHYuYW5jaG9yT2Zmc2V0IT09aC5vZmZzZXR8fHYuZm9jdXNOb2RlIT09Zi5ub2RlfHx2LmZvY3VzT2Zmc2V0IT09Zi5vZmZzZXQpJiYocT1xLmNyZWF0ZVJhbmdlKCkscS5zZXRTdGFydChoLm5vZGUsaC5vZmZzZXQpLHYucmVtb3ZlQWxsUmFuZ2VzKCksSj5nPyh2LmFkZFJhbmdlKHEpLHYuZXh0ZW5kKGYubm9kZSxmLm9mZnNldCkpOihxLnNldEVuZChmLm5vZGUsZi5vZmZzZXQpLHYuYWRkUmFuZ2UocSkpKSkpKTtxPVtdO2Zvcih2PXQ7dj12LnBhcmVudE5vZGU7KTE9PT12Lm5vZGVUeXBlJiZxLnB1c2goe2VsZW1lbnQ6dixsZWZ0OnYuc2Nyb2xsTGVmdCx0b3A6di5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgdC5mb2N1cyYmdC5mb2N1cygpO2Zvcih0PVxuMDt0PHEubGVuZ3RoO3QrKyl2PXFbdF0sdi5lbGVtZW50LnNjcm9sbExlZnQ9di5sZWZ0LHYuZWxlbWVudC5zY3JvbGxUb3A9di50b3B9ZmQ9ISFrZjtsZj1rZj1udWxsO2EuY3VycmVudD1jO1o9ZDtkbyB0cnl7Zm9yKHQ9YTtudWxsIT09Wjspe3ZhciBLPVouZmxhZ3M7SyYzNiYmWWkodCxaLmFsdGVybmF0ZSxaKTtpZihLJjEyOCl7cT12b2lkIDA7dmFyIFE9Wi5yZWY7aWYobnVsbCE9PVEpe3ZhciBMPVouc3RhdGVOb2RlO3N3aXRjaChaLnRhZyl7Y2FzZSA1OnE9TDticmVhaztkZWZhdWx0OnE9TH1cImZ1bmN0aW9uXCI9PT10eXBlb2YgUT9RKHEpOlEuY3VycmVudD1xfX1aPVoubmV4dEVmZmVjdH19Y2F0Y2godmEpe2lmKG51bGw9PT1aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO1o9bnVsbDskZigpO1g9ZX1lbHNlIGEuY3VycmVudD1jO2lmKHhqKXhqPSExLHlqPWEsemo9YjtlbHNlIGZvcihaPWQ7bnVsbCE9PVo7KWI9XG5aLm5leHRFZmZlY3QsWi5uZXh0RWZmZWN0PW51bGwsWi5mbGFncyY4JiYoSz1aLEsuc2libGluZz1udWxsLEsuc3RhdGVOb2RlPW51bGwpLFo9YjtkPWEucGVuZGluZ0xhbmVzOzA9PT1kJiYoVGk9bnVsbCk7MT09PWQ/YT09PUVqP0RqKys6KERqPTAsRWo9YSk6RGo9MDtjPWMuc3RhdGVOb2RlO2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclJvb3QpdHJ5e01mLm9uQ29tbWl0RmliZXJSb290KExmLGMsdm9pZCAwLDY0PT09KGMuY3VycmVudC5mbGFncyY2NCkpfWNhdGNoKHZhKXt9TWooYSxPKCkpO2lmKFFpKXRocm93IFFpPSExLGE9UmksUmk9bnVsbCxhO2lmKDAhPT0oWCY4KSlyZXR1cm4gbnVsbDtpZygpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gZWsoKXtmb3IoO251bGwhPT1aOyl7dmFyIGE9Wi5hbHRlcm5hdGU7Smp8fG51bGw9PT1Janx8KDAhPT0oWi5mbGFncyY4KT9kYyhaLElqKSYmKEpqPSEwKToxMz09PVoudGFnJiZtaihhLFopJiZkYyhaLElqKSYmKEpqPSEwKSk7dmFyIGI9Wi5mbGFnczswIT09KGImMjU2KSYmWGkoYSxaKTswPT09KGImNTEyKXx8eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSk7Wj1aLm5leHRFZmZlY3R9fWZ1bmN0aW9uIE9qKCl7aWYoOTAhPT16ail7dmFyIGE9OTc8emo/OTc6emo7emo9OTA7cmV0dXJuIGdnKGEsZmspfXJldHVybiExfWZ1bmN0aW9uICRpKGEsYil7QWoucHVzaChiLGEpO3hqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpfWZ1bmN0aW9uIFppKGEsYil7QmoucHVzaChiLGEpO3hqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpfVxuZnVuY3Rpb24gZmsoKXtpZihudWxsPT09eWopcmV0dXJuITE7dmFyIGE9eWo7eWo9bnVsbDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzMxKSk7dmFyIGI9WDtYfD0zMjt2YXIgYz1CajtCaj1bXTtmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrPTIpe3ZhciBlPWNbZF0sZj1jW2QrMV0sZz1lLmRlc3Ryb3k7ZS5kZXN0cm95PXZvaWQgMDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyl0cnl7ZygpfWNhdGNoKGspe2lmKG51bGw9PT1mKXRocm93IEVycm9yKHkoMzMwKSk7V2koZixrKX19Yz1BajtBaj1bXTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCs9Mil7ZT1jW2RdO2Y9Y1tkKzFdO3RyeXt2YXIgaD1lLmNyZWF0ZTtlLmRlc3Ryb3k9aCgpfWNhdGNoKGspe2lmKG51bGw9PT1mKXRocm93IEVycm9yKHkoMzMwKSk7V2koZixrKX19Zm9yKGg9YS5jdXJyZW50LmZpcnN0RWZmZWN0O251bGwhPT1oOylhPWgubmV4dEVmZmVjdCxoLm5leHRFZmZlY3Q9bnVsbCxoLmZsYWdzJjgmJihoLnNpYmxpbmc9XG5udWxsLGguc3RhdGVOb2RlPW51bGwpLGg9YTtYPWI7aWcoKTtyZXR1cm4hMH1mdW5jdGlvbiBnayhhLGIsYyl7Yj1NaShjLGIpO2I9UGkoYSxiLDEpO0FnKGEsYik7Yj1IZygpO2E9S2ooYSwxKTtudWxsIT09YSYmKCRjKGEsMSxiKSxNaihhLGIpKX1cbmZ1bmN0aW9uIFdpKGEsYil7aWYoMz09PWEudGFnKWdrKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7Z2soYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoZCkpKXthPU1pKGIsYSk7dmFyIGU9U2koYyxhLDEpO0FnKGMsZSk7ZT1IZygpO2M9S2ooYywxKTtpZihudWxsIT09YykkYyhjLDEsZSksTWooYyxlKTtlbHNlIGlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl0cnl7ZC5jb21wb25lbnREaWRDYXRjaChiLGEpfWNhdGNoKGYpe31icmVha319Yz1jLnJldHVybn19XG5mdW5jdGlvbiBZaihhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2I9SGcoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmM7VT09PWEmJihXJmMpPT09YyYmKDQ9PT1WfHwzPT09ViYmKFcmNjI5MTQ1NjApPT09VyYmNTAwPk8oKS1qaj9RaihhLDApOnVqfD1jKTtNaihhLGIpfWZ1bmN0aW9uIGxqKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9YS5tb2RlLDA9PT0oYiYyKT9iPTE6MD09PShiJjQpP2I9OTk9PT1lZygpPzE6MjooMD09PUdqJiYoR2o9dGopLGI9WWMoNjI5MTQ1NjAmfkdqKSwwPT09YiYmKGI9NDE5NDMwNCkpKTtjPUhnKCk7YT1LaihhLGIpO251bGwhPT1hJiYoJGMoYSxiLGMpLE1qKGEsYykpfXZhciBjaztcbmNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmxhbmVzO2lmKG51bGwhPT1hKWlmKGEubWVtb2l6ZWRQcm9wcyE9PWIucGVuZGluZ1Byb3BzfHxOLmN1cnJlbnQpdWc9ITA7ZWxzZSBpZigwIT09KGMmZCkpdWc9MCE9PShhLmZsYWdzJjE2Mzg0KT8hMDohMTtlbHNle3VnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOnJpKGIpO3NoKCk7YnJlYWs7Y2FzZSA1OmdoKGIpO2JyZWFrO2Nhc2UgMTpGZihiLnR5cGUpJiZKZihiKTticmVhaztjYXNlIDQ6ZWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO3ZhciBlPWIudHlwZS5fY29udGV4dDtJKG1nLGUuX2N1cnJlbnRWYWx1ZSk7ZS5fY3VycmVudFZhbHVlPWQ7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtpZigwIT09KGMmYi5jaGlsZC5jaGlsZExhbmVzKSlyZXR1cm4gdGkoYSxiLGMpO0koUCxQLmN1cnJlbnQmMSk7Yj1oaShhLGIsYyk7cmV0dXJuIG51bGwhPT1cbmI/Yi5zaWJsaW5nOm51bGx9SShQLFAuY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9MCE9PShjJmIuY2hpbGRMYW5lcyk7aWYoMCE9PShhLmZsYWdzJjY0KSl7aWYoZClyZXR1cm4gQWkoYSxiLGMpO2IuZmxhZ3N8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCk7SShQLFAuY3VycmVudCk7aWYoZClicmVhaztlbHNlIHJldHVybiBudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gYi5sYW5lcz0wLG1pKGEsYixjKX1yZXR1cm4gaGkoYSxiLGMpfWVsc2UgdWc9ITE7Yi5sYW5lcz0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1FZihiLE0uY3VycmVudCk7dGcoYixjKTtlPUNoKG51bGwsYixkLGEsZSxjKTtiLmZsYWdzfD0xO2lmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtpZihGZihkKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7eGcoYik7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJkdnKGIsZCxnLGEpO2UudXBkYXRlcj1LZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxzPWI7T2coYixkLGEsYyk7Yj1xaShudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxmaShudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7YTp7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7XG5hPWIucGVuZGluZ1Byb3BzO2Y9ZS5faW5pdDtlPWYoZS5fcGF5bG9hZCk7Yi50eXBlPWU7Zj1iLnRhZz1oayhlKTthPWxnKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPWxpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1waShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPWdpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9aWkobnVsbCxiLGUsbGcoZS50eXBlLGEpLGQsYyk7YnJlYWsgYX10aHJvdyBFcnJvcih5KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLGxpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLHBpKGEsYixkLGUsYyk7Y2FzZSAzOnJpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IoeSgyODIpKTtcbmQ9Yi5wZW5kaW5nUHJvcHM7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt5ZyhhLGIpO0NnKGIsZCxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpc2goKSxiPWhpKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZj1lLmh5ZHJhdGUpa2g9cmYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxqaD1iLGY9bGg9ITA7aWYoZil7YT1lLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE7aWYobnVsbCE9YSlmb3IoZT0wO2U8YS5sZW5ndGg7ZSs9MilmPWFbZV0sZi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1hW2UrMV0sdGgucHVzaChmKTtjPVpnKGIsbnVsbCxkLGMpO2ZvcihiLmNoaWxkPWM7YzspYy5mbGFncz1jLmZsYWdzJi0zfDEwMjQsYz1jLnNpYmxpbmd9ZWxzZSBmaShhLGIsZCxjKSxzaCgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIGdoKGIpLG51bGw9PT1hJiZcbnBoKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4sbmYoZCxlKT9nPW51bGw6bnVsbCE9PWYmJm5mKGQsZikmJihiLmZsYWdzfD0xNiksb2koYSxiKSxmaShhLGIsZyxjKSxiLmNoaWxkO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJnBoKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gdGkoYSxiLGMpO2Nhc2UgNDpyZXR1cm4gZWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9WWcoYixudWxsLGQsYyk6ZmkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLGdpKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcbmMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTt2YXIgaD1iLnR5cGUuX2NvbnRleHQ7SShtZyxoLl9jdXJyZW50VmFsdWUpO2guX2N1cnJlbnRWYWx1ZT1mO2lmKG51bGwhPT1nKWlmKGg9Zy52YWx1ZSxmPUhlKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MCwwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFOLmN1cnJlbnQpe2I9aGkoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PWspe2c9aC5jaGlsZDtmb3IodmFyIGw9XG5rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9emcoLTEsYyYtYyksbC50YWc9MixBZyhoLGwpKTtoLmxhbmVzfD1jO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJihsLmxhbmVzfD1jKTtzZyhoLnJldHVybixjKTtrLmxhbmVzfD1jO2JyZWFrfWw9bC5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/bnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9ZmkoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sdGcoYixjKSxlPXZnKGUsXG5mLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZmxhZ3N8PTEsZmkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPWxnKGUsYi5wZW5kaW5nUHJvcHMpLGY9bGcoZS50eXBlLGYpLGlpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBraShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxiLnRhZz0xLEZmKGQpPyhhPSEwLEpmKGIpKTphPSExLHRnKGIsYyksTWcoYixkLGUpLE9nKGIsZCxlLGMpLHFpKG51bGwsYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4gQWkoYSxiLGMpO2Nhc2UgMjM6cmV0dXJuIG1pKGEsYixjKTtjYXNlIDI0OnJldHVybiBtaShhLGIsYyl9dGhyb3cgRXJyb3IoeSgxNTYsYi50YWcpKTtcbn07ZnVuY3Rpb24gaWsoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmZsYWdzPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZExhbmVzPXRoaXMubGFuZXM9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIG5oKGEsYixjLGQpe3JldHVybiBuZXcgaWsoYSxiLGMsZCl9ZnVuY3Rpb24gamkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1cbmZ1bmN0aW9uIGhrKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBqaShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09QWEpcmV0dXJuIDExO2lmKGE9PT1EYSlyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBUZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPW5oKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMudHlwZT1hLnR5cGUsYy5mbGFncz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcztjLmxhbmVzPWEubGFuZXM7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntsYW5lczpiLmxhbmVzLGZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dH07XG5jLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFZnKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlqaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSB1YTpyZXR1cm4gWGcoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBIYTpnPTg7ZXw9MTY7YnJlYWs7Y2FzZSB3YTpnPTg7ZXw9MTticmVhaztjYXNlIHhhOnJldHVybiBhPW5oKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9eGEsYS50eXBlPXhhLGEubGFuZXM9ZixhO2Nhc2UgQmE6cmV0dXJuIGE9bmgoMTMsYyxiLGUpLGEudHlwZT1CYSxhLmVsZW1lbnRUeXBlPUJhLGEubGFuZXM9ZixhO2Nhc2UgQ2E6cmV0dXJuIGE9bmgoMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9Q2EsYS5sYW5lcz1mLGE7Y2FzZSBJYTpyZXR1cm4gdmkoYyxlLGYsYik7Y2FzZSBKYTpyZXR1cm4gYT1uaCgyNCxjLGIsZSksYS5lbGVtZW50VHlwZT1KYSxhLmxhbmVzPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB5YTpnPTEwO2JyZWFrIGE7Y2FzZSB6YTpnPTk7YnJlYWsgYTtjYXNlIEFhOmc9MTE7YnJlYWsgYTtjYXNlIERhOmc9MTQ7YnJlYWsgYTtjYXNlIEVhOmc9MTY7ZD1udWxsO2JyZWFrIGE7Y2FzZSBGYTpnPTIyO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1uaChnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5sYW5lcz1mO3JldHVybiBifWZ1bmN0aW9uIFhnKGEsYixjLGQpe2E9bmgoNyxhLGQsYik7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIHZpKGEsYixjLGQpe2E9bmgoMjMsYSxkLGIpO2EuZWxlbWVudFR5cGU9SWE7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIFVnKGEsYixjKXthPW5oKDYsYSxudWxsLGIpO2EubGFuZXM9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIFdnKGEsYixjKXtiPW5oKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmxhbmVzPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gamsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5maW5pc2hlZFdvcms9dGhpcy5waW5nQ2FjaGU9dGhpcy5jdXJyZW50PXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5oeWRyYXRlPWM7dGhpcy5jYWxsYmFja05vZGU9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9MDt0aGlzLmV2ZW50VGltZXM9WmMoMCk7dGhpcy5leHBpcmF0aW9uVGltZXM9WmMoLTEpO3RoaXMuZW50YW5nbGVkTGFuZXM9dGhpcy5maW5pc2hlZExhbmVzPXRoaXMubXV0YWJsZVJlYWRMYW5lcz10aGlzLmV4cGlyZWRMYW5lcz10aGlzLnBpbmdlZExhbmVzPXRoaXMuc3VzcGVuZGVkTGFuZXM9dGhpcy5wZW5kaW5nTGFuZXM9MDt0aGlzLmVudGFuZ2xlbWVudHM9WmMoMCk7dGhpcy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPW51bGx9XG5mdW5jdGlvbiBrayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOnRhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuZnVuY3Rpb24gbGsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9SGcoKSxnPUlnKGUpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFscztiOntpZihaYihjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEZmKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IoeSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoRmYoaykpe2M9SWYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9Q2Y7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj16ZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PWQ/bnVsbDpkO251bGwhPT1cbmQmJihiLmNhbGxiYWNrPWQpO0FnKGUsYik7SmcoZSxnLGYpO3JldHVybiBnfWZ1bmN0aW9uIG1rKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gbmsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7dmFyIGM9YS5yZXRyeUxhbmU7YS5yZXRyeUxhbmU9MCE9PWMmJmM8Yj9jOmJ9fWZ1bmN0aW9uIG9rKGEsYil7bmsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJm5rKGEsYil9ZnVuY3Rpb24gcGsoKXtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIHFrKGEsYixjKXt2YXIgZD1udWxsIT1jJiZudWxsIT1jLmh5ZHJhdGlvbk9wdGlvbnMmJmMuaHlkcmF0aW9uT3B0aW9ucy5tdXRhYmxlU291cmNlc3x8bnVsbDtjPW5ldyBqayhhLGIsbnVsbCE9YyYmITA9PT1jLmh5ZHJhdGUpO2I9bmgoMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2MuY3VycmVudD1iO2Iuc3RhdGVOb2RlPWM7eGcoYik7YVtmZl09Yy5jdXJyZW50O2NmKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtpZihkKWZvcihhPTA7YTxkLmxlbmd0aDthKyspe2I9ZFthXTt2YXIgZT1iLl9nZXRWZXJzaW9uO2U9ZShiLl9zb3VyY2UpO251bGw9PWMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT9jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9W2IsZV06Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhLnB1c2goYixlKX10aGlzLl9pbnRlcm5hbFJvb3Q9Y31cbnFrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7bGsoYSx0aGlzLl9pbnRlcm5hbFJvb3QsbnVsbCxudWxsKX07cWsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3QsYj1hLmNvbnRhaW5lckluZm87bGsobnVsbCxhLG51bGwsZnVuY3Rpb24oKXtiW2ZmXT1udWxsfSl9O2Z1bmN0aW9uIHJrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1cbmZ1bmN0aW9uIHNrKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgcWsoYSwwLGI/e2h5ZHJhdGU6ITB9OnZvaWQgMCl9XG5mdW5jdGlvbiB0ayhhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPW1rKGcpO2guY2FsbChhKX19bGsoYixnLGEsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1zayhjLGQpO2c9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtrLmNhbGwoYSl9fVhqKGZ1bmN0aW9uKCl7bGsoYixnLGEsZSl9KX1yZXR1cm4gbWsoZyl9ZWM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKTtKZyhhLDQsYik7b2soYSw0KX19O2ZjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw2NzEwODg2NCxiKTtvayhhLDY3MTA4ODY0KX19O1xuZ2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKSxjPUlnKGEpO0pnKGEsYyxiKTtvayhhLGMpfX07aGM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYigpfTtcbnliPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6YWIoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPURiKGQpO2lmKCFlKXRocm93IEVycm9yKHkoOTApKTtXYShkKTthYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJmZiKGEsISFjLm11bHRpcGxlLGIsITEpfX07R2I9V2o7XG5IYj1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVg7WHw9NDt0cnl7cmV0dXJuIGdnKDk4LGEuYmluZChudWxsLGIsYyxkLGUpKX1maW5hbGx5e1g9ZiwwPT09WCYmKHdqKCksaWcoKSl9fTtJYj1mdW5jdGlvbigpezA9PT0oWCY0OSkmJihWaigpLE9qKCkpfTtKYj1mdW5jdGlvbihhLGIpe3ZhciBjPVg7WHw9Mjt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX07ZnVuY3Rpb24gdWsoYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4ga2soYSxiLG51bGwsYyl9dmFyIHZrPXtFdmVudHM6W0NiLHVlLERiLEViLEZiLE9qLHtjdXJyZW50OiExfV19LHdrPXtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp3YyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE3LjAuMVwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn07XG52YXIgeGs9e2J1bmRsZVR5cGU6d2suYnVuZGxlVHlwZSx2ZXJzaW9uOndrLnZlcnNpb24scmVuZGVyZXJQYWNrYWdlTmFtZTp3ay5yZW5kZXJlclBhY2thZ2VOYW1lLHJlbmRlcmVyQ29uZmlnOndrLnJlbmRlcmVyQ29uZmlnLG92ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLG92ZXJyaWRlUHJvcHNEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGg6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOnJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1jYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2suZmluZEZpYmVyQnlIb3N0SW5zdGFuY2V8fFxucGssZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbH07aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pe3ZhciB5az1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoIXlrLmlzRGlzYWJsZWQmJnlrLnN1cHBvcnRzRmliZXIpdHJ5e0xmPXlrLmluamVjdCh4ayksTWY9eWt9Y2F0Y2goYSl7fX1leHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPXZrO2V4cG9ydHMuY3JlYXRlUG9ydGFsPXVrO1xuZXhwb3J0cy5maW5kRE9NTm9kZT1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxzO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcih5KDE4OCkpO3Rocm93IEVycm9yKHkoMjY4LE9iamVjdC5rZXlzKGEpKSk7fWE9Y2MoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtleHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhLGIpe3ZhciBjPVg7aWYoMCE9PShjJjQ4KSlyZXR1cm4gYShiKTtYfD0xO3RyeXtpZihhKXJldHVybiBnZyg5OSxhLmJpbmQobnVsbCxiKSl9ZmluYWxseXtYPWMsaWcoKX19O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCEwLGMpfTtcbmV4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4gdGsobnVsbCxhLGIsITEsYyl9O2V4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighcmsoYSkpdGhyb3cgRXJyb3IoeSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KFhqKGZ1bmN0aW9uKCl7dGsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW2ZmXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9V2o7ZXhwb3J0cy51bnN0YWJsZV9jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdWsoYSxiLDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsKX07XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFyayhjKSl0aHJvdyBFcnJvcih5KDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxzKXRocm93IEVycm9yKHkoMzgpKTtyZXR1cm4gdGsoYSxiLGMsITEsZCl9O2V4cG9ydHMudmVyc2lvbj1cIjE3LjAuMVwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjFcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPTYwMTAzLHA9NjAxMDY7ZXhwb3J0cy5GcmFnbWVudD02MDEwNztleHBvcnRzLlN0cmljdE1vZGU9NjAxMDg7ZXhwb3J0cy5Qcm9maWxlcj02MDExNDt2YXIgcT02MDEwOSxyPTYwMTEwLHQ9NjAxMTI7ZXhwb3J0cy5TdXNwZW5zZT02MDExMzt2YXIgdT02MDExNSx2PTYwMTE2O1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIHc9U3ltYm9sLmZvcjtuPXcoXCJyZWFjdC5lbGVtZW50XCIpO3A9dyhcInJlYWN0LnBvcnRhbFwiKTtleHBvcnRzLkZyYWdtZW50PXcoXCJyZWFjdC5mcmFnbWVudFwiKTtleHBvcnRzLlN0cmljdE1vZGU9dyhcInJlYWN0LnN0cmljdF9tb2RlXCIpO2V4cG9ydHMuUHJvZmlsZXI9dyhcInJlYWN0LnByb2ZpbGVyXCIpO3E9dyhcInJlYWN0LnByb3ZpZGVyXCIpO3I9dyhcInJlYWN0LmNvbnRleHRcIik7dD13KFwicmVhY3QuZm9yd2FyZF9yZWZcIik7ZXhwb3J0cy5TdXNwZW5zZT13KFwicmVhY3Quc3VzcGVuc2VcIik7dT13KFwicmVhY3QubWVtb1wiKTt2PXcoXCJyZWFjdC5sYXp5XCIpfXZhciB4PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtcbmZ1bmN0aW9uIHkoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXgmJmFbeF18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiB6KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEE9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEI9e307ZnVuY3Rpb24gQyhhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfUMucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Qy5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKHooODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0MucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRCgpe31ELnByb3RvdHlwZT1DLnByb3RvdHlwZTtmdW5jdGlvbiBFKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9dmFyIEY9RS5wcm90b3R5cGU9bmV3IEQ7Ri5jb25zdHJ1Y3Rvcj1FO2woRixDLnByb3RvdHlwZSk7Ri5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgRz17Y3VycmVudDpudWxsfSxIPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksST17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gSihhLGIsYyl7dmFyIGUsZD17fSxrPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGs9XCJcIitiLmtleSksYilILmNhbGwoYixlKSYmIUkuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBnPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZylkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGcpe2Zvcih2YXIgZj1BcnJheShnKSxtPTA7bTxnO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Zn1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBnPWEuZGVmYXVsdFByb3BzLGcpdm9pZCAwPT09ZFtlXSYmKGRbZV09Z1tlXSk7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLGtleTprLHJlZjpoLHByb3BzOmQsX293bmVyOkcuY3VycmVudH19XG5mdW5jdGlvbiBLKGEsYil7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBMKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1ufWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrYS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTT0vXFwvKy9nO2Z1bmN0aW9uIE4oYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoXCJcIithLmtleSk6Yi50b1N0cmluZygzNil9XG5mdW5jdGlvbiBPKGEsYixjLGUsZCl7dmFyIGs9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWt8fFwiYm9vbGVhblwiPT09aylhPW51bGw7dmFyIGg9ITE7aWYobnVsbD09PWEpaD0hMDtlbHNlIHN3aXRjaChrKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmg9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIG46Y2FzZSBwOmg9ITB9fWlmKGgpcmV0dXJuIGg9YSxkPWQoaCksYT1cIlwiPT09ZT9cIi5cIitOKGgsMCk6ZSxBcnJheS5pc0FycmF5KGQpPyhjPVwiXCIsbnVsbCE9YSYmKGM9YS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpLE8oZCxiLGMsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYX0pKTpudWxsIT1kJiYoTChkKSYmKGQ9SyhkLGMrKCFkLmtleXx8aCYmaC5rZXk9PT1kLmtleT9cIlwiOihcIlwiK2Qua2V5KS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpK2EpKSxiLnB1c2goZCkpLDE7aD0wO2U9XCJcIj09PWU/XCIuXCI6ZStcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgZz1cbjA7ZzxhLmxlbmd0aDtnKyspe2s9YVtnXTt2YXIgZj1lK04oayxnKTtoKz1PKGssYixjLGYsZCl9ZWxzZSBpZihmPXkoYSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGc9MDshKGs9YS5uZXh0KCkpLmRvbmU7KWs9ay52YWx1ZSxmPWUrTihrLGcrKyksaCs9TyhrLGIsYyxmLGQpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWspdGhyb3cgYj1cIlwiK2EsRXJyb3IoeigzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yj9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7cmV0dXJuIGh9ZnVuY3Rpb24gUChhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXSxkPTA7TyhhLGUsXCJcIixcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNhbGwoYyxhLGQrKyl9KTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFEoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe3ZhciBiPWEuX3Jlc3VsdDtiPWIoKTthLl9zdGF0dXM9MDthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdDt0aHJvdyBhLl9yZXN1bHQ7fXZhciBSPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFMoKXt2YXIgYT1SLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeigzMjEpKTtyZXR1cm4gYX12YXIgVD17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpSLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOnt0cmFuc2l0aW9uOjB9LFJlYWN0Q3VycmVudE93bmVyOkcsSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtcbmV4cG9ydHMuQ2hpbGRyZW49e21hcDpQLGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe1AoYSxmdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxjKX0sY291bnQ6ZnVuY3Rpb24oYSl7dmFyIGI9MDtQKGEsZnVuY3Rpb24oKXtiKyt9KTtyZXR1cm4gYn0sdG9BcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gUChhLGZ1bmN0aW9uKGEpe3JldHVybiBhfSl8fFtdfSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFMKGEpKXRocm93IEVycm9yKHooMTQzKSk7cmV0dXJuIGF9fTtleHBvcnRzLkNvbXBvbmVudD1DO2V4cG9ydHMuUHVyZUNvbXBvbmVudD1FO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9VDtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcih6KDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGs9YS5yZWYsaD1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYsaD1HLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGc9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoZiBpbiBiKUguY2FsbChiLGYpJiYhSS5oYXNPd25Qcm9wZXJ0eShmKSYmKGVbZl09dm9pZCAwPT09YltmXSYmdm9pZCAwIT09Zz9nW2ZdOmJbZl0pfXZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2c9QXJyYXkoZik7Zm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxcbmtleTpkLHJlZjprLHByb3BzOmUsX293bmVyOmh9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjpyLF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6cSxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9SjtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9Si5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TDtcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dixfcGF5bG9hZDp7X3N0YXR1czotMSxfcmVzdWx0OmF9LF9pbml0OlF9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6dSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4yMC4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBsPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGwubm93KCl9fWVsc2V7dmFyIHA9RGF0ZSxxPXAubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gcC5ub3coKS1xfX1cbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciB0PW51bGwsdT1udWxsLHc9ZnVuY3Rpb24oKXtpZihudWxsIT09dCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0KCEwLGEpO3Q9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHcsMCksYjt9fTtmPWZ1bmN0aW9uKGEpe251bGwhPT10P3NldFRpbWVvdXQoZiwwLGEpOih0PWEsc2V0VGltZW91dCh3LDApKX07Zz1mdW5jdGlvbihhLGIpe3U9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHUpfTtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2s9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgeD13aW5kb3cuc2V0VGltZW91dCx5PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgej1cbndpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB6JiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3JlYWN0LXBvbHlmaWxsc1wiKX12YXIgQT0hMSxCPW51bGwsQz0tMSxEPTUsRT0wO2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49XG5FfTtrPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lIHJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHN1cHBvcnRlZFwiKTpEPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgRj1uZXcgTWVzc2FnZUNoYW5uZWwsRz1GLnBvcnQyO0YucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7aWYobnVsbCE9PUIpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7RT1hK0Q7dHJ5e0IoITAsYSk/Ry5wb3N0TWVzc2FnZShudWxsKTooQT0hMSxCPW51bGwpfWNhdGNoKGIpe3Rocm93IEcucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQT0hMX07Zj1mdW5jdGlvbihhKXtCPWE7QXx8KEE9ITAsRy5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtDPVxueChmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfTtoPWZ1bmN0aW9uKCl7eShDKTtDPS0xfX1mdW5jdGlvbiBIKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDs7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZih2b2lkIDAhPT1lJiYwPEkoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIEooYSl7YT1hWzBdO3JldHVybiB2b2lkIDA9PT1hP251bGw6YX1cbmZ1bmN0aW9uIEsoYSl7dmFyIGI9YVswXTtpZih2b2lkIDAhPT1iKXt2YXIgYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoO2Q8ZTspe3ZhciBtPTIqKGQrMSktMSxuPWFbbV0sdj1tKzEscj1hW3ZdO2lmKHZvaWQgMCE9PW4mJjA+SShuLGMpKXZvaWQgMCE9PXImJjA+SShyLG4pPyhhW2RdPXIsYVt2XT1jLGQ9dik6KGFbZF09bixhW21dPWMsZD1tKTtlbHNlIGlmKHZvaWQgMCE9PXImJjA+SShyLGMpKWFbZF09cixhW3ZdPWMsZD12O2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSShhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH12YXIgTD1bXSxNPVtdLE49MSxPPW51bGwsUD0zLFE9ITEsUj0hMSxTPSExO1xuZnVuY3Rpb24gVChhKXtmb3IodmFyIGI9SihNKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKUsoTSk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlLKE0pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSChMLGIpO2Vsc2UgYnJlYWs7Yj1KKE0pfX1mdW5jdGlvbiBVKGEpe1M9ITE7VChhKTtpZighUilpZihudWxsIT09SihMKSlSPSEwLGYoVik7ZWxzZXt2YXIgYj1KKE0pO251bGwhPT1iJiZnKFUsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gVihhLGIpe1I9ITE7UyYmKFM9ITEsaCgpKTtRPSEwO3ZhciBjPVA7dHJ5e1QoYik7Zm9yKE89SihMKTtudWxsIT09TyYmKCEoTy5leHBpcmF0aW9uVGltZT5iKXx8YSYmIWV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQoKSk7KXt2YXIgZD1PLmNhbGxiYWNrO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXtPLmNhbGxiYWNrPW51bGw7UD1PLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChPLmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/Ty5jYWxsYmFjaz1lOk89PT1KKEwpJiZLKEwpO1QoYil9ZWxzZSBLKEwpO089SihMKX1pZihudWxsIT09Tyl2YXIgbT0hMDtlbHNle3ZhciBuPUooTSk7bnVsbCE9PW4mJmcoVSxuLnN0YXJ0VGltZS1iKTttPSExfXJldHVybiBtfWZpbmFsbHl7Tz1udWxsLFA9YyxRPSExfX12YXIgVz1rO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7XG5leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1J8fFF8fChSPSEwLGYoVikpfTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFB9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSihMKX07XG5leHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFApe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVB9dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtQPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1XO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UDtQPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtQPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jPyhjPWMuZGVsYXksYz1cIm51bWJlclwiPT09dHlwZW9mIGMmJjA8Yz9kK2M6ZCk6Yz1kO3N3aXRjaChhKXtjYXNlIDE6dmFyIGU9LTE7YnJlYWs7Y2FzZSAyOmU9MjUwO2JyZWFrO2Nhc2UgNTplPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmU9MUU0O2JyZWFrO2RlZmF1bHQ6ZT01RTN9ZT1jK2U7YT17aWQ6TisrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTpjLGV4cGlyYXRpb25UaW1lOmUsc29ydEluZGV4Oi0xfTtjPmQ/KGEuc29ydEluZGV4PWMsSChNLGEpLG51bGw9PT1KKEwpJiZhPT09SihNKSYmKFM/aCgpOlM9ITAsZyhVLGMtZCkpKTooYS5zb3J0SW5kZXg9ZSxIKEwsYSksUnx8UXx8KFI9ITAsZihWKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVA7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1A9Y319fTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBhbnNpSFRNTFxuXG4vLyBSZWZlcmVuY2UgdG8gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9hbnNpLXJlZ2V4XG52YXIgX3JlZ0FOU0kgPSAvKD86KD86XFx1MDAxYlxcWyl8XFx1MDA5YikoPzooPzpbMC05XXsxLDN9KT8oPzooPzo7WzAtOV17MCwzfSkqKT9bQS1NfGYtbV0pfFxcdTAwMWJbQS1NXS9cblxudmFyIF9kZWZDb2xvcnMgPSB7XG4gIHJlc2V0OiBbJ2ZmZicsICcwMDAnXSwgLy8gW0ZPUkVHUk9VRF9DT0xPUiwgQkFDS0dST1VORF9DT0xPUl1cbiAgYmxhY2s6ICcwMDAnLFxuICByZWQ6ICdmZjAwMDAnLFxuICBncmVlbjogJzIwOTgwNScsXG4gIHllbGxvdzogJ2U4YmYwMycsXG4gIGJsdWU6ICcwMDAwZmYnLFxuICBtYWdlbnRhOiAnZmYwMGZmJyxcbiAgY3lhbjogJzAwZmZlZScsXG4gIGxpZ2h0Z3JleTogJ2YwZjBmMCcsXG4gIGRhcmtncmV5OiAnODg4J1xufVxudmFyIF9zdHlsZXMgPSB7XG4gIDMwOiAnYmxhY2snLFxuICAzMTogJ3JlZCcsXG4gIDMyOiAnZ3JlZW4nLFxuICAzMzogJ3llbGxvdycsXG4gIDM0OiAnYmx1ZScsXG4gIDM1OiAnbWFnZW50YScsXG4gIDM2OiAnY3lhbicsXG4gIDM3OiAnbGlnaHRncmV5J1xufVxudmFyIF9vcGVuVGFncyA9IHtcbiAgJzEnOiAnZm9udC13ZWlnaHQ6Ym9sZCcsIC8vIGJvbGRcbiAgJzInOiAnb3BhY2l0eTowLjUnLCAvLyBkaW1cbiAgJzMnOiAnPGk+JywgLy8gaXRhbGljXG4gICc0JzogJzx1PicsIC8vIHVuZGVyc2NvcmVcbiAgJzgnOiAnZGlzcGxheTpub25lJywgLy8gaGlkZGVuXG4gICc5JzogJzxkZWw+JyAvLyBkZWxldGVcbn1cbnZhciBfY2xvc2VUYWdzID0ge1xuICAnMjMnOiAnPC9pPicsIC8vIHJlc2V0IGl0YWxpY1xuICAnMjQnOiAnPC91PicsIC8vIHJlc2V0IHVuZGVyc2NvcmVcbiAgJzI5JzogJzwvZGVsPicgLy8gcmVzZXQgZGVsZXRlXG59XG5cbjtbMCwgMjEsIDIyLCAyNywgMjgsIDM5LCA0OV0uZm9yRWFjaChmdW5jdGlvbiAobikge1xuICBfY2xvc2VUYWdzW25dID0gJzwvc3Bhbj4nXG59KVxuXG4vKipcbiAqIENvbnZlcnRzIHRleHQgd2l0aCBBTlNJIGNvbG9yIGNvZGVzIHRvIEhUTUwgbWFya3VwLlxuICogQHBhcmFtIHtTdHJpbmd9IHRleHRcbiAqIEByZXR1cm5zIHsqfVxuICovXG5mdW5jdGlvbiBhbnNpSFRNTCAodGV4dCkge1xuICAvLyBSZXR1cm5zIHRoZSB0ZXh0IGlmIHRoZSBzdHJpbmcgaGFzIG5vIEFOU0kgZXNjYXBlIGNvZGUuXG4gIGlmICghX3JlZ0FOU0kudGVzdCh0ZXh0KSkge1xuICAgIHJldHVybiB0ZXh0XG4gIH1cblxuICAvLyBDYWNoZSBvcGVuZWQgc2VxdWVuY2UuXG4gIHZhciBhbnNpQ29kZXMgPSBbXVxuICAvLyBSZXBsYWNlIHdpdGggbWFya3VwLlxuICB2YXIgcmV0ID0gdGV4dC5yZXBsYWNlKC9cXDAzM1xcWyhcXGQrKSptL2csIGZ1bmN0aW9uIChtYXRjaCwgc2VxKSB7XG4gICAgdmFyIG90ID0gX29wZW5UYWdzW3NlcV1cbiAgICBpZiAob3QpIHtcbiAgICAgIC8vIElmIGN1cnJlbnQgc2VxdWVuY2UgaGFzIGJlZW4gb3BlbmVkLCBjbG9zZSBpdC5cbiAgICAgIGlmICghIX5hbnNpQ29kZXMuaW5kZXhPZihzZXEpKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZXh0cmEtYm9vbGVhbi1jYXN0XG4gICAgICAgIGFuc2lDb2Rlcy5wb3AoKVxuICAgICAgICByZXR1cm4gJzwvc3Bhbj4nXG4gICAgICB9XG4gICAgICAvLyBPcGVuIHRhZy5cbiAgICAgIGFuc2lDb2Rlcy5wdXNoKHNlcSlcbiAgICAgIHJldHVybiBvdFswXSA9PT0gJzwnID8gb3QgOiAnPHNwYW4gc3R5bGU9XCInICsgb3QgKyAnO1wiPidcbiAgICB9XG5cbiAgICB2YXIgY3QgPSBfY2xvc2VUYWdzW3NlcV1cbiAgICBpZiAoY3QpIHtcbiAgICAgIC8vIFBvcCBzZXF1ZW5jZVxuICAgICAgYW5zaUNvZGVzLnBvcCgpXG4gICAgICByZXR1cm4gY3RcbiAgICB9XG4gICAgcmV0dXJuICcnXG4gIH0pXG5cbiAgLy8gTWFrZSBzdXJlIHRhZ3MgYXJlIGNsb3NlZC5cbiAgdmFyIGwgPSBhbnNpQ29kZXMubGVuZ3RoXG4gIDsobCA+IDApICYmIChyZXQgKz0gQXJyYXkobCArIDEpLmpvaW4oJzwvc3Bhbj4nKSlcblxuICByZXR1cm4gcmV0XG59XG5cbi8qKlxuICogQ3VzdG9taXplIGNvbG9ycy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb2xvcnMgcmVmZXJlbmNlIHRvIF9kZWZDb2xvcnNcbiAqL1xuYW5zaUhUTUwuc2V0Q29sb3JzID0gZnVuY3Rpb24gKGNvbG9ycykge1xuICBpZiAodHlwZW9mIGNvbG9ycyAhPT0gJ29iamVjdCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2Bjb2xvcnNgIHBhcmFtZXRlciBtdXN0IGJlIGFuIE9iamVjdC4nKVxuICB9XG5cbiAgdmFyIF9maW5hbENvbG9ycyA9IHt9XG4gIGZvciAodmFyIGtleSBpbiBfZGVmQ29sb3JzKSB7XG4gICAgdmFyIGhleCA9IGNvbG9ycy5oYXNPd25Qcm9wZXJ0eShrZXkpID8gY29sb3JzW2tleV0gOiBudWxsXG4gICAgaWYgKCFoZXgpIHtcbiAgICAgIF9maW5hbENvbG9yc1trZXldID0gX2RlZkNvbG9yc1trZXldXG4gICAgICBjb250aW51ZVxuICAgIH1cbiAgICBpZiAoJ3Jlc2V0JyA9PT0ga2V5KSB7XG4gICAgICBpZiAodHlwZW9mIGhleCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaGV4ID0gW2hleF1cbiAgICAgIH1cbiAgICAgIGlmICghQXJyYXkuaXNBcnJheShoZXgpIHx8IGhleC5sZW5ndGggPT09IDAgfHwgaGV4LnNvbWUoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBoICE9PSAnc3RyaW5nJ1xuICAgICAgfSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgdmFsdWUgb2YgYCcgKyBrZXkgKyAnYCBwcm9wZXJ0eSBtdXN0IGJlIGFuIEFycmF5IGFuZCBlYWNoIGl0ZW0gY291bGQgb25seSBiZSBhIGhleCBzdHJpbmcsIGUuZy46IEZGMDAwMCcpXG4gICAgICB9XG4gICAgICB2YXIgZGVmSGV4Q29sb3IgPSBfZGVmQ29sb3JzW2tleV1cbiAgICAgIGlmICghaGV4WzBdKSB7XG4gICAgICAgIGhleFswXSA9IGRlZkhleENvbG9yWzBdXG4gICAgICB9XG4gICAgICBpZiAoaGV4Lmxlbmd0aCA9PT0gMSB8fCAhaGV4WzFdKSB7XG4gICAgICAgIGhleCA9IFtoZXhbMF1dXG4gICAgICAgIGhleC5wdXNoKGRlZkhleENvbG9yWzFdKVxuICAgICAgfVxuXG4gICAgICBoZXggPSBoZXguc2xpY2UoMCwgMilcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBoZXggIT09ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSB2YWx1ZSBvZiBgJyArIGtleSArICdgIHByb3BlcnR5IG11c3QgYmUgYSBoZXggc3RyaW5nLCBlLmcuOiBGRjAwMDAnKVxuICAgIH1cbiAgICBfZmluYWxDb2xvcnNba2V5XSA9IGhleFxuICB9XG4gIF9zZXRUYWdzKF9maW5hbENvbG9ycylcbn1cblxuLyoqXG4gKiBSZXNldCBjb2xvcnMuXG4gKi9cbmFuc2lIVE1MLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICBfc2V0VGFncyhfZGVmQ29sb3JzKVxufVxuXG4vKipcbiAqIEV4cG9zZSB0YWdzLCBpbmNsdWRpbmcgb3BlbiBhbmQgY2xvc2UuXG4gKiBAdHlwZSB7T2JqZWN0fVxuICovXG5hbnNpSFRNTC50YWdzID0ge31cblxuaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYW5zaUhUTUwudGFncywgJ29wZW4nLCB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfb3BlblRhZ3MgfVxuICB9KVxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYW5zaUhUTUwudGFncywgJ2Nsb3NlJywge1xuICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX2Nsb3NlVGFncyB9XG4gIH0pXG59IGVsc2Uge1xuICBhbnNpSFRNTC50YWdzLm9wZW4gPSBfb3BlblRhZ3NcbiAgYW5zaUhUTUwudGFncy5jbG9zZSA9IF9jbG9zZVRhZ3Ncbn1cblxuZnVuY3Rpb24gX3NldFRhZ3MgKGNvbG9ycykge1xuICAvLyByZXNldCBhbGxcbiAgX29wZW5UYWdzWycwJ10gPSAnZm9udC13ZWlnaHQ6bm9ybWFsO29wYWNpdHk6MTtjb2xvcjojJyArIGNvbG9ycy5yZXNldFswXSArICc7YmFja2dyb3VuZDojJyArIGNvbG9ycy5yZXNldFsxXVxuICAvLyBpbnZlcnNlXG4gIF9vcGVuVGFnc1snNyddID0gJ2NvbG9yOiMnICsgY29sb3JzLnJlc2V0WzFdICsgJztiYWNrZ3JvdW5kOiMnICsgY29sb3JzLnJlc2V0WzBdXG4gIC8vIGRhcmsgZ3JleVxuICBfb3BlblRhZ3NbJzkwJ10gPSAnY29sb3I6IycgKyBjb2xvcnMuZGFya2dyZXlcblxuICBmb3IgKHZhciBjb2RlIGluIF9zdHlsZXMpIHtcbiAgICB2YXIgY29sb3IgPSBfc3R5bGVzW2NvZGVdXG4gICAgdmFyIG9yaUNvbG9yID0gY29sb3JzW2NvbG9yXSB8fCAnMDAwJ1xuICAgIF9vcGVuVGFnc1tjb2RlXSA9ICdjb2xvcjojJyArIG9yaUNvbG9yXG4gICAgY29kZSA9IHBhcnNlSW50KGNvZGUpXG4gICAgX29wZW5UYWdzWyhjb2RlICsgMTApLnRvU3RyaW5nKCldID0gJ2JhY2tncm91bmQ6IycgKyBvcmlDb2xvclxuICB9XG59XG5cbmFuc2lIVE1MLnJlc2V0KClcbiIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSID0gdHlwZW9mIFJlZmxlY3QgPT09ICdvYmplY3QnID8gUmVmbGVjdCA6IG51bGxcbnZhciBSZWZsZWN0QXBwbHkgPSBSICYmIHR5cGVvZiBSLmFwcGx5ID09PSAnZnVuY3Rpb24nXG4gID8gUi5hcHBseVxuICA6IGZ1bmN0aW9uIFJlZmxlY3RBcHBseSh0YXJnZXQsIHJlY2VpdmVyLCBhcmdzKSB7XG4gICAgcmV0dXJuIEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseS5jYWxsKHRhcmdldCwgcmVjZWl2ZXIsIGFyZ3MpO1xuICB9XG5cbnZhciBSZWZsZWN0T3duS2V5c1xuaWYgKFIgJiYgdHlwZW9mIFIub3duS2V5cyA9PT0gJ2Z1bmN0aW9uJykge1xuICBSZWZsZWN0T3duS2V5cyA9IFIub3duS2V5c1xufSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gIFJlZmxlY3RPd25LZXlzID0gZnVuY3Rpb24gUmVmbGVjdE93bktleXModGFyZ2V0KSB7XG4gICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRhcmdldClcbiAgICAgIC5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyh0YXJnZXQpKTtcbiAgfTtcbn0gZWxzZSB7XG4gIFJlZmxlY3RPd25LZXlzID0gZnVuY3Rpb24gUmVmbGVjdE93bktleXModGFyZ2V0KSB7XG4gICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRhcmdldCk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIFByb2Nlc3NFbWl0V2FybmluZyh3YXJuaW5nKSB7XG4gIGlmIChjb25zb2xlICYmIGNvbnNvbGUud2FybikgY29uc29sZS53YXJuKHdhcm5pbmcpO1xufVxuXG52YXIgTnVtYmVySXNOYU4gPSBOdW1iZXIuaXNOYU4gfHwgZnVuY3Rpb24gTnVtYmVySXNOYU4odmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9PSB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCkge1xuICBFdmVudEVtaXR0ZXIuaW5pdC5jYWxsKHRoaXMpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBFdmVudEVtaXR0ZXI7XG5tb2R1bGUuZXhwb3J0cy5vbmNlID0gb25jZTtcblxuLy8gQmFja3dhcmRzLWNvbXBhdCB3aXRoIG5vZGUgMC4xMC54XG5FdmVudEVtaXR0ZXIuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyO1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLl9ldmVudHMgPSB1bmRlZmluZWQ7XG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLl9ldmVudHNDb3VudCA9IDA7XG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLl9tYXhMaXN0ZW5lcnMgPSB1bmRlZmluZWQ7XG5cbi8vIEJ5IGRlZmF1bHQgRXZlbnRFbWl0dGVycyB3aWxsIHByaW50IGEgd2FybmluZyBpZiBtb3JlIHRoYW4gMTAgbGlzdGVuZXJzIGFyZVxuLy8gYWRkZWQgdG8gaXQuIFRoaXMgaXMgYSB1c2VmdWwgZGVmYXVsdCB3aGljaCBoZWxwcyBmaW5kaW5nIG1lbW9yeSBsZWFrcy5cbnZhciBkZWZhdWx0TWF4TGlzdGVuZXJzID0gMTA7XG5cbmZ1bmN0aW9uIGNoZWNrTGlzdGVuZXIobGlzdGVuZXIpIHtcbiAgaWYgKHR5cGVvZiBsaXN0ZW5lciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcImxpc3RlbmVyXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIEZ1bmN0aW9uLiBSZWNlaXZlZCB0eXBlICcgKyB0eXBlb2YgbGlzdGVuZXIpO1xuICB9XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShFdmVudEVtaXR0ZXIsICdkZWZhdWx0TWF4TGlzdGVuZXJzJywge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkZWZhdWx0TWF4TGlzdGVuZXJzO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uKGFyZykge1xuICAgIGlmICh0eXBlb2YgYXJnICE9PSAnbnVtYmVyJyB8fCBhcmcgPCAwIHx8IE51bWJlcklzTmFOKGFyZykpIHtcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgb2YgXCJkZWZhdWx0TWF4TGlzdGVuZXJzXCIgaXMgb3V0IG9mIHJhbmdlLiBJdCBtdXN0IGJlIGEgbm9uLW5lZ2F0aXZlIG51bWJlci4gUmVjZWl2ZWQgJyArIGFyZyArICcuJyk7XG4gICAgfVxuICAgIGRlZmF1bHRNYXhMaXN0ZW5lcnMgPSBhcmc7XG4gIH1cbn0pO1xuXG5FdmVudEVtaXR0ZXIuaW5pdCA9IGZ1bmN0aW9uKCkge1xuXG4gIGlmICh0aGlzLl9ldmVudHMgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgdGhpcy5fZXZlbnRzID09PSBPYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcykuX2V2ZW50cykge1xuICAgIHRoaXMuX2V2ZW50cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgdGhpcy5fZXZlbnRzQ291bnQgPSAwO1xuICB9XG5cbiAgdGhpcy5fbWF4TGlzdGVuZXJzID0gdGhpcy5fbWF4TGlzdGVuZXJzIHx8IHVuZGVmaW5lZDtcbn07XG5cbi8vIE9idmlvdXNseSBub3QgYWxsIEVtaXR0ZXJzIHNob3VsZCBiZSBsaW1pdGVkIHRvIDEwLiBUaGlzIGZ1bmN0aW9uIGFsbG93c1xuLy8gdGhhdCB0byBiZSBpbmNyZWFzZWQuIFNldCB0byB6ZXJvIGZvciB1bmxpbWl0ZWQuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnNldE1heExpc3RlbmVycyA9IGZ1bmN0aW9uIHNldE1heExpc3RlbmVycyhuKSB7XG4gIGlmICh0eXBlb2YgbiAhPT0gJ251bWJlcicgfHwgbiA8IDAgfHwgTnVtYmVySXNOYU4obikpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignVGhlIHZhbHVlIG9mIFwiblwiIGlzIG91dCBvZiByYW5nZS4gSXQgbXVzdCBiZSBhIG5vbi1uZWdhdGl2ZSBudW1iZXIuIFJlY2VpdmVkICcgKyBuICsgJy4nKTtcbiAgfVxuICB0aGlzLl9tYXhMaXN0ZW5lcnMgPSBuO1xuICByZXR1cm4gdGhpcztcbn07XG5cbmZ1bmN0aW9uIF9nZXRNYXhMaXN0ZW5lcnModGhhdCkge1xuICBpZiAodGhhdC5fbWF4TGlzdGVuZXJzID09PSB1bmRlZmluZWQpXG4gICAgcmV0dXJuIEV2ZW50RW1pdHRlci5kZWZhdWx0TWF4TGlzdGVuZXJzO1xuICByZXR1cm4gdGhhdC5fbWF4TGlzdGVuZXJzO1xufVxuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmdldE1heExpc3RlbmVycyA9IGZ1bmN0aW9uIGdldE1heExpc3RlbmVycygpIHtcbiAgcmV0dXJuIF9nZXRNYXhMaXN0ZW5lcnModGhpcyk7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbiBlbWl0KHR5cGUpIHtcbiAgdmFyIGFyZ3MgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIGFyZ3MucHVzaChhcmd1bWVudHNbaV0pO1xuICB2YXIgZG9FcnJvciA9ICh0eXBlID09PSAnZXJyb3InKTtcblxuICB2YXIgZXZlbnRzID0gdGhpcy5fZXZlbnRzO1xuICBpZiAoZXZlbnRzICE9PSB1bmRlZmluZWQpXG4gICAgZG9FcnJvciA9IChkb0Vycm9yICYmIGV2ZW50cy5lcnJvciA9PT0gdW5kZWZpbmVkKTtcbiAgZWxzZSBpZiAoIWRvRXJyb3IpXG4gICAgcmV0dXJuIGZhbHNlO1xuXG4gIC8vIElmIHRoZXJlIGlzIG5vICdlcnJvcicgZXZlbnQgbGlzdGVuZXIgdGhlbiB0aHJvdy5cbiAgaWYgKGRvRXJyb3IpIHtcbiAgICB2YXIgZXI7XG4gICAgaWYgKGFyZ3MubGVuZ3RoID4gMClcbiAgICAgIGVyID0gYXJnc1swXTtcbiAgICBpZiAoZXIgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgLy8gTm90ZTogVGhlIGNvbW1lbnRzIG9uIHRoZSBgdGhyb3dgIGxpbmVzIGFyZSBpbnRlbnRpb25hbCwgdGhleSBzaG93XG4gICAgICAvLyB1cCBpbiBOb2RlJ3Mgb3V0cHV0IGlmIHRoaXMgcmVzdWx0cyBpbiBhbiB1bmhhbmRsZWQgZXhjZXB0aW9uLlxuICAgICAgdGhyb3cgZXI7IC8vIFVuaGFuZGxlZCAnZXJyb3InIGV2ZW50XG4gICAgfVxuICAgIC8vIEF0IGxlYXN0IGdpdmUgc29tZSBraW5kIG9mIGNvbnRleHQgdG8gdGhlIHVzZXJcbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdVbmhhbmRsZWQgZXJyb3IuJyArIChlciA/ICcgKCcgKyBlci5tZXNzYWdlICsgJyknIDogJycpKTtcbiAgICBlcnIuY29udGV4dCA9IGVyO1xuICAgIHRocm93IGVycjsgLy8gVW5oYW5kbGVkICdlcnJvcicgZXZlbnRcbiAgfVxuXG4gIHZhciBoYW5kbGVyID0gZXZlbnRzW3R5cGVdO1xuXG4gIGlmIChoYW5kbGVyID09PSB1bmRlZmluZWQpXG4gICAgcmV0dXJuIGZhbHNlO1xuXG4gIGlmICh0eXBlb2YgaGFuZGxlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIFJlZmxlY3RBcHBseShoYW5kbGVyLCB0aGlzLCBhcmdzKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbGVuID0gaGFuZGxlci5sZW5ndGg7XG4gICAgdmFyIGxpc3RlbmVycyA9IGFycmF5Q2xvbmUoaGFuZGxlciwgbGVuKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKVxuICAgICAgUmVmbGVjdEFwcGx5KGxpc3RlbmVyc1tpXSwgdGhpcywgYXJncyk7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn07XG5cbmZ1bmN0aW9uIF9hZGRMaXN0ZW5lcih0YXJnZXQsIHR5cGUsIGxpc3RlbmVyLCBwcmVwZW5kKSB7XG4gIHZhciBtO1xuICB2YXIgZXZlbnRzO1xuICB2YXIgZXhpc3Rpbmc7XG5cbiAgY2hlY2tMaXN0ZW5lcihsaXN0ZW5lcik7XG5cbiAgZXZlbnRzID0gdGFyZ2V0Ll9ldmVudHM7XG4gIGlmIChldmVudHMgPT09IHVuZGVmaW5lZCkge1xuICAgIGV2ZW50cyA9IHRhcmdldC5fZXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICB0YXJnZXQuX2V2ZW50c0NvdW50ID0gMDtcbiAgfSBlbHNlIHtcbiAgICAvLyBUbyBhdm9pZCByZWN1cnNpb24gaW4gdGhlIGNhc2UgdGhhdCB0eXBlID09PSBcIm5ld0xpc3RlbmVyXCIhIEJlZm9yZVxuICAgIC8vIGFkZGluZyBpdCB0byB0aGUgbGlzdGVuZXJzLCBmaXJzdCBlbWl0IFwibmV3TGlzdGVuZXJcIi5cbiAgICBpZiAoZXZlbnRzLm5ld0xpc3RlbmVyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRhcmdldC5lbWl0KCduZXdMaXN0ZW5lcicsIHR5cGUsXG4gICAgICAgICAgICAgICAgICBsaXN0ZW5lci5saXN0ZW5lciA/IGxpc3RlbmVyLmxpc3RlbmVyIDogbGlzdGVuZXIpO1xuXG4gICAgICAvLyBSZS1hc3NpZ24gYGV2ZW50c2AgYmVjYXVzZSBhIG5ld0xpc3RlbmVyIGhhbmRsZXIgY291bGQgaGF2ZSBjYXVzZWQgdGhlXG4gICAgICAvLyB0aGlzLl9ldmVudHMgdG8gYmUgYXNzaWduZWQgdG8gYSBuZXcgb2JqZWN0XG4gICAgICBldmVudHMgPSB0YXJnZXQuX2V2ZW50cztcbiAgICB9XG4gICAgZXhpc3RpbmcgPSBldmVudHNbdHlwZV07XG4gIH1cblxuICBpZiAoZXhpc3RpbmcgPT09IHVuZGVmaW5lZCkge1xuICAgIC8vIE9wdGltaXplIHRoZSBjYXNlIG9mIG9uZSBsaXN0ZW5lci4gRG9uJ3QgbmVlZCB0aGUgZXh0cmEgYXJyYXkgb2JqZWN0LlxuICAgIGV4aXN0aW5nID0gZXZlbnRzW3R5cGVdID0gbGlzdGVuZXI7XG4gICAgKyt0YXJnZXQuX2V2ZW50c0NvdW50O1xuICB9IGVsc2Uge1xuICAgIGlmICh0eXBlb2YgZXhpc3RpbmcgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIC8vIEFkZGluZyB0aGUgc2Vjb25kIGVsZW1lbnQsIG5lZWQgdG8gY2hhbmdlIHRvIGFycmF5LlxuICAgICAgZXhpc3RpbmcgPSBldmVudHNbdHlwZV0gPVxuICAgICAgICBwcmVwZW5kID8gW2xpc3RlbmVyLCBleGlzdGluZ10gOiBbZXhpc3RpbmcsIGxpc3RlbmVyXTtcbiAgICAgIC8vIElmIHdlJ3ZlIGFscmVhZHkgZ290IGFuIGFycmF5LCBqdXN0IGFwcGVuZC5cbiAgICB9IGVsc2UgaWYgKHByZXBlbmQpIHtcbiAgICAgIGV4aXN0aW5nLnVuc2hpZnQobGlzdGVuZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBleGlzdGluZy5wdXNoKGxpc3RlbmVyKTtcbiAgICB9XG5cbiAgICAvLyBDaGVjayBmb3IgbGlzdGVuZXIgbGVha1xuICAgIG0gPSBfZ2V0TWF4TGlzdGVuZXJzKHRhcmdldCk7XG4gICAgaWYgKG0gPiAwICYmIGV4aXN0aW5nLmxlbmd0aCA+IG0gJiYgIWV4aXN0aW5nLndhcm5lZCkge1xuICAgICAgZXhpc3Rpbmcud2FybmVkID0gdHJ1ZTtcbiAgICAgIC8vIE5vIGVycm9yIGNvZGUgZm9yIHRoaXMgc2luY2UgaXQgaXMgYSBXYXJuaW5nXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgICAgIHZhciB3ID0gbmV3IEVycm9yKCdQb3NzaWJsZSBFdmVudEVtaXR0ZXIgbWVtb3J5IGxlYWsgZGV0ZWN0ZWQuICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICBleGlzdGluZy5sZW5ndGggKyAnICcgKyBTdHJpbmcodHlwZSkgKyAnIGxpc3RlbmVycyAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ2FkZGVkLiBVc2UgZW1pdHRlci5zZXRNYXhMaXN0ZW5lcnMoKSB0byAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ2luY3JlYXNlIGxpbWl0Jyk7XG4gICAgICB3Lm5hbWUgPSAnTWF4TGlzdGVuZXJzRXhjZWVkZWRXYXJuaW5nJztcbiAgICAgIHcuZW1pdHRlciA9IHRhcmdldDtcbiAgICAgIHcudHlwZSA9IHR5cGU7XG4gICAgICB3LmNvdW50ID0gZXhpc3RpbmcubGVuZ3RoO1xuICAgICAgUHJvY2Vzc0VtaXRXYXJuaW5nKHcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuYWRkTGlzdGVuZXIgPSBmdW5jdGlvbiBhZGRMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcikge1xuICByZXR1cm4gX2FkZExpc3RlbmVyKHRoaXMsIHR5cGUsIGxpc3RlbmVyLCBmYWxzZSk7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uID0gRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lcjtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5wcmVwZW5kTGlzdGVuZXIgPVxuICAgIGZ1bmN0aW9uIHByZXBlbmRMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIF9hZGRMaXN0ZW5lcih0aGlzLCB0eXBlLCBsaXN0ZW5lciwgdHJ1ZSk7XG4gICAgfTtcblxuZnVuY3Rpb24gb25jZVdyYXBwZXIoKSB7XG4gIGlmICghdGhpcy5maXJlZCkge1xuICAgIHRoaXMudGFyZ2V0LnJlbW92ZUxpc3RlbmVyKHRoaXMudHlwZSwgdGhpcy53cmFwRm4pO1xuICAgIHRoaXMuZmlyZWQgPSB0cnVlO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKVxuICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXIuY2FsbCh0aGlzLnRhcmdldCk7XG4gICAgcmV0dXJuIHRoaXMubGlzdGVuZXIuYXBwbHkodGhpcy50YXJnZXQsIGFyZ3VtZW50cyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gX29uY2VXcmFwKHRhcmdldCwgdHlwZSwgbGlzdGVuZXIpIHtcbiAgdmFyIHN0YXRlID0geyBmaXJlZDogZmFsc2UsIHdyYXBGbjogdW5kZWZpbmVkLCB0YXJnZXQ6IHRhcmdldCwgdHlwZTogdHlwZSwgbGlzdGVuZXI6IGxpc3RlbmVyIH07XG4gIHZhciB3cmFwcGVkID0gb25jZVdyYXBwZXIuYmluZChzdGF0ZSk7XG4gIHdyYXBwZWQubGlzdGVuZXIgPSBsaXN0ZW5lcjtcbiAgc3RhdGUud3JhcEZuID0gd3JhcHBlZDtcbiAgcmV0dXJuIHdyYXBwZWQ7XG59XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUub25jZSA9IGZ1bmN0aW9uIG9uY2UodHlwZSwgbGlzdGVuZXIpIHtcbiAgY2hlY2tMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIHRoaXMub24odHlwZSwgX29uY2VXcmFwKHRoaXMsIHR5cGUsIGxpc3RlbmVyKSk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5wcmVwZW5kT25jZUxpc3RlbmVyID1cbiAgICBmdW5jdGlvbiBwcmVwZW5kT25jZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICBjaGVja0xpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICAgIHRoaXMucHJlcGVuZExpc3RlbmVyKHR5cGUsIF9vbmNlV3JhcCh0aGlzLCB0eXBlLCBsaXN0ZW5lcikpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuLy8gRW1pdHMgYSAncmVtb3ZlTGlzdGVuZXInIGV2ZW50IGlmIGFuZCBvbmx5IGlmIHRoZSBsaXN0ZW5lciB3YXMgcmVtb3ZlZC5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXIgPVxuICAgIGZ1bmN0aW9uIHJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICB2YXIgbGlzdCwgZXZlbnRzLCBwb3NpdGlvbiwgaSwgb3JpZ2luYWxMaXN0ZW5lcjtcblxuICAgICAgY2hlY2tMaXN0ZW5lcihsaXN0ZW5lcik7XG5cbiAgICAgIGV2ZW50cyA9IHRoaXMuX2V2ZW50cztcbiAgICAgIGlmIChldmVudHMgPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIHRoaXM7XG5cbiAgICAgIGxpc3QgPSBldmVudHNbdHlwZV07XG4gICAgICBpZiAobGlzdCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gdGhpcztcblxuICAgICAgaWYgKGxpc3QgPT09IGxpc3RlbmVyIHx8IGxpc3QubGlzdGVuZXIgPT09IGxpc3RlbmVyKSB7XG4gICAgICAgIGlmICgtLXRoaXMuX2V2ZW50c0NvdW50ID09PSAwKVxuICAgICAgICAgIHRoaXMuX2V2ZW50cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGRlbGV0ZSBldmVudHNbdHlwZV07XG4gICAgICAgICAgaWYgKGV2ZW50cy5yZW1vdmVMaXN0ZW5lcilcbiAgICAgICAgICAgIHRoaXMuZW1pdCgncmVtb3ZlTGlzdGVuZXInLCB0eXBlLCBsaXN0Lmxpc3RlbmVyIHx8IGxpc3RlbmVyKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgbGlzdCAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBwb3NpdGlvbiA9IC0xO1xuXG4gICAgICAgIGZvciAoaSA9IGxpc3QubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgICBpZiAobGlzdFtpXSA9PT0gbGlzdGVuZXIgfHwgbGlzdFtpXS5saXN0ZW5lciA9PT0gbGlzdGVuZXIpIHtcbiAgICAgICAgICAgIG9yaWdpbmFsTGlzdGVuZXIgPSBsaXN0W2ldLmxpc3RlbmVyO1xuICAgICAgICAgICAgcG9zaXRpb24gPSBpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBvc2l0aW9uIDwgMClcbiAgICAgICAgICByZXR1cm4gdGhpcztcblxuICAgICAgICBpZiAocG9zaXRpb24gPT09IDApXG4gICAgICAgICAgbGlzdC5zaGlmdCgpO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBzcGxpY2VPbmUobGlzdCwgcG9zaXRpb24pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGxpc3QubGVuZ3RoID09PSAxKVxuICAgICAgICAgIGV2ZW50c1t0eXBlXSA9IGxpc3RbMF07XG5cbiAgICAgICAgaWYgKGV2ZW50cy5yZW1vdmVMaXN0ZW5lciAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgIHRoaXMuZW1pdCgncmVtb3ZlTGlzdGVuZXInLCB0eXBlLCBvcmlnaW5hbExpc3RlbmVyIHx8IGxpc3RlbmVyKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vZmYgPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyO1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9XG4gICAgZnVuY3Rpb24gcmVtb3ZlQWxsTGlzdGVuZXJzKHR5cGUpIHtcbiAgICAgIHZhciBsaXN0ZW5lcnMsIGV2ZW50cywgaTtcblxuICAgICAgZXZlbnRzID0gdGhpcy5fZXZlbnRzO1xuICAgICAgaWYgKGV2ZW50cyA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gdGhpcztcblxuICAgICAgLy8gbm90IGxpc3RlbmluZyBmb3IgcmVtb3ZlTGlzdGVuZXIsIG5vIG5lZWQgdG8gZW1pdFxuICAgICAgaWYgKGV2ZW50cy5yZW1vdmVMaXN0ZW5lciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgdGhpcy5fZXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICB0aGlzLl9ldmVudHNDb3VudCA9IDA7XG4gICAgICAgIH0gZWxzZSBpZiAoZXZlbnRzW3R5cGVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBpZiAoLS10aGlzLl9ldmVudHNDb3VudCA9PT0gMClcbiAgICAgICAgICAgIHRoaXMuX2V2ZW50cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgICAgZWxzZVxuICAgICAgICAgICAgZGVsZXRlIGV2ZW50c1t0eXBlXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cblxuICAgICAgLy8gZW1pdCByZW1vdmVMaXN0ZW5lciBmb3IgYWxsIGxpc3RlbmVycyBvbiBhbGwgZXZlbnRzXG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGV2ZW50cyk7XG4gICAgICAgIHZhciBrZXk7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICBpZiAoa2V5ID09PSAncmVtb3ZlTGlzdGVuZXInKSBjb250aW51ZTtcbiAgICAgICAgICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycyhrZXkpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCdyZW1vdmVMaXN0ZW5lcicpO1xuICAgICAgICB0aGlzLl9ldmVudHMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICB0aGlzLl9ldmVudHNDb3VudCA9IDA7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuXG4gICAgICBsaXN0ZW5lcnMgPSBldmVudHNbdHlwZV07XG5cbiAgICAgIGlmICh0eXBlb2YgbGlzdGVuZXJzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXJzKTtcbiAgICAgIH0gZWxzZSBpZiAobGlzdGVuZXJzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgLy8gTElGTyBvcmRlclxuICAgICAgICBmb3IgKGkgPSBsaXN0ZW5lcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcblxuZnVuY3Rpb24gX2xpc3RlbmVycyh0YXJnZXQsIHR5cGUsIHVud3JhcCkge1xuICB2YXIgZXZlbnRzID0gdGFyZ2V0Ll9ldmVudHM7XG5cbiAgaWYgKGV2ZW50cyA9PT0gdW5kZWZpbmVkKVxuICAgIHJldHVybiBbXTtcblxuICB2YXIgZXZsaXN0ZW5lciA9IGV2ZW50c1t0eXBlXTtcbiAgaWYgKGV2bGlzdGVuZXIgPT09IHVuZGVmaW5lZClcbiAgICByZXR1cm4gW107XG5cbiAgaWYgKHR5cGVvZiBldmxpc3RlbmVyID09PSAnZnVuY3Rpb24nKVxuICAgIHJldHVybiB1bndyYXAgPyBbZXZsaXN0ZW5lci5saXN0ZW5lciB8fCBldmxpc3RlbmVyXSA6IFtldmxpc3RlbmVyXTtcblxuICByZXR1cm4gdW53cmFwID9cbiAgICB1bndyYXBMaXN0ZW5lcnMoZXZsaXN0ZW5lcikgOiBhcnJheUNsb25lKGV2bGlzdGVuZXIsIGV2bGlzdGVuZXIubGVuZ3RoKTtcbn1cblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5saXN0ZW5lcnMgPSBmdW5jdGlvbiBsaXN0ZW5lcnModHlwZSkge1xuICByZXR1cm4gX2xpc3RlbmVycyh0aGlzLCB0eXBlLCB0cnVlKTtcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmF3TGlzdGVuZXJzID0gZnVuY3Rpb24gcmF3TGlzdGVuZXJzKHR5cGUpIHtcbiAgcmV0dXJuIF9saXN0ZW5lcnModGhpcywgdHlwZSwgZmFsc2UpO1xufTtcblxuRXZlbnRFbWl0dGVyLmxpc3RlbmVyQ291bnQgPSBmdW5jdGlvbihlbWl0dGVyLCB0eXBlKSB7XG4gIGlmICh0eXBlb2YgZW1pdHRlci5saXN0ZW5lckNvdW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGVtaXR0ZXIubGlzdGVuZXJDb3VudCh0eXBlKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbGlzdGVuZXJDb3VudC5jYWxsKGVtaXR0ZXIsIHR5cGUpO1xuICB9XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVyQ291bnQgPSBsaXN0ZW5lckNvdW50O1xuZnVuY3Rpb24gbGlzdGVuZXJDb3VudCh0eXBlKSB7XG4gIHZhciBldmVudHMgPSB0aGlzLl9ldmVudHM7XG5cbiAgaWYgKGV2ZW50cyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIGV2bGlzdGVuZXIgPSBldmVudHNbdHlwZV07XG5cbiAgICBpZiAodHlwZW9mIGV2bGlzdGVuZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH0gZWxzZSBpZiAoZXZsaXN0ZW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gZXZsaXN0ZW5lci5sZW5ndGg7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIDA7XG59XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZXZlbnROYW1lcyA9IGZ1bmN0aW9uIGV2ZW50TmFtZXMoKSB7XG4gIHJldHVybiB0aGlzLl9ldmVudHNDb3VudCA+IDAgPyBSZWZsZWN0T3duS2V5cyh0aGlzLl9ldmVudHMpIDogW107XG59O1xuXG5mdW5jdGlvbiBhcnJheUNsb25lKGFyciwgbikge1xuICB2YXIgY29weSA9IG5ldyBBcnJheShuKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyArK2kpXG4gICAgY29weVtpXSA9IGFycltpXTtcbiAgcmV0dXJuIGNvcHk7XG59XG5cbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKDsgaW5kZXggKyAxIDwgbGlzdC5sZW5ndGg7IGluZGV4KyspXG4gICAgbGlzdFtpbmRleF0gPSBsaXN0W2luZGV4ICsgMV07XG4gIGxpc3QucG9wKCk7XG59XG5cbmZ1bmN0aW9uIHVud3JhcExpc3RlbmVycyhhcnIpIHtcbiAgdmFyIHJldCA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXQubGVuZ3RoOyArK2kpIHtcbiAgICByZXRbaV0gPSBhcnJbaV0ubGlzdGVuZXIgfHwgYXJyW2ldO1xuICB9XG4gIHJldHVybiByZXQ7XG59XG5cbmZ1bmN0aW9uIG9uY2UoZW1pdHRlciwgbmFtZSkge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgIGZ1bmN0aW9uIGV2ZW50TGlzdGVuZXIoKSB7XG4gICAgICBpZiAoZXJyb3JMaXN0ZW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGVtaXR0ZXIucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgZXJyb3JMaXN0ZW5lcik7XG4gICAgICB9XG4gICAgICByZXNvbHZlKFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKSk7XG4gICAgfTtcbiAgICB2YXIgZXJyb3JMaXN0ZW5lcjtcblxuICAgIC8vIEFkZGluZyBhbiBlcnJvciBsaXN0ZW5lciBpcyBub3Qgb3B0aW9uYWwgYmVjYXVzZVxuICAgIC8vIGlmIGFuIGVycm9yIGlzIHRocm93biBvbiBhbiBldmVudCBlbWl0dGVyIHdlIGNhbm5vdFxuICAgIC8vIGd1YXJhbnRlZSB0aGF0IHRoZSBhY3R1YWwgZXZlbnQgd2UgYXJlIHdhaXRpbmcgd2lsbFxuICAgIC8vIGJlIGZpcmVkLiBUaGUgcmVzdWx0IGNvdWxkIGJlIGEgc2lsZW50IHdheSB0byBjcmVhdGVcbiAgICAvLyBtZW1vcnkgb3IgZmlsZSBkZXNjcmlwdG9yIGxlYWtzLCB3aGljaCBpcyBzb21ldGhpbmdcbiAgICAvLyB3ZSBzaG91bGQgYXZvaWQuXG4gICAgaWYgKG5hbWUgIT09ICdlcnJvcicpIHtcbiAgICAgIGVycm9yTGlzdGVuZXIgPSBmdW5jdGlvbiBlcnJvckxpc3RlbmVyKGVycikge1xuICAgICAgICBlbWl0dGVyLnJlbW92ZUxpc3RlbmVyKG5hbWUsIGV2ZW50TGlzdGVuZXIpO1xuICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgIH07XG5cbiAgICAgIGVtaXR0ZXIub25jZSgnZXJyb3InLCBlcnJvckxpc3RlbmVyKTtcbiAgICB9XG5cbiAgICBlbWl0dGVyLm9uY2UobmFtZSwgZXZlbnRMaXN0ZW5lcik7XG4gIH0pO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgSFRNTF9BTFBIQSA9IFsnYXBvcycsICduYnNwJywgJ2lleGNsJywgJ2NlbnQnLCAncG91bmQnLCAnY3VycmVuJywgJ3llbicsICdicnZiYXInLCAnc2VjdCcsICd1bWwnLCAnY29weScsICdvcmRmJywgJ2xhcXVvJywgJ25vdCcsICdzaHknLCAncmVnJywgJ21hY3InLCAnZGVnJywgJ3BsdXNtbicsICdzdXAyJywgJ3N1cDMnLCAnYWN1dGUnLCAnbWljcm8nLCAncGFyYScsICdtaWRkb3QnLCAnY2VkaWwnLCAnc3VwMScsICdvcmRtJywgJ3JhcXVvJywgJ2ZyYWMxNCcsICdmcmFjMTInLCAnZnJhYzM0JywgJ2lxdWVzdCcsICdBZ3JhdmUnLCAnQWFjdXRlJywgJ0FjaXJjJywgJ0F0aWxkZScsICdBdW1sJywgJ0FyaW5nJywgJ0FlbGlnJywgJ0NjZWRpbCcsICdFZ3JhdmUnLCAnRWFjdXRlJywgJ0VjaXJjJywgJ0V1bWwnLCAnSWdyYXZlJywgJ0lhY3V0ZScsICdJY2lyYycsICdJdW1sJywgJ0VUSCcsICdOdGlsZGUnLCAnT2dyYXZlJywgJ09hY3V0ZScsICdPY2lyYycsICdPdGlsZGUnLCAnT3VtbCcsICd0aW1lcycsICdPc2xhc2gnLCAnVWdyYXZlJywgJ1VhY3V0ZScsICdVY2lyYycsICdVdW1sJywgJ1lhY3V0ZScsICdUSE9STicsICdzemxpZycsICdhZ3JhdmUnLCAnYWFjdXRlJywgJ2FjaXJjJywgJ2F0aWxkZScsICdhdW1sJywgJ2FyaW5nJywgJ2FlbGlnJywgJ2NjZWRpbCcsICdlZ3JhdmUnLCAnZWFjdXRlJywgJ2VjaXJjJywgJ2V1bWwnLCAnaWdyYXZlJywgJ2lhY3V0ZScsICdpY2lyYycsICdpdW1sJywgJ2V0aCcsICdudGlsZGUnLCAnb2dyYXZlJywgJ29hY3V0ZScsICdvY2lyYycsICdvdGlsZGUnLCAnb3VtbCcsICdkaXZpZGUnLCAnb3NsYXNoJywgJ3VncmF2ZScsICd1YWN1dGUnLCAndWNpcmMnLCAndXVtbCcsICd5YWN1dGUnLCAndGhvcm4nLCAneXVtbCcsICdxdW90JywgJ2FtcCcsICdsdCcsICdndCcsICdPRWxpZycsICdvZWxpZycsICdTY2Fyb24nLCAnc2Nhcm9uJywgJ1l1bWwnLCAnY2lyYycsICd0aWxkZScsICdlbnNwJywgJ2Vtc3AnLCAndGhpbnNwJywgJ3p3bmonLCAnendqJywgJ2xybScsICdybG0nLCAnbmRhc2gnLCAnbWRhc2gnLCAnbHNxdW8nLCAncnNxdW8nLCAnc2JxdW8nLCAnbGRxdW8nLCAncmRxdW8nLCAnYmRxdW8nLCAnZGFnZ2VyJywgJ0RhZ2dlcicsICdwZXJtaWwnLCAnbHNhcXVvJywgJ3JzYXF1bycsICdldXJvJywgJ2Zub2YnLCAnQWxwaGEnLCAnQmV0YScsICdHYW1tYScsICdEZWx0YScsICdFcHNpbG9uJywgJ1pldGEnLCAnRXRhJywgJ1RoZXRhJywgJ0lvdGEnLCAnS2FwcGEnLCAnTGFtYmRhJywgJ011JywgJ051JywgJ1hpJywgJ09taWNyb24nLCAnUGknLCAnUmhvJywgJ1NpZ21hJywgJ1RhdScsICdVcHNpbG9uJywgJ1BoaScsICdDaGknLCAnUHNpJywgJ09tZWdhJywgJ2FscGhhJywgJ2JldGEnLCAnZ2FtbWEnLCAnZGVsdGEnLCAnZXBzaWxvbicsICd6ZXRhJywgJ2V0YScsICd0aGV0YScsICdpb3RhJywgJ2thcHBhJywgJ2xhbWJkYScsICdtdScsICdudScsICd4aScsICdvbWljcm9uJywgJ3BpJywgJ3JobycsICdzaWdtYWYnLCAnc2lnbWEnLCAndGF1JywgJ3Vwc2lsb24nLCAncGhpJywgJ2NoaScsICdwc2knLCAnb21lZ2EnLCAndGhldGFzeW0nLCAndXBzaWgnLCAncGl2JywgJ2J1bGwnLCAnaGVsbGlwJywgJ3ByaW1lJywgJ1ByaW1lJywgJ29saW5lJywgJ2ZyYXNsJywgJ3dlaWVycCcsICdpbWFnZScsICdyZWFsJywgJ3RyYWRlJywgJ2FsZWZzeW0nLCAnbGFycicsICd1YXJyJywgJ3JhcnInLCAnZGFycicsICdoYXJyJywgJ2NyYXJyJywgJ2xBcnInLCAndUFycicsICdyQXJyJywgJ2RBcnInLCAnaEFycicsICdmb3JhbGwnLCAncGFydCcsICdleGlzdCcsICdlbXB0eScsICduYWJsYScsICdpc2luJywgJ25vdGluJywgJ25pJywgJ3Byb2QnLCAnc3VtJywgJ21pbnVzJywgJ2xvd2FzdCcsICdyYWRpYycsICdwcm9wJywgJ2luZmluJywgJ2FuZycsICdhbmQnLCAnb3InLCAnY2FwJywgJ2N1cCcsICdpbnQnLCAndGhlcmU0JywgJ3NpbScsICdjb25nJywgJ2FzeW1wJywgJ25lJywgJ2VxdWl2JywgJ2xlJywgJ2dlJywgJ3N1YicsICdzdXAnLCAnbnN1YicsICdzdWJlJywgJ3N1cGUnLCAnb3BsdXMnLCAnb3RpbWVzJywgJ3BlcnAnLCAnc2RvdCcsICdsY2VpbCcsICdyY2VpbCcsICdsZmxvb3InLCAncmZsb29yJywgJ2xhbmcnLCAncmFuZycsICdsb3onLCAnc3BhZGVzJywgJ2NsdWJzJywgJ2hlYXJ0cycsICdkaWFtcyddO1xudmFyIEhUTUxfQ09ERVMgPSBbMzksIDE2MCwgMTYxLCAxNjIsIDE2MywgMTY0LCAxNjUsIDE2NiwgMTY3LCAxNjgsIDE2OSwgMTcwLCAxNzEsIDE3MiwgMTczLCAxNzQsIDE3NSwgMTc2LCAxNzcsIDE3OCwgMTc5LCAxODAsIDE4MSwgMTgyLCAxODMsIDE4NCwgMTg1LCAxODYsIDE4NywgMTg4LCAxODksIDE5MCwgMTkxLCAxOTIsIDE5MywgMTk0LCAxOTUsIDE5NiwgMTk3LCAxOTgsIDE5OSwgMjAwLCAyMDEsIDIwMiwgMjAzLCAyMDQsIDIwNSwgMjA2LCAyMDcsIDIwOCwgMjA5LCAyMTAsIDIxMSwgMjEyLCAyMTMsIDIxNCwgMjE1LCAyMTYsIDIxNywgMjE4LCAyMTksIDIyMCwgMjIxLCAyMjIsIDIyMywgMjI0LCAyMjUsIDIyNiwgMjI3LCAyMjgsIDIyOSwgMjMwLCAyMzEsIDIzMiwgMjMzLCAyMzQsIDIzNSwgMjM2LCAyMzcsIDIzOCwgMjM5LCAyNDAsIDI0MSwgMjQyLCAyNDMsIDI0NCwgMjQ1LCAyNDYsIDI0NywgMjQ4LCAyNDksIDI1MCwgMjUxLCAyNTIsIDI1MywgMjU0LCAyNTUsIDM0LCAzOCwgNjAsIDYyLCAzMzgsIDMzOSwgMzUyLCAzNTMsIDM3NiwgNzEwLCA3MzIsIDgxOTQsIDgxOTUsIDgyMDEsIDgyMDQsIDgyMDUsIDgyMDYsIDgyMDcsIDgyMTEsIDgyMTIsIDgyMTYsIDgyMTcsIDgyMTgsIDgyMjAsIDgyMjEsIDgyMjIsIDgyMjQsIDgyMjUsIDgyNDAsIDgyNDksIDgyNTAsIDgzNjQsIDQwMiwgOTEzLCA5MTQsIDkxNSwgOTE2LCA5MTcsIDkxOCwgOTE5LCA5MjAsIDkyMSwgOTIyLCA5MjMsIDkyNCwgOTI1LCA5MjYsIDkyNywgOTI4LCA5MjksIDkzMSwgOTMyLCA5MzMsIDkzNCwgOTM1LCA5MzYsIDkzNywgOTQ1LCA5NDYsIDk0NywgOTQ4LCA5NDksIDk1MCwgOTUxLCA5NTIsIDk1MywgOTU0LCA5NTUsIDk1NiwgOTU3LCA5NTgsIDk1OSwgOTYwLCA5NjEsIDk2MiwgOTYzLCA5NjQsIDk2NSwgOTY2LCA5NjcsIDk2OCwgOTY5LCA5NzcsIDk3OCwgOTgyLCA4MjI2LCA4MjMwLCA4MjQyLCA4MjQzLCA4MjU0LCA4MjYwLCA4NDcyLCA4NDY1LCA4NDc2LCA4NDgyLCA4NTAxLCA4NTkyLCA4NTkzLCA4NTk0LCA4NTk1LCA4NTk2LCA4NjI5LCA4NjU2LCA4NjU3LCA4NjU4LCA4NjU5LCA4NjYwLCA4NzA0LCA4NzA2LCA4NzA3LCA4NzA5LCA4NzExLCA4NzEyLCA4NzEzLCA4NzE1LCA4NzE5LCA4NzIxLCA4NzIyLCA4NzI3LCA4NzMwLCA4NzMzLCA4NzM0LCA4NzM2LCA4NzQzLCA4NzQ0LCA4NzQ1LCA4NzQ2LCA4NzQ3LCA4NzU2LCA4NzY0LCA4NzczLCA4Nzc2LCA4ODAwLCA4ODAxLCA4ODA0LCA4ODA1LCA4ODM0LCA4ODM1LCA4ODM2LCA4ODM4LCA4ODM5LCA4ODUzLCA4ODU1LCA4ODY5LCA4OTAxLCA4OTY4LCA4OTY5LCA4OTcwLCA4OTcxLCA5MDAxLCA5MDAyLCA5Njc0LCA5ODI0LCA5ODI3LCA5ODI5LCA5ODMwXTtcbnZhciBhbHBoYUluZGV4ID0ge307XG52YXIgbnVtSW5kZXggPSB7fTtcbihmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBsZW5ndGggPSBIVE1MX0FMUEhBLmxlbmd0aDtcbiAgICB3aGlsZSAoaSA8IGxlbmd0aCkge1xuICAgICAgICB2YXIgYSA9IEhUTUxfQUxQSEFbaV07XG4gICAgICAgIHZhciBjID0gSFRNTF9DT0RFU1tpXTtcbiAgICAgICAgYWxwaGFJbmRleFthXSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoYyk7XG4gICAgICAgIG51bUluZGV4W2NdID0gYTtcbiAgICAgICAgaSsrO1xuICAgIH1cbn0pKCk7XG52YXIgSHRtbDRFbnRpdGllcyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBIdG1sNEVudGl0aWVzKCkge1xuICAgIH1cbiAgICBIdG1sNEVudGl0aWVzLnByb3RvdHlwZS5kZWNvZGUgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgICAgIGlmICghc3RyIHx8ICFzdHIubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN0ci5yZXBsYWNlKC8mKCM/W1xcd1xcZF0rKTs/L2csIGZ1bmN0aW9uIChzLCBlbnRpdHkpIHtcbiAgICAgICAgICAgIHZhciBjaHI7XG4gICAgICAgICAgICBpZiAoZW50aXR5LmNoYXJBdCgwKSA9PT0gXCIjXCIpIHtcbiAgICAgICAgICAgICAgICB2YXIgY29kZSA9IGVudGl0eS5jaGFyQXQoMSkudG9Mb3dlckNhc2UoKSA9PT0gJ3gnID9cbiAgICAgICAgICAgICAgICAgICAgcGFyc2VJbnQoZW50aXR5LnN1YnN0cigyKSwgMTYpIDpcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VJbnQoZW50aXR5LnN1YnN0cigxKSk7XG4gICAgICAgICAgICAgICAgaWYgKCEoaXNOYU4oY29kZSkgfHwgY29kZSA8IC0zMjc2OCB8fCBjb2RlID4gNjU1MzUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNociA9IFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY2hyID0gYWxwaGFJbmRleFtlbnRpdHldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNociB8fCBzO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIEh0bWw0RW50aXRpZXMuZGVjb2RlID0gZnVuY3Rpb24gKHN0cikge1xuICAgICAgICByZXR1cm4gbmV3IEh0bWw0RW50aXRpZXMoKS5kZWNvZGUoc3RyKTtcbiAgICB9O1xuICAgIEh0bWw0RW50aXRpZXMucHJvdG90eXBlLmVuY29kZSA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgICAgICB2YXIgc3RyTGVuZ3RoID0gc3RyLmxlbmd0aDtcbiAgICAgICAgdmFyIHJlc3VsdCA9ICcnO1xuICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgIHdoaWxlIChpIDwgc3RyTGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgYWxwaGEgPSBudW1JbmRleFtzdHIuY2hhckNvZGVBdChpKV07XG4gICAgICAgICAgICByZXN1bHQgKz0gYWxwaGEgPyBcIiZcIiArIGFscGhhICsgXCI7XCIgOiBzdHIuY2hhckF0KGkpO1xuICAgICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICBIdG1sNEVudGl0aWVzLmVuY29kZSA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBIdG1sNEVudGl0aWVzKCkuZW5jb2RlKHN0cik7XG4gICAgfTtcbiAgICBIdG1sNEVudGl0aWVzLnByb3RvdHlwZS5lbmNvZGVOb25VVEYgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgICAgIGlmICghc3RyIHx8ICFzdHIubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHN0ckxlbmd0aCA9IHN0ci5sZW5ndGg7XG4gICAgICAgIHZhciByZXN1bHQgPSAnJztcbiAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICB3aGlsZSAoaSA8IHN0ckxlbmd0aCkge1xuICAgICAgICAgICAgdmFyIGNjID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgICAgICB2YXIgYWxwaGEgPSBudW1JbmRleFtjY107XG4gICAgICAgICAgICBpZiAoYWxwaGEpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gXCImXCIgKyBhbHBoYSArIFwiO1wiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY2MgPCAzMiB8fCBjYyA+IDEyNikge1xuICAgICAgICAgICAgICAgIHJlc3VsdCArPSBcIiYjXCIgKyBjYyArIFwiO1wiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9IHN0ci5jaGFyQXQoaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIEh0bWw0RW50aXRpZXMuZW5jb2RlTm9uVVRGID0gZnVuY3Rpb24gKHN0cikge1xuICAgICAgICByZXR1cm4gbmV3IEh0bWw0RW50aXRpZXMoKS5lbmNvZGVOb25VVEYoc3RyKTtcbiAgICB9O1xuICAgIEh0bWw0RW50aXRpZXMucHJvdG90eXBlLmVuY29kZU5vbkFTQ0lJID0gZnVuY3Rpb24gKHN0cikge1xuICAgICAgICBpZiAoIXN0ciB8fCAhc3RyLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzdHJMZW5ndGggPSBzdHIubGVuZ3RoO1xuICAgICAgICB2YXIgcmVzdWx0ID0gJyc7XG4gICAgICAgIHZhciBpID0gMDtcbiAgICAgICAgd2hpbGUgKGkgPCBzdHJMZW5ndGgpIHtcbiAgICAgICAgICAgIHZhciBjID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgICAgICBpZiAoYyA8PSAyNTUpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gc3RyW2krK107XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXN1bHQgKz0gJyYjJyArIGMgKyAnOyc7XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIEh0bWw0RW50aXRpZXMuZW5jb2RlTm9uQVNDSUkgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgICAgIHJldHVybiBuZXcgSHRtbDRFbnRpdGllcygpLmVuY29kZU5vbkFTQ0lJKHN0cik7XG4gICAgfTtcbiAgICByZXR1cm4gSHRtbDRFbnRpdGllcztcbn0oKSk7XG5leHBvcnRzLkh0bWw0RW50aXRpZXMgPSBIdG1sNEVudGl0aWVzO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgRU5USVRJRVMgPSBbWydBYWN1dGUnLCBbMTkzXV0sIFsnYWFjdXRlJywgWzIyNV1dLCBbJ0FicmV2ZScsIFsyNThdXSwgWydhYnJldmUnLCBbMjU5XV0sIFsnYWMnLCBbODc2Nl1dLCBbJ2FjZCcsIFs4NzY3XV0sIFsnYWNFJywgWzg3NjYsIDgxOV1dLCBbJ0FjaXJjJywgWzE5NF1dLCBbJ2FjaXJjJywgWzIyNl1dLCBbJ2FjdXRlJywgWzE4MF1dLCBbJ0FjeScsIFsxMDQwXV0sIFsnYWN5JywgWzEwNzJdXSwgWydBRWxpZycsIFsxOThdXSwgWydhZWxpZycsIFsyMzBdXSwgWydhZicsIFs4Mjg5XV0sIFsnQWZyJywgWzEyMDA2OF1dLCBbJ2FmcicsIFsxMjAwOTRdXSwgWydBZ3JhdmUnLCBbMTkyXV0sIFsnYWdyYXZlJywgWzIyNF1dLCBbJ2FsZWZzeW0nLCBbODUwMV1dLCBbJ2FsZXBoJywgWzg1MDFdXSwgWydBbHBoYScsIFs5MTNdXSwgWydhbHBoYScsIFs5NDVdXSwgWydBbWFjcicsIFsyNTZdXSwgWydhbWFjcicsIFsyNTddXSwgWydhbWFsZycsIFsxMDgxNV1dLCBbJ2FtcCcsIFszOF1dLCBbJ0FNUCcsIFszOF1dLCBbJ2FuZGFuZCcsIFsxMDgzN11dLCBbJ0FuZCcsIFsxMDgzNV1dLCBbJ2FuZCcsIFs4NzQzXV0sIFsnYW5kZCcsIFsxMDg0NF1dLCBbJ2FuZHNsb3BlJywgWzEwODQwXV0sIFsnYW5kdicsIFsxMDg0Ml1dLCBbJ2FuZycsIFs4NzM2XV0sIFsnYW5nZScsIFsxMDY2MF1dLCBbJ2FuZ2xlJywgWzg3MzZdXSwgWydhbmdtc2RhYScsIFsxMDY2NF1dLCBbJ2FuZ21zZGFiJywgWzEwNjY1XV0sIFsnYW5nbXNkYWMnLCBbMTA2NjZdXSwgWydhbmdtc2RhZCcsIFsxMDY2N11dLCBbJ2FuZ21zZGFlJywgWzEwNjY4XV0sIFsnYW5nbXNkYWYnLCBbMTA2NjldXSwgWydhbmdtc2RhZycsIFsxMDY3MF1dLCBbJ2FuZ21zZGFoJywgWzEwNjcxXV0sIFsnYW5nbXNkJywgWzg3MzddXSwgWydhbmdydCcsIFs4NzM1XV0sIFsnYW5ncnR2YicsIFs4ODk0XV0sIFsnYW5ncnR2YmQnLCBbMTA2NTNdXSwgWydhbmdzcGgnLCBbODczOF1dLCBbJ2FuZ3N0JywgWzE5N11dLCBbJ2FuZ3phcnInLCBbOTA4NF1dLCBbJ0FvZ29uJywgWzI2MF1dLCBbJ2FvZ29uJywgWzI2MV1dLCBbJ0FvcGYnLCBbMTIwMTIwXV0sIFsnYW9wZicsIFsxMjAxNDZdXSwgWydhcGFjaXInLCBbMTA4NjNdXSwgWydhcCcsIFs4Nzc2XV0sIFsnYXBFJywgWzEwODY0XV0sIFsnYXBlJywgWzg3NzhdXSwgWydhcGlkJywgWzg3NzldXSwgWydhcG9zJywgWzM5XV0sIFsnQXBwbHlGdW5jdGlvbicsIFs4Mjg5XV0sIFsnYXBwcm94JywgWzg3NzZdXSwgWydhcHByb3hlcScsIFs4Nzc4XV0sIFsnQXJpbmcnLCBbMTk3XV0sIFsnYXJpbmcnLCBbMjI5XV0sIFsnQXNjcicsIFsxMTk5NjRdXSwgWydhc2NyJywgWzExOTk5MF1dLCBbJ0Fzc2lnbicsIFs4Nzg4XV0sIFsnYXN0JywgWzQyXV0sIFsnYXN5bXAnLCBbODc3Nl1dLCBbJ2FzeW1wZXEnLCBbODc4MV1dLCBbJ0F0aWxkZScsIFsxOTVdXSwgWydhdGlsZGUnLCBbMjI3XV0sIFsnQXVtbCcsIFsxOTZdXSwgWydhdW1sJywgWzIyOF1dLCBbJ2F3Y29uaW50JywgWzg3NTVdXSwgWydhd2ludCcsIFsxMDc2OV1dLCBbJ2JhY2tjb25nJywgWzg3ODBdXSwgWydiYWNrZXBzaWxvbicsIFsxMDE0XV0sIFsnYmFja3ByaW1lJywgWzgyNDVdXSwgWydiYWNrc2ltJywgWzg3NjVdXSwgWydiYWNrc2ltZXEnLCBbODkwOV1dLCBbJ0JhY2tzbGFzaCcsIFs4NzI2XV0sIFsnQmFydicsIFsxMDk4M11dLCBbJ2JhcnZlZScsIFs4ODkzXV0sIFsnYmFyd2VkJywgWzg5NjVdXSwgWydCYXJ3ZWQnLCBbODk2Nl1dLCBbJ2JhcndlZGdlJywgWzg5NjVdXSwgWydiYnJrJywgWzkxNDFdXSwgWydiYnJrdGJyaycsIFs5MTQyXV0sIFsnYmNvbmcnLCBbODc4MF1dLCBbJ0JjeScsIFsxMDQxXV0sIFsnYmN5JywgWzEwNzNdXSwgWydiZHF1bycsIFs4MjIyXV0sIFsnYmVjYXVzJywgWzg3NTddXSwgWydiZWNhdXNlJywgWzg3NTddXSwgWydCZWNhdXNlJywgWzg3NTddXSwgWydiZW1wdHl2JywgWzEwNjcyXV0sIFsnYmVwc2knLCBbMTAxNF1dLCBbJ2Jlcm5vdScsIFs4NDkyXV0sIFsnQmVybm91bGxpcycsIFs4NDkyXV0sIFsnQmV0YScsIFs5MTRdXSwgWydiZXRhJywgWzk0Nl1dLCBbJ2JldGgnLCBbODUwMl1dLCBbJ2JldHdlZW4nLCBbODgxMl1dLCBbJ0JmcicsIFsxMjAwNjldXSwgWydiZnInLCBbMTIwMDk1XV0sIFsnYmlnY2FwJywgWzg4OThdXSwgWydiaWdjaXJjJywgWzk3MTFdXSwgWydiaWdjdXAnLCBbODg5OV1dLCBbJ2JpZ29kb3QnLCBbMTA3NTJdXSwgWydiaWdvcGx1cycsIFsxMDc1M11dLCBbJ2JpZ290aW1lcycsIFsxMDc1NF1dLCBbJ2JpZ3NxY3VwJywgWzEwNzU4XV0sIFsnYmlnc3RhcicsIFs5NzMzXV0sIFsnYmlndHJpYW5nbGVkb3duJywgWzk2NjFdXSwgWydiaWd0cmlhbmdsZXVwJywgWzk2NTFdXSwgWydiaWd1cGx1cycsIFsxMDc1Nl1dLCBbJ2JpZ3ZlZScsIFs4ODk3XV0sIFsnYmlnd2VkZ2UnLCBbODg5Nl1dLCBbJ2JrYXJvdycsIFsxMDUwOV1dLCBbJ2JsYWNrbG96ZW5nZScsIFsxMDczMV1dLCBbJ2JsYWNrc3F1YXJlJywgWzk2NDJdXSwgWydibGFja3RyaWFuZ2xlJywgWzk2NTJdXSwgWydibGFja3RyaWFuZ2xlZG93bicsIFs5NjYyXV0sIFsnYmxhY2t0cmlhbmdsZWxlZnQnLCBbOTY2Nl1dLCBbJ2JsYWNrdHJpYW5nbGVyaWdodCcsIFs5NjU2XV0sIFsnYmxhbmsnLCBbOTI1MV1dLCBbJ2JsazEyJywgWzk2MThdXSwgWydibGsxNCcsIFs5NjE3XV0sIFsnYmxrMzQnLCBbOTYxOV1dLCBbJ2Jsb2NrJywgWzk2MDhdXSwgWydibmUnLCBbNjEsIDg0MjFdXSwgWydibmVxdWl2JywgWzg4MDEsIDg0MjFdXSwgWydiTm90JywgWzEwOTg5XV0sIFsnYm5vdCcsIFs4OTc2XV0sIFsnQm9wZicsIFsxMjAxMjFdXSwgWydib3BmJywgWzEyMDE0N11dLCBbJ2JvdCcsIFs4ODY5XV0sIFsnYm90dG9tJywgWzg4NjldXSwgWydib3d0aWUnLCBbODkwNF1dLCBbJ2JveGJveCcsIFsxMDY5N11dLCBbJ2JveGRsJywgWzk0ODhdXSwgWydib3hkTCcsIFs5NTU3XV0sIFsnYm94RGwnLCBbOTU1OF1dLCBbJ2JveERMJywgWzk1NTldXSwgWydib3hkcicsIFs5NDg0XV0sIFsnYm94ZFInLCBbOTU1NF1dLCBbJ2JveERyJywgWzk1NTVdXSwgWydib3hEUicsIFs5NTU2XV0sIFsnYm94aCcsIFs5NDcyXV0sIFsnYm94SCcsIFs5NTUyXV0sIFsnYm94aGQnLCBbOTUxNl1dLCBbJ2JveEhkJywgWzk1NzJdXSwgWydib3hoRCcsIFs5NTczXV0sIFsnYm94SEQnLCBbOTU3NF1dLCBbJ2JveGh1JywgWzk1MjRdXSwgWydib3hIdScsIFs5NTc1XV0sIFsnYm94aFUnLCBbOTU3Nl1dLCBbJ2JveEhVJywgWzk1NzddXSwgWydib3htaW51cycsIFs4ODYzXV0sIFsnYm94cGx1cycsIFs4ODYyXV0sIFsnYm94dGltZXMnLCBbODg2NF1dLCBbJ2JveHVsJywgWzk0OTZdXSwgWydib3h1TCcsIFs5NTYzXV0sIFsnYm94VWwnLCBbOTU2NF1dLCBbJ2JveFVMJywgWzk1NjVdXSwgWydib3h1cicsIFs5NDkyXV0sIFsnYm94dVInLCBbOTU2MF1dLCBbJ2JveFVyJywgWzk1NjFdXSwgWydib3hVUicsIFs5NTYyXV0sIFsnYm94dicsIFs5NDc0XV0sIFsnYm94VicsIFs5NTUzXV0sIFsnYm94dmgnLCBbOTUzMl1dLCBbJ2JveHZIJywgWzk1NzhdXSwgWydib3hWaCcsIFs5NTc5XV0sIFsnYm94VkgnLCBbOTU4MF1dLCBbJ2JveHZsJywgWzk1MDhdXSwgWydib3h2TCcsIFs5NTY5XV0sIFsnYm94VmwnLCBbOTU3MF1dLCBbJ2JveFZMJywgWzk1NzFdXSwgWydib3h2cicsIFs5NTAwXV0sIFsnYm94dlInLCBbOTU2Nl1dLCBbJ2JveFZyJywgWzk1NjddXSwgWydib3hWUicsIFs5NTY4XV0sIFsnYnByaW1lJywgWzgyNDVdXSwgWydicmV2ZScsIFs3MjhdXSwgWydCcmV2ZScsIFs3MjhdXSwgWydicnZiYXInLCBbMTY2XV0sIFsnYnNjcicsIFsxMTk5OTFdXSwgWydCc2NyJywgWzg0OTJdXSwgWydic2VtaScsIFs4MjcxXV0sIFsnYnNpbScsIFs4NzY1XV0sIFsnYnNpbWUnLCBbODkwOV1dLCBbJ2Jzb2xiJywgWzEwNjkzXV0sIFsnYnNvbCcsIFs5Ml1dLCBbJ2Jzb2xoc3ViJywgWzEwMTg0XV0sIFsnYnVsbCcsIFs4MjI2XV0sIFsnYnVsbGV0JywgWzgyMjZdXSwgWydidW1wJywgWzg3ODJdXSwgWydidW1wRScsIFsxMDkyNl1dLCBbJ2J1bXBlJywgWzg3ODNdXSwgWydCdW1wZXEnLCBbODc4Ml1dLCBbJ2J1bXBlcScsIFs4NzgzXV0sIFsnQ2FjdXRlJywgWzI2Ml1dLCBbJ2NhY3V0ZScsIFsyNjNdXSwgWydjYXBhbmQnLCBbMTA4MjBdXSwgWydjYXBicmN1cCcsIFsxMDgyNV1dLCBbJ2NhcGNhcCcsIFsxMDgyN11dLCBbJ2NhcCcsIFs4NzQ1XV0sIFsnQ2FwJywgWzg5MTRdXSwgWydjYXBjdXAnLCBbMTA4MjNdXSwgWydjYXBkb3QnLCBbMTA4MTZdXSwgWydDYXBpdGFsRGlmZmVyZW50aWFsRCcsIFs4NTE3XV0sIFsnY2FwcycsIFs4NzQ1LCA2NTAyNF1dLCBbJ2NhcmV0JywgWzgyNTddXSwgWydjYXJvbicsIFs3MTFdXSwgWydDYXlsZXlzJywgWzg0OTNdXSwgWydjY2FwcycsIFsxMDgyOV1dLCBbJ0NjYXJvbicsIFsyNjhdXSwgWydjY2Fyb24nLCBbMjY5XV0sIFsnQ2NlZGlsJywgWzE5OV1dLCBbJ2NjZWRpbCcsIFsyMzFdXSwgWydDY2lyYycsIFsyNjRdXSwgWydjY2lyYycsIFsyNjVdXSwgWydDY29uaW50JywgWzg3NTJdXSwgWydjY3VwcycsIFsxMDgyOF1dLCBbJ2NjdXBzc20nLCBbMTA4MzJdXSwgWydDZG90JywgWzI2Nl1dLCBbJ2Nkb3QnLCBbMjY3XV0sIFsnY2VkaWwnLCBbMTg0XV0sIFsnQ2VkaWxsYScsIFsxODRdXSwgWydjZW1wdHl2JywgWzEwNjc0XV0sIFsnY2VudCcsIFsxNjJdXSwgWydjZW50ZXJkb3QnLCBbMTgzXV0sIFsnQ2VudGVyRG90JywgWzE4M11dLCBbJ2NmcicsIFsxMjAwOTZdXSwgWydDZnInLCBbODQ5M11dLCBbJ0NIY3knLCBbMTA2M11dLCBbJ2NoY3knLCBbMTA5NV1dLCBbJ2NoZWNrJywgWzEwMDAzXV0sIFsnY2hlY2ttYXJrJywgWzEwMDAzXV0sIFsnQ2hpJywgWzkzNV1dLCBbJ2NoaScsIFs5NjddXSwgWydjaXJjJywgWzcxMF1dLCBbJ2NpcmNlcScsIFs4NzkxXV0sIFsnY2lyY2xlYXJyb3dsZWZ0JywgWzg2MzRdXSwgWydjaXJjbGVhcnJvd3JpZ2h0JywgWzg2MzVdXSwgWydjaXJjbGVkYXN0JywgWzg4NTldXSwgWydjaXJjbGVkY2lyYycsIFs4ODU4XV0sIFsnY2lyY2xlZGRhc2gnLCBbODg2MV1dLCBbJ0NpcmNsZURvdCcsIFs4ODU3XV0sIFsnY2lyY2xlZFInLCBbMTc0XV0sIFsnY2lyY2xlZFMnLCBbOTQxNl1dLCBbJ0NpcmNsZU1pbnVzJywgWzg4NTRdXSwgWydDaXJjbGVQbHVzJywgWzg4NTNdXSwgWydDaXJjbGVUaW1lcycsIFs4ODU1XV0sIFsnY2lyJywgWzk2NzVdXSwgWydjaXJFJywgWzEwNjkxXV0sIFsnY2lyZScsIFs4NzkxXV0sIFsnY2lyZm5pbnQnLCBbMTA3NjhdXSwgWydjaXJtaWQnLCBbMTA5OTFdXSwgWydjaXJzY2lyJywgWzEwNjkwXV0sIFsnQ2xvY2t3aXNlQ29udG91ckludGVncmFsJywgWzg3NTRdXSwgWydjbHVicycsIFs5ODI3XV0sIFsnY2x1YnN1aXQnLCBbOTgyN11dLCBbJ2NvbG9uJywgWzU4XV0sIFsnQ29sb24nLCBbODc1OV1dLCBbJ0NvbG9uZScsIFsxMDg2OF1dLCBbJ2NvbG9uZScsIFs4Nzg4XV0sIFsnY29sb25lcScsIFs4Nzg4XV0sIFsnY29tbWEnLCBbNDRdXSwgWydjb21tYXQnLCBbNjRdXSwgWydjb21wJywgWzg3MDVdXSwgWydjb21wZm4nLCBbODcyOF1dLCBbJ2NvbXBsZW1lbnQnLCBbODcwNV1dLCBbJ2NvbXBsZXhlcycsIFs4NDUwXV0sIFsnY29uZycsIFs4NzczXV0sIFsnY29uZ2RvdCcsIFsxMDg2MV1dLCBbJ0NvbmdydWVudCcsIFs4ODAxXV0sIFsnY29uaW50JywgWzg3NTBdXSwgWydDb25pbnQnLCBbODc1MV1dLCBbJ0NvbnRvdXJJbnRlZ3JhbCcsIFs4NzUwXV0sIFsnY29wZicsIFsxMjAxNDhdXSwgWydDb3BmJywgWzg0NTBdXSwgWydjb3Byb2QnLCBbODcyMF1dLCBbJ0NvcHJvZHVjdCcsIFs4NzIwXV0sIFsnY29weScsIFsxNjldXSwgWydDT1BZJywgWzE2OV1dLCBbJ2NvcHlzcicsIFs4NDcxXV0sIFsnQ291bnRlckNsb2Nrd2lzZUNvbnRvdXJJbnRlZ3JhbCcsIFs4NzU1XV0sIFsnY3JhcnInLCBbODYyOV1dLCBbJ2Nyb3NzJywgWzEwMDA3XV0sIFsnQ3Jvc3MnLCBbMTA3OTldXSwgWydDc2NyJywgWzExOTk2Nl1dLCBbJ2NzY3InLCBbMTE5OTkyXV0sIFsnY3N1YicsIFsxMDk1OV1dLCBbJ2NzdWJlJywgWzEwOTYxXV0sIFsnY3N1cCcsIFsxMDk2MF1dLCBbJ2NzdXBlJywgWzEwOTYyXV0sIFsnY3Rkb3QnLCBbODk0M11dLCBbJ2N1ZGFycmwnLCBbMTA1NTJdXSwgWydjdWRhcnJyJywgWzEwNTQ5XV0sIFsnY3VlcHInLCBbODkyNl1dLCBbJ2N1ZXNjJywgWzg5MjddXSwgWydjdWxhcnInLCBbODYzMF1dLCBbJ2N1bGFycnAnLCBbMTA1NTddXSwgWydjdXBicmNhcCcsIFsxMDgyNF1dLCBbJ2N1cGNhcCcsIFsxMDgyMl1dLCBbJ0N1cENhcCcsIFs4NzgxXV0sIFsnY3VwJywgWzg3NDZdXSwgWydDdXAnLCBbODkxNV1dLCBbJ2N1cGN1cCcsIFsxMDgyNl1dLCBbJ2N1cGRvdCcsIFs4ODQ1XV0sIFsnY3Vwb3InLCBbMTA4MjFdXSwgWydjdXBzJywgWzg3NDYsIDY1MDI0XV0sIFsnY3VyYXJyJywgWzg2MzFdXSwgWydjdXJhcnJtJywgWzEwNTU2XV0sIFsnY3VybHllcXByZWMnLCBbODkyNl1dLCBbJ2N1cmx5ZXFzdWNjJywgWzg5MjddXSwgWydjdXJseXZlZScsIFs4OTEwXV0sIFsnY3VybHl3ZWRnZScsIFs4OTExXV0sIFsnY3VycmVuJywgWzE2NF1dLCBbJ2N1cnZlYXJyb3dsZWZ0JywgWzg2MzBdXSwgWydjdXJ2ZWFycm93cmlnaHQnLCBbODYzMV1dLCBbJ2N1dmVlJywgWzg5MTBdXSwgWydjdXdlZCcsIFs4OTExXV0sIFsnY3djb25pbnQnLCBbODc1NF1dLCBbJ2N3aW50JywgWzg3NTNdXSwgWydjeWxjdHknLCBbOTAwNV1dLCBbJ2RhZ2dlcicsIFs4MjI0XV0sIFsnRGFnZ2VyJywgWzgyMjVdXSwgWydkYWxldGgnLCBbODUwNF1dLCBbJ2RhcnInLCBbODU5NV1dLCBbJ0RhcnInLCBbODYwOV1dLCBbJ2RBcnInLCBbODY1OV1dLCBbJ2Rhc2gnLCBbODIwOF1dLCBbJ0Rhc2h2JywgWzEwOTgwXV0sIFsnZGFzaHYnLCBbODg2N11dLCBbJ2Ria2Fyb3cnLCBbMTA1MTFdXSwgWydkYmxhYycsIFs3MzNdXSwgWydEY2Fyb24nLCBbMjcwXV0sIFsnZGNhcm9uJywgWzI3MV1dLCBbJ0RjeScsIFsxMDQ0XV0sIFsnZGN5JywgWzEwNzZdXSwgWydkZGFnZ2VyJywgWzgyMjVdXSwgWydkZGFycicsIFs4NjUwXV0sIFsnREQnLCBbODUxN11dLCBbJ2RkJywgWzg1MThdXSwgWydERG90cmFoZCcsIFsxMDUxM11dLCBbJ2Rkb3RzZXEnLCBbMTA4NzFdXSwgWydkZWcnLCBbMTc2XV0sIFsnRGVsJywgWzg3MTFdXSwgWydEZWx0YScsIFs5MTZdXSwgWydkZWx0YScsIFs5NDhdXSwgWydkZW1wdHl2JywgWzEwNjczXV0sIFsnZGZpc2h0JywgWzEwNjIzXV0sIFsnRGZyJywgWzEyMDA3MV1dLCBbJ2RmcicsIFsxMjAwOTddXSwgWydkSGFyJywgWzEwNTk3XV0sIFsnZGhhcmwnLCBbODY0M11dLCBbJ2RoYXJyJywgWzg2NDJdXSwgWydEaWFjcml0aWNhbEFjdXRlJywgWzE4MF1dLCBbJ0RpYWNyaXRpY2FsRG90JywgWzcyOV1dLCBbJ0RpYWNyaXRpY2FsRG91YmxlQWN1dGUnLCBbNzMzXV0sIFsnRGlhY3JpdGljYWxHcmF2ZScsIFs5Nl1dLCBbJ0RpYWNyaXRpY2FsVGlsZGUnLCBbNzMyXV0sIFsnZGlhbScsIFs4OTAwXV0sIFsnZGlhbW9uZCcsIFs4OTAwXV0sIFsnRGlhbW9uZCcsIFs4OTAwXV0sIFsnZGlhbW9uZHN1aXQnLCBbOTgzMF1dLCBbJ2RpYW1zJywgWzk4MzBdXSwgWydkaWUnLCBbMTY4XV0sIFsnRGlmZmVyZW50aWFsRCcsIFs4NTE4XV0sIFsnZGlnYW1tYScsIFs5ODldXSwgWydkaXNpbicsIFs4OTQ2XV0sIFsnZGl2JywgWzI0N11dLCBbJ2RpdmlkZScsIFsyNDddXSwgWydkaXZpZGVvbnRpbWVzJywgWzg5MDNdXSwgWydkaXZvbngnLCBbODkwM11dLCBbJ0RKY3knLCBbMTAyNl1dLCBbJ2RqY3knLCBbMTEwNl1dLCBbJ2RsY29ybicsIFs4OTkwXV0sIFsnZGxjcm9wJywgWzg5NzNdXSwgWydkb2xsYXInLCBbMzZdXSwgWydEb3BmJywgWzEyMDEyM11dLCBbJ2RvcGYnLCBbMTIwMTQ5XV0sIFsnRG90JywgWzE2OF1dLCBbJ2RvdCcsIFs3MjldXSwgWydEb3REb3QnLCBbODQxMl1dLCBbJ2RvdGVxJywgWzg3ODRdXSwgWydkb3RlcWRvdCcsIFs4Nzg1XV0sIFsnRG90RXF1YWwnLCBbODc4NF1dLCBbJ2RvdG1pbnVzJywgWzg3NjBdXSwgWydkb3RwbHVzJywgWzg3MjRdXSwgWydkb3RzcXVhcmUnLCBbODg2NV1dLCBbJ2RvdWJsZWJhcndlZGdlJywgWzg5NjZdXSwgWydEb3VibGVDb250b3VySW50ZWdyYWwnLCBbODc1MV1dLCBbJ0RvdWJsZURvdCcsIFsxNjhdXSwgWydEb3VibGVEb3duQXJyb3cnLCBbODY1OV1dLCBbJ0RvdWJsZUxlZnRBcnJvdycsIFs4NjU2XV0sIFsnRG91YmxlTGVmdFJpZ2h0QXJyb3cnLCBbODY2MF1dLCBbJ0RvdWJsZUxlZnRUZWUnLCBbMTA5ODBdXSwgWydEb3VibGVMb25nTGVmdEFycm93JywgWzEwMjMyXV0sIFsnRG91YmxlTG9uZ0xlZnRSaWdodEFycm93JywgWzEwMjM0XV0sIFsnRG91YmxlTG9uZ1JpZ2h0QXJyb3cnLCBbMTAyMzNdXSwgWydEb3VibGVSaWdodEFycm93JywgWzg2NThdXSwgWydEb3VibGVSaWdodFRlZScsIFs4ODcyXV0sIFsnRG91YmxlVXBBcnJvdycsIFs4NjU3XV0sIFsnRG91YmxlVXBEb3duQXJyb3cnLCBbODY2MV1dLCBbJ0RvdWJsZVZlcnRpY2FsQmFyJywgWzg3NDFdXSwgWydEb3duQXJyb3dCYXInLCBbMTA1MTVdXSwgWydkb3duYXJyb3cnLCBbODU5NV1dLCBbJ0Rvd25BcnJvdycsIFs4NTk1XV0sIFsnRG93bmFycm93JywgWzg2NTldXSwgWydEb3duQXJyb3dVcEFycm93JywgWzg2OTNdXSwgWydEb3duQnJldmUnLCBbNzg1XV0sIFsnZG93bmRvd25hcnJvd3MnLCBbODY1MF1dLCBbJ2Rvd25oYXJwb29ubGVmdCcsIFs4NjQzXV0sIFsnZG93bmhhcnBvb25yaWdodCcsIFs4NjQyXV0sIFsnRG93bkxlZnRSaWdodFZlY3RvcicsIFsxMDU3Nl1dLCBbJ0Rvd25MZWZ0VGVlVmVjdG9yJywgWzEwNTkwXV0sIFsnRG93bkxlZnRWZWN0b3JCYXInLCBbMTA1ODJdXSwgWydEb3duTGVmdFZlY3RvcicsIFs4NjM3XV0sIFsnRG93blJpZ2h0VGVlVmVjdG9yJywgWzEwNTkxXV0sIFsnRG93blJpZ2h0VmVjdG9yQmFyJywgWzEwNTgzXV0sIFsnRG93blJpZ2h0VmVjdG9yJywgWzg2NDFdXSwgWydEb3duVGVlQXJyb3cnLCBbODYxNV1dLCBbJ0Rvd25UZWUnLCBbODg2OF1dLCBbJ2RyYmthcm93JywgWzEwNTEyXV0sIFsnZHJjb3JuJywgWzg5OTFdXSwgWydkcmNyb3AnLCBbODk3Ml1dLCBbJ0RzY3InLCBbMTE5OTY3XV0sIFsnZHNjcicsIFsxMTk5OTNdXSwgWydEU2N5JywgWzEwMjldXSwgWydkc2N5JywgWzExMDldXSwgWydkc29sJywgWzEwNzQyXV0sIFsnRHN0cm9rJywgWzI3Ml1dLCBbJ2RzdHJvaycsIFsyNzNdXSwgWydkdGRvdCcsIFs4OTQ1XV0sIFsnZHRyaScsIFs5NjYzXV0sIFsnZHRyaWYnLCBbOTY2Ml1dLCBbJ2R1YXJyJywgWzg2OTNdXSwgWydkdWhhcicsIFsxMDYwN11dLCBbJ2R3YW5nbGUnLCBbMTA2NjJdXSwgWydEWmN5JywgWzEwMzldXSwgWydkemN5JywgWzExMTldXSwgWydkemlncmFycicsIFsxMDIzOV1dLCBbJ0VhY3V0ZScsIFsyMDFdXSwgWydlYWN1dGUnLCBbMjMzXV0sIFsnZWFzdGVyJywgWzEwODYyXV0sIFsnRWNhcm9uJywgWzI4Ml1dLCBbJ2VjYXJvbicsIFsyODNdXSwgWydFY2lyYycsIFsyMDJdXSwgWydlY2lyYycsIFsyMzRdXSwgWydlY2lyJywgWzg3OTBdXSwgWydlY29sb24nLCBbODc4OV1dLCBbJ0VjeScsIFsxMDY5XV0sIFsnZWN5JywgWzExMDFdXSwgWydlRERvdCcsIFsxMDg3MV1dLCBbJ0Vkb3QnLCBbMjc4XV0sIFsnZWRvdCcsIFsyNzldXSwgWydlRG90JywgWzg3ODVdXSwgWydlZScsIFs4NTE5XV0sIFsnZWZEb3QnLCBbODc4Nl1dLCBbJ0VmcicsIFsxMjAwNzJdXSwgWydlZnInLCBbMTIwMDk4XV0sIFsnZWcnLCBbMTA5MDZdXSwgWydFZ3JhdmUnLCBbMjAwXV0sIFsnZWdyYXZlJywgWzIzMl1dLCBbJ2VncycsIFsxMDkwMl1dLCBbJ2Vnc2RvdCcsIFsxMDkwNF1dLCBbJ2VsJywgWzEwOTA1XV0sIFsnRWxlbWVudCcsIFs4NzEyXV0sIFsnZWxpbnRlcnMnLCBbOTE5MV1dLCBbJ2VsbCcsIFs4NDY3XV0sIFsnZWxzJywgWzEwOTAxXV0sIFsnZWxzZG90JywgWzEwOTAzXV0sIFsnRW1hY3InLCBbMjc0XV0sIFsnZW1hY3InLCBbMjc1XV0sIFsnZW1wdHknLCBbODcwOV1dLCBbJ2VtcHR5c2V0JywgWzg3MDldXSwgWydFbXB0eVNtYWxsU3F1YXJlJywgWzk3MjNdXSwgWydlbXB0eXYnLCBbODcwOV1dLCBbJ0VtcHR5VmVyeVNtYWxsU3F1YXJlJywgWzk2NDNdXSwgWydlbXNwMTMnLCBbODE5Nl1dLCBbJ2Vtc3AxNCcsIFs4MTk3XV0sIFsnZW1zcCcsIFs4MTk1XV0sIFsnRU5HJywgWzMzMF1dLCBbJ2VuZycsIFszMzFdXSwgWydlbnNwJywgWzgxOTRdXSwgWydFb2dvbicsIFsyODBdXSwgWydlb2dvbicsIFsyODFdXSwgWydFb3BmJywgWzEyMDEyNF1dLCBbJ2VvcGYnLCBbMTIwMTUwXV0sIFsnZXBhcicsIFs4OTE3XV0sIFsnZXBhcnNsJywgWzEwNzIzXV0sIFsnZXBsdXMnLCBbMTA4NjVdXSwgWydlcHNpJywgWzk0OV1dLCBbJ0Vwc2lsb24nLCBbOTE3XV0sIFsnZXBzaWxvbicsIFs5NDldXSwgWydlcHNpdicsIFsxMDEzXV0sIFsnZXFjaXJjJywgWzg3OTBdXSwgWydlcWNvbG9uJywgWzg3ODldXSwgWydlcXNpbScsIFs4NzcwXV0sIFsnZXFzbGFudGd0cicsIFsxMDkwMl1dLCBbJ2Vxc2xhbnRsZXNzJywgWzEwOTAxXV0sIFsnRXF1YWwnLCBbMTA4NjldXSwgWydlcXVhbHMnLCBbNjFdXSwgWydFcXVhbFRpbGRlJywgWzg3NzBdXSwgWydlcXVlc3QnLCBbODc5OV1dLCBbJ0VxdWlsaWJyaXVtJywgWzg2NTJdXSwgWydlcXVpdicsIFs4ODAxXV0sIFsnZXF1aXZERCcsIFsxMDg3Ml1dLCBbJ2VxdnBhcnNsJywgWzEwNzI1XV0sIFsnZXJhcnInLCBbMTA2MDldXSwgWydlckRvdCcsIFs4Nzg3XV0sIFsnZXNjcicsIFs4NDk1XV0sIFsnRXNjcicsIFs4NDk2XV0sIFsnZXNkb3QnLCBbODc4NF1dLCBbJ0VzaW0nLCBbMTA4NjddXSwgWydlc2ltJywgWzg3NzBdXSwgWydFdGEnLCBbOTE5XV0sIFsnZXRhJywgWzk1MV1dLCBbJ0VUSCcsIFsyMDhdXSwgWydldGgnLCBbMjQwXV0sIFsnRXVtbCcsIFsyMDNdXSwgWydldW1sJywgWzIzNV1dLCBbJ2V1cm8nLCBbODM2NF1dLCBbJ2V4Y2wnLCBbMzNdXSwgWydleGlzdCcsIFs4NzA3XV0sIFsnRXhpc3RzJywgWzg3MDddXSwgWydleHBlY3RhdGlvbicsIFs4NDk2XV0sIFsnZXhwb25lbnRpYWxlJywgWzg1MTldXSwgWydFeHBvbmVudGlhbEUnLCBbODUxOV1dLCBbJ2ZhbGxpbmdkb3RzZXEnLCBbODc4Nl1dLCBbJ0ZjeScsIFsxMDYwXV0sIFsnZmN5JywgWzEwOTJdXSwgWydmZW1hbGUnLCBbOTc5Ml1dLCBbJ2ZmaWxpZycsIFs2NDI1OV1dLCBbJ2ZmbGlnJywgWzY0MjU2XV0sIFsnZmZsbGlnJywgWzY0MjYwXV0sIFsnRmZyJywgWzEyMDA3M11dLCBbJ2ZmcicsIFsxMjAwOTldXSwgWydmaWxpZycsIFs2NDI1N11dLCBbJ0ZpbGxlZFNtYWxsU3F1YXJlJywgWzk3MjRdXSwgWydGaWxsZWRWZXJ5U21hbGxTcXVhcmUnLCBbOTY0Ml1dLCBbJ2ZqbGlnJywgWzEwMiwgMTA2XV0sIFsnZmxhdCcsIFs5ODM3XV0sIFsnZmxsaWcnLCBbNjQyNThdXSwgWydmbHRucycsIFs5NjQ5XV0sIFsnZm5vZicsIFs0MDJdXSwgWydGb3BmJywgWzEyMDEyNV1dLCBbJ2ZvcGYnLCBbMTIwMTUxXV0sIFsnZm9yYWxsJywgWzg3MDRdXSwgWydGb3JBbGwnLCBbODcwNF1dLCBbJ2ZvcmsnLCBbODkxNl1dLCBbJ2Zvcmt2JywgWzEwOTY5XV0sIFsnRm91cmllcnRyZicsIFs4NDk3XV0sIFsnZnBhcnRpbnQnLCBbMTA3NjVdXSwgWydmcmFjMTInLCBbMTg5XV0sIFsnZnJhYzEzJywgWzg1MzFdXSwgWydmcmFjMTQnLCBbMTg4XV0sIFsnZnJhYzE1JywgWzg1MzNdXSwgWydmcmFjMTYnLCBbODUzN11dLCBbJ2ZyYWMxOCcsIFs4NTM5XV0sIFsnZnJhYzIzJywgWzg1MzJdXSwgWydmcmFjMjUnLCBbODUzNF1dLCBbJ2ZyYWMzNCcsIFsxOTBdXSwgWydmcmFjMzUnLCBbODUzNV1dLCBbJ2ZyYWMzOCcsIFs4NTQwXV0sIFsnZnJhYzQ1JywgWzg1MzZdXSwgWydmcmFjNTYnLCBbODUzOF1dLCBbJ2ZyYWM1OCcsIFs4NTQxXV0sIFsnZnJhYzc4JywgWzg1NDJdXSwgWydmcmFzbCcsIFs4MjYwXV0sIFsnZnJvd24nLCBbODk5NF1dLCBbJ2ZzY3InLCBbMTE5OTk1XV0sIFsnRnNjcicsIFs4NDk3XV0sIFsnZ2FjdXRlJywgWzUwMV1dLCBbJ0dhbW1hJywgWzkxNV1dLCBbJ2dhbW1hJywgWzk0N11dLCBbJ0dhbW1hZCcsIFs5ODhdXSwgWydnYW1tYWQnLCBbOTg5XV0sIFsnZ2FwJywgWzEwODg2XV0sIFsnR2JyZXZlJywgWzI4Nl1dLCBbJ2dicmV2ZScsIFsyODddXSwgWydHY2VkaWwnLCBbMjkwXV0sIFsnR2NpcmMnLCBbMjg0XV0sIFsnZ2NpcmMnLCBbMjg1XV0sIFsnR2N5JywgWzEwNDNdXSwgWydnY3knLCBbMTA3NV1dLCBbJ0dkb3QnLCBbMjg4XV0sIFsnZ2RvdCcsIFsyODldXSwgWydnZScsIFs4ODA1XV0sIFsnZ0UnLCBbODgwN11dLCBbJ2dFbCcsIFsxMDg5Ml1dLCBbJ2dlbCcsIFs4OTIzXV0sIFsnZ2VxJywgWzg4MDVdXSwgWydnZXFxJywgWzg4MDddXSwgWydnZXFzbGFudCcsIFsxMDg3OF1dLCBbJ2dlc2NjJywgWzEwOTIxXV0sIFsnZ2VzJywgWzEwODc4XV0sIFsnZ2VzZG90JywgWzEwODgwXV0sIFsnZ2VzZG90bycsIFsxMDg4Ml1dLCBbJ2dlc2RvdG9sJywgWzEwODg0XV0sIFsnZ2VzbCcsIFs4OTIzLCA2NTAyNF1dLCBbJ2dlc2xlcycsIFsxMDkwMF1dLCBbJ0dmcicsIFsxMjAwNzRdXSwgWydnZnInLCBbMTIwMTAwXV0sIFsnZ2cnLCBbODgxMV1dLCBbJ0dnJywgWzg5MjFdXSwgWydnZ2cnLCBbODkyMV1dLCBbJ2dpbWVsJywgWzg1MDNdXSwgWydHSmN5JywgWzEwMjddXSwgWydnamN5JywgWzExMDddXSwgWydnbGEnLCBbMTA5MTddXSwgWydnbCcsIFs4ODIzXV0sIFsnZ2xFJywgWzEwODk4XV0sIFsnZ2xqJywgWzEwOTE2XV0sIFsnZ25hcCcsIFsxMDg5MF1dLCBbJ2duYXBwcm94JywgWzEwODkwXV0sIFsnZ25lJywgWzEwODg4XV0sIFsnZ25FJywgWzg4MDldXSwgWydnbmVxJywgWzEwODg4XV0sIFsnZ25lcXEnLCBbODgwOV1dLCBbJ2duc2ltJywgWzg5MzVdXSwgWydHb3BmJywgWzEyMDEyNl1dLCBbJ2dvcGYnLCBbMTIwMTUyXV0sIFsnZ3JhdmUnLCBbOTZdXSwgWydHcmVhdGVyRXF1YWwnLCBbODgwNV1dLCBbJ0dyZWF0ZXJFcXVhbExlc3MnLCBbODkyM11dLCBbJ0dyZWF0ZXJGdWxsRXF1YWwnLCBbODgwN11dLCBbJ0dyZWF0ZXJHcmVhdGVyJywgWzEwOTE0XV0sIFsnR3JlYXRlckxlc3MnLCBbODgyM11dLCBbJ0dyZWF0ZXJTbGFudEVxdWFsJywgWzEwODc4XV0sIFsnR3JlYXRlclRpbGRlJywgWzg4MTldXSwgWydHc2NyJywgWzExOTk3MF1dLCBbJ2dzY3InLCBbODQ1OF1dLCBbJ2dzaW0nLCBbODgxOV1dLCBbJ2dzaW1lJywgWzEwODk0XV0sIFsnZ3NpbWwnLCBbMTA4OTZdXSwgWydndGNjJywgWzEwOTE5XV0sIFsnZ3RjaXInLCBbMTA4NzRdXSwgWydndCcsIFs2Ml1dLCBbJ0dUJywgWzYyXV0sIFsnR3QnLCBbODgxMV1dLCBbJ2d0ZG90JywgWzg5MTldXSwgWydndGxQYXInLCBbMTA2NDVdXSwgWydndHF1ZXN0JywgWzEwODc2XV0sIFsnZ3RyYXBwcm94JywgWzEwODg2XV0sIFsnZ3RyYXJyJywgWzEwNjE2XV0sIFsnZ3RyZG90JywgWzg5MTldXSwgWydndHJlcWxlc3MnLCBbODkyM11dLCBbJ2d0cmVxcWxlc3MnLCBbMTA4OTJdXSwgWydndHJsZXNzJywgWzg4MjNdXSwgWydndHJzaW0nLCBbODgxOV1dLCBbJ2d2ZXJ0bmVxcScsIFs4ODA5LCA2NTAyNF1dLCBbJ2d2bkUnLCBbODgwOSwgNjUwMjRdXSwgWydIYWNlaycsIFs3MTFdXSwgWydoYWlyc3AnLCBbODIwMl1dLCBbJ2hhbGYnLCBbMTg5XV0sIFsnaGFtaWx0JywgWzg0NTldXSwgWydIQVJEY3knLCBbMTA2Nl1dLCBbJ2hhcmRjeScsIFsxMDk4XV0sIFsnaGFycmNpcicsIFsxMDU2OF1dLCBbJ2hhcnInLCBbODU5Nl1dLCBbJ2hBcnInLCBbODY2MF1dLCBbJ2hhcnJ3JywgWzg2MjFdXSwgWydIYXQnLCBbOTRdXSwgWydoYmFyJywgWzg0NjNdXSwgWydIY2lyYycsIFsyOTJdXSwgWydoY2lyYycsIFsyOTNdXSwgWydoZWFydHMnLCBbOTgyOV1dLCBbJ2hlYXJ0c3VpdCcsIFs5ODI5XV0sIFsnaGVsbGlwJywgWzgyMzBdXSwgWydoZXJjb24nLCBbODg4OV1dLCBbJ2hmcicsIFsxMjAxMDFdXSwgWydIZnInLCBbODQ2MF1dLCBbJ0hpbGJlcnRTcGFjZScsIFs4NDU5XV0sIFsnaGtzZWFyb3cnLCBbMTA1MzNdXSwgWydoa3N3YXJvdycsIFsxMDUzNF1dLCBbJ2hvYXJyJywgWzg3MDNdXSwgWydob210aHQnLCBbODc2M11dLCBbJ2hvb2tsZWZ0YXJyb3cnLCBbODYxN11dLCBbJ2hvb2tyaWdodGFycm93JywgWzg2MThdXSwgWydob3BmJywgWzEyMDE1M11dLCBbJ0hvcGYnLCBbODQ2MV1dLCBbJ2hvcmJhcicsIFs4MjEzXV0sIFsnSG9yaXpvbnRhbExpbmUnLCBbOTQ3Ml1dLCBbJ2hzY3InLCBbMTE5OTk3XV0sIFsnSHNjcicsIFs4NDU5XV0sIFsnaHNsYXNoJywgWzg0NjNdXSwgWydIc3Ryb2snLCBbMjk0XV0sIFsnaHN0cm9rJywgWzI5NV1dLCBbJ0h1bXBEb3duSHVtcCcsIFs4NzgyXV0sIFsnSHVtcEVxdWFsJywgWzg3ODNdXSwgWydoeWJ1bGwnLCBbODI1OV1dLCBbJ2h5cGhlbicsIFs4MjA4XV0sIFsnSWFjdXRlJywgWzIwNV1dLCBbJ2lhY3V0ZScsIFsyMzddXSwgWydpYycsIFs4MjkxXV0sIFsnSWNpcmMnLCBbMjA2XV0sIFsnaWNpcmMnLCBbMjM4XV0sIFsnSWN5JywgWzEwNDhdXSwgWydpY3knLCBbMTA4MF1dLCBbJ0lkb3QnLCBbMzA0XV0sIFsnSUVjeScsIFsxMDQ1XV0sIFsnaWVjeScsIFsxMDc3XV0sIFsnaWV4Y2wnLCBbMTYxXV0sIFsnaWZmJywgWzg2NjBdXSwgWydpZnInLCBbMTIwMTAyXV0sIFsnSWZyJywgWzg0NjVdXSwgWydJZ3JhdmUnLCBbMjA0XV0sIFsnaWdyYXZlJywgWzIzNl1dLCBbJ2lpJywgWzg1MjBdXSwgWydpaWlpbnQnLCBbMTA3NjRdXSwgWydpaWludCcsIFs4NzQ5XV0sIFsnaWluZmluJywgWzEwNzE2XV0sIFsnaWlvdGEnLCBbODQ4OV1dLCBbJ0lKbGlnJywgWzMwNl1dLCBbJ2lqbGlnJywgWzMwN11dLCBbJ0ltYWNyJywgWzI5OF1dLCBbJ2ltYWNyJywgWzI5OV1dLCBbJ2ltYWdlJywgWzg0NjVdXSwgWydJbWFnaW5hcnlJJywgWzg1MjBdXSwgWydpbWFnbGluZScsIFs4NDY0XV0sIFsnaW1hZ3BhcnQnLCBbODQ2NV1dLCBbJ2ltYXRoJywgWzMwNV1dLCBbJ0ltJywgWzg0NjVdXSwgWydpbW9mJywgWzg4ODddXSwgWydpbXBlZCcsIFs0MzddXSwgWydJbXBsaWVzJywgWzg2NThdXSwgWydpbmNhcmUnLCBbODQ1M11dLCBbJ2luJywgWzg3MTJdXSwgWydpbmZpbicsIFs4NzM0XV0sIFsnaW5maW50aWUnLCBbMTA3MTddXSwgWydpbm9kb3QnLCBbMzA1XV0sIFsnaW50Y2FsJywgWzg4OTBdXSwgWydpbnQnLCBbODc0N11dLCBbJ0ludCcsIFs4NzQ4XV0sIFsnaW50ZWdlcnMnLCBbODQ4NF1dLCBbJ0ludGVncmFsJywgWzg3NDddXSwgWydpbnRlcmNhbCcsIFs4ODkwXV0sIFsnSW50ZXJzZWN0aW9uJywgWzg4OThdXSwgWydpbnRsYXJoaycsIFsxMDc3NV1dLCBbJ2ludHByb2QnLCBbMTA4MTJdXSwgWydJbnZpc2libGVDb21tYScsIFs4MjkxXV0sIFsnSW52aXNpYmxlVGltZXMnLCBbODI5MF1dLCBbJ0lPY3knLCBbMTAyNV1dLCBbJ2lvY3knLCBbMTEwNV1dLCBbJ0lvZ29uJywgWzMwMl1dLCBbJ2lvZ29uJywgWzMwM11dLCBbJ0lvcGYnLCBbMTIwMTI4XV0sIFsnaW9wZicsIFsxMjAxNTRdXSwgWydJb3RhJywgWzkyMV1dLCBbJ2lvdGEnLCBbOTUzXV0sIFsnaXByb2QnLCBbMTA4MTJdXSwgWydpcXVlc3QnLCBbMTkxXV0sIFsnaXNjcicsIFsxMTk5OThdXSwgWydJc2NyJywgWzg0NjRdXSwgWydpc2luJywgWzg3MTJdXSwgWydpc2luZG90JywgWzg5NDldXSwgWydpc2luRScsIFs4OTUzXV0sIFsnaXNpbnMnLCBbODk0OF1dLCBbJ2lzaW5zdicsIFs4OTQ3XV0sIFsnaXNpbnYnLCBbODcxMl1dLCBbJ2l0JywgWzgyOTBdXSwgWydJdGlsZGUnLCBbMjk2XV0sIFsnaXRpbGRlJywgWzI5N11dLCBbJ0l1a2N5JywgWzEwMzBdXSwgWydpdWtjeScsIFsxMTEwXV0sIFsnSXVtbCcsIFsyMDddXSwgWydpdW1sJywgWzIzOV1dLCBbJ0pjaXJjJywgWzMwOF1dLCBbJ2pjaXJjJywgWzMwOV1dLCBbJ0pjeScsIFsxMDQ5XV0sIFsnamN5JywgWzEwODFdXSwgWydKZnInLCBbMTIwMDc3XV0sIFsnamZyJywgWzEyMDEwM11dLCBbJ2ptYXRoJywgWzU2N11dLCBbJ0pvcGYnLCBbMTIwMTI5XV0sIFsnam9wZicsIFsxMjAxNTVdXSwgWydKc2NyJywgWzExOTk3M11dLCBbJ2pzY3InLCBbMTE5OTk5XV0sIFsnSnNlcmN5JywgWzEwMzJdXSwgWydqc2VyY3knLCBbMTExMl1dLCBbJ0p1a2N5JywgWzEwMjhdXSwgWydqdWtjeScsIFsxMTA4XV0sIFsnS2FwcGEnLCBbOTIyXV0sIFsna2FwcGEnLCBbOTU0XV0sIFsna2FwcGF2JywgWzEwMDhdXSwgWydLY2VkaWwnLCBbMzEwXV0sIFsna2NlZGlsJywgWzMxMV1dLCBbJ0tjeScsIFsxMDUwXV0sIFsna2N5JywgWzEwODJdXSwgWydLZnInLCBbMTIwMDc4XV0sIFsna2ZyJywgWzEyMDEwNF1dLCBbJ2tncmVlbicsIFszMTJdXSwgWydLSGN5JywgWzEwNjFdXSwgWydraGN5JywgWzEwOTNdXSwgWydLSmN5JywgWzEwMzZdXSwgWydramN5JywgWzExMTZdXSwgWydLb3BmJywgWzEyMDEzMF1dLCBbJ2tvcGYnLCBbMTIwMTU2XV0sIFsnS3NjcicsIFsxMTk5NzRdXSwgWydrc2NyJywgWzEyMDAwMF1dLCBbJ2xBYXJyJywgWzg2NjZdXSwgWydMYWN1dGUnLCBbMzEzXV0sIFsnbGFjdXRlJywgWzMxNF1dLCBbJ2xhZW1wdHl2JywgWzEwNjc2XV0sIFsnbGFncmFuJywgWzg0NjZdXSwgWydMYW1iZGEnLCBbOTIzXV0sIFsnbGFtYmRhJywgWzk1NV1dLCBbJ2xhbmcnLCBbMTAyMTZdXSwgWydMYW5nJywgWzEwMjE4XV0sIFsnbGFuZ2QnLCBbMTA2NDFdXSwgWydsYW5nbGUnLCBbMTAyMTZdXSwgWydsYXAnLCBbMTA4ODVdXSwgWydMYXBsYWNldHJmJywgWzg0NjZdXSwgWydsYXF1bycsIFsxNzFdXSwgWydsYXJyYicsIFs4Njc2XV0sIFsnbGFycmJmcycsIFsxMDUyN11dLCBbJ2xhcnInLCBbODU5Ml1dLCBbJ0xhcnInLCBbODYwNl1dLCBbJ2xBcnInLCBbODY1Nl1dLCBbJ2xhcnJmcycsIFsxMDUyNV1dLCBbJ2xhcnJoaycsIFs4NjE3XV0sIFsnbGFycmxwJywgWzg2MTldXSwgWydsYXJycGwnLCBbMTA1NTNdXSwgWydsYXJyc2ltJywgWzEwNjExXV0sIFsnbGFycnRsJywgWzg2MTBdXSwgWydsYXRhaWwnLCBbMTA1MjFdXSwgWydsQXRhaWwnLCBbMTA1MjNdXSwgWydsYXQnLCBbMTA5MjNdXSwgWydsYXRlJywgWzEwOTI1XV0sIFsnbGF0ZXMnLCBbMTA5MjUsIDY1MDI0XV0sIFsnbGJhcnInLCBbMTA1MDhdXSwgWydsQmFycicsIFsxMDUxMF1dLCBbJ2xiYnJrJywgWzEwMDk4XV0sIFsnbGJyYWNlJywgWzEyM11dLCBbJ2xicmFjaycsIFs5MV1dLCBbJ2xicmtlJywgWzEwNjM1XV0sIFsnbGJya3NsZCcsIFsxMDYzOV1dLCBbJ2xicmtzbHUnLCBbMTA2MzddXSwgWydMY2Fyb24nLCBbMzE3XV0sIFsnbGNhcm9uJywgWzMxOF1dLCBbJ0xjZWRpbCcsIFszMTVdXSwgWydsY2VkaWwnLCBbMzE2XV0sIFsnbGNlaWwnLCBbODk2OF1dLCBbJ2xjdWInLCBbMTIzXV0sIFsnTGN5JywgWzEwNTFdXSwgWydsY3knLCBbMTA4M11dLCBbJ2xkY2EnLCBbMTA1NTBdXSwgWydsZHF1bycsIFs4MjIwXV0sIFsnbGRxdW9yJywgWzgyMjJdXSwgWydsZHJkaGFyJywgWzEwNTk5XV0sIFsnbGRydXNoYXInLCBbMTA1NzFdXSwgWydsZHNoJywgWzg2MjZdXSwgWydsZScsIFs4ODA0XV0sIFsnbEUnLCBbODgwNl1dLCBbJ0xlZnRBbmdsZUJyYWNrZXQnLCBbMTAyMTZdXSwgWydMZWZ0QXJyb3dCYXInLCBbODY3Nl1dLCBbJ2xlZnRhcnJvdycsIFs4NTkyXV0sIFsnTGVmdEFycm93JywgWzg1OTJdXSwgWydMZWZ0YXJyb3cnLCBbODY1Nl1dLCBbJ0xlZnRBcnJvd1JpZ2h0QXJyb3cnLCBbODY0Nl1dLCBbJ2xlZnRhcnJvd3RhaWwnLCBbODYxMF1dLCBbJ0xlZnRDZWlsaW5nJywgWzg5NjhdXSwgWydMZWZ0RG91YmxlQnJhY2tldCcsIFsxMDIxNF1dLCBbJ0xlZnREb3duVGVlVmVjdG9yJywgWzEwNTkzXV0sIFsnTGVmdERvd25WZWN0b3JCYXInLCBbMTA1ODVdXSwgWydMZWZ0RG93blZlY3RvcicsIFs4NjQzXV0sIFsnTGVmdEZsb29yJywgWzg5NzBdXSwgWydsZWZ0aGFycG9vbmRvd24nLCBbODYzN11dLCBbJ2xlZnRoYXJwb29udXAnLCBbODYzNl1dLCBbJ2xlZnRsZWZ0YXJyb3dzJywgWzg2NDddXSwgWydsZWZ0cmlnaHRhcnJvdycsIFs4NTk2XV0sIFsnTGVmdFJpZ2h0QXJyb3cnLCBbODU5Nl1dLCBbJ0xlZnRyaWdodGFycm93JywgWzg2NjBdXSwgWydsZWZ0cmlnaHRhcnJvd3MnLCBbODY0Nl1dLCBbJ2xlZnRyaWdodGhhcnBvb25zJywgWzg2NTFdXSwgWydsZWZ0cmlnaHRzcXVpZ2Fycm93JywgWzg2MjFdXSwgWydMZWZ0UmlnaHRWZWN0b3InLCBbMTA1NzRdXSwgWydMZWZ0VGVlQXJyb3cnLCBbODYxMl1dLCBbJ0xlZnRUZWUnLCBbODg2N11dLCBbJ0xlZnRUZWVWZWN0b3InLCBbMTA1ODZdXSwgWydsZWZ0dGhyZWV0aW1lcycsIFs4OTA3XV0sIFsnTGVmdFRyaWFuZ2xlQmFyJywgWzEwNzAzXV0sIFsnTGVmdFRyaWFuZ2xlJywgWzg4ODJdXSwgWydMZWZ0VHJpYW5nbGVFcXVhbCcsIFs4ODg0XV0sIFsnTGVmdFVwRG93blZlY3RvcicsIFsxMDU3N11dLCBbJ0xlZnRVcFRlZVZlY3RvcicsIFsxMDU5Ml1dLCBbJ0xlZnRVcFZlY3RvckJhcicsIFsxMDU4NF1dLCBbJ0xlZnRVcFZlY3RvcicsIFs4NjM5XV0sIFsnTGVmdFZlY3RvckJhcicsIFsxMDU3OF1dLCBbJ0xlZnRWZWN0b3InLCBbODYzNl1dLCBbJ2xFZycsIFsxMDg5MV1dLCBbJ2xlZycsIFs4OTIyXV0sIFsnbGVxJywgWzg4MDRdXSwgWydsZXFxJywgWzg4MDZdXSwgWydsZXFzbGFudCcsIFsxMDg3N11dLCBbJ2xlc2NjJywgWzEwOTIwXV0sIFsnbGVzJywgWzEwODc3XV0sIFsnbGVzZG90JywgWzEwODc5XV0sIFsnbGVzZG90bycsIFsxMDg4MV1dLCBbJ2xlc2RvdG9yJywgWzEwODgzXV0sIFsnbGVzZycsIFs4OTIyLCA2NTAyNF1dLCBbJ2xlc2dlcycsIFsxMDg5OV1dLCBbJ2xlc3NhcHByb3gnLCBbMTA4ODVdXSwgWydsZXNzZG90JywgWzg5MThdXSwgWydsZXNzZXFndHInLCBbODkyMl1dLCBbJ2xlc3NlcXFndHInLCBbMTA4OTFdXSwgWydMZXNzRXF1YWxHcmVhdGVyJywgWzg5MjJdXSwgWydMZXNzRnVsbEVxdWFsJywgWzg4MDZdXSwgWydMZXNzR3JlYXRlcicsIFs4ODIyXV0sIFsnbGVzc2d0cicsIFs4ODIyXV0sIFsnTGVzc0xlc3MnLCBbMTA5MTNdXSwgWydsZXNzc2ltJywgWzg4MThdXSwgWydMZXNzU2xhbnRFcXVhbCcsIFsxMDg3N11dLCBbJ0xlc3NUaWxkZScsIFs4ODE4XV0sIFsnbGZpc2h0JywgWzEwNjIwXV0sIFsnbGZsb29yJywgWzg5NzBdXSwgWydMZnInLCBbMTIwMDc5XV0sIFsnbGZyJywgWzEyMDEwNV1dLCBbJ2xnJywgWzg4MjJdXSwgWydsZ0UnLCBbMTA4OTddXSwgWydsSGFyJywgWzEwNTk0XV0sIFsnbGhhcmQnLCBbODYzN11dLCBbJ2xoYXJ1JywgWzg2MzZdXSwgWydsaGFydWwnLCBbMTA2MDJdXSwgWydsaGJsaycsIFs5NjA0XV0sIFsnTEpjeScsIFsxMDMzXV0sIFsnbGpjeScsIFsxMTEzXV0sIFsnbGxhcnInLCBbODY0N11dLCBbJ2xsJywgWzg4MTBdXSwgWydMbCcsIFs4OTIwXV0sIFsnbGxjb3JuZXInLCBbODk5MF1dLCBbJ0xsZWZ0YXJyb3cnLCBbODY2Nl1dLCBbJ2xsaGFyZCcsIFsxMDYwM11dLCBbJ2xsdHJpJywgWzk3MjJdXSwgWydMbWlkb3QnLCBbMzE5XV0sIFsnbG1pZG90JywgWzMyMF1dLCBbJ2xtb3VzdGFjaGUnLCBbOTEzNl1dLCBbJ2xtb3VzdCcsIFs5MTM2XV0sIFsnbG5hcCcsIFsxMDg4OV1dLCBbJ2xuYXBwcm94JywgWzEwODg5XV0sIFsnbG5lJywgWzEwODg3XV0sIFsnbG5FJywgWzg4MDhdXSwgWydsbmVxJywgWzEwODg3XV0sIFsnbG5lcXEnLCBbODgwOF1dLCBbJ2xuc2ltJywgWzg5MzRdXSwgWydsb2FuZycsIFsxMDIyMF1dLCBbJ2xvYXJyJywgWzg3MDFdXSwgWydsb2JyaycsIFsxMDIxNF1dLCBbJ2xvbmdsZWZ0YXJyb3cnLCBbMTAyMjldXSwgWydMb25nTGVmdEFycm93JywgWzEwMjI5XV0sIFsnTG9uZ2xlZnRhcnJvdycsIFsxMDIzMl1dLCBbJ2xvbmdsZWZ0cmlnaHRhcnJvdycsIFsxMDIzMV1dLCBbJ0xvbmdMZWZ0UmlnaHRBcnJvdycsIFsxMDIzMV1dLCBbJ0xvbmdsZWZ0cmlnaHRhcnJvdycsIFsxMDIzNF1dLCBbJ2xvbmdtYXBzdG8nLCBbMTAyMzZdXSwgWydsb25ncmlnaHRhcnJvdycsIFsxMDIzMF1dLCBbJ0xvbmdSaWdodEFycm93JywgWzEwMjMwXV0sIFsnTG9uZ3JpZ2h0YXJyb3cnLCBbMTAyMzNdXSwgWydsb29wYXJyb3dsZWZ0JywgWzg2MTldXSwgWydsb29wYXJyb3dyaWdodCcsIFs4NjIwXV0sIFsnbG9wYXInLCBbMTA2MjldXSwgWydMb3BmJywgWzEyMDEzMV1dLCBbJ2xvcGYnLCBbMTIwMTU3XV0sIFsnbG9wbHVzJywgWzEwNzk3XV0sIFsnbG90aW1lcycsIFsxMDgwNF1dLCBbJ2xvd2FzdCcsIFs4NzI3XV0sIFsnbG93YmFyJywgWzk1XV0sIFsnTG93ZXJMZWZ0QXJyb3cnLCBbODYwMV1dLCBbJ0xvd2VyUmlnaHRBcnJvdycsIFs4NjAwXV0sIFsnbG96JywgWzk2NzRdXSwgWydsb3plbmdlJywgWzk2NzRdXSwgWydsb3pmJywgWzEwNzMxXV0sIFsnbHBhcicsIFs0MF1dLCBbJ2xwYXJsdCcsIFsxMDY0M11dLCBbJ2xyYXJyJywgWzg2NDZdXSwgWydscmNvcm5lcicsIFs4OTkxXV0sIFsnbHJoYXInLCBbODY1MV1dLCBbJ2xyaGFyZCcsIFsxMDYwNV1dLCBbJ2xybScsIFs4MjA2XV0sIFsnbHJ0cmknLCBbODg5NV1dLCBbJ2xzYXF1bycsIFs4MjQ5XV0sIFsnbHNjcicsIFsxMjAwMDFdXSwgWydMc2NyJywgWzg0NjZdXSwgWydsc2gnLCBbODYyNF1dLCBbJ0xzaCcsIFs4NjI0XV0sIFsnbHNpbScsIFs4ODE4XV0sIFsnbHNpbWUnLCBbMTA4OTNdXSwgWydsc2ltZycsIFsxMDg5NV1dLCBbJ2xzcWInLCBbOTFdXSwgWydsc3F1bycsIFs4MjE2XV0sIFsnbHNxdW9yJywgWzgyMThdXSwgWydMc3Ryb2snLCBbMzIxXV0sIFsnbHN0cm9rJywgWzMyMl1dLCBbJ2x0Y2MnLCBbMTA5MThdXSwgWydsdGNpcicsIFsxMDg3M11dLCBbJ2x0JywgWzYwXV0sIFsnTFQnLCBbNjBdXSwgWydMdCcsIFs4ODEwXV0sIFsnbHRkb3QnLCBbODkxOF1dLCBbJ2x0aHJlZScsIFs4OTA3XV0sIFsnbHRpbWVzJywgWzg5MDVdXSwgWydsdGxhcnInLCBbMTA2MTRdXSwgWydsdHF1ZXN0JywgWzEwODc1XV0sIFsnbHRyaScsIFs5NjY3XV0sIFsnbHRyaWUnLCBbODg4NF1dLCBbJ2x0cmlmJywgWzk2NjZdXSwgWydsdHJQYXInLCBbMTA2NDZdXSwgWydsdXJkc2hhcicsIFsxMDU3MF1dLCBbJ2x1cnVoYXInLCBbMTA1OThdXSwgWydsdmVydG5lcXEnLCBbODgwOCwgNjUwMjRdXSwgWydsdm5FJywgWzg4MDgsIDY1MDI0XV0sIFsnbWFjcicsIFsxNzVdXSwgWydtYWxlJywgWzk3OTRdXSwgWydtYWx0JywgWzEwMDE2XV0sIFsnbWFsdGVzZScsIFsxMDAxNl1dLCBbJ01hcCcsIFsxMDUwMV1dLCBbJ21hcCcsIFs4NjE0XV0sIFsnbWFwc3RvJywgWzg2MTRdXSwgWydtYXBzdG9kb3duJywgWzg2MTVdXSwgWydtYXBzdG9sZWZ0JywgWzg2MTJdXSwgWydtYXBzdG91cCcsIFs4NjEzXV0sIFsnbWFya2VyJywgWzk2NDZdXSwgWydtY29tbWEnLCBbMTA3OTNdXSwgWydNY3knLCBbMTA1Ml1dLCBbJ21jeScsIFsxMDg0XV0sIFsnbWRhc2gnLCBbODIxMl1dLCBbJ21ERG90JywgWzg3NjJdXSwgWydtZWFzdXJlZGFuZ2xlJywgWzg3MzddXSwgWydNZWRpdW1TcGFjZScsIFs4Mjg3XV0sIFsnTWVsbGludHJmJywgWzg0OTldXSwgWydNZnInLCBbMTIwMDgwXV0sIFsnbWZyJywgWzEyMDEwNl1dLCBbJ21obycsIFs4NDg3XV0sIFsnbWljcm8nLCBbMTgxXV0sIFsnbWlkYXN0JywgWzQyXV0sIFsnbWlkY2lyJywgWzEwOTkyXV0sIFsnbWlkJywgWzg3MzldXSwgWydtaWRkb3QnLCBbMTgzXV0sIFsnbWludXNiJywgWzg4NjNdXSwgWydtaW51cycsIFs4NzIyXV0sIFsnbWludXNkJywgWzg3NjBdXSwgWydtaW51c2R1JywgWzEwNzk0XV0sIFsnTWludXNQbHVzJywgWzg3MjNdXSwgWydtbGNwJywgWzEwOTcxXV0sIFsnbWxkcicsIFs4MjMwXV0sIFsnbW5wbHVzJywgWzg3MjNdXSwgWydtb2RlbHMnLCBbODg3MV1dLCBbJ01vcGYnLCBbMTIwMTMyXV0sIFsnbW9wZicsIFsxMjAxNThdXSwgWydtcCcsIFs4NzIzXV0sIFsnbXNjcicsIFsxMjAwMDJdXSwgWydNc2NyJywgWzg0OTldXSwgWydtc3Rwb3MnLCBbODc2Nl1dLCBbJ011JywgWzkyNF1dLCBbJ211JywgWzk1Nl1dLCBbJ211bHRpbWFwJywgWzg4ODhdXSwgWydtdW1hcCcsIFs4ODg4XV0sIFsnbmFibGEnLCBbODcxMV1dLCBbJ05hY3V0ZScsIFszMjNdXSwgWyduYWN1dGUnLCBbMzI0XV0sIFsnbmFuZycsIFs4NzM2LCA4NDAyXV0sIFsnbmFwJywgWzg3NzddXSwgWyduYXBFJywgWzEwODY0LCA4MjRdXSwgWyduYXBpZCcsIFs4Nzc5LCA4MjRdXSwgWyduYXBvcycsIFszMjldXSwgWyduYXBwcm94JywgWzg3NzddXSwgWyduYXR1cmFsJywgWzk4MzhdXSwgWyduYXR1cmFscycsIFs4NDY5XV0sIFsnbmF0dXInLCBbOTgzOF1dLCBbJ25ic3AnLCBbMTYwXV0sIFsnbmJ1bXAnLCBbODc4MiwgODI0XV0sIFsnbmJ1bXBlJywgWzg3ODMsIDgyNF1dLCBbJ25jYXAnLCBbMTA4MTldXSwgWydOY2Fyb24nLCBbMzI3XV0sIFsnbmNhcm9uJywgWzMyOF1dLCBbJ05jZWRpbCcsIFszMjVdXSwgWyduY2VkaWwnLCBbMzI2XV0sIFsnbmNvbmcnLCBbODc3NV1dLCBbJ25jb25nZG90JywgWzEwODYxLCA4MjRdXSwgWyduY3VwJywgWzEwODE4XV0sIFsnTmN5JywgWzEwNTNdXSwgWyduY3knLCBbMTA4NV1dLCBbJ25kYXNoJywgWzgyMTFdXSwgWyduZWFyaGsnLCBbMTA1MzJdXSwgWyduZWFycicsIFs4NTk5XV0sIFsnbmVBcnInLCBbODY2M11dLCBbJ25lYXJyb3cnLCBbODU5OV1dLCBbJ25lJywgWzg4MDBdXSwgWyduZWRvdCcsIFs4Nzg0LCA4MjRdXSwgWydOZWdhdGl2ZU1lZGl1bVNwYWNlJywgWzgyMDNdXSwgWydOZWdhdGl2ZVRoaWNrU3BhY2UnLCBbODIwM11dLCBbJ05lZ2F0aXZlVGhpblNwYWNlJywgWzgyMDNdXSwgWydOZWdhdGl2ZVZlcnlUaGluU3BhY2UnLCBbODIwM11dLCBbJ25lcXVpdicsIFs4ODAyXV0sIFsnbmVzZWFyJywgWzEwNTM2XV0sIFsnbmVzaW0nLCBbODc3MCwgODI0XV0sIFsnTmVzdGVkR3JlYXRlckdyZWF0ZXInLCBbODgxMV1dLCBbJ05lc3RlZExlc3NMZXNzJywgWzg4MTBdXSwgWyduZXhpc3QnLCBbODcwOF1dLCBbJ25leGlzdHMnLCBbODcwOF1dLCBbJ05mcicsIFsxMjAwODFdXSwgWyduZnInLCBbMTIwMTA3XV0sIFsnbmdFJywgWzg4MDcsIDgyNF1dLCBbJ25nZScsIFs4ODE3XV0sIFsnbmdlcScsIFs4ODE3XV0sIFsnbmdlcXEnLCBbODgwNywgODI0XV0sIFsnbmdlcXNsYW50JywgWzEwODc4LCA4MjRdXSwgWyduZ2VzJywgWzEwODc4LCA4MjRdXSwgWyduR2cnLCBbODkyMSwgODI0XV0sIFsnbmdzaW0nLCBbODgyMV1dLCBbJ25HdCcsIFs4ODExLCA4NDAyXV0sIFsnbmd0JywgWzg4MTVdXSwgWyduZ3RyJywgWzg4MTVdXSwgWyduR3R2JywgWzg4MTEsIDgyNF1dLCBbJ25oYXJyJywgWzg2MjJdXSwgWyduaEFycicsIFs4NjU0XV0sIFsnbmhwYXInLCBbMTA5OTRdXSwgWyduaScsIFs4NzE1XV0sIFsnbmlzJywgWzg5NTZdXSwgWyduaXNkJywgWzg5NTRdXSwgWyduaXYnLCBbODcxNV1dLCBbJ05KY3knLCBbMTAzNF1dLCBbJ25qY3knLCBbMTExNF1dLCBbJ25sYXJyJywgWzg2MDJdXSwgWydubEFycicsIFs4NjUzXV0sIFsnbmxkcicsIFs4MjI5XV0sIFsnbmxFJywgWzg4MDYsIDgyNF1dLCBbJ25sZScsIFs4ODE2XV0sIFsnbmxlZnRhcnJvdycsIFs4NjAyXV0sIFsnbkxlZnRhcnJvdycsIFs4NjUzXV0sIFsnbmxlZnRyaWdodGFycm93JywgWzg2MjJdXSwgWyduTGVmdHJpZ2h0YXJyb3cnLCBbODY1NF1dLCBbJ25sZXEnLCBbODgxNl1dLCBbJ25sZXFxJywgWzg4MDYsIDgyNF1dLCBbJ25sZXFzbGFudCcsIFsxMDg3NywgODI0XV0sIFsnbmxlcycsIFsxMDg3NywgODI0XV0sIFsnbmxlc3MnLCBbODgxNF1dLCBbJ25MbCcsIFs4OTIwLCA4MjRdXSwgWydubHNpbScsIFs4ODIwXV0sIFsnbkx0JywgWzg4MTAsIDg0MDJdXSwgWydubHQnLCBbODgxNF1dLCBbJ25sdHJpJywgWzg5MzhdXSwgWydubHRyaWUnLCBbODk0MF1dLCBbJ25MdHYnLCBbODgxMCwgODI0XV0sIFsnbm1pZCcsIFs4NzQwXV0sIFsnTm9CcmVhaycsIFs4Mjg4XV0sIFsnTm9uQnJlYWtpbmdTcGFjZScsIFsxNjBdXSwgWydub3BmJywgWzEyMDE1OV1dLCBbJ05vcGYnLCBbODQ2OV1dLCBbJ05vdCcsIFsxMDk4OF1dLCBbJ25vdCcsIFsxNzJdXSwgWydOb3RDb25ncnVlbnQnLCBbODgwMl1dLCBbJ05vdEN1cENhcCcsIFs4ODEzXV0sIFsnTm90RG91YmxlVmVydGljYWxCYXInLCBbODc0Ml1dLCBbJ05vdEVsZW1lbnQnLCBbODcxM11dLCBbJ05vdEVxdWFsJywgWzg4MDBdXSwgWydOb3RFcXVhbFRpbGRlJywgWzg3NzAsIDgyNF1dLCBbJ05vdEV4aXN0cycsIFs4NzA4XV0sIFsnTm90R3JlYXRlcicsIFs4ODE1XV0sIFsnTm90R3JlYXRlckVxdWFsJywgWzg4MTddXSwgWydOb3RHcmVhdGVyRnVsbEVxdWFsJywgWzg4MDcsIDgyNF1dLCBbJ05vdEdyZWF0ZXJHcmVhdGVyJywgWzg4MTEsIDgyNF1dLCBbJ05vdEdyZWF0ZXJMZXNzJywgWzg4MjVdXSwgWydOb3RHcmVhdGVyU2xhbnRFcXVhbCcsIFsxMDg3OCwgODI0XV0sIFsnTm90R3JlYXRlclRpbGRlJywgWzg4MjFdXSwgWydOb3RIdW1wRG93bkh1bXAnLCBbODc4MiwgODI0XV0sIFsnTm90SHVtcEVxdWFsJywgWzg3ODMsIDgyNF1dLCBbJ25vdGluJywgWzg3MTNdXSwgWydub3RpbmRvdCcsIFs4OTQ5LCA4MjRdXSwgWydub3RpbkUnLCBbODk1MywgODI0XV0sIFsnbm90aW52YScsIFs4NzEzXV0sIFsnbm90aW52YicsIFs4OTUxXV0sIFsnbm90aW52YycsIFs4OTUwXV0sIFsnTm90TGVmdFRyaWFuZ2xlQmFyJywgWzEwNzAzLCA4MjRdXSwgWydOb3RMZWZ0VHJpYW5nbGUnLCBbODkzOF1dLCBbJ05vdExlZnRUcmlhbmdsZUVxdWFsJywgWzg5NDBdXSwgWydOb3RMZXNzJywgWzg4MTRdXSwgWydOb3RMZXNzRXF1YWwnLCBbODgxNl1dLCBbJ05vdExlc3NHcmVhdGVyJywgWzg4MjRdXSwgWydOb3RMZXNzTGVzcycsIFs4ODEwLCA4MjRdXSwgWydOb3RMZXNzU2xhbnRFcXVhbCcsIFsxMDg3NywgODI0XV0sIFsnTm90TGVzc1RpbGRlJywgWzg4MjBdXSwgWydOb3ROZXN0ZWRHcmVhdGVyR3JlYXRlcicsIFsxMDkxNCwgODI0XV0sIFsnTm90TmVzdGVkTGVzc0xlc3MnLCBbMTA5MTMsIDgyNF1dLCBbJ25vdG5pJywgWzg3MTZdXSwgWydub3RuaXZhJywgWzg3MTZdXSwgWydub3RuaXZiJywgWzg5NThdXSwgWydub3RuaXZjJywgWzg5NTddXSwgWydOb3RQcmVjZWRlcycsIFs4ODMyXV0sIFsnTm90UHJlY2VkZXNFcXVhbCcsIFsxMDkyNywgODI0XV0sIFsnTm90UHJlY2VkZXNTbGFudEVxdWFsJywgWzg5MjhdXSwgWydOb3RSZXZlcnNlRWxlbWVudCcsIFs4NzE2XV0sIFsnTm90UmlnaHRUcmlhbmdsZUJhcicsIFsxMDcwNCwgODI0XV0sIFsnTm90UmlnaHRUcmlhbmdsZScsIFs4OTM5XV0sIFsnTm90UmlnaHRUcmlhbmdsZUVxdWFsJywgWzg5NDFdXSwgWydOb3RTcXVhcmVTdWJzZXQnLCBbODg0NywgODI0XV0sIFsnTm90U3F1YXJlU3Vic2V0RXF1YWwnLCBbODkzMF1dLCBbJ05vdFNxdWFyZVN1cGVyc2V0JywgWzg4NDgsIDgyNF1dLCBbJ05vdFNxdWFyZVN1cGVyc2V0RXF1YWwnLCBbODkzMV1dLCBbJ05vdFN1YnNldCcsIFs4ODM0LCA4NDAyXV0sIFsnTm90U3Vic2V0RXF1YWwnLCBbODg0MF1dLCBbJ05vdFN1Y2NlZWRzJywgWzg4MzNdXSwgWydOb3RTdWNjZWVkc0VxdWFsJywgWzEwOTI4LCA4MjRdXSwgWydOb3RTdWNjZWVkc1NsYW50RXF1YWwnLCBbODkyOV1dLCBbJ05vdFN1Y2NlZWRzVGlsZGUnLCBbODgzMSwgODI0XV0sIFsnTm90U3VwZXJzZXQnLCBbODgzNSwgODQwMl1dLCBbJ05vdFN1cGVyc2V0RXF1YWwnLCBbODg0MV1dLCBbJ05vdFRpbGRlJywgWzg3NjldXSwgWydOb3RUaWxkZUVxdWFsJywgWzg3NzJdXSwgWydOb3RUaWxkZUZ1bGxFcXVhbCcsIFs4Nzc1XV0sIFsnTm90VGlsZGVUaWxkZScsIFs4Nzc3XV0sIFsnTm90VmVydGljYWxCYXInLCBbODc0MF1dLCBbJ25wYXJhbGxlbCcsIFs4NzQyXV0sIFsnbnBhcicsIFs4NzQyXV0sIFsnbnBhcnNsJywgWzExMDA1LCA4NDIxXV0sIFsnbnBhcnQnLCBbODcwNiwgODI0XV0sIFsnbnBvbGludCcsIFsxMDc3Ml1dLCBbJ25wcicsIFs4ODMyXV0sIFsnbnByY3VlJywgWzg5MjhdXSwgWyducHJlYycsIFs4ODMyXV0sIFsnbnByZWNlcScsIFsxMDkyNywgODI0XV0sIFsnbnByZScsIFsxMDkyNywgODI0XV0sIFsnbnJhcnJjJywgWzEwNTQ3LCA4MjRdXSwgWyducmFycicsIFs4NjAzXV0sIFsnbnJBcnInLCBbODY1NV1dLCBbJ25yYXJydycsIFs4NjA1LCA4MjRdXSwgWyducmlnaHRhcnJvdycsIFs4NjAzXV0sIFsnblJpZ2h0YXJyb3cnLCBbODY1NV1dLCBbJ25ydHJpJywgWzg5MzldXSwgWyducnRyaWUnLCBbODk0MV1dLCBbJ25zYycsIFs4ODMzXV0sIFsnbnNjY3VlJywgWzg5MjldXSwgWyduc2NlJywgWzEwOTI4LCA4MjRdXSwgWydOc2NyJywgWzExOTk3N11dLCBbJ25zY3InLCBbMTIwMDAzXV0sIFsnbnNob3J0bWlkJywgWzg3NDBdXSwgWyduc2hvcnRwYXJhbGxlbCcsIFs4NzQyXV0sIFsnbnNpbScsIFs4NzY5XV0sIFsnbnNpbWUnLCBbODc3Ml1dLCBbJ25zaW1lcScsIFs4NzcyXV0sIFsnbnNtaWQnLCBbODc0MF1dLCBbJ25zcGFyJywgWzg3NDJdXSwgWyduc3FzdWJlJywgWzg5MzBdXSwgWyduc3FzdXBlJywgWzg5MzFdXSwgWyduc3ViJywgWzg4MzZdXSwgWyduc3ViRScsIFsxMDk0OSwgODI0XV0sIFsnbnN1YmUnLCBbODg0MF1dLCBbJ25zdWJzZXQnLCBbODgzNCwgODQwMl1dLCBbJ25zdWJzZXRlcScsIFs4ODQwXV0sIFsnbnN1YnNldGVxcScsIFsxMDk0OSwgODI0XV0sIFsnbnN1Y2MnLCBbODgzM11dLCBbJ25zdWNjZXEnLCBbMTA5MjgsIDgyNF1dLCBbJ25zdXAnLCBbODgzN11dLCBbJ25zdXBFJywgWzEwOTUwLCA4MjRdXSwgWyduc3VwZScsIFs4ODQxXV0sIFsnbnN1cHNldCcsIFs4ODM1LCA4NDAyXV0sIFsnbnN1cHNldGVxJywgWzg4NDFdXSwgWyduc3Vwc2V0ZXFxJywgWzEwOTUwLCA4MjRdXSwgWydudGdsJywgWzg4MjVdXSwgWydOdGlsZGUnLCBbMjA5XV0sIFsnbnRpbGRlJywgWzI0MV1dLCBbJ250bGcnLCBbODgyNF1dLCBbJ250cmlhbmdsZWxlZnQnLCBbODkzOF1dLCBbJ250cmlhbmdsZWxlZnRlcScsIFs4OTQwXV0sIFsnbnRyaWFuZ2xlcmlnaHQnLCBbODkzOV1dLCBbJ250cmlhbmdsZXJpZ2h0ZXEnLCBbODk0MV1dLCBbJ051JywgWzkyNV1dLCBbJ251JywgWzk1N11dLCBbJ251bScsIFszNV1dLCBbJ251bWVybycsIFs4NDcwXV0sIFsnbnVtc3AnLCBbODE5OV1dLCBbJ252YXAnLCBbODc4MSwgODQwMl1dLCBbJ252ZGFzaCcsIFs4ODc2XV0sIFsnbnZEYXNoJywgWzg4NzddXSwgWyduVmRhc2gnLCBbODg3OF1dLCBbJ25WRGFzaCcsIFs4ODc5XV0sIFsnbnZnZScsIFs4ODA1LCA4NDAyXV0sIFsnbnZndCcsIFs2MiwgODQwMl1dLCBbJ252SGFycicsIFsxMDUwMF1dLCBbJ252aW5maW4nLCBbMTA3MThdXSwgWydudmxBcnInLCBbMTA0OThdXSwgWydudmxlJywgWzg4MDQsIDg0MDJdXSwgWydudmx0JywgWzYwLCA4NDAyXV0sIFsnbnZsdHJpZScsIFs4ODg0LCA4NDAyXV0sIFsnbnZyQXJyJywgWzEwNDk5XV0sIFsnbnZydHJpZScsIFs4ODg1LCA4NDAyXV0sIFsnbnZzaW0nLCBbODc2NCwgODQwMl1dLCBbJ253YXJoaycsIFsxMDUzMV1dLCBbJ253YXJyJywgWzg1OThdXSwgWydud0FycicsIFs4NjYyXV0sIFsnbndhcnJvdycsIFs4NTk4XV0sIFsnbnduZWFyJywgWzEwNTM1XV0sIFsnT2FjdXRlJywgWzIxMV1dLCBbJ29hY3V0ZScsIFsyNDNdXSwgWydvYXN0JywgWzg4NTldXSwgWydPY2lyYycsIFsyMTJdXSwgWydvY2lyYycsIFsyNDRdXSwgWydvY2lyJywgWzg4NThdXSwgWydPY3knLCBbMTA1NF1dLCBbJ29jeScsIFsxMDg2XV0sIFsnb2Rhc2gnLCBbODg2MV1dLCBbJ09kYmxhYycsIFszMzZdXSwgWydvZGJsYWMnLCBbMzM3XV0sIFsnb2RpdicsIFsxMDgwOF1dLCBbJ29kb3QnLCBbODg1N11dLCBbJ29kc29sZCcsIFsxMDY4NF1dLCBbJ09FbGlnJywgWzMzOF1dLCBbJ29lbGlnJywgWzMzOV1dLCBbJ29mY2lyJywgWzEwNjg3XV0sIFsnT2ZyJywgWzEyMDA4Ml1dLCBbJ29mcicsIFsxMjAxMDhdXSwgWydvZ29uJywgWzczMV1dLCBbJ09ncmF2ZScsIFsyMTBdXSwgWydvZ3JhdmUnLCBbMjQyXV0sIFsnb2d0JywgWzEwNjg5XV0sIFsnb2hiYXInLCBbMTA2NzddXSwgWydvaG0nLCBbOTM3XV0sIFsnb2ludCcsIFs4NzUwXV0sIFsnb2xhcnInLCBbODYzNF1dLCBbJ29sY2lyJywgWzEwNjg2XV0sIFsnb2xjcm9zcycsIFsxMDY4M11dLCBbJ29saW5lJywgWzgyNTRdXSwgWydvbHQnLCBbMTA2ODhdXSwgWydPbWFjcicsIFszMzJdXSwgWydvbWFjcicsIFszMzNdXSwgWydPbWVnYScsIFs5MzddXSwgWydvbWVnYScsIFs5NjldXSwgWydPbWljcm9uJywgWzkyN11dLCBbJ29taWNyb24nLCBbOTU5XV0sIFsnb21pZCcsIFsxMDY3OF1dLCBbJ29taW51cycsIFs4ODU0XV0sIFsnT29wZicsIFsxMjAxMzRdXSwgWydvb3BmJywgWzEyMDE2MF1dLCBbJ29wYXInLCBbMTA2NzldXSwgWydPcGVuQ3VybHlEb3VibGVRdW90ZScsIFs4MjIwXV0sIFsnT3BlbkN1cmx5UXVvdGUnLCBbODIxNl1dLCBbJ29wZXJwJywgWzEwNjgxXV0sIFsnb3BsdXMnLCBbODg1M11dLCBbJ29yYXJyJywgWzg2MzVdXSwgWydPcicsIFsxMDgzNl1dLCBbJ29yJywgWzg3NDRdXSwgWydvcmQnLCBbMTA4NDVdXSwgWydvcmRlcicsIFs4NTAwXV0sIFsnb3JkZXJvZicsIFs4NTAwXV0sIFsnb3JkZicsIFsxNzBdXSwgWydvcmRtJywgWzE4Nl1dLCBbJ29yaWdvZicsIFs4ODg2XV0sIFsnb3JvcicsIFsxMDgzOF1dLCBbJ29yc2xvcGUnLCBbMTA4MzldXSwgWydvcnYnLCBbMTA4NDNdXSwgWydvUycsIFs5NDE2XV0sIFsnT3NjcicsIFsxMTk5NzhdXSwgWydvc2NyJywgWzg1MDBdXSwgWydPc2xhc2gnLCBbMjE2XV0sIFsnb3NsYXNoJywgWzI0OF1dLCBbJ29zb2wnLCBbODg1Nl1dLCBbJ090aWxkZScsIFsyMTNdXSwgWydvdGlsZGUnLCBbMjQ1XV0sIFsnb3RpbWVzYXMnLCBbMTA4MDZdXSwgWydPdGltZXMnLCBbMTA4MDddXSwgWydvdGltZXMnLCBbODg1NV1dLCBbJ091bWwnLCBbMjE0XV0sIFsnb3VtbCcsIFsyNDZdXSwgWydvdmJhcicsIFs5MDIxXV0sIFsnT3ZlckJhcicsIFs4MjU0XV0sIFsnT3ZlckJyYWNlJywgWzkxODJdXSwgWydPdmVyQnJhY2tldCcsIFs5MTQwXV0sIFsnT3ZlclBhcmVudGhlc2lzJywgWzkxODBdXSwgWydwYXJhJywgWzE4Ml1dLCBbJ3BhcmFsbGVsJywgWzg3NDFdXSwgWydwYXInLCBbODc0MV1dLCBbJ3BhcnNpbScsIFsxMDk5NV1dLCBbJ3BhcnNsJywgWzExMDA1XV0sIFsncGFydCcsIFs4NzA2XV0sIFsnUGFydGlhbEQnLCBbODcwNl1dLCBbJ1BjeScsIFsxMDU1XV0sIFsncGN5JywgWzEwODddXSwgWydwZXJjbnQnLCBbMzddXSwgWydwZXJpb2QnLCBbNDZdXSwgWydwZXJtaWwnLCBbODI0MF1dLCBbJ3BlcnAnLCBbODg2OV1dLCBbJ3BlcnRlbmsnLCBbODI0MV1dLCBbJ1BmcicsIFsxMjAwODNdXSwgWydwZnInLCBbMTIwMTA5XV0sIFsnUGhpJywgWzkzNF1dLCBbJ3BoaScsIFs5NjZdXSwgWydwaGl2JywgWzk4MV1dLCBbJ3BobW1hdCcsIFs4NDk5XV0sIFsncGhvbmUnLCBbOTc0Ml1dLCBbJ1BpJywgWzkyOF1dLCBbJ3BpJywgWzk2MF1dLCBbJ3BpdGNoZm9yaycsIFs4OTE2XV0sIFsncGl2JywgWzk4Ml1dLCBbJ3BsYW5jaycsIFs4NDYzXV0sIFsncGxhbmNraCcsIFs4NDYyXV0sIFsncGxhbmt2JywgWzg0NjNdXSwgWydwbHVzYWNpcicsIFsxMDc4N11dLCBbJ3BsdXNiJywgWzg4NjJdXSwgWydwbHVzY2lyJywgWzEwNzg2XV0sIFsncGx1cycsIFs0M11dLCBbJ3BsdXNkbycsIFs4NzI0XV0sIFsncGx1c2R1JywgWzEwNzg5XV0sIFsncGx1c2UnLCBbMTA4NjZdXSwgWydQbHVzTWludXMnLCBbMTc3XV0sIFsncGx1c21uJywgWzE3N11dLCBbJ3BsdXNzaW0nLCBbMTA3OTBdXSwgWydwbHVzdHdvJywgWzEwNzkxXV0sIFsncG0nLCBbMTc3XV0sIFsnUG9pbmNhcmVwbGFuZScsIFs4NDYwXV0sIFsncG9pbnRpbnQnLCBbMTA3NzNdXSwgWydwb3BmJywgWzEyMDE2MV1dLCBbJ1BvcGYnLCBbODQ3M11dLCBbJ3BvdW5kJywgWzE2M11dLCBbJ3ByYXAnLCBbMTA5MzVdXSwgWydQcicsIFsxMDkzOV1dLCBbJ3ByJywgWzg4MjZdXSwgWydwcmN1ZScsIFs4ODI4XV0sIFsncHJlY2FwcHJveCcsIFsxMDkzNV1dLCBbJ3ByZWMnLCBbODgyNl1dLCBbJ3ByZWNjdXJseWVxJywgWzg4MjhdXSwgWydQcmVjZWRlcycsIFs4ODI2XV0sIFsnUHJlY2VkZXNFcXVhbCcsIFsxMDkyN11dLCBbJ1ByZWNlZGVzU2xhbnRFcXVhbCcsIFs4ODI4XV0sIFsnUHJlY2VkZXNUaWxkZScsIFs4ODMwXV0sIFsncHJlY2VxJywgWzEwOTI3XV0sIFsncHJlY25hcHByb3gnLCBbMTA5MzddXSwgWydwcmVjbmVxcScsIFsxMDkzM11dLCBbJ3ByZWNuc2ltJywgWzg5MzZdXSwgWydwcmUnLCBbMTA5MjddXSwgWydwckUnLCBbMTA5MzFdXSwgWydwcmVjc2ltJywgWzg4MzBdXSwgWydwcmltZScsIFs4MjQyXV0sIFsnUHJpbWUnLCBbODI0M11dLCBbJ3ByaW1lcycsIFs4NDczXV0sIFsncHJuYXAnLCBbMTA5MzddXSwgWydwcm5FJywgWzEwOTMzXV0sIFsncHJuc2ltJywgWzg5MzZdXSwgWydwcm9kJywgWzg3MTldXSwgWydQcm9kdWN0JywgWzg3MTldXSwgWydwcm9mYWxhcicsIFs5MDA2XV0sIFsncHJvZmxpbmUnLCBbODk3OF1dLCBbJ3Byb2ZzdXJmJywgWzg5NzldXSwgWydwcm9wJywgWzg3MzNdXSwgWydQcm9wb3J0aW9uYWwnLCBbODczM11dLCBbJ1Byb3BvcnRpb24nLCBbODc1OV1dLCBbJ3Byb3B0bycsIFs4NzMzXV0sIFsncHJzaW0nLCBbODgzMF1dLCBbJ3BydXJlbCcsIFs4ODgwXV0sIFsnUHNjcicsIFsxMTk5NzldXSwgWydwc2NyJywgWzEyMDAwNV1dLCBbJ1BzaScsIFs5MzZdXSwgWydwc2knLCBbOTY4XV0sIFsncHVuY3NwJywgWzgyMDBdXSwgWydRZnInLCBbMTIwMDg0XV0sIFsncWZyJywgWzEyMDExMF1dLCBbJ3FpbnQnLCBbMTA3NjRdXSwgWydxb3BmJywgWzEyMDE2Ml1dLCBbJ1FvcGYnLCBbODQ3NF1dLCBbJ3FwcmltZScsIFs4Mjc5XV0sIFsnUXNjcicsIFsxMTk5ODBdXSwgWydxc2NyJywgWzEyMDAwNl1dLCBbJ3F1YXRlcm5pb25zJywgWzg0NjFdXSwgWydxdWF0aW50JywgWzEwNzc0XV0sIFsncXVlc3QnLCBbNjNdXSwgWydxdWVzdGVxJywgWzg3OTldXSwgWydxdW90JywgWzM0XV0sIFsnUVVPVCcsIFszNF1dLCBbJ3JBYXJyJywgWzg2NjddXSwgWydyYWNlJywgWzg3NjUsIDgxN11dLCBbJ1JhY3V0ZScsIFszNDBdXSwgWydyYWN1dGUnLCBbMzQxXV0sIFsncmFkaWMnLCBbODczMF1dLCBbJ3JhZW1wdHl2JywgWzEwNjc1XV0sIFsncmFuZycsIFsxMDIxN11dLCBbJ1JhbmcnLCBbMTAyMTldXSwgWydyYW5nZCcsIFsxMDY0Ml1dLCBbJ3JhbmdlJywgWzEwNjYxXV0sIFsncmFuZ2xlJywgWzEwMjE3XV0sIFsncmFxdW8nLCBbMTg3XV0sIFsncmFycmFwJywgWzEwNjEzXV0sIFsncmFycmInLCBbODY3N11dLCBbJ3JhcnJiZnMnLCBbMTA1MjhdXSwgWydyYXJyYycsIFsxMDU0N11dLCBbJ3JhcnInLCBbODU5NF1dLCBbJ1JhcnInLCBbODYwOF1dLCBbJ3JBcnInLCBbODY1OF1dLCBbJ3JhcnJmcycsIFsxMDUyNl1dLCBbJ3JhcnJoaycsIFs4NjE4XV0sIFsncmFycmxwJywgWzg2MjBdXSwgWydyYXJycGwnLCBbMTA1NjVdXSwgWydyYXJyc2ltJywgWzEwNjEyXV0sIFsnUmFycnRsJywgWzEwNTE4XV0sIFsncmFycnRsJywgWzg2MTFdXSwgWydyYXJydycsIFs4NjA1XV0sIFsncmF0YWlsJywgWzEwNTIyXV0sIFsnckF0YWlsJywgWzEwNTI0XV0sIFsncmF0aW8nLCBbODc1OF1dLCBbJ3JhdGlvbmFscycsIFs4NDc0XV0sIFsncmJhcnInLCBbMTA1MDldXSwgWydyQmFycicsIFsxMDUxMV1dLCBbJ1JCYXJyJywgWzEwNTEyXV0sIFsncmJicmsnLCBbMTAwOTldXSwgWydyYnJhY2UnLCBbMTI1XV0sIFsncmJyYWNrJywgWzkzXV0sIFsncmJya2UnLCBbMTA2MzZdXSwgWydyYnJrc2xkJywgWzEwNjM4XV0sIFsncmJya3NsdScsIFsxMDY0MF1dLCBbJ1JjYXJvbicsIFszNDRdXSwgWydyY2Fyb24nLCBbMzQ1XV0sIFsnUmNlZGlsJywgWzM0Ml1dLCBbJ3JjZWRpbCcsIFszNDNdXSwgWydyY2VpbCcsIFs4OTY5XV0sIFsncmN1YicsIFsxMjVdXSwgWydSY3knLCBbMTA1Nl1dLCBbJ3JjeScsIFsxMDg4XV0sIFsncmRjYScsIFsxMDU1MV1dLCBbJ3JkbGRoYXInLCBbMTA2MDFdXSwgWydyZHF1bycsIFs4MjIxXV0sIFsncmRxdW9yJywgWzgyMjFdXSwgWydDbG9zZUN1cmx5RG91YmxlUXVvdGUnLCBbODIyMV1dLCBbJ3Jkc2gnLCBbODYyN11dLCBbJ3JlYWwnLCBbODQ3Nl1dLCBbJ3JlYWxpbmUnLCBbODQ3NV1dLCBbJ3JlYWxwYXJ0JywgWzg0NzZdXSwgWydyZWFscycsIFs4NDc3XV0sIFsnUmUnLCBbODQ3Nl1dLCBbJ3JlY3QnLCBbOTY0NV1dLCBbJ3JlZycsIFsxNzRdXSwgWydSRUcnLCBbMTc0XV0sIFsnUmV2ZXJzZUVsZW1lbnQnLCBbODcxNV1dLCBbJ1JldmVyc2VFcXVpbGlicml1bScsIFs4NjUxXV0sIFsnUmV2ZXJzZVVwRXF1aWxpYnJpdW0nLCBbMTA2MDddXSwgWydyZmlzaHQnLCBbMTA2MjFdXSwgWydyZmxvb3InLCBbODk3MV1dLCBbJ3JmcicsIFsxMjAxMTFdXSwgWydSZnInLCBbODQ3Nl1dLCBbJ3JIYXInLCBbMTA1OTZdXSwgWydyaGFyZCcsIFs4NjQxXV0sIFsncmhhcnUnLCBbODY0MF1dLCBbJ3JoYXJ1bCcsIFsxMDYwNF1dLCBbJ1JobycsIFs5MjldXSwgWydyaG8nLCBbOTYxXV0sIFsncmhvdicsIFsxMDA5XV0sIFsnUmlnaHRBbmdsZUJyYWNrZXQnLCBbMTAyMTddXSwgWydSaWdodEFycm93QmFyJywgWzg2NzddXSwgWydyaWdodGFycm93JywgWzg1OTRdXSwgWydSaWdodEFycm93JywgWzg1OTRdXSwgWydSaWdodGFycm93JywgWzg2NThdXSwgWydSaWdodEFycm93TGVmdEFycm93JywgWzg2NDRdXSwgWydyaWdodGFycm93dGFpbCcsIFs4NjExXV0sIFsnUmlnaHRDZWlsaW5nJywgWzg5NjldXSwgWydSaWdodERvdWJsZUJyYWNrZXQnLCBbMTAyMTVdXSwgWydSaWdodERvd25UZWVWZWN0b3InLCBbMTA1ODldXSwgWydSaWdodERvd25WZWN0b3JCYXInLCBbMTA1ODFdXSwgWydSaWdodERvd25WZWN0b3InLCBbODY0Ml1dLCBbJ1JpZ2h0Rmxvb3InLCBbODk3MV1dLCBbJ3JpZ2h0aGFycG9vbmRvd24nLCBbODY0MV1dLCBbJ3JpZ2h0aGFycG9vbnVwJywgWzg2NDBdXSwgWydyaWdodGxlZnRhcnJvd3MnLCBbODY0NF1dLCBbJ3JpZ2h0bGVmdGhhcnBvb25zJywgWzg2NTJdXSwgWydyaWdodHJpZ2h0YXJyb3dzJywgWzg2NDldXSwgWydyaWdodHNxdWlnYXJyb3cnLCBbODYwNV1dLCBbJ1JpZ2h0VGVlQXJyb3cnLCBbODYxNF1dLCBbJ1JpZ2h0VGVlJywgWzg4NjZdXSwgWydSaWdodFRlZVZlY3RvcicsIFsxMDU4N11dLCBbJ3JpZ2h0dGhyZWV0aW1lcycsIFs4OTA4XV0sIFsnUmlnaHRUcmlhbmdsZUJhcicsIFsxMDcwNF1dLCBbJ1JpZ2h0VHJpYW5nbGUnLCBbODg4M11dLCBbJ1JpZ2h0VHJpYW5nbGVFcXVhbCcsIFs4ODg1XV0sIFsnUmlnaHRVcERvd25WZWN0b3InLCBbMTA1NzVdXSwgWydSaWdodFVwVGVlVmVjdG9yJywgWzEwNTg4XV0sIFsnUmlnaHRVcFZlY3RvckJhcicsIFsxMDU4MF1dLCBbJ1JpZ2h0VXBWZWN0b3InLCBbODYzOF1dLCBbJ1JpZ2h0VmVjdG9yQmFyJywgWzEwNTc5XV0sIFsnUmlnaHRWZWN0b3InLCBbODY0MF1dLCBbJ3JpbmcnLCBbNzMwXV0sIFsncmlzaW5nZG90c2VxJywgWzg3ODddXSwgWydybGFycicsIFs4NjQ0XV0sIFsncmxoYXInLCBbODY1Ml1dLCBbJ3JsbScsIFs4MjA3XV0sIFsncm1vdXN0YWNoZScsIFs5MTM3XV0sIFsncm1vdXN0JywgWzkxMzddXSwgWydybm1pZCcsIFsxMDk5MF1dLCBbJ3JvYW5nJywgWzEwMjIxXV0sIFsncm9hcnInLCBbODcwMl1dLCBbJ3JvYnJrJywgWzEwMjE1XV0sIFsncm9wYXInLCBbMTA2MzBdXSwgWydyb3BmJywgWzEyMDE2M11dLCBbJ1JvcGYnLCBbODQ3N11dLCBbJ3JvcGx1cycsIFsxMDc5OF1dLCBbJ3JvdGltZXMnLCBbMTA4MDVdXSwgWydSb3VuZEltcGxpZXMnLCBbMTA2MDhdXSwgWydycGFyJywgWzQxXV0sIFsncnBhcmd0JywgWzEwNjQ0XV0sIFsncnBwb2xpbnQnLCBbMTA3NzBdXSwgWydycmFycicsIFs4NjQ5XV0sIFsnUnJpZ2h0YXJyb3cnLCBbODY2N11dLCBbJ3JzYXF1bycsIFs4MjUwXV0sIFsncnNjcicsIFsxMjAwMDddXSwgWydSc2NyJywgWzg0NzVdXSwgWydyc2gnLCBbODYyNV1dLCBbJ1JzaCcsIFs4NjI1XV0sIFsncnNxYicsIFs5M11dLCBbJ3JzcXVvJywgWzgyMTddXSwgWydyc3F1b3InLCBbODIxN11dLCBbJ0Nsb3NlQ3VybHlRdW90ZScsIFs4MjE3XV0sIFsncnRocmVlJywgWzg5MDhdXSwgWydydGltZXMnLCBbODkwNl1dLCBbJ3J0cmknLCBbOTY1N11dLCBbJ3J0cmllJywgWzg4ODVdXSwgWydydHJpZicsIFs5NjU2XV0sIFsncnRyaWx0cmknLCBbMTA3MDJdXSwgWydSdWxlRGVsYXllZCcsIFsxMDc0MF1dLCBbJ3J1bHVoYXInLCBbMTA2MDBdXSwgWydyeCcsIFs4NDc4XV0sIFsnU2FjdXRlJywgWzM0Nl1dLCBbJ3NhY3V0ZScsIFszNDddXSwgWydzYnF1bycsIFs4MjE4XV0sIFsnc2NhcCcsIFsxMDkzNl1dLCBbJ1NjYXJvbicsIFszNTJdXSwgWydzY2Fyb24nLCBbMzUzXV0sIFsnU2MnLCBbMTA5NDBdXSwgWydzYycsIFs4ODI3XV0sIFsnc2NjdWUnLCBbODgyOV1dLCBbJ3NjZScsIFsxMDkyOF1dLCBbJ3NjRScsIFsxMDkzMl1dLCBbJ1NjZWRpbCcsIFszNTBdXSwgWydzY2VkaWwnLCBbMzUxXV0sIFsnU2NpcmMnLCBbMzQ4XV0sIFsnc2NpcmMnLCBbMzQ5XV0sIFsnc2NuYXAnLCBbMTA5MzhdXSwgWydzY25FJywgWzEwOTM0XV0sIFsnc2Nuc2ltJywgWzg5MzddXSwgWydzY3BvbGludCcsIFsxMDc3MV1dLCBbJ3Njc2ltJywgWzg4MzFdXSwgWydTY3knLCBbMTA1N11dLCBbJ3NjeScsIFsxMDg5XV0sIFsnc2RvdGInLCBbODg2NV1dLCBbJ3Nkb3QnLCBbODkwMV1dLCBbJ3Nkb3RlJywgWzEwODU0XV0sIFsnc2VhcmhrJywgWzEwNTMzXV0sIFsnc2VhcnInLCBbODYwMF1dLCBbJ3NlQXJyJywgWzg2NjRdXSwgWydzZWFycm93JywgWzg2MDBdXSwgWydzZWN0JywgWzE2N11dLCBbJ3NlbWknLCBbNTldXSwgWydzZXN3YXInLCBbMTA1MzddXSwgWydzZXRtaW51cycsIFs4NzI2XV0sIFsnc2V0bW4nLCBbODcyNl1dLCBbJ3NleHQnLCBbMTAwMzhdXSwgWydTZnInLCBbMTIwMDg2XV0sIFsnc2ZyJywgWzEyMDExMl1dLCBbJ3Nmcm93bicsIFs4OTk0XV0sIFsnc2hhcnAnLCBbOTgzOV1dLCBbJ1NIQ0hjeScsIFsxMDY1XV0sIFsnc2hjaGN5JywgWzEwOTddXSwgWydTSGN5JywgWzEwNjRdXSwgWydzaGN5JywgWzEwOTZdXSwgWydTaG9ydERvd25BcnJvdycsIFs4NTk1XV0sIFsnU2hvcnRMZWZ0QXJyb3cnLCBbODU5Ml1dLCBbJ3Nob3J0bWlkJywgWzg3MzldXSwgWydzaG9ydHBhcmFsbGVsJywgWzg3NDFdXSwgWydTaG9ydFJpZ2h0QXJyb3cnLCBbODU5NF1dLCBbJ1Nob3J0VXBBcnJvdycsIFs4NTkzXV0sIFsnc2h5JywgWzE3M11dLCBbJ1NpZ21hJywgWzkzMV1dLCBbJ3NpZ21hJywgWzk2M11dLCBbJ3NpZ21hZicsIFs5NjJdXSwgWydzaWdtYXYnLCBbOTYyXV0sIFsnc2ltJywgWzg3NjRdXSwgWydzaW1kb3QnLCBbMTA4NThdXSwgWydzaW1lJywgWzg3NzFdXSwgWydzaW1lcScsIFs4NzcxXV0sIFsnc2ltZycsIFsxMDkxMF1dLCBbJ3NpbWdFJywgWzEwOTEyXV0sIFsnc2ltbCcsIFsxMDkwOV1dLCBbJ3NpbWxFJywgWzEwOTExXV0sIFsnc2ltbmUnLCBbODc3NF1dLCBbJ3NpbXBsdXMnLCBbMTA3ODhdXSwgWydzaW1yYXJyJywgWzEwNjEwXV0sIFsnc2xhcnInLCBbODU5Ml1dLCBbJ1NtYWxsQ2lyY2xlJywgWzg3MjhdXSwgWydzbWFsbHNldG1pbnVzJywgWzg3MjZdXSwgWydzbWFzaHAnLCBbMTA4MDNdXSwgWydzbWVwYXJzbCcsIFsxMDcyNF1dLCBbJ3NtaWQnLCBbODczOV1dLCBbJ3NtaWxlJywgWzg5OTVdXSwgWydzbXQnLCBbMTA5MjJdXSwgWydzbXRlJywgWzEwOTI0XV0sIFsnc210ZXMnLCBbMTA5MjQsIDY1MDI0XV0sIFsnU09GVGN5JywgWzEwNjhdXSwgWydzb2Z0Y3knLCBbMTEwMF1dLCBbJ3NvbGJhcicsIFs5MDIzXV0sIFsnc29sYicsIFsxMDY5Ml1dLCBbJ3NvbCcsIFs0N11dLCBbJ1NvcGYnLCBbMTIwMTM4XV0sIFsnc29wZicsIFsxMjAxNjRdXSwgWydzcGFkZXMnLCBbOTgyNF1dLCBbJ3NwYWRlc3VpdCcsIFs5ODI0XV0sIFsnc3BhcicsIFs4NzQxXV0sIFsnc3FjYXAnLCBbODg1MV1dLCBbJ3NxY2FwcycsIFs4ODUxLCA2NTAyNF1dLCBbJ3NxY3VwJywgWzg4NTJdXSwgWydzcWN1cHMnLCBbODg1MiwgNjUwMjRdXSwgWydTcXJ0JywgWzg3MzBdXSwgWydzcXN1YicsIFs4ODQ3XV0sIFsnc3FzdWJlJywgWzg4NDldXSwgWydzcXN1YnNldCcsIFs4ODQ3XV0sIFsnc3FzdWJzZXRlcScsIFs4ODQ5XV0sIFsnc3FzdXAnLCBbODg0OF1dLCBbJ3Nxc3VwZScsIFs4ODUwXV0sIFsnc3FzdXBzZXQnLCBbODg0OF1dLCBbJ3Nxc3Vwc2V0ZXEnLCBbODg1MF1dLCBbJ3NxdWFyZScsIFs5NjMzXV0sIFsnU3F1YXJlJywgWzk2MzNdXSwgWydTcXVhcmVJbnRlcnNlY3Rpb24nLCBbODg1MV1dLCBbJ1NxdWFyZVN1YnNldCcsIFs4ODQ3XV0sIFsnU3F1YXJlU3Vic2V0RXF1YWwnLCBbODg0OV1dLCBbJ1NxdWFyZVN1cGVyc2V0JywgWzg4NDhdXSwgWydTcXVhcmVTdXBlcnNldEVxdWFsJywgWzg4NTBdXSwgWydTcXVhcmVVbmlvbicsIFs4ODUyXV0sIFsnc3F1YXJmJywgWzk2NDJdXSwgWydzcXUnLCBbOTYzM11dLCBbJ3NxdWYnLCBbOTY0Ml1dLCBbJ3NyYXJyJywgWzg1OTRdXSwgWydTc2NyJywgWzExOTk4Ml1dLCBbJ3NzY3InLCBbMTIwMDA4XV0sIFsnc3NldG1uJywgWzg3MjZdXSwgWydzc21pbGUnLCBbODk5NV1dLCBbJ3NzdGFyZicsIFs4OTAyXV0sIFsnU3RhcicsIFs4OTAyXV0sIFsnc3RhcicsIFs5NzM0XV0sIFsnc3RhcmYnLCBbOTczM11dLCBbJ3N0cmFpZ2h0ZXBzaWxvbicsIFsxMDEzXV0sIFsnc3RyYWlnaHRwaGknLCBbOTgxXV0sIFsnc3RybnMnLCBbMTc1XV0sIFsnc3ViJywgWzg4MzRdXSwgWydTdWInLCBbODkxMl1dLCBbJ3N1YmRvdCcsIFsxMDk0MV1dLCBbJ3N1YkUnLCBbMTA5NDldXSwgWydzdWJlJywgWzg4MzhdXSwgWydzdWJlZG90JywgWzEwOTQ3XV0sIFsnc3VibXVsdCcsIFsxMDk0NV1dLCBbJ3N1Ym5FJywgWzEwOTU1XV0sIFsnc3VibmUnLCBbODg0Ml1dLCBbJ3N1YnBsdXMnLCBbMTA5NDNdXSwgWydzdWJyYXJyJywgWzEwNjE3XV0sIFsnc3Vic2V0JywgWzg4MzRdXSwgWydTdWJzZXQnLCBbODkxMl1dLCBbJ3N1YnNldGVxJywgWzg4MzhdXSwgWydzdWJzZXRlcXEnLCBbMTA5NDldXSwgWydTdWJzZXRFcXVhbCcsIFs4ODM4XV0sIFsnc3Vic2V0bmVxJywgWzg4NDJdXSwgWydzdWJzZXRuZXFxJywgWzEwOTU1XV0sIFsnc3Vic2ltJywgWzEwOTUxXV0sIFsnc3Vic3ViJywgWzEwOTY1XV0sIFsnc3Vic3VwJywgWzEwOTYzXV0sIFsnc3VjY2FwcHJveCcsIFsxMDkzNl1dLCBbJ3N1Y2MnLCBbODgyN11dLCBbJ3N1Y2NjdXJseWVxJywgWzg4MjldXSwgWydTdWNjZWVkcycsIFs4ODI3XV0sIFsnU3VjY2VlZHNFcXVhbCcsIFsxMDkyOF1dLCBbJ1N1Y2NlZWRzU2xhbnRFcXVhbCcsIFs4ODI5XV0sIFsnU3VjY2VlZHNUaWxkZScsIFs4ODMxXV0sIFsnc3VjY2VxJywgWzEwOTI4XV0sIFsnc3VjY25hcHByb3gnLCBbMTA5MzhdXSwgWydzdWNjbmVxcScsIFsxMDkzNF1dLCBbJ3N1Y2Nuc2ltJywgWzg5MzddXSwgWydzdWNjc2ltJywgWzg4MzFdXSwgWydTdWNoVGhhdCcsIFs4NzE1XV0sIFsnc3VtJywgWzg3MjFdXSwgWydTdW0nLCBbODcyMV1dLCBbJ3N1bmcnLCBbOTgzNF1dLCBbJ3N1cDEnLCBbMTg1XV0sIFsnc3VwMicsIFsxNzhdXSwgWydzdXAzJywgWzE3OV1dLCBbJ3N1cCcsIFs4ODM1XV0sIFsnU3VwJywgWzg5MTNdXSwgWydzdXBkb3QnLCBbMTA5NDJdXSwgWydzdXBkc3ViJywgWzEwOTY4XV0sIFsnc3VwRScsIFsxMDk1MF1dLCBbJ3N1cGUnLCBbODgzOV1dLCBbJ3N1cGVkb3QnLCBbMTA5NDhdXSwgWydTdXBlcnNldCcsIFs4ODM1XV0sIFsnU3VwZXJzZXRFcXVhbCcsIFs4ODM5XV0sIFsnc3VwaHNvbCcsIFsxMDE4NV1dLCBbJ3N1cGhzdWInLCBbMTA5NjddXSwgWydzdXBsYXJyJywgWzEwNjE5XV0sIFsnc3VwbXVsdCcsIFsxMDk0Nl1dLCBbJ3N1cG5FJywgWzEwOTU2XV0sIFsnc3VwbmUnLCBbODg0M11dLCBbJ3N1cHBsdXMnLCBbMTA5NDRdXSwgWydzdXBzZXQnLCBbODgzNV1dLCBbJ1N1cHNldCcsIFs4OTEzXV0sIFsnc3Vwc2V0ZXEnLCBbODgzOV1dLCBbJ3N1cHNldGVxcScsIFsxMDk1MF1dLCBbJ3N1cHNldG5lcScsIFs4ODQzXV0sIFsnc3Vwc2V0bmVxcScsIFsxMDk1Nl1dLCBbJ3N1cHNpbScsIFsxMDk1Ml1dLCBbJ3N1cHN1YicsIFsxMDk2NF1dLCBbJ3N1cHN1cCcsIFsxMDk2Nl1dLCBbJ3N3YXJoaycsIFsxMDUzNF1dLCBbJ3N3YXJyJywgWzg2MDFdXSwgWydzd0FycicsIFs4NjY1XV0sIFsnc3dhcnJvdycsIFs4NjAxXV0sIFsnc3dud2FyJywgWzEwNTM4XV0sIFsnc3psaWcnLCBbMjIzXV0sIFsnVGFiJywgWzldXSwgWyd0YXJnZXQnLCBbODk4Ml1dLCBbJ1RhdScsIFs5MzJdXSwgWyd0YXUnLCBbOTY0XV0sIFsndGJyaycsIFs5MTQwXV0sIFsnVGNhcm9uJywgWzM1Nl1dLCBbJ3RjYXJvbicsIFszNTddXSwgWydUY2VkaWwnLCBbMzU0XV0sIFsndGNlZGlsJywgWzM1NV1dLCBbJ1RjeScsIFsxMDU4XV0sIFsndGN5JywgWzEwOTBdXSwgWyd0ZG90JywgWzg0MTFdXSwgWyd0ZWxyZWMnLCBbODk4MV1dLCBbJ1RmcicsIFsxMjAwODddXSwgWyd0ZnInLCBbMTIwMTEzXV0sIFsndGhlcmU0JywgWzg3NTZdXSwgWyd0aGVyZWZvcmUnLCBbODc1Nl1dLCBbJ1RoZXJlZm9yZScsIFs4NzU2XV0sIFsnVGhldGEnLCBbOTIwXV0sIFsndGhldGEnLCBbOTUyXV0sIFsndGhldGFzeW0nLCBbOTc3XV0sIFsndGhldGF2JywgWzk3N11dLCBbJ3RoaWNrYXBwcm94JywgWzg3NzZdXSwgWyd0aGlja3NpbScsIFs4NzY0XV0sIFsnVGhpY2tTcGFjZScsIFs4Mjg3LCA4MjAyXV0sIFsnVGhpblNwYWNlJywgWzgyMDFdXSwgWyd0aGluc3AnLCBbODIwMV1dLCBbJ3Roa2FwJywgWzg3NzZdXSwgWyd0aGtzaW0nLCBbODc2NF1dLCBbJ1RIT1JOJywgWzIyMl1dLCBbJ3Rob3JuJywgWzI1NF1dLCBbJ3RpbGRlJywgWzczMl1dLCBbJ1RpbGRlJywgWzg3NjRdXSwgWydUaWxkZUVxdWFsJywgWzg3NzFdXSwgWydUaWxkZUZ1bGxFcXVhbCcsIFs4NzczXV0sIFsnVGlsZGVUaWxkZScsIFs4Nzc2XV0sIFsndGltZXNiYXInLCBbMTA4MDFdXSwgWyd0aW1lc2InLCBbODg2NF1dLCBbJ3RpbWVzJywgWzIxNV1dLCBbJ3RpbWVzZCcsIFsxMDgwMF1dLCBbJ3RpbnQnLCBbODc0OV1dLCBbJ3RvZWEnLCBbMTA1MzZdXSwgWyd0b3Bib3QnLCBbOTAxNF1dLCBbJ3RvcGNpcicsIFsxMDk5M11dLCBbJ3RvcCcsIFs4ODY4XV0sIFsnVG9wZicsIFsxMjAxMzldXSwgWyd0b3BmJywgWzEyMDE2NV1dLCBbJ3RvcGZvcmsnLCBbMTA5NzBdXSwgWyd0b3NhJywgWzEwNTM3XV0sIFsndHByaW1lJywgWzgyNDRdXSwgWyd0cmFkZScsIFs4NDgyXV0sIFsnVFJBREUnLCBbODQ4Ml1dLCBbJ3RyaWFuZ2xlJywgWzk2NTNdXSwgWyd0cmlhbmdsZWRvd24nLCBbOTY2M11dLCBbJ3RyaWFuZ2xlbGVmdCcsIFs5NjY3XV0sIFsndHJpYW5nbGVsZWZ0ZXEnLCBbODg4NF1dLCBbJ3RyaWFuZ2xlcScsIFs4Nzk2XV0sIFsndHJpYW5nbGVyaWdodCcsIFs5NjU3XV0sIFsndHJpYW5nbGVyaWdodGVxJywgWzg4ODVdXSwgWyd0cmlkb3QnLCBbOTcwOF1dLCBbJ3RyaWUnLCBbODc5Nl1dLCBbJ3RyaW1pbnVzJywgWzEwODEwXV0sIFsnVHJpcGxlRG90JywgWzg0MTFdXSwgWyd0cmlwbHVzJywgWzEwODA5XV0sIFsndHJpc2InLCBbMTA3MDFdXSwgWyd0cml0aW1lJywgWzEwODExXV0sIFsndHJwZXppdW0nLCBbOTE4Nl1dLCBbJ1RzY3InLCBbMTE5OTgzXV0sIFsndHNjcicsIFsxMjAwMDldXSwgWydUU2N5JywgWzEwNjJdXSwgWyd0c2N5JywgWzEwOTRdXSwgWydUU0hjeScsIFsxMDM1XV0sIFsndHNoY3knLCBbMTExNV1dLCBbJ1RzdHJvaycsIFszNThdXSwgWyd0c3Ryb2snLCBbMzU5XV0sIFsndHdpeHQnLCBbODgxMl1dLCBbJ3R3b2hlYWRsZWZ0YXJyb3cnLCBbODYwNl1dLCBbJ3R3b2hlYWRyaWdodGFycm93JywgWzg2MDhdXSwgWydVYWN1dGUnLCBbMjE4XV0sIFsndWFjdXRlJywgWzI1MF1dLCBbJ3VhcnInLCBbODU5M11dLCBbJ1VhcnInLCBbODYwN11dLCBbJ3VBcnInLCBbODY1N11dLCBbJ1VhcnJvY2lyJywgWzEwNTY5XV0sIFsnVWJyY3knLCBbMTAzOF1dLCBbJ3VicmN5JywgWzExMThdXSwgWydVYnJldmUnLCBbMzY0XV0sIFsndWJyZXZlJywgWzM2NV1dLCBbJ1VjaXJjJywgWzIxOV1dLCBbJ3VjaXJjJywgWzI1MV1dLCBbJ1VjeScsIFsxMDU5XV0sIFsndWN5JywgWzEwOTFdXSwgWyd1ZGFycicsIFs4NjQ1XV0sIFsnVWRibGFjJywgWzM2OF1dLCBbJ3VkYmxhYycsIFszNjldXSwgWyd1ZGhhcicsIFsxMDYwNl1dLCBbJ3VmaXNodCcsIFsxMDYyMl1dLCBbJ1VmcicsIFsxMjAwODhdXSwgWyd1ZnInLCBbMTIwMTE0XV0sIFsnVWdyYXZlJywgWzIxN11dLCBbJ3VncmF2ZScsIFsyNDldXSwgWyd1SGFyJywgWzEwNTk1XV0sIFsndWhhcmwnLCBbODYzOV1dLCBbJ3VoYXJyJywgWzg2MzhdXSwgWyd1aGJsaycsIFs5NjAwXV0sIFsndWxjb3JuJywgWzg5ODhdXSwgWyd1bGNvcm5lcicsIFs4OTg4XV0sIFsndWxjcm9wJywgWzg5NzVdXSwgWyd1bHRyaScsIFs5NzIwXV0sIFsnVW1hY3InLCBbMzYyXV0sIFsndW1hY3InLCBbMzYzXV0sIFsndW1sJywgWzE2OF1dLCBbJ1VuZGVyQmFyJywgWzk1XV0sIFsnVW5kZXJCcmFjZScsIFs5MTgzXV0sIFsnVW5kZXJCcmFja2V0JywgWzkxNDFdXSwgWydVbmRlclBhcmVudGhlc2lzJywgWzkxODFdXSwgWydVbmlvbicsIFs4ODk5XV0sIFsnVW5pb25QbHVzJywgWzg4NDZdXSwgWydVb2dvbicsIFszNzBdXSwgWyd1b2dvbicsIFszNzFdXSwgWydVb3BmJywgWzEyMDE0MF1dLCBbJ3VvcGYnLCBbMTIwMTY2XV0sIFsnVXBBcnJvd0JhcicsIFsxMDUxNF1dLCBbJ3VwYXJyb3cnLCBbODU5M11dLCBbJ1VwQXJyb3cnLCBbODU5M11dLCBbJ1VwYXJyb3cnLCBbODY1N11dLCBbJ1VwQXJyb3dEb3duQXJyb3cnLCBbODY0NV1dLCBbJ3VwZG93bmFycm93JywgWzg1OTddXSwgWydVcERvd25BcnJvdycsIFs4NTk3XV0sIFsnVXBkb3duYXJyb3cnLCBbODY2MV1dLCBbJ1VwRXF1aWxpYnJpdW0nLCBbMTA2MDZdXSwgWyd1cGhhcnBvb25sZWZ0JywgWzg2MzldXSwgWyd1cGhhcnBvb25yaWdodCcsIFs4NjM4XV0sIFsndXBsdXMnLCBbODg0Nl1dLCBbJ1VwcGVyTGVmdEFycm93JywgWzg1OThdXSwgWydVcHBlclJpZ2h0QXJyb3cnLCBbODU5OV1dLCBbJ3Vwc2knLCBbOTY1XV0sIFsnVXBzaScsIFs5NzhdXSwgWyd1cHNpaCcsIFs5NzhdXSwgWydVcHNpbG9uJywgWzkzM11dLCBbJ3Vwc2lsb24nLCBbOTY1XV0sIFsnVXBUZWVBcnJvdycsIFs4NjEzXV0sIFsnVXBUZWUnLCBbODg2OV1dLCBbJ3VwdXBhcnJvd3MnLCBbODY0OF1dLCBbJ3VyY29ybicsIFs4OTg5XV0sIFsndXJjb3JuZXInLCBbODk4OV1dLCBbJ3VyY3JvcCcsIFs4OTc0XV0sIFsnVXJpbmcnLCBbMzY2XV0sIFsndXJpbmcnLCBbMzY3XV0sIFsndXJ0cmknLCBbOTcyMV1dLCBbJ1VzY3InLCBbMTE5OTg0XV0sIFsndXNjcicsIFsxMjAwMTBdXSwgWyd1dGRvdCcsIFs4OTQ0XV0sIFsnVXRpbGRlJywgWzM2MF1dLCBbJ3V0aWxkZScsIFszNjFdXSwgWyd1dHJpJywgWzk2NTNdXSwgWyd1dHJpZicsIFs5NjUyXV0sIFsndXVhcnInLCBbODY0OF1dLCBbJ1V1bWwnLCBbMjIwXV0sIFsndXVtbCcsIFsyNTJdXSwgWyd1d2FuZ2xlJywgWzEwNjYzXV0sIFsndmFuZ3J0JywgWzEwNjUyXV0sIFsndmFyZXBzaWxvbicsIFsxMDEzXV0sIFsndmFya2FwcGEnLCBbMTAwOF1dLCBbJ3Zhcm5vdGhpbmcnLCBbODcwOV1dLCBbJ3ZhcnBoaScsIFs5ODFdXSwgWyd2YXJwaScsIFs5ODJdXSwgWyd2YXJwcm9wdG8nLCBbODczM11dLCBbJ3ZhcnInLCBbODU5N11dLCBbJ3ZBcnInLCBbODY2MV1dLCBbJ3ZhcnJobycsIFsxMDA5XV0sIFsndmFyc2lnbWEnLCBbOTYyXV0sIFsndmFyc3Vic2V0bmVxJywgWzg4NDIsIDY1MDI0XV0sIFsndmFyc3Vic2V0bmVxcScsIFsxMDk1NSwgNjUwMjRdXSwgWyd2YXJzdXBzZXRuZXEnLCBbODg0MywgNjUwMjRdXSwgWyd2YXJzdXBzZXRuZXFxJywgWzEwOTU2LCA2NTAyNF1dLCBbJ3ZhcnRoZXRhJywgWzk3N11dLCBbJ3ZhcnRyaWFuZ2xlbGVmdCcsIFs4ODgyXV0sIFsndmFydHJpYW5nbGVyaWdodCcsIFs4ODgzXV0sIFsndkJhcicsIFsxMDk4NF1dLCBbJ1ZiYXInLCBbMTA5ODddXSwgWyd2QmFydicsIFsxMDk4NV1dLCBbJ1ZjeScsIFsxMDQyXV0sIFsndmN5JywgWzEwNzRdXSwgWyd2ZGFzaCcsIFs4ODY2XV0sIFsndkRhc2gnLCBbODg3Ml1dLCBbJ1ZkYXNoJywgWzg4NzNdXSwgWydWRGFzaCcsIFs4ODc1XV0sIFsnVmRhc2hsJywgWzEwOTgyXV0sIFsndmVlYmFyJywgWzg4OTFdXSwgWyd2ZWUnLCBbODc0NF1dLCBbJ1ZlZScsIFs4ODk3XV0sIFsndmVlZXEnLCBbODc5NF1dLCBbJ3ZlbGxpcCcsIFs4OTQyXV0sIFsndmVyYmFyJywgWzEyNF1dLCBbJ1ZlcmJhcicsIFs4MjE0XV0sIFsndmVydCcsIFsxMjRdXSwgWydWZXJ0JywgWzgyMTRdXSwgWydWZXJ0aWNhbEJhcicsIFs4NzM5XV0sIFsnVmVydGljYWxMaW5lJywgWzEyNF1dLCBbJ1ZlcnRpY2FsU2VwYXJhdG9yJywgWzEwMDcyXV0sIFsnVmVydGljYWxUaWxkZScsIFs4NzY4XV0sIFsnVmVyeVRoaW5TcGFjZScsIFs4MjAyXV0sIFsnVmZyJywgWzEyMDA4OV1dLCBbJ3ZmcicsIFsxMjAxMTVdXSwgWyd2bHRyaScsIFs4ODgyXV0sIFsndm5zdWInLCBbODgzNCwgODQwMl1dLCBbJ3Zuc3VwJywgWzg4MzUsIDg0MDJdXSwgWydWb3BmJywgWzEyMDE0MV1dLCBbJ3ZvcGYnLCBbMTIwMTY3XV0sIFsndnByb3AnLCBbODczM11dLCBbJ3ZydHJpJywgWzg4ODNdXSwgWydWc2NyJywgWzExOTk4NV1dLCBbJ3ZzY3InLCBbMTIwMDExXV0sIFsndnN1Ym5FJywgWzEwOTU1LCA2NTAyNF1dLCBbJ3ZzdWJuZScsIFs4ODQyLCA2NTAyNF1dLCBbJ3ZzdXBuRScsIFsxMDk1NiwgNjUwMjRdXSwgWyd2c3VwbmUnLCBbODg0MywgNjUwMjRdXSwgWydWdmRhc2gnLCBbODg3NF1dLCBbJ3Z6aWd6YWcnLCBbMTA2NTBdXSwgWydXY2lyYycsIFszNzJdXSwgWyd3Y2lyYycsIFszNzNdXSwgWyd3ZWRiYXInLCBbMTA4NDddXSwgWyd3ZWRnZScsIFs4NzQzXV0sIFsnV2VkZ2UnLCBbODg5Nl1dLCBbJ3dlZGdlcScsIFs4NzkzXV0sIFsnd2VpZXJwJywgWzg0NzJdXSwgWydXZnInLCBbMTIwMDkwXV0sIFsnd2ZyJywgWzEyMDExNl1dLCBbJ1dvcGYnLCBbMTIwMTQyXV0sIFsnd29wZicsIFsxMjAxNjhdXSwgWyd3cCcsIFs4NDcyXV0sIFsnd3InLCBbODc2OF1dLCBbJ3dyZWF0aCcsIFs4NzY4XV0sIFsnV3NjcicsIFsxMTk5ODZdXSwgWyd3c2NyJywgWzEyMDAxMl1dLCBbJ3hjYXAnLCBbODg5OF1dLCBbJ3hjaXJjJywgWzk3MTFdXSwgWyd4Y3VwJywgWzg4OTldXSwgWyd4ZHRyaScsIFs5NjYxXV0sIFsnWGZyJywgWzEyMDA5MV1dLCBbJ3hmcicsIFsxMjAxMTddXSwgWyd4aGFycicsIFsxMDIzMV1dLCBbJ3hoQXJyJywgWzEwMjM0XV0sIFsnWGknLCBbOTI2XV0sIFsneGknLCBbOTU4XV0sIFsneGxhcnInLCBbMTAyMjldXSwgWyd4bEFycicsIFsxMDIzMl1dLCBbJ3htYXAnLCBbMTAyMzZdXSwgWyd4bmlzJywgWzg5NTVdXSwgWyd4b2RvdCcsIFsxMDc1Ml1dLCBbJ1hvcGYnLCBbMTIwMTQzXV0sIFsneG9wZicsIFsxMjAxNjldXSwgWyd4b3BsdXMnLCBbMTA3NTNdXSwgWyd4b3RpbWUnLCBbMTA3NTRdXSwgWyd4cmFycicsIFsxMDIzMF1dLCBbJ3hyQXJyJywgWzEwMjMzXV0sIFsnWHNjcicsIFsxMTk5ODddXSwgWyd4c2NyJywgWzEyMDAxM11dLCBbJ3hzcWN1cCcsIFsxMDc1OF1dLCBbJ3h1cGx1cycsIFsxMDc1Nl1dLCBbJ3h1dHJpJywgWzk2NTFdXSwgWyd4dmVlJywgWzg4OTddXSwgWyd4d2VkZ2UnLCBbODg5Nl1dLCBbJ1lhY3V0ZScsIFsyMjFdXSwgWyd5YWN1dGUnLCBbMjUzXV0sIFsnWUFjeScsIFsxMDcxXV0sIFsneWFjeScsIFsxMTAzXV0sIFsnWWNpcmMnLCBbMzc0XV0sIFsneWNpcmMnLCBbMzc1XV0sIFsnWWN5JywgWzEwNjddXSwgWyd5Y3knLCBbMTA5OV1dLCBbJ3llbicsIFsxNjVdXSwgWydZZnInLCBbMTIwMDkyXV0sIFsneWZyJywgWzEyMDExOF1dLCBbJ1lJY3knLCBbMTAzMV1dLCBbJ3lpY3knLCBbMTExMV1dLCBbJ1lvcGYnLCBbMTIwMTQ0XV0sIFsneW9wZicsIFsxMjAxNzBdXSwgWydZc2NyJywgWzExOTk4OF1dLCBbJ3lzY3InLCBbMTIwMDE0XV0sIFsnWVVjeScsIFsxMDcwXV0sIFsneXVjeScsIFsxMTAyXV0sIFsneXVtbCcsIFsyNTVdXSwgWydZdW1sJywgWzM3Nl1dLCBbJ1phY3V0ZScsIFszNzddXSwgWyd6YWN1dGUnLCBbMzc4XV0sIFsnWmNhcm9uJywgWzM4MV1dLCBbJ3pjYXJvbicsIFszODJdXSwgWydaY3knLCBbMTA0N11dLCBbJ3pjeScsIFsxMDc5XV0sIFsnWmRvdCcsIFszNzldXSwgWyd6ZG90JywgWzM4MF1dLCBbJ3plZXRyZicsIFs4NDg4XV0sIFsnWmVyb1dpZHRoU3BhY2UnLCBbODIwM11dLCBbJ1pldGEnLCBbOTE4XV0sIFsnemV0YScsIFs5NTBdXSwgWyd6ZnInLCBbMTIwMTE5XV0sIFsnWmZyJywgWzg0ODhdXSwgWydaSGN5JywgWzEwNDZdXSwgWyd6aGN5JywgWzEwNzhdXSwgWyd6aWdyYXJyJywgWzg2NjldXSwgWyd6b3BmJywgWzEyMDE3MV1dLCBbJ1pvcGYnLCBbODQ4NF1dLCBbJ1pzY3InLCBbMTE5OTg5XV0sIFsnenNjcicsIFsxMjAwMTVdXSwgWyd6d2onLCBbODIwNV1dLCBbJ3p3bmonLCBbODIwNF1dXTtcbnZhciBhbHBoYUluZGV4ID0ge307XG52YXIgY2hhckluZGV4ID0ge307XG5jcmVhdGVJbmRleGVzKGFscGhhSW5kZXgsIGNoYXJJbmRleCk7XG52YXIgSHRtbDVFbnRpdGllcyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBIdG1sNUVudGl0aWVzKCkge1xuICAgIH1cbiAgICBIdG1sNUVudGl0aWVzLnByb3RvdHlwZS5kZWNvZGUgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgICAgIGlmICghc3RyIHx8ICFzdHIubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN0ci5yZXBsYWNlKC8mKCM/W1xcd1xcZF0rKTs/L2csIGZ1bmN0aW9uIChzLCBlbnRpdHkpIHtcbiAgICAgICAgICAgIHZhciBjaHI7XG4gICAgICAgICAgICBpZiAoZW50aXR5LmNoYXJBdCgwKSA9PT0gXCIjXCIpIHtcbiAgICAgICAgICAgICAgICB2YXIgY29kZSA9IGVudGl0eS5jaGFyQXQoMSkgPT09ICd4JyA/XG4gICAgICAgICAgICAgICAgICAgIHBhcnNlSW50KGVudGl0eS5zdWJzdHIoMikudG9Mb3dlckNhc2UoKSwgMTYpIDpcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VJbnQoZW50aXR5LnN1YnN0cigxKSk7XG4gICAgICAgICAgICAgICAgaWYgKCEoaXNOYU4oY29kZSkgfHwgY29kZSA8IC0zMjc2OCB8fCBjb2RlID4gNjU1MzUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNociA9IFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY2hyID0gYWxwaGFJbmRleFtlbnRpdHldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNociB8fCBzO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIEh0bWw1RW50aXRpZXMuZGVjb2RlID0gZnVuY3Rpb24gKHN0cikge1xuICAgICAgICByZXR1cm4gbmV3IEh0bWw1RW50aXRpZXMoKS5kZWNvZGUoc3RyKTtcbiAgICB9O1xuICAgIEh0bWw1RW50aXRpZXMucHJvdG90eXBlLmVuY29kZSA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgICAgICB2YXIgc3RyTGVuZ3RoID0gc3RyLmxlbmd0aDtcbiAgICAgICAgdmFyIHJlc3VsdCA9ICcnO1xuICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgIHdoaWxlIChpIDwgc3RyTGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgY2hhckluZm8gPSBjaGFySW5kZXhbc3RyLmNoYXJDb2RlQXQoaSldO1xuICAgICAgICAgICAgaWYgKGNoYXJJbmZvKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFscGhhID0gY2hhckluZm9bc3RyLmNoYXJDb2RlQXQoaSArIDEpXTtcbiAgICAgICAgICAgICAgICBpZiAoYWxwaGEpIHtcbiAgICAgICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgYWxwaGEgPSBjaGFySW5mb1snJ107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhbHBoYSkge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQgKz0gXCImXCIgKyBhbHBoYSArIFwiO1wiO1xuICAgICAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc3VsdCArPSBzdHIuY2hhckF0KGkpO1xuICAgICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICBIdG1sNUVudGl0aWVzLmVuY29kZSA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBIdG1sNUVudGl0aWVzKCkuZW5jb2RlKHN0cik7XG4gICAgfTtcbiAgICBIdG1sNUVudGl0aWVzLnByb3RvdHlwZS5lbmNvZGVOb25VVEYgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgICAgIGlmICghc3RyIHx8ICFzdHIubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHN0ckxlbmd0aCA9IHN0ci5sZW5ndGg7XG4gICAgICAgIHZhciByZXN1bHQgPSAnJztcbiAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICB3aGlsZSAoaSA8IHN0ckxlbmd0aCkge1xuICAgICAgICAgICAgdmFyIGMgPSBzdHIuY2hhckNvZGVBdChpKTtcbiAgICAgICAgICAgIHZhciBjaGFySW5mbyA9IGNoYXJJbmRleFtjXTtcbiAgICAgICAgICAgIGlmIChjaGFySW5mbykge1xuICAgICAgICAgICAgICAgIHZhciBhbHBoYSA9IGNoYXJJbmZvW3N0ci5jaGFyQ29kZUF0KGkgKyAxKV07XG4gICAgICAgICAgICAgICAgaWYgKGFscGhhKSB7XG4gICAgICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGFscGhhID0gY2hhckluZm9bJyddO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoYWxwaGEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0ICs9IFwiJlwiICsgYWxwaGEgKyBcIjtcIjtcbiAgICAgICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYyA8IDMyIHx8IGMgPiAxMjYpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJyYjJyArIGMgKyAnOyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gc3RyLmNoYXJBdChpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gICAgSHRtbDVFbnRpdGllcy5lbmNvZGVOb25VVEYgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgICAgIHJldHVybiBuZXcgSHRtbDVFbnRpdGllcygpLmVuY29kZU5vblVURihzdHIpO1xuICAgIH07XG4gICAgSHRtbDVFbnRpdGllcy5wcm90b3R5cGUuZW5jb2RlTm9uQVNDSUkgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgICAgIGlmICghc3RyIHx8ICFzdHIubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHN0ckxlbmd0aCA9IHN0ci5sZW5ndGg7XG4gICAgICAgIHZhciByZXN1bHQgPSAnJztcbiAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICB3aGlsZSAoaSA8IHN0ckxlbmd0aCkge1xuICAgICAgICAgICAgdmFyIGMgPSBzdHIuY2hhckNvZGVBdChpKTtcbiAgICAgICAgICAgIGlmIChjIDw9IDI1NSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCArPSBzdHJbaSsrXTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc3VsdCArPSAnJiMnICsgYyArICc7JztcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gICAgSHRtbDVFbnRpdGllcy5lbmNvZGVOb25BU0NJSSA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBIdG1sNUVudGl0aWVzKCkuZW5jb2RlTm9uQVNDSUkoc3RyKTtcbiAgICB9O1xuICAgIHJldHVybiBIdG1sNUVudGl0aWVzO1xufSgpKTtcbmV4cG9ydHMuSHRtbDVFbnRpdGllcyA9IEh0bWw1RW50aXRpZXM7XG5mdW5jdGlvbiBjcmVhdGVJbmRleGVzKGFscGhhSW5kZXgsIGNoYXJJbmRleCkge1xuICAgIHZhciBpID0gRU5USVRJRVMubGVuZ3RoO1xuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgICAgdmFyIGUgPSBFTlRJVElFU1tpXTtcbiAgICAgICAgdmFyIGFscGhhID0gZVswXTtcbiAgICAgICAgdmFyIGNoYXJzID0gZVsxXTtcbiAgICAgICAgdmFyIGNociA9IGNoYXJzWzBdO1xuICAgICAgICB2YXIgYWRkQ2hhciA9IChjaHIgPCAzMiB8fCBjaHIgPiAxMjYpIHx8IGNociA9PT0gNjIgfHwgY2hyID09PSA2MCB8fCBjaHIgPT09IDM4IHx8IGNociA9PT0gMzQgfHwgY2hyID09PSAzOTtcbiAgICAgICAgdmFyIGNoYXJJbmZvID0gdm9pZCAwO1xuICAgICAgICBpZiAoYWRkQ2hhcikge1xuICAgICAgICAgICAgY2hhckluZm8gPSBjaGFySW5kZXhbY2hyXSA9IGNoYXJJbmRleFtjaHJdIHx8IHt9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChjaGFyc1sxXSkge1xuICAgICAgICAgICAgdmFyIGNocjIgPSBjaGFyc1sxXTtcbiAgICAgICAgICAgIGFscGhhSW5kZXhbYWxwaGFdID0gU3RyaW5nLmZyb21DaGFyQ29kZShjaHIpICsgU3RyaW5nLmZyb21DaGFyQ29kZShjaHIyKTtcbiAgICAgICAgICAgIGFkZENoYXIgJiYgKGNoYXJJbmZvW2NocjJdID0gYWxwaGEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYWxwaGFJbmRleFthbHBoYV0gPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGNocik7XG4gICAgICAgICAgICBhZGRDaGFyICYmIChjaGFySW5mb1snJ10gPSBhbHBoYSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB4bWxfZW50aXRpZXNfMSA9IHJlcXVpcmUoXCIuL3htbC1lbnRpdGllc1wiKTtcbmV4cG9ydHMuWG1sRW50aXRpZXMgPSB4bWxfZW50aXRpZXNfMS5YbWxFbnRpdGllcztcbnZhciBodG1sNF9lbnRpdGllc18xID0gcmVxdWlyZShcIi4vaHRtbDQtZW50aXRpZXNcIik7XG5leHBvcnRzLkh0bWw0RW50aXRpZXMgPSBodG1sNF9lbnRpdGllc18xLkh0bWw0RW50aXRpZXM7XG52YXIgaHRtbDVfZW50aXRpZXNfMSA9IHJlcXVpcmUoXCIuL2h0bWw1LWVudGl0aWVzXCIpO1xuZXhwb3J0cy5IdG1sNUVudGl0aWVzID0gaHRtbDVfZW50aXRpZXNfMS5IdG1sNUVudGl0aWVzO1xuZXhwb3J0cy5BbGxIdG1sRW50aXRpZXMgPSBodG1sNV9lbnRpdGllc18xLkh0bWw1RW50aXRpZXM7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBBTFBIQV9JTkRFWCA9IHtcbiAgICAnJmx0JzogJzwnLFxuICAgICcmZ3QnOiAnPicsXG4gICAgJyZxdW90JzogJ1wiJyxcbiAgICAnJmFwb3MnOiAnXFwnJyxcbiAgICAnJmFtcCc6ICcmJyxcbiAgICAnJmx0Oyc6ICc8JyxcbiAgICAnJmd0Oyc6ICc+JyxcbiAgICAnJnF1b3Q7JzogJ1wiJyxcbiAgICAnJmFwb3M7JzogJ1xcJycsXG4gICAgJyZhbXA7JzogJyYnXG59O1xudmFyIENIQVJfSU5ERVggPSB7XG4gICAgNjA6ICdsdCcsXG4gICAgNjI6ICdndCcsXG4gICAgMzQ6ICdxdW90JyxcbiAgICAzOTogJ2Fwb3MnLFxuICAgIDM4OiAnYW1wJ1xufTtcbnZhciBDSEFSX1NfSU5ERVggPSB7XG4gICAgJzwnOiAnJmx0OycsXG4gICAgJz4nOiAnJmd0OycsXG4gICAgJ1wiJzogJyZxdW90OycsXG4gICAgJ1xcJyc6ICcmYXBvczsnLFxuICAgICcmJzogJyZhbXA7J1xufTtcbnZhciBYbWxFbnRpdGllcyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBYbWxFbnRpdGllcygpIHtcbiAgICB9XG4gICAgWG1sRW50aXRpZXMucHJvdG90eXBlLmVuY29kZSA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1s8PlwiJyZdL2csIGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICByZXR1cm4gQ0hBUl9TX0lOREVYW3NdO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFhtbEVudGl0aWVzLmVuY29kZSA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBYbWxFbnRpdGllcygpLmVuY29kZShzdHIpO1xuICAgIH07XG4gICAgWG1sRW50aXRpZXMucHJvdG90eXBlLmRlY29kZSA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3RyLnJlcGxhY2UoLyYjP1swLTlhLXpBLVpdKzs/L2csIGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICBpZiAocy5jaGFyQXQoMSkgPT09ICcjJykge1xuICAgICAgICAgICAgICAgIHZhciBjb2RlID0gcy5jaGFyQXQoMikudG9Mb3dlckNhc2UoKSA9PT0gJ3gnID9cbiAgICAgICAgICAgICAgICAgICAgcGFyc2VJbnQocy5zdWJzdHIoMyksIDE2KSA6XG4gICAgICAgICAgICAgICAgICAgIHBhcnNlSW50KHMuc3Vic3RyKDIpKTtcbiAgICAgICAgICAgICAgICBpZiAoaXNOYU4oY29kZSkgfHwgY29kZSA8IC0zMjc2OCB8fCBjb2RlID4gNjU1MzUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBBTFBIQV9JTkRFWFtzXSB8fCBzO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFhtbEVudGl0aWVzLmRlY29kZSA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBYbWxFbnRpdGllcygpLmRlY29kZShzdHIpO1xuICAgIH07XG4gICAgWG1sRW50aXRpZXMucHJvdG90eXBlLmVuY29kZU5vblVURiA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgICAgICB2YXIgc3RyTGVuZ3RoID0gc3RyLmxlbmd0aDtcbiAgICAgICAgdmFyIHJlc3VsdCA9ICcnO1xuICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgIHdoaWxlIChpIDwgc3RyTGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgYyA9IHN0ci5jaGFyQ29kZUF0KGkpO1xuICAgICAgICAgICAgdmFyIGFscGhhID0gQ0hBUl9JTkRFWFtjXTtcbiAgICAgICAgICAgIGlmIChhbHBoYSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCArPSBcIiZcIiArIGFscGhhICsgXCI7XCI7XG4gICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGMgPCAzMiB8fCBjID4gMTI2KSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9ICcmIycgKyBjICsgJzsnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9IHN0ci5jaGFyQXQoaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIFhtbEVudGl0aWVzLmVuY29kZU5vblVURiA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBYbWxFbnRpdGllcygpLmVuY29kZU5vblVURihzdHIpO1xuICAgIH07XG4gICAgWG1sRW50aXRpZXMucHJvdG90eXBlLmVuY29kZU5vbkFTQ0lJID0gZnVuY3Rpb24gKHN0cikge1xuICAgICAgICBpZiAoIXN0ciB8fCAhc3RyLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzdHJMZW5naHQgPSBzdHIubGVuZ3RoO1xuICAgICAgICB2YXIgcmVzdWx0ID0gJyc7XG4gICAgICAgIHZhciBpID0gMDtcbiAgICAgICAgd2hpbGUgKGkgPCBzdHJMZW5naHQpIHtcbiAgICAgICAgICAgIHZhciBjID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgICAgICBpZiAoYyA8PSAyNTUpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gc3RyW2krK107XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXN1bHQgKz0gJyYjJyArIGMgKyAnOyc7XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIFhtbEVudGl0aWVzLmVuY29kZU5vbkFTQ0lJID0gZnVuY3Rpb24gKHN0cikge1xuICAgICAgICByZXR1cm4gbmV3IFhtbEVudGl0aWVzKCkuZW5jb2RlTm9uQVNDSUkoc3RyKTtcbiAgICB9O1xuICAgIHJldHVybiBYbWxFbnRpdGllcztcbn0oKSk7XG5leHBvcnRzLlhtbEVudGl0aWVzID0gWG1sRW50aXRpZXM7XG4iLCIvKlxuKiBsb2dsZXZlbCAtIGh0dHBzOi8vZ2l0aHViLmNvbS9waW10ZXJyeS9sb2dsZXZlbFxuKlxuKiBDb3B5cmlnaHQgKGMpIDIwMTMgVGltIFBlcnJ5XG4qIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbiovXG4oZnVuY3Rpb24gKHJvb3QsIGRlZmluaXRpb24pIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgICAgIGRlZmluZShkZWZpbml0aW9uKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gZGVmaW5pdGlvbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJvb3QubG9nID0gZGVmaW5pdGlvbigpO1xuICAgIH1cbn0odGhpcywgZnVuY3Rpb24gKCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgLy8gU2xpZ2h0bHkgZHViaW91cyB0cmlja3MgdG8gY3V0IGRvd24gbWluaW1pemVkIGZpbGUgc2l6ZVxuICAgIHZhciBub29wID0gZnVuY3Rpb24oKSB7fTtcbiAgICB2YXIgdW5kZWZpbmVkVHlwZSA9IFwidW5kZWZpbmVkXCI7XG4gICAgdmFyIGlzSUUgPSAodHlwZW9mIHdpbmRvdyAhPT0gdW5kZWZpbmVkVHlwZSkgJiYgKHR5cGVvZiB3aW5kb3cubmF2aWdhdG9yICE9PSB1bmRlZmluZWRUeXBlKSAmJiAoXG4gICAgICAgIC9UcmlkZW50XFwvfE1TSUUgLy50ZXN0KHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KVxuICAgICk7XG5cbiAgICB2YXIgbG9nTWV0aG9kcyA9IFtcbiAgICAgICAgXCJ0cmFjZVwiLFxuICAgICAgICBcImRlYnVnXCIsXG4gICAgICAgIFwiaW5mb1wiLFxuICAgICAgICBcIndhcm5cIixcbiAgICAgICAgXCJlcnJvclwiXG4gICAgXTtcblxuICAgIC8vIENyb3NzLWJyb3dzZXIgYmluZCBlcXVpdmFsZW50IHRoYXQgd29ya3MgYXQgbGVhc3QgYmFjayB0byBJRTZcbiAgICBmdW5jdGlvbiBiaW5kTWV0aG9kKG9iaiwgbWV0aG9kTmFtZSkge1xuICAgICAgICB2YXIgbWV0aG9kID0gb2JqW21ldGhvZE5hbWVdO1xuICAgICAgICBpZiAodHlwZW9mIG1ldGhvZC5iaW5kID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICByZXR1cm4gbWV0aG9kLmJpbmQob2JqKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmNhbGwobWV0aG9kLCBvYmopO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIC8vIE1pc3NpbmcgYmluZCBzaGltIG9yIElFOCArIE1vZGVybml6ciwgZmFsbGJhY2sgdG8gd3JhcHBpbmdcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuYXBwbHkobWV0aG9kLCBbb2JqLCBhcmd1bWVudHNdKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gVHJhY2UoKSBkb2Vzbid0IHByaW50IHRoZSBtZXNzYWdlIGluIElFLCBzbyBmb3IgdGhhdCBjYXNlIHdlIG5lZWQgdG8gd3JhcCBpdFxuICAgIGZ1bmN0aW9uIHRyYWNlRm9ySUUoKSB7XG4gICAgICAgIGlmIChjb25zb2xlLmxvZykge1xuICAgICAgICAgICAgaWYgKGNvbnNvbGUubG9nLmFwcGx5KSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cuYXBwbHkoY29uc29sZSwgYXJndW1lbnRzKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gSW4gb2xkIElFLCBuYXRpdmUgY29uc29sZSBtZXRob2RzIHRoZW1zZWx2ZXMgZG9uJ3QgaGF2ZSBhcHBseSgpLlxuICAgICAgICAgICAgICAgIEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseS5hcHBseShjb25zb2xlLmxvZywgW2NvbnNvbGUsIGFyZ3VtZW50c10pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChjb25zb2xlLnRyYWNlKSBjb25zb2xlLnRyYWNlKCk7XG4gICAgfVxuXG4gICAgLy8gQnVpbGQgdGhlIGJlc3QgbG9nZ2luZyBtZXRob2QgcG9zc2libGUgZm9yIHRoaXMgZW52XG4gICAgLy8gV2hlcmV2ZXIgcG9zc2libGUgd2Ugd2FudCB0byBiaW5kLCBub3Qgd3JhcCwgdG8gcHJlc2VydmUgc3RhY2sgdHJhY2VzXG4gICAgZnVuY3Rpb24gcmVhbE1ldGhvZChtZXRob2ROYW1lKSB7XG4gICAgICAgIGlmIChtZXRob2ROYW1lID09PSAnZGVidWcnKSB7XG4gICAgICAgICAgICBtZXRob2ROYW1lID0gJ2xvZyc7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZW9mIGNvbnNvbGUgPT09IHVuZGVmaW5lZFR5cGUpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8gTm8gbWV0aG9kIHBvc3NpYmxlLCBmb3Igbm93IC0gZml4ZWQgbGF0ZXIgYnkgZW5hYmxlTG9nZ2luZ1doZW5Db25zb2xlQXJyaXZlc1xuICAgICAgICB9IGVsc2UgaWYgKG1ldGhvZE5hbWUgPT09ICd0cmFjZScgJiYgaXNJRSkge1xuICAgICAgICAgICAgcmV0dXJuIHRyYWNlRm9ySUU7XG4gICAgICAgIH0gZWxzZSBpZiAoY29uc29sZVttZXRob2ROYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gYmluZE1ldGhvZChjb25zb2xlLCBtZXRob2ROYW1lKTtcbiAgICAgICAgfSBlbHNlIGlmIChjb25zb2xlLmxvZyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gYmluZE1ldGhvZChjb25zb2xlLCAnbG9nJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbm9vcDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIFRoZXNlIHByaXZhdGUgZnVuY3Rpb25zIGFsd2F5cyBuZWVkIGB0aGlzYCB0byBiZSBzZXQgcHJvcGVybHlcblxuICAgIGZ1bmN0aW9uIHJlcGxhY2VMb2dnaW5nTWV0aG9kcyhsZXZlbCwgbG9nZ2VyTmFtZSkge1xuICAgICAgICAvKmpzaGludCB2YWxpZHRoaXM6dHJ1ZSAqL1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxvZ01ldGhvZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBtZXRob2ROYW1lID0gbG9nTWV0aG9kc1tpXTtcbiAgICAgICAgICAgIHRoaXNbbWV0aG9kTmFtZV0gPSAoaSA8IGxldmVsKSA/XG4gICAgICAgICAgICAgICAgbm9vcCA6XG4gICAgICAgICAgICAgICAgdGhpcy5tZXRob2RGYWN0b3J5KG1ldGhvZE5hbWUsIGxldmVsLCBsb2dnZXJOYW1lKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIERlZmluZSBsb2cubG9nIGFzIGFuIGFsaWFzIGZvciBsb2cuZGVidWdcbiAgICAgICAgdGhpcy5sb2cgPSB0aGlzLmRlYnVnO1xuICAgIH1cblxuICAgIC8vIEluIG9sZCBJRSB2ZXJzaW9ucywgdGhlIGNvbnNvbGUgaXNuJ3QgcHJlc2VudCB1bnRpbCB5b3UgZmlyc3Qgb3BlbiBpdC5cbiAgICAvLyBXZSBidWlsZCByZWFsTWV0aG9kKCkgcmVwbGFjZW1lbnRzIGhlcmUgdGhhdCByZWdlbmVyYXRlIGxvZ2dpbmcgbWV0aG9kc1xuICAgIGZ1bmN0aW9uIGVuYWJsZUxvZ2dpbmdXaGVuQ29uc29sZUFycml2ZXMobWV0aG9kTmFtZSwgbGV2ZWwsIGxvZ2dlck5hbWUpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gdW5kZWZpbmVkVHlwZSkge1xuICAgICAgICAgICAgICAgIHJlcGxhY2VMb2dnaW5nTWV0aG9kcy5jYWxsKHRoaXMsIGxldmVsLCBsb2dnZXJOYW1lKTtcbiAgICAgICAgICAgICAgICB0aGlzW21ldGhvZE5hbWVdLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gQnkgZGVmYXVsdCwgd2UgdXNlIGNsb3NlbHkgYm91bmQgcmVhbCBtZXRob2RzIHdoZXJldmVyIHBvc3NpYmxlLCBhbmRcbiAgICAvLyBvdGhlcndpc2Ugd2Ugd2FpdCBmb3IgYSBjb25zb2xlIHRvIGFwcGVhciwgYW5kIHRoZW4gdHJ5IGFnYWluLlxuICAgIGZ1bmN0aW9uIGRlZmF1bHRNZXRob2RGYWN0b3J5KG1ldGhvZE5hbWUsIGxldmVsLCBsb2dnZXJOYW1lKSB7XG4gICAgICAgIC8qanNoaW50IHZhbGlkdGhpczp0cnVlICovXG4gICAgICAgIHJldHVybiByZWFsTWV0aG9kKG1ldGhvZE5hbWUpIHx8XG4gICAgICAgICAgICAgICBlbmFibGVMb2dnaW5nV2hlbkNvbnNvbGVBcnJpdmVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gTG9nZ2VyKG5hbWUsIGRlZmF1bHRMZXZlbCwgZmFjdG9yeSkge1xuICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgdmFyIGN1cnJlbnRMZXZlbDtcblxuICAgICAgdmFyIHN0b3JhZ2VLZXkgPSBcImxvZ2xldmVsXCI7XG4gICAgICBpZiAodHlwZW9mIG5hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgc3RvcmFnZUtleSArPSBcIjpcIiArIG5hbWU7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBuYW1lID09PSBcInN5bWJvbFwiKSB7XG4gICAgICAgIHN0b3JhZ2VLZXkgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIHBlcnNpc3RMZXZlbElmUG9zc2libGUobGV2ZWxOdW0pIHtcbiAgICAgICAgICB2YXIgbGV2ZWxOYW1lID0gKGxvZ01ldGhvZHNbbGV2ZWxOdW1dIHx8ICdzaWxlbnQnKS50b1VwcGVyQ2FzZSgpO1xuXG4gICAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IHVuZGVmaW5lZFR5cGUgfHwgIXN0b3JhZ2VLZXkpIHJldHVybjtcblxuICAgICAgICAgIC8vIFVzZSBsb2NhbFN0b3JhZ2UgaWYgYXZhaWxhYmxlXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZVtzdG9yYWdlS2V5XSA9IGxldmVsTmFtZTtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH0gY2F0Y2ggKGlnbm9yZSkge31cblxuICAgICAgICAgIC8vIFVzZSBzZXNzaW9uIGNvb2tpZSBhcyBmYWxsYmFja1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIHdpbmRvdy5kb2N1bWVudC5jb29raWUgPVxuICAgICAgICAgICAgICAgIGVuY29kZVVSSUNvbXBvbmVudChzdG9yYWdlS2V5KSArIFwiPVwiICsgbGV2ZWxOYW1lICsgXCI7XCI7XG4gICAgICAgICAgfSBjYXRjaCAoaWdub3JlKSB7fVxuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBnZXRQZXJzaXN0ZWRMZXZlbCgpIHtcbiAgICAgICAgICB2YXIgc3RvcmVkTGV2ZWw7XG5cbiAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gdW5kZWZpbmVkVHlwZSB8fCAhc3RvcmFnZUtleSkgcmV0dXJuO1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgc3RvcmVkTGV2ZWwgPSB3aW5kb3cubG9jYWxTdG9yYWdlW3N0b3JhZ2VLZXldO1xuICAgICAgICAgIH0gY2F0Y2ggKGlnbm9yZSkge31cblxuICAgICAgICAgIC8vIEZhbGxiYWNrIHRvIGNvb2tpZXMgaWYgbG9jYWwgc3RvcmFnZSBnaXZlcyB1cyBub3RoaW5nXG4gICAgICAgICAgaWYgKHR5cGVvZiBzdG9yZWRMZXZlbCA9PT0gdW5kZWZpbmVkVHlwZSkge1xuICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgdmFyIGNvb2tpZSA9IHdpbmRvdy5kb2N1bWVudC5jb29raWU7XG4gICAgICAgICAgICAgICAgICB2YXIgbG9jYXRpb24gPSBjb29raWUuaW5kZXhPZihcbiAgICAgICAgICAgICAgICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoc3RvcmFnZUtleSkgKyBcIj1cIik7XG4gICAgICAgICAgICAgICAgICBpZiAobG9jYXRpb24gIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgc3RvcmVkTGV2ZWwgPSAvXihbXjtdKykvLmV4ZWMoY29va2llLnNsaWNlKGxvY2F0aW9uKSlbMV07XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0gY2F0Y2ggKGlnbm9yZSkge31cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBJZiB0aGUgc3RvcmVkIGxldmVsIGlzIG5vdCB2YWxpZCwgdHJlYXQgaXQgYXMgaWYgbm90aGluZyB3YXMgc3RvcmVkLlxuICAgICAgICAgIGlmIChzZWxmLmxldmVsc1tzdG9yZWRMZXZlbF0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICBzdG9yZWRMZXZlbCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gc3RvcmVkTGV2ZWw7XG4gICAgICB9XG5cbiAgICAgIC8qXG4gICAgICAgKlxuICAgICAgICogUHVibGljIGxvZ2dlciBBUEkgLSBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3BpbXRlcnJ5L2xvZ2xldmVsIGZvciBkZXRhaWxzXG4gICAgICAgKlxuICAgICAgICovXG5cbiAgICAgIHNlbGYubmFtZSA9IG5hbWU7XG5cbiAgICAgIHNlbGYubGV2ZWxzID0geyBcIlRSQUNFXCI6IDAsIFwiREVCVUdcIjogMSwgXCJJTkZPXCI6IDIsIFwiV0FSTlwiOiAzLFxuICAgICAgICAgIFwiRVJST1JcIjogNCwgXCJTSUxFTlRcIjogNX07XG5cbiAgICAgIHNlbGYubWV0aG9kRmFjdG9yeSA9IGZhY3RvcnkgfHwgZGVmYXVsdE1ldGhvZEZhY3Rvcnk7XG5cbiAgICAgIHNlbGYuZ2V0TGV2ZWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIGN1cnJlbnRMZXZlbDtcbiAgICAgIH07XG5cbiAgICAgIHNlbGYuc2V0TGV2ZWwgPSBmdW5jdGlvbiAobGV2ZWwsIHBlcnNpc3QpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIGxldmVsID09PSBcInN0cmluZ1wiICYmIHNlbGYubGV2ZWxzW2xldmVsLnRvVXBwZXJDYXNlKCldICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgbGV2ZWwgPSBzZWxmLmxldmVsc1tsZXZlbC50b1VwcGVyQ2FzZSgpXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHR5cGVvZiBsZXZlbCA9PT0gXCJudW1iZXJcIiAmJiBsZXZlbCA+PSAwICYmIGxldmVsIDw9IHNlbGYubGV2ZWxzLlNJTEVOVCkge1xuICAgICAgICAgICAgICBjdXJyZW50TGV2ZWwgPSBsZXZlbDtcbiAgICAgICAgICAgICAgaWYgKHBlcnNpc3QgIT09IGZhbHNlKSB7ICAvLyBkZWZhdWx0cyB0byB0cnVlXG4gICAgICAgICAgICAgICAgICBwZXJzaXN0TGV2ZWxJZlBvc3NpYmxlKGxldmVsKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICByZXBsYWNlTG9nZ2luZ01ldGhvZHMuY2FsbChzZWxmLCBsZXZlbCwgbmFtZSk7XG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29uc29sZSA9PT0gdW5kZWZpbmVkVHlwZSAmJiBsZXZlbCA8IHNlbGYubGV2ZWxzLlNJTEVOVCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiTm8gY29uc29sZSBhdmFpbGFibGUgZm9yIGxvZ2dpbmdcIjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRocm93IFwibG9nLnNldExldmVsKCkgY2FsbGVkIHdpdGggaW52YWxpZCBsZXZlbDogXCIgKyBsZXZlbDtcbiAgICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBzZWxmLnNldERlZmF1bHRMZXZlbCA9IGZ1bmN0aW9uIChsZXZlbCkge1xuICAgICAgICAgIGlmICghZ2V0UGVyc2lzdGVkTGV2ZWwoKSkge1xuICAgICAgICAgICAgICBzZWxmLnNldExldmVsKGxldmVsLCBmYWxzZSk7XG4gICAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgc2VsZi5lbmFibGVBbGwgPSBmdW5jdGlvbihwZXJzaXN0KSB7XG4gICAgICAgICAgc2VsZi5zZXRMZXZlbChzZWxmLmxldmVscy5UUkFDRSwgcGVyc2lzdCk7XG4gICAgICB9O1xuXG4gICAgICBzZWxmLmRpc2FibGVBbGwgPSBmdW5jdGlvbihwZXJzaXN0KSB7XG4gICAgICAgICAgc2VsZi5zZXRMZXZlbChzZWxmLmxldmVscy5TSUxFTlQsIHBlcnNpc3QpO1xuICAgICAgfTtcblxuICAgICAgLy8gSW5pdGlhbGl6ZSB3aXRoIHRoZSByaWdodCBsZXZlbFxuICAgICAgdmFyIGluaXRpYWxMZXZlbCA9IGdldFBlcnNpc3RlZExldmVsKCk7XG4gICAgICBpZiAoaW5pdGlhbExldmVsID09IG51bGwpIHtcbiAgICAgICAgICBpbml0aWFsTGV2ZWwgPSBkZWZhdWx0TGV2ZWwgPT0gbnVsbCA/IFwiV0FSTlwiIDogZGVmYXVsdExldmVsO1xuICAgICAgfVxuICAgICAgc2VsZi5zZXRMZXZlbChpbml0aWFsTGV2ZWwsIGZhbHNlKTtcbiAgICB9XG5cbiAgICAvKlxuICAgICAqXG4gICAgICogVG9wLWxldmVsIEFQSVxuICAgICAqXG4gICAgICovXG5cbiAgICB2YXIgZGVmYXVsdExvZ2dlciA9IG5ldyBMb2dnZXIoKTtcblxuICAgIHZhciBfbG9nZ2Vyc0J5TmFtZSA9IHt9O1xuICAgIGRlZmF1bHRMb2dnZXIuZ2V0TG9nZ2VyID0gZnVuY3Rpb24gZ2V0TG9nZ2VyKG5hbWUpIHtcbiAgICAgICAgaWYgKCh0eXBlb2YgbmFtZSAhPT0gXCJzeW1ib2xcIiAmJiB0eXBlb2YgbmFtZSAhPT0gXCJzdHJpbmdcIikgfHwgbmFtZSA9PT0gXCJcIikge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJZb3UgbXVzdCBzdXBwbHkgYSBuYW1lIHdoZW4gY3JlYXRpbmcgYSBsb2dnZXIuXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGxvZ2dlciA9IF9sb2dnZXJzQnlOYW1lW25hbWVdO1xuICAgICAgICBpZiAoIWxvZ2dlcikge1xuICAgICAgICAgIGxvZ2dlciA9IF9sb2dnZXJzQnlOYW1lW25hbWVdID0gbmV3IExvZ2dlcihcbiAgICAgICAgICAgIG5hbWUsIGRlZmF1bHRMb2dnZXIuZ2V0TGV2ZWwoKSwgZGVmYXVsdExvZ2dlci5tZXRob2RGYWN0b3J5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbG9nZ2VyO1xuICAgIH07XG5cbiAgICAvLyBHcmFiIHRoZSBjdXJyZW50IGdsb2JhbCBsb2cgdmFyaWFibGUgaW4gY2FzZSBvZiBvdmVyd3JpdGVcbiAgICB2YXIgX2xvZyA9ICh0eXBlb2Ygd2luZG93ICE9PSB1bmRlZmluZWRUeXBlKSA/IHdpbmRvdy5sb2cgOiB1bmRlZmluZWQ7XG4gICAgZGVmYXVsdExvZ2dlci5ub0NvbmZsaWN0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSB1bmRlZmluZWRUeXBlICYmXG4gICAgICAgICAgICAgICB3aW5kb3cubG9nID09PSBkZWZhdWx0TG9nZ2VyKSB7XG4gICAgICAgICAgICB3aW5kb3cubG9nID0gX2xvZztcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBkZWZhdWx0TG9nZ2VyO1xuICAgIH07XG5cbiAgICBkZWZhdWx0TG9nZ2VyLmdldExvZ2dlcnMgPSBmdW5jdGlvbiBnZXRMb2dnZXJzKCkge1xuICAgICAgICByZXR1cm4gX2xvZ2dlcnNCeU5hbWU7XG4gICAgfTtcblxuICAgIC8vIEVTNiBkZWZhdWx0IGV4cG9ydCwgZm9yIGNvbXBhdGliaWxpdHlcbiAgICBkZWZhdWx0TG9nZ2VyWydkZWZhdWx0J10gPSBkZWZhdWx0TG9nZ2VyO1xuXG4gICAgcmV0dXJuIGRlZmF1bHRMb2dnZXI7XG59KSk7XG4iLCIvKiEgaHR0cHM6Ly9tdGhzLmJlL3B1bnljb2RlIHYxLjMuMiBieSBAbWF0aGlhcyAqL1xuOyhmdW5jdGlvbihyb290KSB7XG5cblx0LyoqIERldGVjdCBmcmVlIHZhcmlhYmxlcyAqL1xuXHR2YXIgZnJlZUV4cG9ydHMgPSB0eXBlb2YgZXhwb3J0cyA9PSAnb2JqZWN0JyAmJiBleHBvcnRzICYmXG5cdFx0IWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblx0dmFyIGZyZWVNb2R1bGUgPSB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJlxuXHRcdCFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlO1xuXHR2YXIgZnJlZUdsb2JhbCA9IHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgZ2xvYmFsO1xuXHRpZiAoXG5cdFx0ZnJlZUdsb2JhbC5nbG9iYWwgPT09IGZyZWVHbG9iYWwgfHxcblx0XHRmcmVlR2xvYmFsLndpbmRvdyA9PT0gZnJlZUdsb2JhbCB8fFxuXHRcdGZyZWVHbG9iYWwuc2VsZiA9PT0gZnJlZUdsb2JhbFxuXHQpIHtcblx0XHRyb290ID0gZnJlZUdsb2JhbDtcblx0fVxuXG5cdC8qKlxuXHQgKiBUaGUgYHB1bnljb2RlYCBvYmplY3QuXG5cdCAqIEBuYW1lIHB1bnljb2RlXG5cdCAqIEB0eXBlIE9iamVjdFxuXHQgKi9cblx0dmFyIHB1bnljb2RlLFxuXG5cdC8qKiBIaWdoZXN0IHBvc2l0aXZlIHNpZ25lZCAzMi1iaXQgZmxvYXQgdmFsdWUgKi9cblx0bWF4SW50ID0gMjE0NzQ4MzY0NywgLy8gYWthLiAweDdGRkZGRkZGIG9yIDJeMzEtMVxuXG5cdC8qKiBCb290c3RyaW5nIHBhcmFtZXRlcnMgKi9cblx0YmFzZSA9IDM2LFxuXHR0TWluID0gMSxcblx0dE1heCA9IDI2LFxuXHRza2V3ID0gMzgsXG5cdGRhbXAgPSA3MDAsXG5cdGluaXRpYWxCaWFzID0gNzIsXG5cdGluaXRpYWxOID0gMTI4LCAvLyAweDgwXG5cdGRlbGltaXRlciA9ICctJywgLy8gJ1xceDJEJ1xuXG5cdC8qKiBSZWd1bGFyIGV4cHJlc3Npb25zICovXG5cdHJlZ2V4UHVueWNvZGUgPSAvXnhuLS0vLFxuXHRyZWdleE5vbkFTQ0lJID0gL1teXFx4MjAtXFx4N0VdLywgLy8gdW5wcmludGFibGUgQVNDSUkgY2hhcnMgKyBub24tQVNDSUkgY2hhcnNcblx0cmVnZXhTZXBhcmF0b3JzID0gL1tcXHgyRVxcdTMwMDJcXHVGRjBFXFx1RkY2MV0vZywgLy8gUkZDIDM0OTAgc2VwYXJhdG9yc1xuXG5cdC8qKiBFcnJvciBtZXNzYWdlcyAqL1xuXHRlcnJvcnMgPSB7XG5cdFx0J292ZXJmbG93JzogJ092ZXJmbG93OiBpbnB1dCBuZWVkcyB3aWRlciBpbnRlZ2VycyB0byBwcm9jZXNzJyxcblx0XHQnbm90LWJhc2ljJzogJ0lsbGVnYWwgaW5wdXQgPj0gMHg4MCAobm90IGEgYmFzaWMgY29kZSBwb2ludCknLFxuXHRcdCdpbnZhbGlkLWlucHV0JzogJ0ludmFsaWQgaW5wdXQnXG5cdH0sXG5cblx0LyoqIENvbnZlbmllbmNlIHNob3J0Y3V0cyAqL1xuXHRiYXNlTWludXNUTWluID0gYmFzZSAtIHRNaW4sXG5cdGZsb29yID0gTWF0aC5mbG9vcixcblx0c3RyaW5nRnJvbUNoYXJDb2RlID0gU3RyaW5nLmZyb21DaGFyQ29kZSxcblxuXHQvKiogVGVtcG9yYXJ5IHZhcmlhYmxlICovXG5cdGtleTtcblxuXHQvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuXHQvKipcblx0ICogQSBnZW5lcmljIGVycm9yIHV0aWxpdHkgZnVuY3Rpb24uXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIFRoZSBlcnJvciB0eXBlLlxuXHQgKiBAcmV0dXJucyB7RXJyb3J9IFRocm93cyBhIGBSYW5nZUVycm9yYCB3aXRoIHRoZSBhcHBsaWNhYmxlIGVycm9yIG1lc3NhZ2UuXG5cdCAqL1xuXHRmdW5jdGlvbiBlcnJvcih0eXBlKSB7XG5cdFx0dGhyb3cgUmFuZ2VFcnJvcihlcnJvcnNbdHlwZV0pO1xuXHR9XG5cblx0LyoqXG5cdCAqIEEgZ2VuZXJpYyBgQXJyYXkjbWFwYCB1dGlsaXR5IGZ1bmN0aW9uLlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuXHQgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdGhhdCBnZXRzIGNhbGxlZCBmb3IgZXZlcnkgYXJyYXlcblx0ICogaXRlbS5cblx0ICogQHJldHVybnMge0FycmF5fSBBIG5ldyBhcnJheSBvZiB2YWx1ZXMgcmV0dXJuZWQgYnkgdGhlIGNhbGxiYWNrIGZ1bmN0aW9uLlxuXHQgKi9cblx0ZnVuY3Rpb24gbWFwKGFycmF5LCBmbikge1xuXHRcdHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG5cdFx0dmFyIHJlc3VsdCA9IFtdO1xuXHRcdHdoaWxlIChsZW5ndGgtLSkge1xuXHRcdFx0cmVzdWx0W2xlbmd0aF0gPSBmbihhcnJheVtsZW5ndGhdKTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fVxuXG5cdC8qKlxuXHQgKiBBIHNpbXBsZSBgQXJyYXkjbWFwYC1saWtlIHdyYXBwZXIgdG8gd29yayB3aXRoIGRvbWFpbiBuYW1lIHN0cmluZ3Mgb3IgZW1haWxcblx0ICogYWRkcmVzc2VzLlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAcGFyYW0ge1N0cmluZ30gZG9tYWluIFRoZSBkb21haW4gbmFtZSBvciBlbWFpbCBhZGRyZXNzLlxuXHQgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdGhhdCBnZXRzIGNhbGxlZCBmb3IgZXZlcnlcblx0ICogY2hhcmFjdGVyLlxuXHQgKiBAcmV0dXJucyB7QXJyYXl9IEEgbmV3IHN0cmluZyBvZiBjaGFyYWN0ZXJzIHJldHVybmVkIGJ5IHRoZSBjYWxsYmFja1xuXHQgKiBmdW5jdGlvbi5cblx0ICovXG5cdGZ1bmN0aW9uIG1hcERvbWFpbihzdHJpbmcsIGZuKSB7XG5cdFx0dmFyIHBhcnRzID0gc3RyaW5nLnNwbGl0KCdAJyk7XG5cdFx0dmFyIHJlc3VsdCA9ICcnO1xuXHRcdGlmIChwYXJ0cy5sZW5ndGggPiAxKSB7XG5cdFx0XHQvLyBJbiBlbWFpbCBhZGRyZXNzZXMsIG9ubHkgdGhlIGRvbWFpbiBuYW1lIHNob3VsZCBiZSBwdW55Y29kZWQuIExlYXZlXG5cdFx0XHQvLyB0aGUgbG9jYWwgcGFydCAoaS5lLiBldmVyeXRoaW5nIHVwIHRvIGBAYCkgaW50YWN0LlxuXHRcdFx0cmVzdWx0ID0gcGFydHNbMF0gKyAnQCc7XG5cdFx0XHRzdHJpbmcgPSBwYXJ0c1sxXTtcblx0XHR9XG5cdFx0Ly8gQXZvaWQgYHNwbGl0KHJlZ2V4KWAgZm9yIElFOCBjb21wYXRpYmlsaXR5LiBTZWUgIzE3LlxuXHRcdHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKHJlZ2V4U2VwYXJhdG9ycywgJ1xceDJFJyk7XG5cdFx0dmFyIGxhYmVscyA9IHN0cmluZy5zcGxpdCgnLicpO1xuXHRcdHZhciBlbmNvZGVkID0gbWFwKGxhYmVscywgZm4pLmpvaW4oJy4nKTtcblx0XHRyZXR1cm4gcmVzdWx0ICsgZW5jb2RlZDtcblx0fVxuXG5cdC8qKlxuXHQgKiBDcmVhdGVzIGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIG51bWVyaWMgY29kZSBwb2ludHMgb2YgZWFjaCBVbmljb2RlXG5cdCAqIGNoYXJhY3RlciBpbiB0aGUgc3RyaW5nLiBXaGlsZSBKYXZhU2NyaXB0IHVzZXMgVUNTLTIgaW50ZXJuYWxseSxcblx0ICogdGhpcyBmdW5jdGlvbiB3aWxsIGNvbnZlcnQgYSBwYWlyIG9mIHN1cnJvZ2F0ZSBoYWx2ZXMgKGVhY2ggb2Ygd2hpY2hcblx0ICogVUNTLTIgZXhwb3NlcyBhcyBzZXBhcmF0ZSBjaGFyYWN0ZXJzKSBpbnRvIGEgc2luZ2xlIGNvZGUgcG9pbnQsXG5cdCAqIG1hdGNoaW5nIFVURi0xNi5cblx0ICogQHNlZSBgcHVueWNvZGUudWNzMi5lbmNvZGVgXG5cdCAqIEBzZWUgPGh0dHBzOi8vbWF0aGlhc2J5bmVucy5iZS9ub3Rlcy9qYXZhc2NyaXB0LWVuY29kaW5nPlxuXHQgKiBAbWVtYmVyT2YgcHVueWNvZGUudWNzMlxuXHQgKiBAbmFtZSBkZWNvZGVcblx0ICogQHBhcmFtIHtTdHJpbmd9IHN0cmluZyBUaGUgVW5pY29kZSBpbnB1dCBzdHJpbmcgKFVDUy0yKS5cblx0ICogQHJldHVybnMge0FycmF5fSBUaGUgbmV3IGFycmF5IG9mIGNvZGUgcG9pbnRzLlxuXHQgKi9cblx0ZnVuY3Rpb24gdWNzMmRlY29kZShzdHJpbmcpIHtcblx0XHR2YXIgb3V0cHV0ID0gW10sXG5cdFx0ICAgIGNvdW50ZXIgPSAwLFxuXHRcdCAgICBsZW5ndGggPSBzdHJpbmcubGVuZ3RoLFxuXHRcdCAgICB2YWx1ZSxcblx0XHQgICAgZXh0cmE7XG5cdFx0d2hpbGUgKGNvdW50ZXIgPCBsZW5ndGgpIHtcblx0XHRcdHZhbHVlID0gc3RyaW5nLmNoYXJDb2RlQXQoY291bnRlcisrKTtcblx0XHRcdGlmICh2YWx1ZSA+PSAweEQ4MDAgJiYgdmFsdWUgPD0gMHhEQkZGICYmIGNvdW50ZXIgPCBsZW5ndGgpIHtcblx0XHRcdFx0Ly8gaGlnaCBzdXJyb2dhdGUsIGFuZCB0aGVyZSBpcyBhIG5leHQgY2hhcmFjdGVyXG5cdFx0XHRcdGV4dHJhID0gc3RyaW5nLmNoYXJDb2RlQXQoY291bnRlcisrKTtcblx0XHRcdFx0aWYgKChleHRyYSAmIDB4RkMwMCkgPT0gMHhEQzAwKSB7IC8vIGxvdyBzdXJyb2dhdGVcblx0XHRcdFx0XHRvdXRwdXQucHVzaCgoKHZhbHVlICYgMHgzRkYpIDw8IDEwKSArIChleHRyYSAmIDB4M0ZGKSArIDB4MTAwMDApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdC8vIHVubWF0Y2hlZCBzdXJyb2dhdGU7IG9ubHkgYXBwZW5kIHRoaXMgY29kZSB1bml0LCBpbiBjYXNlIHRoZSBuZXh0XG5cdFx0XHRcdFx0Ly8gY29kZSB1bml0IGlzIHRoZSBoaWdoIHN1cnJvZ2F0ZSBvZiBhIHN1cnJvZ2F0ZSBwYWlyXG5cdFx0XHRcdFx0b3V0cHV0LnB1c2godmFsdWUpO1xuXHRcdFx0XHRcdGNvdW50ZXItLTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0b3V0cHV0LnB1c2godmFsdWUpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gb3V0cHV0O1xuXHR9XG5cblx0LyoqXG5cdCAqIENyZWF0ZXMgYSBzdHJpbmcgYmFzZWQgb24gYW4gYXJyYXkgb2YgbnVtZXJpYyBjb2RlIHBvaW50cy5cblx0ICogQHNlZSBgcHVueWNvZGUudWNzMi5kZWNvZGVgXG5cdCAqIEBtZW1iZXJPZiBwdW55Y29kZS51Y3MyXG5cdCAqIEBuYW1lIGVuY29kZVxuXHQgKiBAcGFyYW0ge0FycmF5fSBjb2RlUG9pbnRzIFRoZSBhcnJheSBvZiBudW1lcmljIGNvZGUgcG9pbnRzLlxuXHQgKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgbmV3IFVuaWNvZGUgc3RyaW5nIChVQ1MtMikuXG5cdCAqL1xuXHRmdW5jdGlvbiB1Y3MyZW5jb2RlKGFycmF5KSB7XG5cdFx0cmV0dXJuIG1hcChhcnJheSwgZnVuY3Rpb24odmFsdWUpIHtcblx0XHRcdHZhciBvdXRwdXQgPSAnJztcblx0XHRcdGlmICh2YWx1ZSA+IDB4RkZGRikge1xuXHRcdFx0XHR2YWx1ZSAtPSAweDEwMDAwO1xuXHRcdFx0XHRvdXRwdXQgKz0gc3RyaW5nRnJvbUNoYXJDb2RlKHZhbHVlID4+PiAxMCAmIDB4M0ZGIHwgMHhEODAwKTtcblx0XHRcdFx0dmFsdWUgPSAweERDMDAgfCB2YWx1ZSAmIDB4M0ZGO1xuXHRcdFx0fVxuXHRcdFx0b3V0cHV0ICs9IHN0cmluZ0Zyb21DaGFyQ29kZSh2YWx1ZSk7XG5cdFx0XHRyZXR1cm4gb3V0cHV0O1xuXHRcdH0pLmpvaW4oJycpO1xuXHR9XG5cblx0LyoqXG5cdCAqIENvbnZlcnRzIGEgYmFzaWMgY29kZSBwb2ludCBpbnRvIGEgZGlnaXQvaW50ZWdlci5cblx0ICogQHNlZSBgZGlnaXRUb0Jhc2ljKClgXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBjb2RlUG9pbnQgVGhlIGJhc2ljIG51bWVyaWMgY29kZSBwb2ludCB2YWx1ZS5cblx0ICogQHJldHVybnMge051bWJlcn0gVGhlIG51bWVyaWMgdmFsdWUgb2YgYSBiYXNpYyBjb2RlIHBvaW50IChmb3IgdXNlIGluXG5cdCAqIHJlcHJlc2VudGluZyBpbnRlZ2VycykgaW4gdGhlIHJhbmdlIGAwYCB0byBgYmFzZSAtIDFgLCBvciBgYmFzZWAgaWZcblx0ICogdGhlIGNvZGUgcG9pbnQgZG9lcyBub3QgcmVwcmVzZW50IGEgdmFsdWUuXG5cdCAqL1xuXHRmdW5jdGlvbiBiYXNpY1RvRGlnaXQoY29kZVBvaW50KSB7XG5cdFx0aWYgKGNvZGVQb2ludCAtIDQ4IDwgMTApIHtcblx0XHRcdHJldHVybiBjb2RlUG9pbnQgLSAyMjtcblx0XHR9XG5cdFx0aWYgKGNvZGVQb2ludCAtIDY1IDwgMjYpIHtcblx0XHRcdHJldHVybiBjb2RlUG9pbnQgLSA2NTtcblx0XHR9XG5cdFx0aWYgKGNvZGVQb2ludCAtIDk3IDwgMjYpIHtcblx0XHRcdHJldHVybiBjb2RlUG9pbnQgLSA5Nztcblx0XHR9XG5cdFx0cmV0dXJuIGJhc2U7XG5cdH1cblxuXHQvKipcblx0ICogQ29udmVydHMgYSBkaWdpdC9pbnRlZ2VyIGludG8gYSBiYXNpYyBjb2RlIHBvaW50LlxuXHQgKiBAc2VlIGBiYXNpY1RvRGlnaXQoKWBcblx0ICogQHByaXZhdGVcblx0ICogQHBhcmFtIHtOdW1iZXJ9IGRpZ2l0IFRoZSBudW1lcmljIHZhbHVlIG9mIGEgYmFzaWMgY29kZSBwb2ludC5cblx0ICogQHJldHVybnMge051bWJlcn0gVGhlIGJhc2ljIGNvZGUgcG9pbnQgd2hvc2UgdmFsdWUgKHdoZW4gdXNlZCBmb3Jcblx0ICogcmVwcmVzZW50aW5nIGludGVnZXJzKSBpcyBgZGlnaXRgLCB3aGljaCBuZWVkcyB0byBiZSBpbiB0aGUgcmFuZ2Vcblx0ICogYDBgIHRvIGBiYXNlIC0gMWAuIElmIGBmbGFnYCBpcyBub24temVybywgdGhlIHVwcGVyY2FzZSBmb3JtIGlzXG5cdCAqIHVzZWQ7IGVsc2UsIHRoZSBsb3dlcmNhc2UgZm9ybSBpcyB1c2VkLiBUaGUgYmVoYXZpb3IgaXMgdW5kZWZpbmVkXG5cdCAqIGlmIGBmbGFnYCBpcyBub24temVybyBhbmQgYGRpZ2l0YCBoYXMgbm8gdXBwZXJjYXNlIGZvcm0uXG5cdCAqL1xuXHRmdW5jdGlvbiBkaWdpdFRvQmFzaWMoZGlnaXQsIGZsYWcpIHtcblx0XHQvLyAgMC4uMjUgbWFwIHRvIEFTQ0lJIGEuLnogb3IgQS4uWlxuXHRcdC8vIDI2Li4zNSBtYXAgdG8gQVNDSUkgMC4uOVxuXHRcdHJldHVybiBkaWdpdCArIDIyICsgNzUgKiAoZGlnaXQgPCAyNikgLSAoKGZsYWcgIT0gMCkgPDwgNSk7XG5cdH1cblxuXHQvKipcblx0ICogQmlhcyBhZGFwdGF0aW9uIGZ1bmN0aW9uIGFzIHBlciBzZWN0aW9uIDMuNCBvZiBSRkMgMzQ5Mi5cblx0ICogaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzQ5MiNzZWN0aW9uLTMuNFxuXHQgKiBAcHJpdmF0ZVxuXHQgKi9cblx0ZnVuY3Rpb24gYWRhcHQoZGVsdGEsIG51bVBvaW50cywgZmlyc3RUaW1lKSB7XG5cdFx0dmFyIGsgPSAwO1xuXHRcdGRlbHRhID0gZmlyc3RUaW1lID8gZmxvb3IoZGVsdGEgLyBkYW1wKSA6IGRlbHRhID4+IDE7XG5cdFx0ZGVsdGEgKz0gZmxvb3IoZGVsdGEgLyBudW1Qb2ludHMpO1xuXHRcdGZvciAoLyogbm8gaW5pdGlhbGl6YXRpb24gKi87IGRlbHRhID4gYmFzZU1pbnVzVE1pbiAqIHRNYXggPj4gMTsgayArPSBiYXNlKSB7XG5cdFx0XHRkZWx0YSA9IGZsb29yKGRlbHRhIC8gYmFzZU1pbnVzVE1pbik7XG5cdFx0fVxuXHRcdHJldHVybiBmbG9vcihrICsgKGJhc2VNaW51c1RNaW4gKyAxKSAqIGRlbHRhIC8gKGRlbHRhICsgc2tldykpO1xuXHR9XG5cblx0LyoqXG5cdCAqIENvbnZlcnRzIGEgUHVueWNvZGUgc3RyaW5nIG9mIEFTQ0lJLW9ubHkgc3ltYm9scyB0byBhIHN0cmluZyBvZiBVbmljb2RlXG5cdCAqIHN5bWJvbHMuXG5cdCAqIEBtZW1iZXJPZiBwdW55Y29kZVxuXHQgKiBAcGFyYW0ge1N0cmluZ30gaW5wdXQgVGhlIFB1bnljb2RlIHN0cmluZyBvZiBBU0NJSS1vbmx5IHN5bWJvbHMuXG5cdCAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSByZXN1bHRpbmcgc3RyaW5nIG9mIFVuaWNvZGUgc3ltYm9scy5cblx0ICovXG5cdGZ1bmN0aW9uIGRlY29kZShpbnB1dCkge1xuXHRcdC8vIERvbid0IHVzZSBVQ1MtMlxuXHRcdHZhciBvdXRwdXQgPSBbXSxcblx0XHQgICAgaW5wdXRMZW5ndGggPSBpbnB1dC5sZW5ndGgsXG5cdFx0ICAgIG91dCxcblx0XHQgICAgaSA9IDAsXG5cdFx0ICAgIG4gPSBpbml0aWFsTixcblx0XHQgICAgYmlhcyA9IGluaXRpYWxCaWFzLFxuXHRcdCAgICBiYXNpYyxcblx0XHQgICAgaixcblx0XHQgICAgaW5kZXgsXG5cdFx0ICAgIG9sZGksXG5cdFx0ICAgIHcsXG5cdFx0ICAgIGssXG5cdFx0ICAgIGRpZ2l0LFxuXHRcdCAgICB0LFxuXHRcdCAgICAvKiogQ2FjaGVkIGNhbGN1bGF0aW9uIHJlc3VsdHMgKi9cblx0XHQgICAgYmFzZU1pbnVzVDtcblxuXHRcdC8vIEhhbmRsZSB0aGUgYmFzaWMgY29kZSBwb2ludHM6IGxldCBgYmFzaWNgIGJlIHRoZSBudW1iZXIgb2YgaW5wdXQgY29kZVxuXHRcdC8vIHBvaW50cyBiZWZvcmUgdGhlIGxhc3QgZGVsaW1pdGVyLCBvciBgMGAgaWYgdGhlcmUgaXMgbm9uZSwgdGhlbiBjb3B5XG5cdFx0Ly8gdGhlIGZpcnN0IGJhc2ljIGNvZGUgcG9pbnRzIHRvIHRoZSBvdXRwdXQuXG5cblx0XHRiYXNpYyA9IGlucHV0Lmxhc3RJbmRleE9mKGRlbGltaXRlcik7XG5cdFx0aWYgKGJhc2ljIDwgMCkge1xuXHRcdFx0YmFzaWMgPSAwO1xuXHRcdH1cblxuXHRcdGZvciAoaiA9IDA7IGogPCBiYXNpYzsgKytqKSB7XG5cdFx0XHQvLyBpZiBpdCdzIG5vdCBhIGJhc2ljIGNvZGUgcG9pbnRcblx0XHRcdGlmIChpbnB1dC5jaGFyQ29kZUF0KGopID49IDB4ODApIHtcblx0XHRcdFx0ZXJyb3IoJ25vdC1iYXNpYycpO1xuXHRcdFx0fVxuXHRcdFx0b3V0cHV0LnB1c2goaW5wdXQuY2hhckNvZGVBdChqKSk7XG5cdFx0fVxuXG5cdFx0Ly8gTWFpbiBkZWNvZGluZyBsb29wOiBzdGFydCBqdXN0IGFmdGVyIHRoZSBsYXN0IGRlbGltaXRlciBpZiBhbnkgYmFzaWMgY29kZVxuXHRcdC8vIHBvaW50cyB3ZXJlIGNvcGllZDsgc3RhcnQgYXQgdGhlIGJlZ2lubmluZyBvdGhlcndpc2UuXG5cblx0XHRmb3IgKGluZGV4ID0gYmFzaWMgPiAwID8gYmFzaWMgKyAxIDogMDsgaW5kZXggPCBpbnB1dExlbmd0aDsgLyogbm8gZmluYWwgZXhwcmVzc2lvbiAqLykge1xuXG5cdFx0XHQvLyBgaW5kZXhgIGlzIHRoZSBpbmRleCBvZiB0aGUgbmV4dCBjaGFyYWN0ZXIgdG8gYmUgY29uc3VtZWQuXG5cdFx0XHQvLyBEZWNvZGUgYSBnZW5lcmFsaXplZCB2YXJpYWJsZS1sZW5ndGggaW50ZWdlciBpbnRvIGBkZWx0YWAsXG5cdFx0XHQvLyB3aGljaCBnZXRzIGFkZGVkIHRvIGBpYC4gVGhlIG92ZXJmbG93IGNoZWNraW5nIGlzIGVhc2llclxuXHRcdFx0Ly8gaWYgd2UgaW5jcmVhc2UgYGlgIGFzIHdlIGdvLCB0aGVuIHN1YnRyYWN0IG9mZiBpdHMgc3RhcnRpbmdcblx0XHRcdC8vIHZhbHVlIGF0IHRoZSBlbmQgdG8gb2J0YWluIGBkZWx0YWAuXG5cdFx0XHRmb3IgKG9sZGkgPSBpLCB3ID0gMSwgayA9IGJhc2U7IC8qIG5vIGNvbmRpdGlvbiAqLzsgayArPSBiYXNlKSB7XG5cblx0XHRcdFx0aWYgKGluZGV4ID49IGlucHV0TGVuZ3RoKSB7XG5cdFx0XHRcdFx0ZXJyb3IoJ2ludmFsaWQtaW5wdXQnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGRpZ2l0ID0gYmFzaWNUb0RpZ2l0KGlucHV0LmNoYXJDb2RlQXQoaW5kZXgrKykpO1xuXG5cdFx0XHRcdGlmIChkaWdpdCA+PSBiYXNlIHx8IGRpZ2l0ID4gZmxvb3IoKG1heEludCAtIGkpIC8gdykpIHtcblx0XHRcdFx0XHRlcnJvcignb3ZlcmZsb3cnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGkgKz0gZGlnaXQgKiB3O1xuXHRcdFx0XHR0ID0gayA8PSBiaWFzID8gdE1pbiA6IChrID49IGJpYXMgKyB0TWF4ID8gdE1heCA6IGsgLSBiaWFzKTtcblxuXHRcdFx0XHRpZiAoZGlnaXQgPCB0KSB7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRiYXNlTWludXNUID0gYmFzZSAtIHQ7XG5cdFx0XHRcdGlmICh3ID4gZmxvb3IobWF4SW50IC8gYmFzZU1pbnVzVCkpIHtcblx0XHRcdFx0XHRlcnJvcignb3ZlcmZsb3cnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHcgKj0gYmFzZU1pbnVzVDtcblxuXHRcdFx0fVxuXG5cdFx0XHRvdXQgPSBvdXRwdXQubGVuZ3RoICsgMTtcblx0XHRcdGJpYXMgPSBhZGFwdChpIC0gb2xkaSwgb3V0LCBvbGRpID09IDApO1xuXG5cdFx0XHQvLyBgaWAgd2FzIHN1cHBvc2VkIHRvIHdyYXAgYXJvdW5kIGZyb20gYG91dGAgdG8gYDBgLFxuXHRcdFx0Ly8gaW5jcmVtZW50aW5nIGBuYCBlYWNoIHRpbWUsIHNvIHdlJ2xsIGZpeCB0aGF0IG5vdzpcblx0XHRcdGlmIChmbG9vcihpIC8gb3V0KSA+IG1heEludCAtIG4pIHtcblx0XHRcdFx0ZXJyb3IoJ292ZXJmbG93Jyk7XG5cdFx0XHR9XG5cblx0XHRcdG4gKz0gZmxvb3IoaSAvIG91dCk7XG5cdFx0XHRpICU9IG91dDtcblxuXHRcdFx0Ly8gSW5zZXJ0IGBuYCBhdCBwb3NpdGlvbiBgaWAgb2YgdGhlIG91dHB1dFxuXHRcdFx0b3V0cHV0LnNwbGljZShpKyssIDAsIG4pO1xuXG5cdFx0fVxuXG5cdFx0cmV0dXJuIHVjczJlbmNvZGUob3V0cHV0KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBDb252ZXJ0cyBhIHN0cmluZyBvZiBVbmljb2RlIHN5bWJvbHMgKGUuZy4gYSBkb21haW4gbmFtZSBsYWJlbCkgdG8gYVxuXHQgKiBQdW55Y29kZSBzdHJpbmcgb2YgQVNDSUktb25seSBzeW1ib2xzLlxuXHQgKiBAbWVtYmVyT2YgcHVueWNvZGVcblx0ICogQHBhcmFtIHtTdHJpbmd9IGlucHV0IFRoZSBzdHJpbmcgb2YgVW5pY29kZSBzeW1ib2xzLlxuXHQgKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgcmVzdWx0aW5nIFB1bnljb2RlIHN0cmluZyBvZiBBU0NJSS1vbmx5IHN5bWJvbHMuXG5cdCAqL1xuXHRmdW5jdGlvbiBlbmNvZGUoaW5wdXQpIHtcblx0XHR2YXIgbixcblx0XHQgICAgZGVsdGEsXG5cdFx0ICAgIGhhbmRsZWRDUENvdW50LFxuXHRcdCAgICBiYXNpY0xlbmd0aCxcblx0XHQgICAgYmlhcyxcblx0XHQgICAgaixcblx0XHQgICAgbSxcblx0XHQgICAgcSxcblx0XHQgICAgayxcblx0XHQgICAgdCxcblx0XHQgICAgY3VycmVudFZhbHVlLFxuXHRcdCAgICBvdXRwdXQgPSBbXSxcblx0XHQgICAgLyoqIGBpbnB1dExlbmd0aGAgd2lsbCBob2xkIHRoZSBudW1iZXIgb2YgY29kZSBwb2ludHMgaW4gYGlucHV0YC4gKi9cblx0XHQgICAgaW5wdXRMZW5ndGgsXG5cdFx0ICAgIC8qKiBDYWNoZWQgY2FsY3VsYXRpb24gcmVzdWx0cyAqL1xuXHRcdCAgICBoYW5kbGVkQ1BDb3VudFBsdXNPbmUsXG5cdFx0ICAgIGJhc2VNaW51c1QsXG5cdFx0ICAgIHFNaW51c1Q7XG5cblx0XHQvLyBDb252ZXJ0IHRoZSBpbnB1dCBpbiBVQ1MtMiB0byBVbmljb2RlXG5cdFx0aW5wdXQgPSB1Y3MyZGVjb2RlKGlucHV0KTtcblxuXHRcdC8vIENhY2hlIHRoZSBsZW5ndGhcblx0XHRpbnB1dExlbmd0aCA9IGlucHV0Lmxlbmd0aDtcblxuXHRcdC8vIEluaXRpYWxpemUgdGhlIHN0YXRlXG5cdFx0biA9IGluaXRpYWxOO1xuXHRcdGRlbHRhID0gMDtcblx0XHRiaWFzID0gaW5pdGlhbEJpYXM7XG5cblx0XHQvLyBIYW5kbGUgdGhlIGJhc2ljIGNvZGUgcG9pbnRzXG5cdFx0Zm9yIChqID0gMDsgaiA8IGlucHV0TGVuZ3RoOyArK2opIHtcblx0XHRcdGN1cnJlbnRWYWx1ZSA9IGlucHV0W2pdO1xuXHRcdFx0aWYgKGN1cnJlbnRWYWx1ZSA8IDB4ODApIHtcblx0XHRcdFx0b3V0cHV0LnB1c2goc3RyaW5nRnJvbUNoYXJDb2RlKGN1cnJlbnRWYWx1ZSkpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGhhbmRsZWRDUENvdW50ID0gYmFzaWNMZW5ndGggPSBvdXRwdXQubGVuZ3RoO1xuXG5cdFx0Ly8gYGhhbmRsZWRDUENvdW50YCBpcyB0aGUgbnVtYmVyIG9mIGNvZGUgcG9pbnRzIHRoYXQgaGF2ZSBiZWVuIGhhbmRsZWQ7XG5cdFx0Ly8gYGJhc2ljTGVuZ3RoYCBpcyB0aGUgbnVtYmVyIG9mIGJhc2ljIGNvZGUgcG9pbnRzLlxuXG5cdFx0Ly8gRmluaXNoIHRoZSBiYXNpYyBzdHJpbmcgLSBpZiBpdCBpcyBub3QgZW1wdHkgLSB3aXRoIGEgZGVsaW1pdGVyXG5cdFx0aWYgKGJhc2ljTGVuZ3RoKSB7XG5cdFx0XHRvdXRwdXQucHVzaChkZWxpbWl0ZXIpO1xuXHRcdH1cblxuXHRcdC8vIE1haW4gZW5jb2RpbmcgbG9vcDpcblx0XHR3aGlsZSAoaGFuZGxlZENQQ291bnQgPCBpbnB1dExlbmd0aCkge1xuXG5cdFx0XHQvLyBBbGwgbm9uLWJhc2ljIGNvZGUgcG9pbnRzIDwgbiBoYXZlIGJlZW4gaGFuZGxlZCBhbHJlYWR5LiBGaW5kIHRoZSBuZXh0XG5cdFx0XHQvLyBsYXJnZXIgb25lOlxuXHRcdFx0Zm9yIChtID0gbWF4SW50LCBqID0gMDsgaiA8IGlucHV0TGVuZ3RoOyArK2opIHtcblx0XHRcdFx0Y3VycmVudFZhbHVlID0gaW5wdXRbal07XG5cdFx0XHRcdGlmIChjdXJyZW50VmFsdWUgPj0gbiAmJiBjdXJyZW50VmFsdWUgPCBtKSB7XG5cdFx0XHRcdFx0bSA9IGN1cnJlbnRWYWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBJbmNyZWFzZSBgZGVsdGFgIGVub3VnaCB0byBhZHZhbmNlIHRoZSBkZWNvZGVyJ3MgPG4saT4gc3RhdGUgdG8gPG0sMD4sXG5cdFx0XHQvLyBidXQgZ3VhcmQgYWdhaW5zdCBvdmVyZmxvd1xuXHRcdFx0aGFuZGxlZENQQ291bnRQbHVzT25lID0gaGFuZGxlZENQQ291bnQgKyAxO1xuXHRcdFx0aWYgKG0gLSBuID4gZmxvb3IoKG1heEludCAtIGRlbHRhKSAvIGhhbmRsZWRDUENvdW50UGx1c09uZSkpIHtcblx0XHRcdFx0ZXJyb3IoJ292ZXJmbG93Jyk7XG5cdFx0XHR9XG5cblx0XHRcdGRlbHRhICs9IChtIC0gbikgKiBoYW5kbGVkQ1BDb3VudFBsdXNPbmU7XG5cdFx0XHRuID0gbTtcblxuXHRcdFx0Zm9yIChqID0gMDsgaiA8IGlucHV0TGVuZ3RoOyArK2opIHtcblx0XHRcdFx0Y3VycmVudFZhbHVlID0gaW5wdXRbal07XG5cblx0XHRcdFx0aWYgKGN1cnJlbnRWYWx1ZSA8IG4gJiYgKytkZWx0YSA+IG1heEludCkge1xuXHRcdFx0XHRcdGVycm9yKCdvdmVyZmxvdycpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKGN1cnJlbnRWYWx1ZSA9PSBuKSB7XG5cdFx0XHRcdFx0Ly8gUmVwcmVzZW50IGRlbHRhIGFzIGEgZ2VuZXJhbGl6ZWQgdmFyaWFibGUtbGVuZ3RoIGludGVnZXJcblx0XHRcdFx0XHRmb3IgKHEgPSBkZWx0YSwgayA9IGJhc2U7IC8qIG5vIGNvbmRpdGlvbiAqLzsgayArPSBiYXNlKSB7XG5cdFx0XHRcdFx0XHR0ID0gayA8PSBiaWFzID8gdE1pbiA6IChrID49IGJpYXMgKyB0TWF4ID8gdE1heCA6IGsgLSBiaWFzKTtcblx0XHRcdFx0XHRcdGlmIChxIDwgdCkge1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdHFNaW51c1QgPSBxIC0gdDtcblx0XHRcdFx0XHRcdGJhc2VNaW51c1QgPSBiYXNlIC0gdDtcblx0XHRcdFx0XHRcdG91dHB1dC5wdXNoKFxuXHRcdFx0XHRcdFx0XHRzdHJpbmdGcm9tQ2hhckNvZGUoZGlnaXRUb0Jhc2ljKHQgKyBxTWludXNUICUgYmFzZU1pbnVzVCwgMCkpXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0cSA9IGZsb29yKHFNaW51c1QgLyBiYXNlTWludXNUKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRvdXRwdXQucHVzaChzdHJpbmdGcm9tQ2hhckNvZGUoZGlnaXRUb0Jhc2ljKHEsIDApKSk7XG5cdFx0XHRcdFx0YmlhcyA9IGFkYXB0KGRlbHRhLCBoYW5kbGVkQ1BDb3VudFBsdXNPbmUsIGhhbmRsZWRDUENvdW50ID09IGJhc2ljTGVuZ3RoKTtcblx0XHRcdFx0XHRkZWx0YSA9IDA7XG5cdFx0XHRcdFx0KytoYW5kbGVkQ1BDb3VudDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQrK2RlbHRhO1xuXHRcdFx0KytuO1xuXG5cdFx0fVxuXHRcdHJldHVybiBvdXRwdXQuam9pbignJyk7XG5cdH1cblxuXHQvKipcblx0ICogQ29udmVydHMgYSBQdW55Y29kZSBzdHJpbmcgcmVwcmVzZW50aW5nIGEgZG9tYWluIG5hbWUgb3IgYW4gZW1haWwgYWRkcmVzc1xuXHQgKiB0byBVbmljb2RlLiBPbmx5IHRoZSBQdW55Y29kZWQgcGFydHMgb2YgdGhlIGlucHV0IHdpbGwgYmUgY29udmVydGVkLCBpLmUuXG5cdCAqIGl0IGRvZXNuJ3QgbWF0dGVyIGlmIHlvdSBjYWxsIGl0IG9uIGEgc3RyaW5nIHRoYXQgaGFzIGFscmVhZHkgYmVlblxuXHQgKiBjb252ZXJ0ZWQgdG8gVW5pY29kZS5cblx0ICogQG1lbWJlck9mIHB1bnljb2RlXG5cdCAqIEBwYXJhbSB7U3RyaW5nfSBpbnB1dCBUaGUgUHVueWNvZGVkIGRvbWFpbiBuYW1lIG9yIGVtYWlsIGFkZHJlc3MgdG9cblx0ICogY29udmVydCB0byBVbmljb2RlLlxuXHQgKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgVW5pY29kZSByZXByZXNlbnRhdGlvbiBvZiB0aGUgZ2l2ZW4gUHVueWNvZGVcblx0ICogc3RyaW5nLlxuXHQgKi9cblx0ZnVuY3Rpb24gdG9Vbmljb2RlKGlucHV0KSB7XG5cdFx0cmV0dXJuIG1hcERvbWFpbihpbnB1dCwgZnVuY3Rpb24oc3RyaW5nKSB7XG5cdFx0XHRyZXR1cm4gcmVnZXhQdW55Y29kZS50ZXN0KHN0cmluZylcblx0XHRcdFx0PyBkZWNvZGUoc3RyaW5nLnNsaWNlKDQpLnRvTG93ZXJDYXNlKCkpXG5cdFx0XHRcdDogc3RyaW5nO1xuXHRcdH0pO1xuXHR9XG5cblx0LyoqXG5cdCAqIENvbnZlcnRzIGEgVW5pY29kZSBzdHJpbmcgcmVwcmVzZW50aW5nIGEgZG9tYWluIG5hbWUgb3IgYW4gZW1haWwgYWRkcmVzcyB0b1xuXHQgKiBQdW55Y29kZS4gT25seSB0aGUgbm9uLUFTQ0lJIHBhcnRzIG9mIHRoZSBkb21haW4gbmFtZSB3aWxsIGJlIGNvbnZlcnRlZCxcblx0ICogaS5lLiBpdCBkb2Vzbid0IG1hdHRlciBpZiB5b3UgY2FsbCBpdCB3aXRoIGEgZG9tYWluIHRoYXQncyBhbHJlYWR5IGluXG5cdCAqIEFTQ0lJLlxuXHQgKiBAbWVtYmVyT2YgcHVueWNvZGVcblx0ICogQHBhcmFtIHtTdHJpbmd9IGlucHV0IFRoZSBkb21haW4gbmFtZSBvciBlbWFpbCBhZGRyZXNzIHRvIGNvbnZlcnQsIGFzIGFcblx0ICogVW5pY29kZSBzdHJpbmcuXG5cdCAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBQdW55Y29kZSByZXByZXNlbnRhdGlvbiBvZiB0aGUgZ2l2ZW4gZG9tYWluIG5hbWUgb3Jcblx0ICogZW1haWwgYWRkcmVzcy5cblx0ICovXG5cdGZ1bmN0aW9uIHRvQVNDSUkoaW5wdXQpIHtcblx0XHRyZXR1cm4gbWFwRG9tYWluKGlucHV0LCBmdW5jdGlvbihzdHJpbmcpIHtcblx0XHRcdHJldHVybiByZWdleE5vbkFTQ0lJLnRlc3Qoc3RyaW5nKVxuXHRcdFx0XHQ/ICd4bi0tJyArIGVuY29kZShzdHJpbmcpXG5cdFx0XHRcdDogc3RyaW5nO1xuXHRcdH0pO1xuXHR9XG5cblx0LyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cblx0LyoqIERlZmluZSB0aGUgcHVibGljIEFQSSAqL1xuXHRwdW55Y29kZSA9IHtcblx0XHQvKipcblx0XHQgKiBBIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIGN1cnJlbnQgUHVueWNvZGUuanMgdmVyc2lvbiBudW1iZXIuXG5cdFx0ICogQG1lbWJlck9mIHB1bnljb2RlXG5cdFx0ICogQHR5cGUgU3RyaW5nXG5cdFx0ICovXG5cdFx0J3ZlcnNpb24nOiAnMS4zLjInLFxuXHRcdC8qKlxuXHRcdCAqIEFuIG9iamVjdCBvZiBtZXRob2RzIHRvIGNvbnZlcnQgZnJvbSBKYXZhU2NyaXB0J3MgaW50ZXJuYWwgY2hhcmFjdGVyXG5cdFx0ICogcmVwcmVzZW50YXRpb24gKFVDUy0yKSB0byBVbmljb2RlIGNvZGUgcG9pbnRzLCBhbmQgYmFjay5cblx0XHQgKiBAc2VlIDxodHRwczovL21hdGhpYXNieW5lbnMuYmUvbm90ZXMvamF2YXNjcmlwdC1lbmNvZGluZz5cblx0XHQgKiBAbWVtYmVyT2YgcHVueWNvZGVcblx0XHQgKiBAdHlwZSBPYmplY3Rcblx0XHQgKi9cblx0XHQndWNzMic6IHtcblx0XHRcdCdkZWNvZGUnOiB1Y3MyZGVjb2RlLFxuXHRcdFx0J2VuY29kZSc6IHVjczJlbmNvZGVcblx0XHR9LFxuXHRcdCdkZWNvZGUnOiBkZWNvZGUsXG5cdFx0J2VuY29kZSc6IGVuY29kZSxcblx0XHQndG9BU0NJSSc6IHRvQVNDSUksXG5cdFx0J3RvVW5pY29kZSc6IHRvVW5pY29kZVxuXHR9O1xuXG5cdC8qKiBFeHBvc2UgYHB1bnljb2RlYCAqL1xuXHQvLyBTb21lIEFNRCBidWlsZCBvcHRpbWl6ZXJzLCBsaWtlIHIuanMsIGNoZWNrIGZvciBzcGVjaWZpYyBjb25kaXRpb24gcGF0dGVybnNcblx0Ly8gbGlrZSB0aGUgZm9sbG93aW5nOlxuXHRpZiAoXG5cdFx0dHlwZW9mIGRlZmluZSA9PSAnZnVuY3Rpb24nICYmXG5cdFx0dHlwZW9mIGRlZmluZS5hbWQgPT0gJ29iamVjdCcgJiZcblx0XHRkZWZpbmUuYW1kXG5cdCkge1xuXHRcdGRlZmluZSgncHVueWNvZGUnLCBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBwdW55Y29kZTtcblx0XHR9KTtcblx0fSBlbHNlIGlmIChmcmVlRXhwb3J0cyAmJiBmcmVlTW9kdWxlKSB7XG5cdFx0aWYgKG1vZHVsZS5leHBvcnRzID09IGZyZWVFeHBvcnRzKSB7IC8vIGluIE5vZGUuanMgb3IgUmluZ29KUyB2MC44LjArXG5cdFx0XHRmcmVlTW9kdWxlLmV4cG9ydHMgPSBwdW55Y29kZTtcblx0XHR9IGVsc2UgeyAvLyBpbiBOYXJ3aGFsIG9yIFJpbmdvSlMgdjAuNy4wLVxuXHRcdFx0Zm9yIChrZXkgaW4gcHVueWNvZGUpIHtcblx0XHRcdFx0cHVueWNvZGUuaGFzT3duUHJvcGVydHkoa2V5KSAmJiAoZnJlZUV4cG9ydHNba2V5XSA9IHB1bnljb2RlW2tleV0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fSBlbHNlIHsgLy8gaW4gUmhpbm8gb3IgYSB3ZWIgYnJvd3NlclxuXHRcdHJvb3QucHVueWNvZGUgPSBwdW55Y29kZTtcblx0fVxuXG59KHRoaXMpKTtcbiIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4ndXNlIHN0cmljdCc7XG5cbi8vIElmIG9iai5oYXNPd25Qcm9wZXJ0eSBoYXMgYmVlbiBvdmVycmlkZGVuLCB0aGVuIGNhbGxpbmdcbi8vIG9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKSB3aWxsIGJyZWFrLlxuLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vam95ZW50L25vZGUvaXNzdWVzLzE3MDdcbmZ1bmN0aW9uIGhhc093blByb3BlcnR5KG9iaiwgcHJvcCkge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ocXMsIHNlcCwgZXEsIG9wdGlvbnMpIHtcbiAgc2VwID0gc2VwIHx8ICcmJztcbiAgZXEgPSBlcSB8fCAnPSc7XG4gIHZhciBvYmogPSB7fTtcblxuICBpZiAodHlwZW9mIHFzICE9PSAnc3RyaW5nJyB8fCBxcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IC9cXCsvZztcbiAgcXMgPSBxcy5zcGxpdChzZXApO1xuXG4gIHZhciBtYXhLZXlzID0gMTAwMDtcbiAgaWYgKG9wdGlvbnMgJiYgdHlwZW9mIG9wdGlvbnMubWF4S2V5cyA9PT0gJ251bWJlcicpIHtcbiAgICBtYXhLZXlzID0gb3B0aW9ucy5tYXhLZXlzO1xuICB9XG5cbiAgdmFyIGxlbiA9IHFzLmxlbmd0aDtcbiAgLy8gbWF4S2V5cyA8PSAwIG1lYW5zIHRoYXQgd2Ugc2hvdWxkIG5vdCBsaW1pdCBrZXlzIGNvdW50XG4gIGlmIChtYXhLZXlzID4gMCAmJiBsZW4gPiBtYXhLZXlzKSB7XG4gICAgbGVuID0gbWF4S2V5cztcbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIHtcbiAgICB2YXIgeCA9IHFzW2ldLnJlcGxhY2UocmVnZXhwLCAnJTIwJyksXG4gICAgICAgIGlkeCA9IHguaW5kZXhPZihlcSksXG4gICAgICAgIGtzdHIsIHZzdHIsIGssIHY7XG5cbiAgICBpZiAoaWR4ID49IDApIHtcbiAgICAgIGtzdHIgPSB4LnN1YnN0cigwLCBpZHgpO1xuICAgICAgdnN0ciA9IHguc3Vic3RyKGlkeCArIDEpO1xuICAgIH0gZWxzZSB7XG4gICAgICBrc3RyID0geDtcbiAgICAgIHZzdHIgPSAnJztcbiAgICB9XG5cbiAgICBrID0gZGVjb2RlVVJJQ29tcG9uZW50KGtzdHIpO1xuICAgIHYgPSBkZWNvZGVVUklDb21wb25lbnQodnN0cik7XG5cbiAgICBpZiAoIWhhc093blByb3BlcnR5KG9iaiwgaykpIHtcbiAgICAgIG9ialtrXSA9IHY7XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KG9ialtrXSkpIHtcbiAgICAgIG9ialtrXS5wdXNoKHYpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvYmpba10gPSBbb2JqW2tdLCB2XTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufTtcbiIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBzdHJpbmdpZnlQcmltaXRpdmUgPSBmdW5jdGlvbih2KSB7XG4gIHN3aXRjaCAodHlwZW9mIHYpIHtcbiAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgcmV0dXJuIHY7XG5cbiAgICBjYXNlICdib29sZWFuJzpcbiAgICAgIHJldHVybiB2ID8gJ3RydWUnIDogJ2ZhbHNlJztcblxuICAgIGNhc2UgJ251bWJlcic6XG4gICAgICByZXR1cm4gaXNGaW5pdGUodikgPyB2IDogJyc7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuICcnO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9iaiwgc2VwLCBlcSwgbmFtZSkge1xuICBzZXAgPSBzZXAgfHwgJyYnO1xuICBlcSA9IGVxIHx8ICc9JztcbiAgaWYgKG9iaiA9PT0gbnVsbCkge1xuICAgIG9iaiA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhvYmopLm1hcChmdW5jdGlvbihrKSB7XG4gICAgICB2YXIga3MgPSBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKGspKSArIGVxO1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkob2JqW2tdKSkge1xuICAgICAgICByZXR1cm4gb2JqW2tdLm1hcChmdW5jdGlvbih2KSB7XG4gICAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZSh2KSk7XG4gICAgICAgIH0pLmpvaW4oc2VwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBrcyArIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUob2JqW2tdKSk7XG4gICAgICB9XG4gICAgfSkuam9pbihzZXApO1xuXG4gIH1cblxuICBpZiAoIW5hbWUpIHJldHVybiAnJztcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUobmFtZSkpICsgZXEgK1xuICAgICAgICAgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmopKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuZGVjb2RlID0gZXhwb3J0cy5wYXJzZSA9IHJlcXVpcmUoJy4vZGVjb2RlJyk7XG5leHBvcnRzLmVuY29kZSA9IGV4cG9ydHMuc3RyaW5naWZ5ID0gcmVxdWlyZSgnLi9lbmNvZGUnKTtcbiIsIi8qIHNvY2tqcy1jbGllbnQgdjEuNC4wIHwgaHR0cDovL3NvY2tqcy5vcmcgfCBNSVQgbGljZW5zZSAqL1xuKGZ1bmN0aW9uKGYpe2lmKHR5cGVvZiBleHBvcnRzPT09XCJvYmplY3RcIiYmdHlwZW9mIG1vZHVsZSE9PVwidW5kZWZpbmVkXCIpe21vZHVsZS5leHBvcnRzPWYoKX1lbHNlIGlmKHR5cGVvZiBkZWZpbmU9PT1cImZ1bmN0aW9uXCImJmRlZmluZS5hbWQpe2RlZmluZShbXSxmKX1lbHNle3ZhciBnO2lmKHR5cGVvZiB3aW5kb3chPT1cInVuZGVmaW5lZFwiKXtnPXdpbmRvd31lbHNlIGlmKHR5cGVvZiBnbG9iYWwhPT1cInVuZGVmaW5lZFwiKXtnPWdsb2JhbH1lbHNlIGlmKHR5cGVvZiBzZWxmIT09XCJ1bmRlZmluZWRcIil7Zz1zZWxmfWVsc2V7Zz10aGlzfWcuU29ja0pTID0gZigpfX0pKGZ1bmN0aW9uKCl7dmFyIGRlZmluZSxtb2R1bGUsZXhwb3J0cztyZXR1cm4gKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSh7MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB0cmFuc3BvcnRMaXN0ID0gcmVxdWlyZSgnLi90cmFuc3BvcnQtbGlzdCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbWFpbicpKHRyYW5zcG9ydExpc3QpO1xuXG4vLyBUT0RPIGNhbid0IGdldCByaWQgb2YgdGhpcyB1bnRpbCBhbGwgc2VydmVycyBkb1xuaWYgKCdfc29ja2pzX29ubG9hZCcgaW4gZ2xvYmFsKSB7XG4gIHNldFRpbWVvdXQoZ2xvYmFsLl9zb2NranNfb25sb2FkLCAxKTtcbn1cblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se1wiLi9tYWluXCI6MTQsXCIuL3RyYW5zcG9ydC1saXN0XCI6MTZ9XSwyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50ID0gcmVxdWlyZSgnLi9ldmVudCcpXG4gIDtcblxuZnVuY3Rpb24gQ2xvc2VFdmVudCgpIHtcbiAgRXZlbnQuY2FsbCh0aGlzKTtcbiAgdGhpcy5pbml0RXZlbnQoJ2Nsb3NlJywgZmFsc2UsIGZhbHNlKTtcbiAgdGhpcy53YXNDbGVhbiA9IGZhbHNlO1xuICB0aGlzLmNvZGUgPSAwO1xuICB0aGlzLnJlYXNvbiA9ICcnO1xufVxuXG5pbmhlcml0cyhDbG9zZUV2ZW50LCBFdmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2xvc2VFdmVudDtcblxufSx7XCIuL2V2ZW50XCI6NCxcImluaGVyaXRzXCI6NTd9XSwzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50VGFyZ2V0ID0gcmVxdWlyZSgnLi9ldmVudHRhcmdldCcpXG4gIDtcblxuZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCkge1xuICBFdmVudFRhcmdldC5jYWxsKHRoaXMpO1xufVxuXG5pbmhlcml0cyhFdmVudEVtaXR0ZXIsIEV2ZW50VGFyZ2V0KTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBmdW5jdGlvbih0eXBlKSB7XG4gIGlmICh0eXBlKSB7XG4gICAgZGVsZXRlIHRoaXMuX2xpc3RlbmVyc1t0eXBlXTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLl9saXN0ZW5lcnMgPSB7fTtcbiAgfVxufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbmNlID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgdmFyIHNlbGYgPSB0aGlzXG4gICAgLCBmaXJlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGcoKSB7XG4gICAgc2VsZi5yZW1vdmVMaXN0ZW5lcih0eXBlLCBnKTtcblxuICAgIGlmICghZmlyZWQpIHtcbiAgICAgIGZpcmVkID0gdHJ1ZTtcbiAgICAgIGxpc3RlbmVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9XG5cbiAgdGhpcy5vbih0eXBlLCBnKTtcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgdHlwZSA9IGFyZ3VtZW50c1swXTtcbiAgdmFyIGxpc3RlbmVycyA9IHRoaXMuX2xpc3RlbmVyc1t0eXBlXTtcbiAgaWYgKCFsaXN0ZW5lcnMpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgLy8gZXF1aXZhbGVudCBvZiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuICB2YXIgbCA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHZhciBhcmdzID0gbmV3IEFycmF5KGwgLSAxKTtcbiAgZm9yICh2YXIgYWkgPSAxOyBhaSA8IGw7IGFpKyspIHtcbiAgICBhcmdzW2FpIC0gMV0gPSBhcmd1bWVudHNbYWldO1xuICB9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgbGlzdGVuZXJzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICB9XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uID0gRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lciA9IEV2ZW50VGFyZ2V0LnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyO1xuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lciA9IEV2ZW50VGFyZ2V0LnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyO1xuXG5tb2R1bGUuZXhwb3J0cy5FdmVudEVtaXR0ZXIgPSBFdmVudEVtaXR0ZXI7XG5cbn0se1wiLi9ldmVudHRhcmdldFwiOjUsXCJpbmhlcml0c1wiOjU3fV0sNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIEV2ZW50KGV2ZW50VHlwZSkge1xuICB0aGlzLnR5cGUgPSBldmVudFR5cGU7XG59XG5cbkV2ZW50LnByb3RvdHlwZS5pbml0RXZlbnQgPSBmdW5jdGlvbihldmVudFR5cGUsIGNhbkJ1YmJsZSwgY2FuY2VsYWJsZSkge1xuICB0aGlzLnR5cGUgPSBldmVudFR5cGU7XG4gIHRoaXMuYnViYmxlcyA9IGNhbkJ1YmJsZTtcbiAgdGhpcy5jYW5jZWxhYmxlID0gY2FuY2VsYWJsZTtcbiAgdGhpcy50aW1lU3RhbXAgPSArbmV3IERhdGUoKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudC5wcm90b3R5cGUuc3RvcFByb3BhZ2F0aW9uID0gZnVuY3Rpb24oKSB7fTtcbkV2ZW50LnByb3RvdHlwZS5wcmV2ZW50RGVmYXVsdCA9IGZ1bmN0aW9uKCkge307XG5cbkV2ZW50LkNBUFRVUklOR19QSEFTRSA9IDE7XG5FdmVudC5BVF9UQVJHRVQgPSAyO1xuRXZlbnQuQlVCQkxJTkdfUEhBU0UgPSAzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50O1xuXG59LHt9XSw1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxuLyogU2ltcGxpZmllZCBpbXBsZW1lbnRhdGlvbiBvZiBET00yIEV2ZW50VGFyZ2V0LlxuICogICBodHRwOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMi1FdmVudHMvZXZlbnRzLmh0bWwjRXZlbnRzLUV2ZW50VGFyZ2V0XG4gKi9cblxuZnVuY3Rpb24gRXZlbnRUYXJnZXQoKSB7XG4gIHRoaXMuX2xpc3RlbmVycyA9IHt9O1xufVxuXG5FdmVudFRhcmdldC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uKGV2ZW50VHlwZSwgbGlzdGVuZXIpIHtcbiAgaWYgKCEoZXZlbnRUeXBlIGluIHRoaXMuX2xpc3RlbmVycykpIHtcbiAgICB0aGlzLl9saXN0ZW5lcnNbZXZlbnRUeXBlXSA9IFtdO1xuICB9XG4gIHZhciBhcnIgPSB0aGlzLl9saXN0ZW5lcnNbZXZlbnRUeXBlXTtcbiAgLy8gIzRcbiAgaWYgKGFyci5pbmRleE9mKGxpc3RlbmVyKSA9PT0gLTEpIHtcbiAgICAvLyBNYWtlIGEgY29weSBzbyBhcyBub3QgdG8gaW50ZXJmZXJlIHdpdGggYSBjdXJyZW50IGRpc3BhdGNoRXZlbnQuXG4gICAgYXJyID0gYXJyLmNvbmNhdChbbGlzdGVuZXJdKTtcbiAgfVxuICB0aGlzLl9saXN0ZW5lcnNbZXZlbnRUeXBlXSA9IGFycjtcbn07XG5cbkV2ZW50VGFyZ2V0LnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyID0gZnVuY3Rpb24oZXZlbnRUeXBlLCBsaXN0ZW5lcikge1xuICB2YXIgYXJyID0gdGhpcy5fbGlzdGVuZXJzW2V2ZW50VHlwZV07XG4gIGlmICghYXJyKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBpZHggPSBhcnIuaW5kZXhPZihsaXN0ZW5lcik7XG4gIGlmIChpZHggIT09IC0xKSB7XG4gICAgaWYgKGFyci5sZW5ndGggPiAxKSB7XG4gICAgICAvLyBNYWtlIGEgY29weSBzbyBhcyBub3QgdG8gaW50ZXJmZXJlIHdpdGggYSBjdXJyZW50IGRpc3BhdGNoRXZlbnQuXG4gICAgICB0aGlzLl9saXN0ZW5lcnNbZXZlbnRUeXBlXSA9IGFyci5zbGljZSgwLCBpZHgpLmNvbmNhdChhcnIuc2xpY2UoaWR4ICsgMSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkZWxldGUgdGhpcy5fbGlzdGVuZXJzW2V2ZW50VHlwZV07XG4gICAgfVxuICAgIHJldHVybjtcbiAgfVxufTtcblxuRXZlbnRUYXJnZXQucHJvdG90eXBlLmRpc3BhdGNoRXZlbnQgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGV2ZW50ID0gYXJndW1lbnRzWzBdO1xuICB2YXIgdCA9IGV2ZW50LnR5cGU7XG4gIC8vIGVxdWl2YWxlbnQgb2YgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAwKTtcbiAgdmFyIGFyZ3MgPSBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gW2V2ZW50XSA6IEFycmF5LmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gIC8vIFRPRE86IFRoaXMgZG9lc24ndCBtYXRjaCB0aGUgcmVhbCBiZWhhdmlvcjsgcGVyIHNwZWMsIG9uZm9vIGdldFxuICAvLyB0aGVpciBwbGFjZSBpbiBsaW5lIGZyb20gdGhlIC9maXJzdC8gdGltZSB0aGV5J3JlIHNldCBmcm9tXG4gIC8vIG5vbi1udWxsLiBBbHRob3VnaCBXZWJLaXQgYnVtcHMgaXQgdG8gdGhlIGVuZCBldmVyeSB0aW1lIGl0J3NcbiAgLy8gc2V0LlxuICBpZiAodGhpc1snb24nICsgdF0pIHtcbiAgICB0aGlzWydvbicgKyB0XS5hcHBseSh0aGlzLCBhcmdzKTtcbiAgfVxuICBpZiAodCBpbiB0aGlzLl9saXN0ZW5lcnMpIHtcbiAgICAvLyBHcmFiIGEgcmVmZXJlbmNlIHRvIHRoZSBsaXN0ZW5lcnMgbGlzdC4gcmVtb3ZlRXZlbnRMaXN0ZW5lciBtYXkgYWx0ZXIgdGhlIGxpc3QuXG4gICAgdmFyIGxpc3RlbmVycyA9IHRoaXMuX2xpc3RlbmVyc1t0XTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgbGlzdGVuZXJzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH1cbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBFdmVudFRhcmdldDtcblxufSx7fV0sNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBFdmVudCA9IHJlcXVpcmUoJy4vZXZlbnQnKVxuICA7XG5cbmZ1bmN0aW9uIFRyYW5zcG9ydE1lc3NhZ2VFdmVudChkYXRhKSB7XG4gIEV2ZW50LmNhbGwodGhpcyk7XG4gIHRoaXMuaW5pdEV2ZW50KCdtZXNzYWdlJywgZmFsc2UsIGZhbHNlKTtcbiAgdGhpcy5kYXRhID0gZGF0YTtcbn1cblxuaW5oZXJpdHMoVHJhbnNwb3J0TWVzc2FnZUV2ZW50LCBFdmVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gVHJhbnNwb3J0TWVzc2FnZUV2ZW50O1xuXG59LHtcIi4vZXZlbnRcIjo0LFwiaW5oZXJpdHNcIjo1N31dLDc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgSlNPTjMgPSByZXF1aXJlKCdqc29uMycpXG4gICwgaWZyYW1lVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzL2lmcmFtZScpXG4gIDtcblxuZnVuY3Rpb24gRmFjYWRlSlModHJhbnNwb3J0KSB7XG4gIHRoaXMuX3RyYW5zcG9ydCA9IHRyYW5zcG9ydDtcbiAgdHJhbnNwb3J0Lm9uKCdtZXNzYWdlJywgdGhpcy5fdHJhbnNwb3J0TWVzc2FnZS5iaW5kKHRoaXMpKTtcbiAgdHJhbnNwb3J0Lm9uKCdjbG9zZScsIHRoaXMuX3RyYW5zcG9ydENsb3NlLmJpbmQodGhpcykpO1xufVxuXG5GYWNhZGVKUy5wcm90b3R5cGUuX3RyYW5zcG9ydENsb3NlID0gZnVuY3Rpb24oY29kZSwgcmVhc29uKSB7XG4gIGlmcmFtZVV0aWxzLnBvc3RNZXNzYWdlKCdjJywgSlNPTjMuc3RyaW5naWZ5KFtjb2RlLCByZWFzb25dKSk7XG59O1xuRmFjYWRlSlMucHJvdG90eXBlLl90cmFuc3BvcnRNZXNzYWdlID0gZnVuY3Rpb24oZnJhbWUpIHtcbiAgaWZyYW1lVXRpbHMucG9zdE1lc3NhZ2UoJ3QnLCBmcmFtZSk7XG59O1xuRmFjYWRlSlMucHJvdG90eXBlLl9zZW5kID0gZnVuY3Rpb24oZGF0YSkge1xuICB0aGlzLl90cmFuc3BvcnQuc2VuZChkYXRhKTtcbn07XG5GYWNhZGVKUy5wcm90b3R5cGUuX2Nsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX3RyYW5zcG9ydC5jbG9zZSgpO1xuICB0aGlzLl90cmFuc3BvcnQucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZhY2FkZUpTO1xuXG59LHtcIi4vdXRpbHMvaWZyYW1lXCI6NDcsXCJqc29uM1wiOjU4fV0sODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXJsVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzL3VybCcpXG4gICwgZXZlbnRVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvZXZlbnQnKVxuICAsIEpTT04zID0gcmVxdWlyZSgnanNvbjMnKVxuICAsIEZhY2FkZUpTID0gcmVxdWlyZSgnLi9mYWNhZGUnKVxuICAsIEluZm9JZnJhbWVSZWNlaXZlciA9IHJlcXVpcmUoJy4vaW5mby1pZnJhbWUtcmVjZWl2ZXInKVxuICAsIGlmcmFtZVV0aWxzID0gcmVxdWlyZSgnLi91dGlscy9pZnJhbWUnKVxuICAsIGxvYyA9IHJlcXVpcmUoJy4vbG9jYXRpb24nKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6aWZyYW1lLWJvb3RzdHJhcCcpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKFNvY2tKUywgYXZhaWxhYmxlVHJhbnNwb3J0cykge1xuICB2YXIgdHJhbnNwb3J0TWFwID0ge307XG4gIGF2YWlsYWJsZVRyYW5zcG9ydHMuZm9yRWFjaChmdW5jdGlvbihhdCkge1xuICAgIGlmIChhdC5mYWNhZGVUcmFuc3BvcnQpIHtcbiAgICAgIHRyYW5zcG9ydE1hcFthdC5mYWNhZGVUcmFuc3BvcnQudHJhbnNwb3J0TmFtZV0gPSBhdC5mYWNhZGVUcmFuc3BvcnQ7XG4gICAgfVxuICB9KTtcblxuICAvLyBoYXJkLWNvZGVkIGZvciB0aGUgaW5mbyBpZnJhbWVcbiAgLy8gVE9ETyBzZWUgaWYgd2UgY2FuIG1ha2UgdGhpcyBtb3JlIGR5bmFtaWNcbiAgdHJhbnNwb3J0TWFwW0luZm9JZnJhbWVSZWNlaXZlci50cmFuc3BvcnROYW1lXSA9IEluZm9JZnJhbWVSZWNlaXZlcjtcbiAgdmFyIHBhcmVudE9yaWdpbjtcblxuICAvKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cbiAgU29ja0pTLmJvb3RzdHJhcF9pZnJhbWUgPSBmdW5jdGlvbigpIHtcbiAgICAvKiBlc2xpbnQtZW5hYmxlIGNhbWVsY2FzZSAqL1xuICAgIHZhciBmYWNhZGU7XG4gICAgaWZyYW1lVXRpbHMuY3VycmVudFdpbmRvd0lkID0gbG9jLmhhc2guc2xpY2UoMSk7XG4gICAgdmFyIG9uTWVzc2FnZSA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIGlmIChlLnNvdXJjZSAhPT0gcGFyZW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgcGFyZW50T3JpZ2luID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBwYXJlbnRPcmlnaW4gPSBlLm9yaWdpbjtcbiAgICAgIH1cbiAgICAgIGlmIChlLm9yaWdpbiAhPT0gcGFyZW50T3JpZ2luKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGlmcmFtZU1lc3NhZ2U7XG4gICAgICB0cnkge1xuICAgICAgICBpZnJhbWVNZXNzYWdlID0gSlNPTjMucGFyc2UoZS5kYXRhKTtcbiAgICAgIH0gY2F0Y2ggKGlnbm9yZWQpIHtcbiAgICAgICAgZGVidWcoJ2JhZCBqc29uJywgZS5kYXRhKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoaWZyYW1lTWVzc2FnZS53aW5kb3dJZCAhPT0gaWZyYW1lVXRpbHMuY3VycmVudFdpbmRvd0lkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHN3aXRjaCAoaWZyYW1lTWVzc2FnZS50eXBlKSB7XG4gICAgICBjYXNlICdzJzpcbiAgICAgICAgdmFyIHA7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcCA9IEpTT04zLnBhcnNlKGlmcmFtZU1lc3NhZ2UuZGF0YSk7XG4gICAgICAgIH0gY2F0Y2ggKGlnbm9yZWQpIHtcbiAgICAgICAgICBkZWJ1ZygnYmFkIGpzb24nLCBpZnJhbWVNZXNzYWdlLmRhdGEpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHZhciB2ZXJzaW9uID0gcFswXTtcbiAgICAgICAgdmFyIHRyYW5zcG9ydCA9IHBbMV07XG4gICAgICAgIHZhciB0cmFuc1VybCA9IHBbMl07XG4gICAgICAgIHZhciBiYXNlVXJsID0gcFszXTtcbiAgICAgICAgZGVidWcodmVyc2lvbiwgdHJhbnNwb3J0LCB0cmFuc1VybCwgYmFzZVVybCk7XG4gICAgICAgIC8vIGNoYW5nZSB0aGlzIHRvIHNlbXZlciBsb2dpY1xuICAgICAgICBpZiAodmVyc2lvbiAhPT0gU29ja0pTLnZlcnNpb24pIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0luY29tcGF0aWJsZSBTb2NrSlMhIE1haW4gc2l0ZSB1c2VzOicgK1xuICAgICAgICAgICAgICAgICAgICAnIFwiJyArIHZlcnNpb24gKyAnXCIsIHRoZSBpZnJhbWU6JyArXG4gICAgICAgICAgICAgICAgICAgICcgXCInICsgU29ja0pTLnZlcnNpb24gKyAnXCIuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXVybFV0aWxzLmlzT3JpZ2luRXF1YWwodHJhbnNVcmwsIGxvYy5ocmVmKSB8fFxuICAgICAgICAgICAgIXVybFV0aWxzLmlzT3JpZ2luRXF1YWwoYmFzZVVybCwgbG9jLmhyZWYpKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5cXCd0IGNvbm5lY3QgdG8gZGlmZmVyZW50IGRvbWFpbiBmcm9tIHdpdGhpbiBhbiAnICtcbiAgICAgICAgICAgICAgICAgICAgJ2lmcmFtZS4gKCcgKyBsb2MuaHJlZiArICcsICcgKyB0cmFuc1VybCArICcsICcgKyBiYXNlVXJsICsgJyknKTtcbiAgICAgICAgfVxuICAgICAgICBmYWNhZGUgPSBuZXcgRmFjYWRlSlMobmV3IHRyYW5zcG9ydE1hcFt0cmFuc3BvcnRdKHRyYW5zVXJsLCBiYXNlVXJsKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbSc6XG4gICAgICAgIGZhY2FkZS5fc2VuZChpZnJhbWVNZXNzYWdlLmRhdGEpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2MnOlxuICAgICAgICBpZiAoZmFjYWRlKSB7XG4gICAgICAgICAgZmFjYWRlLl9jbG9zZSgpO1xuICAgICAgICB9XG4gICAgICAgIGZhY2FkZSA9IG51bGw7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBldmVudFV0aWxzLmF0dGFjaEV2ZW50KCdtZXNzYWdlJywgb25NZXNzYWdlKTtcblxuICAgIC8vIFN0YXJ0XG4gICAgaWZyYW1lVXRpbHMucG9zdE1lc3NhZ2UoJ3MnKTtcbiAgfTtcbn07XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSlcblxufSx7XCIuL2ZhY2FkZVwiOjcsXCIuL2luZm8taWZyYW1lLXJlY2VpdmVyXCI6MTAsXCIuL2xvY2F0aW9uXCI6MTMsXCIuL3V0aWxzL2V2ZW50XCI6NDYsXCIuL3V0aWxzL2lmcmFtZVwiOjQ3LFwiLi91dGlscy91cmxcIjo1MixcImRlYnVnXCI6NTUsXCJqc29uM1wiOjU4fV0sOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gICwgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgSlNPTjMgPSByZXF1aXJlKCdqc29uMycpXG4gICwgb2JqZWN0VXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzL29iamVjdCcpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDppbmZvLWFqYXgnKTtcbn1cblxuZnVuY3Rpb24gSW5mb0FqYXgodXJsLCBBamF4T2JqZWN0KSB7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHQwID0gK25ldyBEYXRlKCk7XG4gIHRoaXMueG8gPSBuZXcgQWpheE9iamVjdCgnR0VUJywgdXJsKTtcblxuICB0aGlzLnhvLm9uY2UoJ2ZpbmlzaCcsIGZ1bmN0aW9uKHN0YXR1cywgdGV4dCkge1xuICAgIHZhciBpbmZvLCBydHQ7XG4gICAgaWYgKHN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICBydHQgPSAoK25ldyBEYXRlKCkpIC0gdDA7XG4gICAgICBpZiAodGV4dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGluZm8gPSBKU09OMy5wYXJzZSh0ZXh0KTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGRlYnVnKCdiYWQganNvbicsIHRleHQpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICghb2JqZWN0VXRpbHMuaXNPYmplY3QoaW5mbykpIHtcbiAgICAgICAgaW5mbyA9IHt9O1xuICAgICAgfVxuICAgIH1cbiAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcsIGluZm8sIHJ0dCk7XG4gICAgc2VsZi5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgfSk7XG59XG5cbmluaGVyaXRzKEluZm9BamF4LCBFdmVudEVtaXR0ZXIpO1xuXG5JbmZvQWpheC5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgdGhpcy54by5jbG9zZSgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbmZvQWpheDtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9KVxuXG59LHtcIi4vdXRpbHMvb2JqZWN0XCI6NDksXCJkZWJ1Z1wiOjU1LFwiZXZlbnRzXCI6MyxcImluaGVyaXRzXCI6NTcsXCJqc29uM1wiOjU4fV0sMTA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gICwgSlNPTjMgPSByZXF1aXJlKCdqc29uMycpXG4gICwgWEhSTG9jYWxPYmplY3QgPSByZXF1aXJlKCcuL3RyYW5zcG9ydC9zZW5kZXIveGhyLWxvY2FsJylcbiAgLCBJbmZvQWpheCA9IHJlcXVpcmUoJy4vaW5mby1hamF4JylcbiAgO1xuXG5mdW5jdGlvbiBJbmZvUmVjZWl2ZXJJZnJhbWUodHJhbnNVcmwpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICB0aGlzLmlyID0gbmV3IEluZm9BamF4KHRyYW5zVXJsLCBYSFJMb2NhbE9iamVjdCk7XG4gIHRoaXMuaXIub25jZSgnZmluaXNoJywgZnVuY3Rpb24oaW5mbywgcnR0KSB7XG4gICAgc2VsZi5pciA9IG51bGw7XG4gICAgc2VsZi5lbWl0KCdtZXNzYWdlJywgSlNPTjMuc3RyaW5naWZ5KFtpbmZvLCBydHRdKSk7XG4gIH0pO1xufVxuXG5pbmhlcml0cyhJbmZvUmVjZWl2ZXJJZnJhbWUsIEV2ZW50RW1pdHRlcik7XG5cbkluZm9SZWNlaXZlcklmcmFtZS50cmFuc3BvcnROYW1lID0gJ2lmcmFtZS1pbmZvLXJlY2VpdmVyJztcblxuSW5mb1JlY2VpdmVySWZyYW1lLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBpZiAodGhpcy5pcikge1xuICAgIHRoaXMuaXIuY2xvc2UoKTtcbiAgICB0aGlzLmlyID0gbnVsbDtcbiAgfVxuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbmZvUmVjZWl2ZXJJZnJhbWU7XG5cbn0se1wiLi9pbmZvLWFqYXhcIjo5LFwiLi90cmFuc3BvcnQvc2VuZGVyL3hoci1sb2NhbFwiOjM3LFwiZXZlbnRzXCI6MyxcImluaGVyaXRzXCI6NTcsXCJqc29uM1wiOjU4fV0sMTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzLGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBKU09OMyA9IHJlcXVpcmUoJ2pzb24zJylcbiAgLCB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvZXZlbnQnKVxuICAsIElmcmFtZVRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0L2lmcmFtZScpXG4gICwgSW5mb1JlY2VpdmVySWZyYW1lID0gcmVxdWlyZSgnLi9pbmZvLWlmcmFtZS1yZWNlaXZlcicpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDppbmZvLWlmcmFtZScpO1xufVxuXG5mdW5jdGlvbiBJbmZvSWZyYW1lKGJhc2VVcmwsIHVybCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBpZnIgPSBzZWxmLmlmciA9IG5ldyBJZnJhbWVUcmFuc3BvcnQoSW5mb1JlY2VpdmVySWZyYW1lLnRyYW5zcG9ydE5hbWUsIHVybCwgYmFzZVVybCk7XG5cbiAgICBpZnIub25jZSgnbWVzc2FnZScsIGZ1bmN0aW9uKG1zZykge1xuICAgICAgaWYgKG1zZykge1xuICAgICAgICB2YXIgZDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBkID0gSlNPTjMucGFyc2UobXNnKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGRlYnVnKCdiYWQganNvbicsIG1zZyk7XG4gICAgICAgICAgc2VsZi5lbWl0KCdmaW5pc2gnKTtcbiAgICAgICAgICBzZWxmLmNsb3NlKCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGluZm8gPSBkWzBdLCBydHQgPSBkWzFdO1xuICAgICAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcsIGluZm8sIHJ0dCk7XG4gICAgICB9XG4gICAgICBzZWxmLmNsb3NlKCk7XG4gICAgfSk7XG5cbiAgICBpZnIub25jZSgnY2xvc2UnLCBmdW5jdGlvbigpIHtcbiAgICAgIHNlbGYuZW1pdCgnZmluaXNoJyk7XG4gICAgICBzZWxmLmNsb3NlKCk7XG4gICAgfSk7XG4gIH07XG5cbiAgLy8gVE9ETyB0aGlzIHNlZW1zIHRoZSBzYW1lIGFzIHRoZSAnbmVlZEJvZHknIGZyb20gdHJhbnNwb3J0c1xuICBpZiAoIWdsb2JhbC5kb2N1bWVudC5ib2R5KSB7XG4gICAgdXRpbHMuYXR0YWNoRXZlbnQoJ2xvYWQnLCBnbyk7XG4gIH0gZWxzZSB7XG4gICAgZ28oKTtcbiAgfVxufVxuXG5pbmhlcml0cyhJbmZvSWZyYW1lLCBFdmVudEVtaXR0ZXIpO1xuXG5JbmZvSWZyYW1lLmVuYWJsZWQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIElmcmFtZVRyYW5zcG9ydC5lbmFibGVkKCk7XG59O1xuXG5JbmZvSWZyYW1lLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBpZiAodGhpcy5pZnIpIHtcbiAgICB0aGlzLmlmci5jbG9zZSgpO1xuICB9XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIHRoaXMuaWZyID0gbnVsbDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW5mb0lmcmFtZTtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9LHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se1wiLi9pbmZvLWlmcmFtZS1yZWNlaXZlclwiOjEwLFwiLi90cmFuc3BvcnQvaWZyYW1lXCI6MjIsXCIuL3V0aWxzL2V2ZW50XCI6NDYsXCJkZWJ1Z1wiOjU1LFwiZXZlbnRzXCI6MyxcImluaGVyaXRzXCI6NTcsXCJqc29uM1wiOjU4fV0sMTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIHVybFV0aWxzID0gcmVxdWlyZSgnLi91dGlscy91cmwnKVxuICAsIFhEUiA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0L3NlbmRlci94ZHInKVxuICAsIFhIUkNvcnMgPSByZXF1aXJlKCcuL3RyYW5zcG9ydC9zZW5kZXIveGhyLWNvcnMnKVxuICAsIFhIUkxvY2FsID0gcmVxdWlyZSgnLi90cmFuc3BvcnQvc2VuZGVyL3hoci1sb2NhbCcpXG4gICwgWEhSRmFrZSA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0L3NlbmRlci94aHItZmFrZScpXG4gICwgSW5mb0lmcmFtZSA9IHJlcXVpcmUoJy4vaW5mby1pZnJhbWUnKVxuICAsIEluZm9BamF4ID0gcmVxdWlyZSgnLi9pbmZvLWFqYXgnKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6aW5mby1yZWNlaXZlcicpO1xufVxuXG5mdW5jdGlvbiBJbmZvUmVjZWl2ZXIoYmFzZVVybCwgdXJsSW5mbykge1xuICBkZWJ1ZyhiYXNlVXJsKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuZG9YaHIoYmFzZVVybCwgdXJsSW5mbyk7XG4gIH0sIDApO1xufVxuXG5pbmhlcml0cyhJbmZvUmVjZWl2ZXIsIEV2ZW50RW1pdHRlcik7XG5cbi8vIFRPRE8gdGhpcyBpcyBjdXJyZW50bHkgaWdub3JpbmcgdGhlIGxpc3Qgb2YgYXZhaWxhYmxlIHRyYW5zcG9ydHMgYW5kIHRoZSB3aGl0ZWxpc3RcblxuSW5mb1JlY2VpdmVyLl9nZXRSZWNlaXZlciA9IGZ1bmN0aW9uKGJhc2VVcmwsIHVybCwgdXJsSW5mbykge1xuICAvLyBkZXRlcm1pbmUgbWV0aG9kIG9mIENPUlMgc3VwcG9ydCAoaWYgbmVlZGVkKVxuICBpZiAodXJsSW5mby5zYW1lT3JpZ2luKSB7XG4gICAgcmV0dXJuIG5ldyBJbmZvQWpheCh1cmwsIFhIUkxvY2FsKTtcbiAgfVxuICBpZiAoWEhSQ29ycy5lbmFibGVkKSB7XG4gICAgcmV0dXJuIG5ldyBJbmZvQWpheCh1cmwsIFhIUkNvcnMpO1xuICB9XG4gIGlmIChYRFIuZW5hYmxlZCAmJiB1cmxJbmZvLnNhbWVTY2hlbWUpIHtcbiAgICByZXR1cm4gbmV3IEluZm9BamF4KHVybCwgWERSKTtcbiAgfVxuICBpZiAoSW5mb0lmcmFtZS5lbmFibGVkKCkpIHtcbiAgICByZXR1cm4gbmV3IEluZm9JZnJhbWUoYmFzZVVybCwgdXJsKTtcbiAgfVxuICByZXR1cm4gbmV3IEluZm9BamF4KHVybCwgWEhSRmFrZSk7XG59O1xuXG5JbmZvUmVjZWl2ZXIucHJvdG90eXBlLmRvWGhyID0gZnVuY3Rpb24oYmFzZVVybCwgdXJsSW5mbykge1xuICB2YXIgc2VsZiA9IHRoaXNcbiAgICAsIHVybCA9IHVybFV0aWxzLmFkZFBhdGgoYmFzZVVybCwgJy9pbmZvJylcbiAgICA7XG4gIGRlYnVnKCdkb1hocicsIHVybCk7XG5cbiAgdGhpcy54byA9IEluZm9SZWNlaXZlci5fZ2V0UmVjZWl2ZXIoYmFzZVVybCwgdXJsLCB1cmxJbmZvKTtcblxuICB0aGlzLnRpbWVvdXRSZWYgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCd0aW1lb3V0Jyk7XG4gICAgc2VsZi5fY2xlYW51cChmYWxzZSk7XG4gICAgc2VsZi5lbWl0KCdmaW5pc2gnKTtcbiAgfSwgSW5mb1JlY2VpdmVyLnRpbWVvdXQpO1xuXG4gIHRoaXMueG8ub25jZSgnZmluaXNoJywgZnVuY3Rpb24oaW5mbywgcnR0KSB7XG4gICAgZGVidWcoJ2ZpbmlzaCcsIGluZm8sIHJ0dCk7XG4gICAgc2VsZi5fY2xlYW51cCh0cnVlKTtcbiAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcsIGluZm8sIHJ0dCk7XG4gIH0pO1xufTtcblxuSW5mb1JlY2VpdmVyLnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKHdhc0NsZWFuKSB7XG4gIGRlYnVnKCdfY2xlYW51cCcpO1xuICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0UmVmKTtcbiAgdGhpcy50aW1lb3V0UmVmID0gbnVsbDtcbiAgaWYgKCF3YXNDbGVhbiAmJiB0aGlzLnhvKSB7XG4gICAgdGhpcy54by5jbG9zZSgpO1xuICB9XG4gIHRoaXMueG8gPSBudWxsO1xufTtcblxuSW5mb1JlY2VpdmVyLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgdGhpcy5fY2xlYW51cChmYWxzZSk7XG59O1xuXG5JbmZvUmVjZWl2ZXIudGltZW91dCA9IDgwMDA7XG5cbm1vZHVsZS5leHBvcnRzID0gSW5mb1JlY2VpdmVyO1xuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0pXG5cbn0se1wiLi9pbmZvLWFqYXhcIjo5LFwiLi9pbmZvLWlmcmFtZVwiOjExLFwiLi90cmFuc3BvcnQvc2VuZGVyL3hkclwiOjM0LFwiLi90cmFuc3BvcnQvc2VuZGVyL3hoci1jb3JzXCI6MzUsXCIuL3RyYW5zcG9ydC9zZW5kZXIveGhyLWZha2VcIjozNixcIi4vdHJhbnNwb3J0L3NlbmRlci94aHItbG9jYWxcIjozNyxcIi4vdXRpbHMvdXJsXCI6NTIsXCJkZWJ1Z1wiOjU1LFwiZXZlbnRzXCI6MyxcImluaGVyaXRzXCI6NTd9XSwxMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLmxvY2F0aW9uIHx8IHtcbiAgb3JpZ2luOiAnaHR0cDovL2xvY2FsaG9zdDo4MCdcbiwgcHJvdG9jb2w6ICdodHRwOidcbiwgaG9zdDogJ2xvY2FsaG9zdCdcbiwgcG9ydDogODBcbiwgaHJlZjogJ2h0dHA6Ly9sb2NhbGhvc3QvJ1xuLCBoYXNoOiAnJ1xufTtcblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se31dLDE0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAocHJvY2VzcyxnbG9iYWwpe1xuJ3VzZSBzdHJpY3QnO1xuXG5yZXF1aXJlKCcuL3NoaW1zJyk7XG5cbnZhciBVUkwgPSByZXF1aXJlKCd1cmwtcGFyc2UnKVxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEpTT04zID0gcmVxdWlyZSgnanNvbjMnKVxuICAsIHJhbmRvbSA9IHJlcXVpcmUoJy4vdXRpbHMvcmFuZG9tJylcbiAgLCBlc2NhcGUgPSByZXF1aXJlKCcuL3V0aWxzL2VzY2FwZScpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzL3VybCcpXG4gICwgZXZlbnRVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvZXZlbnQnKVxuICAsIHRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vdXRpbHMvdHJhbnNwb3J0JylcbiAgLCBvYmplY3RVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvb2JqZWN0JylcbiAgLCBicm93c2VyID0gcmVxdWlyZSgnLi91dGlscy9icm93c2VyJylcbiAgLCBsb2cgPSByZXF1aXJlKCcuL3V0aWxzL2xvZycpXG4gICwgRXZlbnQgPSByZXF1aXJlKCcuL2V2ZW50L2V2ZW50JylcbiAgLCBFdmVudFRhcmdldCA9IHJlcXVpcmUoJy4vZXZlbnQvZXZlbnR0YXJnZXQnKVxuICAsIGxvYyA9IHJlcXVpcmUoJy4vbG9jYXRpb24nKVxuICAsIENsb3NlRXZlbnQgPSByZXF1aXJlKCcuL2V2ZW50L2Nsb3NlJylcbiAgLCBUcmFuc3BvcnRNZXNzYWdlRXZlbnQgPSByZXF1aXJlKCcuL2V2ZW50L3RyYW5zLW1lc3NhZ2UnKVxuICAsIEluZm9SZWNlaXZlciA9IHJlcXVpcmUoJy4vaW5mby1yZWNlaXZlcicpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDptYWluJyk7XG59XG5cbnZhciB0cmFuc3BvcnRzO1xuXG4vLyBmb2xsb3cgY29uc3RydWN0b3Igc3RlcHMgZGVmaW5lZCBhdCBodHRwOi8vZGV2LnczLm9yZy9odG1sNS93ZWJzb2NrZXRzLyN0aGUtd2Vic29ja2V0LWludGVyZmFjZVxuZnVuY3Rpb24gU29ja0pTKHVybCwgcHJvdG9jb2xzLCBvcHRpb25zKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBTb2NrSlMpKSB7XG4gICAgcmV0dXJuIG5ldyBTb2NrSlModXJsLCBwcm90b2NvbHMsIG9wdGlvbnMpO1xuICB9XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdTb2NrSlM6IDEgYXJndW1lbnQgcmVxdWlyZWQsIGJ1dCBvbmx5IDAgcHJlc2VudFwiKTtcbiAgfVxuICBFdmVudFRhcmdldC5jYWxsKHRoaXMpO1xuXG4gIHRoaXMucmVhZHlTdGF0ZSA9IFNvY2tKUy5DT05ORUNUSU5HO1xuICB0aGlzLmV4dGVuc2lvbnMgPSAnJztcbiAgdGhpcy5wcm90b2NvbCA9ICcnO1xuXG4gIC8vIG5vbi1zdGFuZGFyZCBleHRlbnNpb25cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGlmIChvcHRpb25zLnByb3RvY29sc193aGl0ZWxpc3QpIHtcbiAgICBsb2cud2FybihcIidwcm90b2NvbHNfd2hpdGVsaXN0JyBpcyBERVBSRUNBVEVELiBVc2UgJ3RyYW5zcG9ydHMnIGluc3RlYWQuXCIpO1xuICB9XG4gIHRoaXMuX3RyYW5zcG9ydHNXaGl0ZWxpc3QgPSBvcHRpb25zLnRyYW5zcG9ydHM7XG4gIHRoaXMuX3RyYW5zcG9ydE9wdGlvbnMgPSBvcHRpb25zLnRyYW5zcG9ydE9wdGlvbnMgfHwge307XG4gIHRoaXMuX3RpbWVvdXQgPSBvcHRpb25zLnRpbWVvdXQgfHwgMDtcblxuICB2YXIgc2Vzc2lvbklkID0gb3B0aW9ucy5zZXNzaW9uSWQgfHwgODtcbiAgaWYgKHR5cGVvZiBzZXNzaW9uSWQgPT09ICdmdW5jdGlvbicpIHtcbiAgICB0aGlzLl9nZW5lcmF0ZVNlc3Npb25JZCA9IHNlc3Npb25JZDtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygc2Vzc2lvbklkID09PSAnbnVtYmVyJykge1xuICAgIHRoaXMuX2dlbmVyYXRlU2Vzc2lvbklkID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gcmFuZG9tLnN0cmluZyhzZXNzaW9uSWQpO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSWYgc2Vzc2lvbklkIGlzIHVzZWQgaW4gdGhlIG9wdGlvbnMsIGl0IG5lZWRzIHRvIGJlIGEgbnVtYmVyIG9yIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB0aGlzLl9zZXJ2ZXIgPSBvcHRpb25zLnNlcnZlciB8fCByYW5kb20ubnVtYmVyU3RyaW5nKDEwMDApO1xuXG4gIC8vIFN0ZXAgMSBvZiBXUyBzcGVjIC0gcGFyc2UgYW5kIHZhbGlkYXRlIHRoZSB1cmwuIElzc3VlICM4XG4gIHZhciBwYXJzZWRVcmwgPSBuZXcgVVJMKHVybCk7XG4gIGlmICghcGFyc2VkVXJsLmhvc3QgfHwgIXBhcnNlZFVybC5wcm90b2NvbCkge1xuICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihcIlRoZSBVUkwgJ1wiICsgdXJsICsgXCInIGlzIGludmFsaWRcIik7XG4gIH0gZWxzZSBpZiAocGFyc2VkVXJsLmhhc2gpIHtcbiAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoJ1RoZSBVUkwgbXVzdCBub3QgY29udGFpbiBhIGZyYWdtZW50Jyk7XG4gIH0gZWxzZSBpZiAocGFyc2VkVXJsLnByb3RvY29sICE9PSAnaHR0cDonICYmIHBhcnNlZFVybC5wcm90b2NvbCAhPT0gJ2h0dHBzOicpIHtcbiAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJUaGUgVVJMJ3Mgc2NoZW1lIG11c3QgYmUgZWl0aGVyICdodHRwOicgb3IgJ2h0dHBzOicuICdcIiArIHBhcnNlZFVybC5wcm90b2NvbCArIFwiJyBpcyBub3QgYWxsb3dlZC5cIik7XG4gIH1cblxuICB2YXIgc2VjdXJlID0gcGFyc2VkVXJsLnByb3RvY29sID09PSAnaHR0cHM6JztcbiAgLy8gU3RlcCAyIC0gZG9uJ3QgYWxsb3cgc2VjdXJlIG9yaWdpbiB3aXRoIGFuIGluc2VjdXJlIHByb3RvY29sXG4gIGlmIChsb2MucHJvdG9jb2wgPT09ICdodHRwczonICYmICFzZWN1cmUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1NlY3VyaXR5RXJyb3I6IEFuIGluc2VjdXJlIFNvY2tKUyBjb25uZWN0aW9uIG1heSBub3QgYmUgaW5pdGlhdGVkIGZyb20gYSBwYWdlIGxvYWRlZCBvdmVyIEhUVFBTJyk7XG4gIH1cblxuICAvLyBTdGVwIDMgLSBjaGVjayBwb3J0IGFjY2VzcyAtIG5vIG5lZWQgaGVyZVxuICAvLyBTdGVwIDQgLSBwYXJzZSBwcm90b2NvbHMgYXJndW1lbnRcbiAgaWYgKCFwcm90b2NvbHMpIHtcbiAgICBwcm90b2NvbHMgPSBbXTtcbiAgfSBlbHNlIGlmICghQXJyYXkuaXNBcnJheShwcm90b2NvbHMpKSB7XG4gICAgcHJvdG9jb2xzID0gW3Byb3RvY29sc107XG4gIH1cblxuICAvLyBTdGVwIDUgLSBjaGVjayBwcm90b2NvbHMgYXJndW1lbnRcbiAgdmFyIHNvcnRlZFByb3RvY29scyA9IHByb3RvY29scy5zb3J0KCk7XG4gIHNvcnRlZFByb3RvY29scy5mb3JFYWNoKGZ1bmN0aW9uKHByb3RvLCBpKSB7XG4gICAgaWYgKCFwcm90bykge1xuICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKFwiVGhlIHByb3RvY29scyBlbnRyeSAnXCIgKyBwcm90byArIFwiJyBpcyBpbnZhbGlkLlwiKTtcbiAgICB9XG4gICAgaWYgKGkgPCAoc29ydGVkUHJvdG9jb2xzLmxlbmd0aCAtIDEpICYmIHByb3RvID09PSBzb3J0ZWRQcm90b2NvbHNbaSArIDFdKSB7XG4gICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJUaGUgcHJvdG9jb2xzIGVudHJ5ICdcIiArIHByb3RvICsgXCInIGlzIGR1cGxpY2F0ZWQuXCIpO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gU3RlcCA2IC0gY29udmVydCBvcmlnaW5cbiAgdmFyIG8gPSB1cmxVdGlscy5nZXRPcmlnaW4obG9jLmhyZWYpO1xuICB0aGlzLl9vcmlnaW4gPSBvID8gby50b0xvd2VyQ2FzZSgpIDogbnVsbDtcblxuICAvLyByZW1vdmUgdGhlIHRyYWlsaW5nIHNsYXNoXG4gIHBhcnNlZFVybC5zZXQoJ3BhdGhuYW1lJywgcGFyc2VkVXJsLnBhdGhuYW1lLnJlcGxhY2UoL1xcLyskLywgJycpKTtcblxuICAvLyBzdG9yZSB0aGUgc2FuaXRpemVkIHVybFxuICB0aGlzLnVybCA9IHBhcnNlZFVybC5ocmVmO1xuICBkZWJ1ZygndXNpbmcgdXJsJywgdGhpcy51cmwpO1xuXG4gIC8vIFN0ZXAgNyAtIHN0YXJ0IGNvbm5lY3Rpb24gaW4gYmFja2dyb3VuZFxuICAvLyBvYnRhaW4gc2VydmVyIGluZm9cbiAgLy8gaHR0cDovL3NvY2tqcy5naXRodWIuaW8vc29ja2pzLXByb3RvY29sL3NvY2tqcy1wcm90b2NvbC0wLjMuMy5odG1sI3NlY3Rpb24tMjZcbiAgdGhpcy5fdXJsSW5mbyA9IHtcbiAgICBudWxsT3JpZ2luOiAhYnJvd3Nlci5oYXNEb21haW4oKVxuICAsIHNhbWVPcmlnaW46IHVybFV0aWxzLmlzT3JpZ2luRXF1YWwodGhpcy51cmwsIGxvYy5ocmVmKVxuICAsIHNhbWVTY2hlbWU6IHVybFV0aWxzLmlzU2NoZW1lRXF1YWwodGhpcy51cmwsIGxvYy5ocmVmKVxuICB9O1xuXG4gIHRoaXMuX2lyID0gbmV3IEluZm9SZWNlaXZlcih0aGlzLnVybCwgdGhpcy5fdXJsSW5mbyk7XG4gIHRoaXMuX2lyLm9uY2UoJ2ZpbmlzaCcsIHRoaXMuX3JlY2VpdmVJbmZvLmJpbmQodGhpcykpO1xufVxuXG5pbmhlcml0cyhTb2NrSlMsIEV2ZW50VGFyZ2V0KTtcblxuZnVuY3Rpb24gdXNlclNldENvZGUoY29kZSkge1xuICByZXR1cm4gY29kZSA9PT0gMTAwMCB8fCAoY29kZSA+PSAzMDAwICYmIGNvZGUgPD0gNDk5OSk7XG59XG5cblNvY2tKUy5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbihjb2RlLCByZWFzb24pIHtcbiAgLy8gU3RlcCAxXG4gIGlmIChjb2RlICYmICF1c2VyU2V0Q29kZShjb2RlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZEFjY2Vzc0Vycm9yOiBJbnZhbGlkIGNvZGUnKTtcbiAgfVxuICAvLyBTdGVwIDIuNCBzdGF0ZXMgdGhlIG1heCBpcyAxMjMgYnl0ZXMsIGJ1dCB3ZSBhcmUganVzdCBjaGVja2luZyBsZW5ndGhcbiAgaWYgKHJlYXNvbiAmJiByZWFzb24ubGVuZ3RoID4gMTIzKSB7XG4gICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdyZWFzb24gYXJndW1lbnQgaGFzIGFuIGludmFsaWQgbGVuZ3RoJyk7XG4gIH1cblxuICAvLyBTdGVwIDMuMVxuICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBTb2NrSlMuQ0xPU0lORyB8fCB0aGlzLnJlYWR5U3RhdGUgPT09IFNvY2tKUy5DTE9TRUQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBUT0RPIGxvb2sgYXQgZG9jcyB0byBkZXRlcm1pbmUgaG93IHRvIHNldCB0aGlzXG4gIHZhciB3YXNDbGVhbiA9IHRydWU7XG4gIHRoaXMuX2Nsb3NlKGNvZGUgfHwgMTAwMCwgcmVhc29uIHx8ICdOb3JtYWwgY2xvc3VyZScsIHdhc0NsZWFuKTtcbn07XG5cblNvY2tKUy5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgLy8gIzEzIC0gY29udmVydCBhbnl0aGluZyBub24tc3RyaW5nIHRvIHN0cmluZ1xuICAvLyBUT0RPIHRoaXMgY3VycmVudGx5IHR1cm5zIG9iamVjdHMgaW50byBbb2JqZWN0IE9iamVjdF1cbiAgaWYgKHR5cGVvZiBkYXRhICE9PSAnc3RyaW5nJykge1xuICAgIGRhdGEgPSAnJyArIGRhdGE7XG4gIH1cbiAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gU29ja0pTLkNPTk5FQ1RJTkcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWRTdGF0ZUVycm9yOiBUaGUgY29ubmVjdGlvbiBoYXMgbm90IGJlZW4gZXN0YWJsaXNoZWQgeWV0Jyk7XG4gIH1cbiAgaWYgKHRoaXMucmVhZHlTdGF0ZSAhPT0gU29ja0pTLk9QRU4pIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdGhpcy5fdHJhbnNwb3J0LnNlbmQoZXNjYXBlLnF1b3RlKGRhdGEpKTtcbn07XG5cblNvY2tKUy52ZXJzaW9uID0gcmVxdWlyZSgnLi92ZXJzaW9uJyk7XG5cblNvY2tKUy5DT05ORUNUSU5HID0gMDtcblNvY2tKUy5PUEVOID0gMTtcblNvY2tKUy5DTE9TSU5HID0gMjtcblNvY2tKUy5DTE9TRUQgPSAzO1xuXG5Tb2NrSlMucHJvdG90eXBlLl9yZWNlaXZlSW5mbyA9IGZ1bmN0aW9uKGluZm8sIHJ0dCkge1xuICBkZWJ1ZygnX3JlY2VpdmVJbmZvJywgcnR0KTtcbiAgdGhpcy5faXIgPSBudWxsO1xuICBpZiAoIWluZm8pIHtcbiAgICB0aGlzLl9jbG9zZSgxMDAyLCAnQ2Fubm90IGNvbm5lY3QgdG8gc2VydmVyJyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gZXN0YWJsaXNoIGEgcm91bmQtdHJpcCB0aW1lb3V0IChSVE8pIGJhc2VkIG9uIHRoZVxuICAvLyByb3VuZC10cmlwIHRpbWUgKFJUVClcbiAgdGhpcy5fcnRvID0gdGhpcy5jb3VudFJUTyhydHQpO1xuICAvLyBhbGxvdyBzZXJ2ZXIgdG8gb3ZlcnJpZGUgdXJsIHVzZWQgZm9yIHRoZSBhY3R1YWwgdHJhbnNwb3J0XG4gIHRoaXMuX3RyYW5zVXJsID0gaW5mby5iYXNlX3VybCA/IGluZm8uYmFzZV91cmwgOiB0aGlzLnVybDtcbiAgaW5mbyA9IG9iamVjdFV0aWxzLmV4dGVuZChpbmZvLCB0aGlzLl91cmxJbmZvKTtcbiAgZGVidWcoJ2luZm8nLCBpbmZvKTtcbiAgLy8gZGV0ZXJtaW5lIGxpc3Qgb2YgZGVzaXJlZCBhbmQgc3VwcG9ydGVkIHRyYW5zcG9ydHNcbiAgdmFyIGVuYWJsZWRUcmFuc3BvcnRzID0gdHJhbnNwb3J0cy5maWx0ZXJUb0VuYWJsZWQodGhpcy5fdHJhbnNwb3J0c1doaXRlbGlzdCwgaW5mbyk7XG4gIHRoaXMuX3RyYW5zcG9ydHMgPSBlbmFibGVkVHJhbnNwb3J0cy5tYWluO1xuICBkZWJ1Zyh0aGlzLl90cmFuc3BvcnRzLmxlbmd0aCArICcgZW5hYmxlZCB0cmFuc3BvcnRzJyk7XG5cbiAgdGhpcy5fY29ubmVjdCgpO1xufTtcblxuU29ja0pTLnByb3RvdHlwZS5fY29ubmVjdCA9IGZ1bmN0aW9uKCkge1xuICBmb3IgKHZhciBUcmFuc3BvcnQgPSB0aGlzLl90cmFuc3BvcnRzLnNoaWZ0KCk7IFRyYW5zcG9ydDsgVHJhbnNwb3J0ID0gdGhpcy5fdHJhbnNwb3J0cy5zaGlmdCgpKSB7XG4gICAgZGVidWcoJ2F0dGVtcHQnLCBUcmFuc3BvcnQudHJhbnNwb3J0TmFtZSk7XG4gICAgaWYgKFRyYW5zcG9ydC5uZWVkQm9keSkge1xuICAgICAgaWYgKCFnbG9iYWwuZG9jdW1lbnQuYm9keSB8fFxuICAgICAgICAgICh0eXBlb2YgZ2xvYmFsLmRvY3VtZW50LnJlYWR5U3RhdGUgIT09ICd1bmRlZmluZWQnICYmXG4gICAgICAgICAgICBnbG9iYWwuZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gJ2NvbXBsZXRlJyAmJlxuICAgICAgICAgICAgZ2xvYmFsLmRvY3VtZW50LnJlYWR5U3RhdGUgIT09ICdpbnRlcmFjdGl2ZScpKSB7XG4gICAgICAgIGRlYnVnKCd3YWl0aW5nIGZvciBib2R5Jyk7XG4gICAgICAgIHRoaXMuX3RyYW5zcG9ydHMudW5zaGlmdChUcmFuc3BvcnQpO1xuICAgICAgICBldmVudFV0aWxzLmF0dGFjaEV2ZW50KCdsb2FkJywgdGhpcy5fY29ubmVjdC5iaW5kKHRoaXMpKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGNhbGN1bGF0ZSB0aW1lb3V0IGJhc2VkIG9uIFJUTyBhbmQgcm91bmQgdHJpcHMuIERlZmF1bHQgdG8gNXNcbiAgICB2YXIgdGltZW91dE1zID0gTWF0aC5tYXgodGhpcy5fdGltZW91dCwgKHRoaXMuX3J0byAqIFRyYW5zcG9ydC5yb3VuZFRyaXBzKSB8fCA1MDAwKTtcbiAgICB0aGlzLl90cmFuc3BvcnRUaW1lb3V0SWQgPSBzZXRUaW1lb3V0KHRoaXMuX3RyYW5zcG9ydFRpbWVvdXQuYmluZCh0aGlzKSwgdGltZW91dE1zKTtcbiAgICBkZWJ1ZygndXNpbmcgdGltZW91dCcsIHRpbWVvdXRNcyk7XG5cbiAgICB2YXIgdHJhbnNwb3J0VXJsID0gdXJsVXRpbHMuYWRkUGF0aCh0aGlzLl90cmFuc1VybCwgJy8nICsgdGhpcy5fc2VydmVyICsgJy8nICsgdGhpcy5fZ2VuZXJhdGVTZXNzaW9uSWQoKSk7XG4gICAgdmFyIG9wdGlvbnMgPSB0aGlzLl90cmFuc3BvcnRPcHRpb25zW1RyYW5zcG9ydC50cmFuc3BvcnROYW1lXTtcbiAgICBkZWJ1ZygndHJhbnNwb3J0IHVybCcsIHRyYW5zcG9ydFVybCk7XG4gICAgdmFyIHRyYW5zcG9ydE9iaiA9IG5ldyBUcmFuc3BvcnQodHJhbnNwb3J0VXJsLCB0aGlzLl90cmFuc1VybCwgb3B0aW9ucyk7XG4gICAgdHJhbnNwb3J0T2JqLm9uKCdtZXNzYWdlJywgdGhpcy5fdHJhbnNwb3J0TWVzc2FnZS5iaW5kKHRoaXMpKTtcbiAgICB0cmFuc3BvcnRPYmoub25jZSgnY2xvc2UnLCB0aGlzLl90cmFuc3BvcnRDbG9zZS5iaW5kKHRoaXMpKTtcbiAgICB0cmFuc3BvcnRPYmoudHJhbnNwb3J0TmFtZSA9IFRyYW5zcG9ydC50cmFuc3BvcnROYW1lO1xuICAgIHRoaXMuX3RyYW5zcG9ydCA9IHRyYW5zcG9ydE9iajtcblxuICAgIHJldHVybjtcbiAgfVxuICB0aGlzLl9jbG9zZSgyMDAwLCAnQWxsIHRyYW5zcG9ydHMgZmFpbGVkJywgZmFsc2UpO1xufTtcblxuU29ja0pTLnByb3RvdHlwZS5fdHJhbnNwb3J0VGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnX3RyYW5zcG9ydFRpbWVvdXQnKTtcbiAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gU29ja0pTLkNPTk5FQ1RJTkcpIHtcbiAgICBpZiAodGhpcy5fdHJhbnNwb3J0KSB7XG4gICAgICB0aGlzLl90cmFuc3BvcnQuY2xvc2UoKTtcbiAgICB9XG5cbiAgICB0aGlzLl90cmFuc3BvcnRDbG9zZSgyMDA3LCAnVHJhbnNwb3J0IHRpbWVkIG91dCcpO1xuICB9XG59O1xuXG5Tb2NrSlMucHJvdG90eXBlLl90cmFuc3BvcnRNZXNzYWdlID0gZnVuY3Rpb24obXNnKSB7XG4gIGRlYnVnKCdfdHJhbnNwb3J0TWVzc2FnZScsIG1zZyk7XG4gIHZhciBzZWxmID0gdGhpc1xuICAgICwgdHlwZSA9IG1zZy5zbGljZSgwLCAxKVxuICAgICwgY29udGVudCA9IG1zZy5zbGljZSgxKVxuICAgICwgcGF5bG9hZFxuICAgIDtcblxuICAvLyBmaXJzdCBjaGVjayBmb3IgbWVzc2FnZXMgdGhhdCBkb24ndCBuZWVkIGEgcGF5bG9hZFxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICdvJzpcbiAgICAgIHRoaXMuX29wZW4oKTtcbiAgICAgIHJldHVybjtcbiAgICBjYXNlICdoJzpcbiAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2hlYXJ0YmVhdCcpKTtcbiAgICAgIGRlYnVnKCdoZWFydGJlYXQnLCB0aGlzLnRyYW5zcG9ydCk7XG4gICAgICByZXR1cm47XG4gIH1cblxuICBpZiAoY29udGVudCkge1xuICAgIHRyeSB7XG4gICAgICBwYXlsb2FkID0gSlNPTjMucGFyc2UoY29udGVudCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgZGVidWcoJ2JhZCBqc29uJywgY29udGVudCk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHR5cGVvZiBwYXlsb2FkID09PSAndW5kZWZpbmVkJykge1xuICAgIGRlYnVnKCdlbXB0eSBwYXlsb2FkJywgY29udGVudCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAnYSc6XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShwYXlsb2FkKSkge1xuICAgICAgICBwYXlsb2FkLmZvckVhY2goZnVuY3Rpb24ocCkge1xuICAgICAgICAgIGRlYnVnKCdtZXNzYWdlJywgc2VsZi50cmFuc3BvcnQsIHApO1xuICAgICAgICAgIHNlbGYuZGlzcGF0Y2hFdmVudChuZXcgVHJhbnNwb3J0TWVzc2FnZUV2ZW50KHApKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBjYXNlICdtJzpcbiAgICAgIGRlYnVnKCdtZXNzYWdlJywgdGhpcy50cmFuc3BvcnQsIHBheWxvYWQpO1xuICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBUcmFuc3BvcnRNZXNzYWdlRXZlbnQocGF5bG9hZCkpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnYyc6XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShwYXlsb2FkKSAmJiBwYXlsb2FkLmxlbmd0aCA9PT0gMikge1xuICAgICAgICB0aGlzLl9jbG9zZShwYXlsb2FkWzBdLCBwYXlsb2FkWzFdLCB0cnVlKTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICB9XG59O1xuXG5Tb2NrSlMucHJvdG90eXBlLl90cmFuc3BvcnRDbG9zZSA9IGZ1bmN0aW9uKGNvZGUsIHJlYXNvbikge1xuICBkZWJ1ZygnX3RyYW5zcG9ydENsb3NlJywgdGhpcy50cmFuc3BvcnQsIGNvZGUsIHJlYXNvbik7XG4gIGlmICh0aGlzLl90cmFuc3BvcnQpIHtcbiAgICB0aGlzLl90cmFuc3BvcnQucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fdHJhbnNwb3J0ID0gbnVsbDtcbiAgICB0aGlzLnRyYW5zcG9ydCA9IG51bGw7XG4gIH1cblxuICBpZiAoIXVzZXJTZXRDb2RlKGNvZGUpICYmIGNvZGUgIT09IDIwMDAgJiYgdGhpcy5yZWFkeVN0YXRlID09PSBTb2NrSlMuQ09OTkVDVElORykge1xuICAgIHRoaXMuX2Nvbm5lY3QoKTtcbiAgICByZXR1cm47XG4gIH1cblxuICB0aGlzLl9jbG9zZShjb2RlLCByZWFzb24pO1xufTtcblxuU29ja0pTLnByb3RvdHlwZS5fb3BlbiA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnX29wZW4nLCB0aGlzLl90cmFuc3BvcnQgJiYgdGhpcy5fdHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUsIHRoaXMucmVhZHlTdGF0ZSk7XG4gIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFNvY2tKUy5DT05ORUNUSU5HKSB7XG4gICAgaWYgKHRoaXMuX3RyYW5zcG9ydFRpbWVvdXRJZCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX3RyYW5zcG9ydFRpbWVvdXRJZCk7XG4gICAgICB0aGlzLl90cmFuc3BvcnRUaW1lb3V0SWQgPSBudWxsO1xuICAgIH1cbiAgICB0aGlzLnJlYWR5U3RhdGUgPSBTb2NrSlMuT1BFTjtcbiAgICB0aGlzLnRyYW5zcG9ydCA9IHRoaXMuX3RyYW5zcG9ydC50cmFuc3BvcnROYW1lO1xuICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ29wZW4nKSk7XG4gICAgZGVidWcoJ2Nvbm5lY3RlZCcsIHRoaXMudHJhbnNwb3J0KTtcbiAgfSBlbHNlIHtcbiAgICAvLyBUaGUgc2VydmVyIG1pZ2h0IGhhdmUgYmVlbiByZXN0YXJ0ZWQsIGFuZCBsb3N0IHRyYWNrIG9mIG91clxuICAgIC8vIGNvbm5lY3Rpb24uXG4gICAgdGhpcy5fY2xvc2UoMTAwNiwgJ1NlcnZlciBsb3N0IHNlc3Npb24nKTtcbiAgfVxufTtcblxuU29ja0pTLnByb3RvdHlwZS5fY2xvc2UgPSBmdW5jdGlvbihjb2RlLCByZWFzb24sIHdhc0NsZWFuKSB7XG4gIGRlYnVnKCdfY2xvc2UnLCB0aGlzLnRyYW5zcG9ydCwgY29kZSwgcmVhc29uLCB3YXNDbGVhbiwgdGhpcy5yZWFkeVN0YXRlKTtcbiAgdmFyIGZvcmNlRmFpbCA9IGZhbHNlO1xuXG4gIGlmICh0aGlzLl9pcikge1xuICAgIGZvcmNlRmFpbCA9IHRydWU7XG4gICAgdGhpcy5faXIuY2xvc2UoKTtcbiAgICB0aGlzLl9pciA9IG51bGw7XG4gIH1cbiAgaWYgKHRoaXMuX3RyYW5zcG9ydCkge1xuICAgIHRoaXMuX3RyYW5zcG9ydC5jbG9zZSgpO1xuICAgIHRoaXMuX3RyYW5zcG9ydCA9IG51bGw7XG4gICAgdGhpcy50cmFuc3BvcnQgPSBudWxsO1xuICB9XG5cbiAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gU29ja0pTLkNMT1NFRCkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZFN0YXRlRXJyb3I6IFNvY2tKUyBoYXMgYWxyZWFkeSBiZWVuIGNsb3NlZCcpO1xuICB9XG5cbiAgdGhpcy5yZWFkeVN0YXRlID0gU29ja0pTLkNMT1NJTkc7XG4gIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZWFkeVN0YXRlID0gU29ja0pTLkNMT1NFRDtcblxuICAgIGlmIChmb3JjZUZhaWwpIHtcbiAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2Vycm9yJykpO1xuICAgIH1cblxuICAgIHZhciBlID0gbmV3IENsb3NlRXZlbnQoJ2Nsb3NlJyk7XG4gICAgZS53YXNDbGVhbiA9IHdhc0NsZWFuIHx8IGZhbHNlO1xuICAgIGUuY29kZSA9IGNvZGUgfHwgMTAwMDtcbiAgICBlLnJlYXNvbiA9IHJlYXNvbjtcblxuICAgIHRoaXMuZGlzcGF0Y2hFdmVudChlKTtcbiAgICB0aGlzLm9ubWVzc2FnZSA9IHRoaXMub25jbG9zZSA9IHRoaXMub25lcnJvciA9IG51bGw7XG4gICAgZGVidWcoJ2Rpc2Nvbm5lY3RlZCcpO1xuICB9LmJpbmQodGhpcyksIDApO1xufTtcblxuLy8gU2VlOiBodHRwOi8vd3d3LmVyZy5hYmRuLmFjLnVrL35nZXJyaXQvZGNjcC9ub3Rlcy9jY2lkMi9ydG9fZXN0aW1hdG9yL1xuLy8gYW5kIFJGQyAyOTg4LlxuU29ja0pTLnByb3RvdHlwZS5jb3VudFJUTyA9IGZ1bmN0aW9uKHJ0dCkge1xuICAvLyBJbiBhIGxvY2FsIGVudmlyb25tZW50LCB3aGVuIHVzaW5nIElFOC85IGFuZCB0aGUgYGpzb25wLXBvbGxpbmdgXG4gIC8vIHRyYW5zcG9ydCB0aGUgdGltZSBuZWVkZWQgdG8gZXN0YWJsaXNoIGEgY29ubmVjdGlvbiAodGhlIHRpbWUgdGhhdCBwYXNzXG4gIC8vIGZyb20gdGhlIG9wZW5pbmcgb2YgdGhlIHRyYW5zcG9ydCB0byB0aGUgY2FsbCBvZiBgX2Rpc3BhdGNoT3BlbmApIGlzXG4gIC8vIGFyb3VuZCAyMDBtc2VjICh0aGUgbG93ZXIgYm91bmQgdXNlZCBpbiB0aGUgYXJ0aWNsZSBhYm92ZSkgYW5kIHRoaXNcbiAgLy8gY2F1c2VzIHNwdXJpb3VzIHRpbWVvdXRzLiBGb3IgdGhpcyByZWFzb24gd2UgY2FsY3VsYXRlIGEgdmFsdWUgc2xpZ2h0bHlcbiAgLy8gbGFyZ2VyIHRoYW4gdGhhdCB1c2VkIGluIHRoZSBhcnRpY2xlLlxuICBpZiAocnR0ID4gMTAwKSB7XG4gICAgcmV0dXJuIDQgKiBydHQ7IC8vIHJ0byA+IDQwMG1zZWNcbiAgfVxuICByZXR1cm4gMzAwICsgcnR0OyAvLyAzMDBtc2VjIDwgcnRvIDw9IDQwMG1zZWNcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oYXZhaWxhYmxlVHJhbnNwb3J0cykge1xuICB0cmFuc3BvcnRzID0gdHJhbnNwb3J0KGF2YWlsYWJsZVRyYW5zcG9ydHMpO1xuICByZXF1aXJlKCcuL2lmcmFtZS1ib290c3RyYXAnKShTb2NrSlMsIGF2YWlsYWJsZVRyYW5zcG9ydHMpO1xuICByZXR1cm4gU29ja0pTO1xufTtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9LHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se1wiLi9ldmVudC9jbG9zZVwiOjIsXCIuL2V2ZW50L2V2ZW50XCI6NCxcIi4vZXZlbnQvZXZlbnR0YXJnZXRcIjo1LFwiLi9ldmVudC90cmFucy1tZXNzYWdlXCI6NixcIi4vaWZyYW1lLWJvb3RzdHJhcFwiOjgsXCIuL2luZm8tcmVjZWl2ZXJcIjoxMixcIi4vbG9jYXRpb25cIjoxMyxcIi4vc2hpbXNcIjoxNSxcIi4vdXRpbHMvYnJvd3NlclwiOjQ0LFwiLi91dGlscy9lc2NhcGVcIjo0NSxcIi4vdXRpbHMvZXZlbnRcIjo0NixcIi4vdXRpbHMvbG9nXCI6NDgsXCIuL3V0aWxzL29iamVjdFwiOjQ5LFwiLi91dGlscy9yYW5kb21cIjo1MCxcIi4vdXRpbHMvdHJhbnNwb3J0XCI6NTEsXCIuL3V0aWxzL3VybFwiOjUyLFwiLi92ZXJzaW9uXCI6NTMsXCJkZWJ1Z1wiOjU1LFwiaW5oZXJpdHNcIjo1NyxcImpzb24zXCI6NTgsXCJ1cmwtcGFyc2VcIjo2MX1dLDE1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbi8qIGVzbGludC1kaXNhYmxlICovXG4vKiBqc2NzOiBkaXNhYmxlICovXG4ndXNlIHN0cmljdCc7XG5cbi8vIHB1bGxlZCBzcGVjaWZpYyBzaGltcyBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9lcy1zaGltcy9lczUtc2hpbVxuXG52YXIgQXJyYXlQcm90b3R5cGUgPSBBcnJheS5wcm90b3R5cGU7XG52YXIgT2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbnZhciBGdW5jdGlvblByb3RvdHlwZSA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbnZhciBTdHJpbmdQcm90b3R5cGUgPSBTdHJpbmcucHJvdG90eXBlO1xudmFyIGFycmF5X3NsaWNlID0gQXJyYXlQcm90b3R5cGUuc2xpY2U7XG5cbnZhciBfdG9TdHJpbmcgPSBPYmplY3RQcm90b3R5cGUudG9TdHJpbmc7XG52YXIgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uICh2YWwpIHtcbiAgICByZXR1cm4gT2JqZWN0UHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbn07XG52YXIgaXNBcnJheSA9IGZ1bmN0aW9uIGlzQXJyYXkob2JqKSB7XG4gICAgcmV0dXJuIF90b1N0cmluZy5jYWxsKG9iaikgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xudmFyIGlzU3RyaW5nID0gZnVuY3Rpb24gaXNTdHJpbmcob2JqKSB7XG4gICAgcmV0dXJuIF90b1N0cmluZy5jYWxsKG9iaikgPT09ICdbb2JqZWN0IFN0cmluZ10nO1xufTtcblxudmFyIHN1cHBvcnRzRGVzY3JpcHRvcnMgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICd4Jywge30pO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7IC8qIHRoaXMgaXMgRVMzICovXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59KCkpO1xuXG4vLyBEZWZpbmUgY29uZmlndXJhYmxlLCB3cml0YWJsZSBhbmQgbm9uLWVudW1lcmFibGUgcHJvcHNcbi8vIGlmIHRoZXkgZG9uJ3QgZXhpc3QuXG52YXIgZGVmaW5lUHJvcGVydHk7XG5pZiAoc3VwcG9ydHNEZXNjcmlwdG9ycykge1xuICAgIGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gKG9iamVjdCwgbmFtZSwgbWV0aG9kLCBmb3JjZUFzc2lnbikge1xuICAgICAgICBpZiAoIWZvcmNlQXNzaWduICYmIChuYW1lIGluIG9iamVjdCkpIHsgcmV0dXJuOyB9XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIG5hbWUsIHtcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogbWV0aG9kXG4gICAgICAgIH0pO1xuICAgIH07XG59IGVsc2Uge1xuICAgIGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gKG9iamVjdCwgbmFtZSwgbWV0aG9kLCBmb3JjZUFzc2lnbikge1xuICAgICAgICBpZiAoIWZvcmNlQXNzaWduICYmIChuYW1lIGluIG9iamVjdCkpIHsgcmV0dXJuOyB9XG4gICAgICAgIG9iamVjdFtuYW1lXSA9IG1ldGhvZDtcbiAgICB9O1xufVxudmFyIGRlZmluZVByb3BlcnRpZXMgPSBmdW5jdGlvbiAob2JqZWN0LCBtYXAsIGZvcmNlQXNzaWduKSB7XG4gICAgZm9yICh2YXIgbmFtZSBpbiBtYXApIHtcbiAgICAgICAgaWYgKE9iamVjdFByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1hcCwgbmFtZSkpIHtcbiAgICAgICAgICBkZWZpbmVQcm9wZXJ0eShvYmplY3QsIG5hbWUsIG1hcFtuYW1lXSwgZm9yY2VBc3NpZ24pO1xuICAgICAgICB9XG4gICAgfVxufTtcblxudmFyIHRvT2JqZWN0ID0gZnVuY3Rpb24gKG8pIHtcbiAgICBpZiAobyA9PSBudWxsKSB7IC8vIHRoaXMgbWF0Y2hlcyBib3RoIG51bGwgYW5kIHVuZGVmaW5lZFxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiY2FuJ3QgY29udmVydCBcIiArIG8gKyAnIHRvIG9iamVjdCcpO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0KG8pO1xufTtcblxuLy9cbi8vIFV0aWxcbi8vID09PT09PVxuLy9cblxuLy8gRVM1IDkuNFxuLy8gaHR0cDovL2VzNS5naXRodWIuY29tLyN4OS40XG4vLyBodHRwOi8vanNwZXJmLmNvbS90by1pbnRlZ2VyXG5cbmZ1bmN0aW9uIHRvSW50ZWdlcihudW0pIHtcbiAgICB2YXIgbiA9ICtudW07XG4gICAgaWYgKG4gIT09IG4pIHsgLy8gaXNOYU5cbiAgICAgICAgbiA9IDA7XG4gICAgfSBlbHNlIGlmIChuICE9PSAwICYmIG4gIT09ICgxIC8gMCkgJiYgbiAhPT0gLSgxIC8gMCkpIHtcbiAgICAgICAgbiA9IChuID4gMCB8fCAtMSkgKiBNYXRoLmZsb29yKE1hdGguYWJzKG4pKTtcbiAgICB9XG4gICAgcmV0dXJuIG47XG59XG5cbmZ1bmN0aW9uIFRvVWludDMyKHgpIHtcbiAgICByZXR1cm4geCA+Pj4gMDtcbn1cblxuLy9cbi8vIEZ1bmN0aW9uXG4vLyA9PT09PT09PVxuLy9cblxuLy8gRVMtNSAxNS4zLjQuNVxuLy8gaHR0cDovL2VzNS5naXRodWIuY29tLyN4MTUuMy40LjVcblxuZnVuY3Rpb24gRW1wdHkoKSB7fVxuXG5kZWZpbmVQcm9wZXJ0aWVzKEZ1bmN0aW9uUHJvdG90eXBlLCB7XG4gICAgYmluZDogZnVuY3Rpb24gYmluZCh0aGF0KSB7IC8vIC5sZW5ndGggaXMgMVxuICAgICAgICAvLyAxLiBMZXQgVGFyZ2V0IGJlIHRoZSB0aGlzIHZhbHVlLlxuICAgICAgICB2YXIgdGFyZ2V0ID0gdGhpcztcbiAgICAgICAgLy8gMi4gSWYgSXNDYWxsYWJsZShUYXJnZXQpIGlzIGZhbHNlLCB0aHJvdyBhIFR5cGVFcnJvciBleGNlcHRpb24uXG4gICAgICAgIGlmICghaXNGdW5jdGlvbih0YXJnZXQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdGdW5jdGlvbi5wcm90b3R5cGUuYmluZCBjYWxsZWQgb24gaW5jb21wYXRpYmxlICcgKyB0YXJnZXQpO1xuICAgICAgICB9XG4gICAgICAgIC8vIDMuIExldCBBIGJlIGEgbmV3IChwb3NzaWJseSBlbXB0eSkgaW50ZXJuYWwgbGlzdCBvZiBhbGwgb2YgdGhlXG4gICAgICAgIC8vICAgYXJndW1lbnQgdmFsdWVzIHByb3ZpZGVkIGFmdGVyIHRoaXNBcmcgKGFyZzEsIGFyZzIgZXRjKSwgaW4gb3JkZXIuXG4gICAgICAgIC8vIFhYWCBzbGljZWRBcmdzIHdpbGwgc3RhbmQgaW4gZm9yIFwiQVwiIGlmIHVzZWRcbiAgICAgICAgdmFyIGFyZ3MgPSBhcnJheV9zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7IC8vIGZvciBub3JtYWwgY2FsbFxuICAgICAgICAvLyA0LiBMZXQgRiBiZSBhIG5ldyBuYXRpdmUgRUNNQVNjcmlwdCBvYmplY3QuXG4gICAgICAgIC8vIDExLiBTZXQgdGhlIFtbUHJvdG90eXBlXV0gaW50ZXJuYWwgcHJvcGVydHkgb2YgRiB0byB0aGUgc3RhbmRhcmRcbiAgICAgICAgLy8gICBidWlsdC1pbiBGdW5jdGlvbiBwcm90b3R5cGUgb2JqZWN0IGFzIHNwZWNpZmllZCBpbiAxNS4zLjMuMS5cbiAgICAgICAgLy8gMTIuIFNldCB0aGUgW1tDYWxsXV0gaW50ZXJuYWwgcHJvcGVydHkgb2YgRiBhcyBkZXNjcmliZWQgaW5cbiAgICAgICAgLy8gICAxNS4zLjQuNS4xLlxuICAgICAgICAvLyAxMy4gU2V0IHRoZSBbW0NvbnN0cnVjdF1dIGludGVybmFsIHByb3BlcnR5IG9mIEYgYXMgZGVzY3JpYmVkIGluXG4gICAgICAgIC8vICAgMTUuMy40LjUuMi5cbiAgICAgICAgLy8gMTQuIFNldCB0aGUgW1tIYXNJbnN0YW5jZV1dIGludGVybmFsIHByb3BlcnR5IG9mIEYgYXMgZGVzY3JpYmVkIGluXG4gICAgICAgIC8vICAgMTUuMy40LjUuMy5cbiAgICAgICAgdmFyIGJpbmRlciA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgaWYgKHRoaXMgaW5zdGFuY2VvZiBib3VuZCkge1xuICAgICAgICAgICAgICAgIC8vIDE1LjMuNC41LjIgW1tDb25zdHJ1Y3RdXVxuICAgICAgICAgICAgICAgIC8vIFdoZW4gdGhlIFtbQ29uc3RydWN0XV0gaW50ZXJuYWwgbWV0aG9kIG9mIGEgZnVuY3Rpb24gb2JqZWN0LFxuICAgICAgICAgICAgICAgIC8vIEYgdGhhdCB3YXMgY3JlYXRlZCB1c2luZyB0aGUgYmluZCBmdW5jdGlvbiBpcyBjYWxsZWQgd2l0aCBhXG4gICAgICAgICAgICAgICAgLy8gbGlzdCBvZiBhcmd1bWVudHMgRXh0cmFBcmdzLCB0aGUgZm9sbG93aW5nIHN0ZXBzIGFyZSB0YWtlbjpcbiAgICAgICAgICAgICAgICAvLyAxLiBMZXQgdGFyZ2V0IGJlIHRoZSB2YWx1ZSBvZiBGJ3MgW1tUYXJnZXRGdW5jdGlvbl1dXG4gICAgICAgICAgICAgICAgLy8gICBpbnRlcm5hbCBwcm9wZXJ0eS5cbiAgICAgICAgICAgICAgICAvLyAyLiBJZiB0YXJnZXQgaGFzIG5vIFtbQ29uc3RydWN0XV0gaW50ZXJuYWwgbWV0aG9kLCBhXG4gICAgICAgICAgICAgICAgLy8gICBUeXBlRXJyb3IgZXhjZXB0aW9uIGlzIHRocm93bi5cbiAgICAgICAgICAgICAgICAvLyAzLiBMZXQgYm91bmRBcmdzIGJlIHRoZSB2YWx1ZSBvZiBGJ3MgW1tCb3VuZEFyZ3NdXSBpbnRlcm5hbFxuICAgICAgICAgICAgICAgIC8vICAgcHJvcGVydHkuXG4gICAgICAgICAgICAgICAgLy8gNC4gTGV0IGFyZ3MgYmUgYSBuZXcgbGlzdCBjb250YWluaW5nIHRoZSBzYW1lIHZhbHVlcyBhcyB0aGVcbiAgICAgICAgICAgICAgICAvLyAgIGxpc3QgYm91bmRBcmdzIGluIHRoZSBzYW1lIG9yZGVyIGZvbGxvd2VkIGJ5IHRoZSBzYW1lXG4gICAgICAgICAgICAgICAgLy8gICB2YWx1ZXMgYXMgdGhlIGxpc3QgRXh0cmFBcmdzIGluIHRoZSBzYW1lIG9yZGVyLlxuICAgICAgICAgICAgICAgIC8vIDUuIFJldHVybiB0aGUgcmVzdWx0IG9mIGNhbGxpbmcgdGhlIFtbQ29uc3RydWN0XV0gaW50ZXJuYWxcbiAgICAgICAgICAgICAgICAvLyAgIG1ldGhvZCBvZiB0YXJnZXQgcHJvdmlkaW5nIGFyZ3MgYXMgdGhlIGFyZ3VtZW50cy5cblxuICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSB0YXJnZXQuYXBwbHkoXG4gICAgICAgICAgICAgICAgICAgIHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIGFyZ3MuY29uY2F0KGFycmF5X3NsaWNlLmNhbGwoYXJndW1lbnRzKSlcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGlmIChPYmplY3QocmVzdWx0KSA9PT0gcmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIDE1LjMuNC41LjEgW1tDYWxsXV1cbiAgICAgICAgICAgICAgICAvLyBXaGVuIHRoZSBbW0NhbGxdXSBpbnRlcm5hbCBtZXRob2Qgb2YgYSBmdW5jdGlvbiBvYmplY3QsIEYsXG4gICAgICAgICAgICAgICAgLy8gd2hpY2ggd2FzIGNyZWF0ZWQgdXNpbmcgdGhlIGJpbmQgZnVuY3Rpb24gaXMgY2FsbGVkIHdpdGggYVxuICAgICAgICAgICAgICAgIC8vIHRoaXMgdmFsdWUgYW5kIGEgbGlzdCBvZiBhcmd1bWVudHMgRXh0cmFBcmdzLCB0aGUgZm9sbG93aW5nXG4gICAgICAgICAgICAgICAgLy8gc3RlcHMgYXJlIHRha2VuOlxuICAgICAgICAgICAgICAgIC8vIDEuIExldCBib3VuZEFyZ3MgYmUgdGhlIHZhbHVlIG9mIEYncyBbW0JvdW5kQXJnc11dIGludGVybmFsXG4gICAgICAgICAgICAgICAgLy8gICBwcm9wZXJ0eS5cbiAgICAgICAgICAgICAgICAvLyAyLiBMZXQgYm91bmRUaGlzIGJlIHRoZSB2YWx1ZSBvZiBGJ3MgW1tCb3VuZFRoaXNdXSBpbnRlcm5hbFxuICAgICAgICAgICAgICAgIC8vICAgcHJvcGVydHkuXG4gICAgICAgICAgICAgICAgLy8gMy4gTGV0IHRhcmdldCBiZSB0aGUgdmFsdWUgb2YgRidzIFtbVGFyZ2V0RnVuY3Rpb25dXSBpbnRlcm5hbFxuICAgICAgICAgICAgICAgIC8vICAgcHJvcGVydHkuXG4gICAgICAgICAgICAgICAgLy8gNC4gTGV0IGFyZ3MgYmUgYSBuZXcgbGlzdCBjb250YWluaW5nIHRoZSBzYW1lIHZhbHVlcyBhcyB0aGVcbiAgICAgICAgICAgICAgICAvLyAgIGxpc3QgYm91bmRBcmdzIGluIHRoZSBzYW1lIG9yZGVyIGZvbGxvd2VkIGJ5IHRoZSBzYW1lXG4gICAgICAgICAgICAgICAgLy8gICB2YWx1ZXMgYXMgdGhlIGxpc3QgRXh0cmFBcmdzIGluIHRoZSBzYW1lIG9yZGVyLlxuICAgICAgICAgICAgICAgIC8vIDUuIFJldHVybiB0aGUgcmVzdWx0IG9mIGNhbGxpbmcgdGhlIFtbQ2FsbF1dIGludGVybmFsIG1ldGhvZFxuICAgICAgICAgICAgICAgIC8vICAgb2YgdGFyZ2V0IHByb3ZpZGluZyBib3VuZFRoaXMgYXMgdGhlIHRoaXMgdmFsdWUgYW5kXG4gICAgICAgICAgICAgICAgLy8gICBwcm92aWRpbmcgYXJncyBhcyB0aGUgYXJndW1lbnRzLlxuXG4gICAgICAgICAgICAgICAgLy8gZXF1aXY6IHRhcmdldC5jYWxsKHRoaXMsIC4uLmJvdW5kQXJncywgLi4uYXJncylcbiAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0LmFwcGx5KFxuICAgICAgICAgICAgICAgICAgICB0aGF0LFxuICAgICAgICAgICAgICAgICAgICBhcmdzLmNvbmNhdChhcnJheV9zbGljZS5jYWxsKGFyZ3VtZW50cykpXG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gMTUuIElmIHRoZSBbW0NsYXNzXV0gaW50ZXJuYWwgcHJvcGVydHkgb2YgVGFyZ2V0IGlzIFwiRnVuY3Rpb25cIiwgdGhlblxuICAgICAgICAvLyAgICAgYS4gTGV0IEwgYmUgdGhlIGxlbmd0aCBwcm9wZXJ0eSBvZiBUYXJnZXQgbWludXMgdGhlIGxlbmd0aCBvZiBBLlxuICAgICAgICAvLyAgICAgYi4gU2V0IHRoZSBsZW5ndGggb3duIHByb3BlcnR5IG9mIEYgdG8gZWl0aGVyIDAgb3IgTCwgd2hpY2hldmVyIGlzXG4gICAgICAgIC8vICAgICAgIGxhcmdlci5cbiAgICAgICAgLy8gMTYuIEVsc2Ugc2V0IHRoZSBsZW5ndGggb3duIHByb3BlcnR5IG9mIEYgdG8gMC5cblxuICAgICAgICB2YXIgYm91bmRMZW5ndGggPSBNYXRoLm1heCgwLCB0YXJnZXQubGVuZ3RoIC0gYXJncy5sZW5ndGgpO1xuXG4gICAgICAgIC8vIDE3LiBTZXQgdGhlIGF0dHJpYnV0ZXMgb2YgdGhlIGxlbmd0aCBvd24gcHJvcGVydHkgb2YgRiB0byB0aGUgdmFsdWVzXG4gICAgICAgIC8vICAgc3BlY2lmaWVkIGluIDE1LjMuNS4xLlxuICAgICAgICB2YXIgYm91bmRBcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYm91bmRMZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYm91bmRBcmdzLnB1c2goJyQnICsgaSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBYWFggQnVpbGQgYSBkeW5hbWljIGZ1bmN0aW9uIHdpdGggZGVzaXJlZCBhbW91bnQgb2YgYXJndW1lbnRzIGlzIHRoZSBvbmx5XG4gICAgICAgIC8vIHdheSB0byBzZXQgdGhlIGxlbmd0aCBwcm9wZXJ0eSBvZiBhIGZ1bmN0aW9uLlxuICAgICAgICAvLyBJbiBlbnZpcm9ubWVudHMgd2hlcmUgQ29udGVudCBTZWN1cml0eSBQb2xpY2llcyBlbmFibGVkIChDaHJvbWUgZXh0ZW5zaW9ucyxcbiAgICAgICAgLy8gZm9yIGV4LikgYWxsIHVzZSBvZiBldmFsIG9yIEZ1bmN0aW9uIGNvc3RydWN0b3IgdGhyb3dzIGFuIGV4Y2VwdGlvbi5cbiAgICAgICAgLy8gSG93ZXZlciBpbiBhbGwgb2YgdGhlc2UgZW52aXJvbm1lbnRzIEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kIGV4aXN0c1xuICAgICAgICAvLyBhbmQgc28gdGhpcyBjb2RlIHdpbGwgbmV2ZXIgYmUgZXhlY3V0ZWQuXG4gICAgICAgIHZhciBib3VuZCA9IEZ1bmN0aW9uKCdiaW5kZXInLCAncmV0dXJuIGZ1bmN0aW9uICgnICsgYm91bmRBcmdzLmpvaW4oJywnKSArICcpeyByZXR1cm4gYmluZGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0nKShiaW5kZXIpO1xuXG4gICAgICAgIGlmICh0YXJnZXQucHJvdG90eXBlKSB7XG4gICAgICAgICAgICBFbXB0eS5wcm90b3R5cGUgPSB0YXJnZXQucHJvdG90eXBlO1xuICAgICAgICAgICAgYm91bmQucHJvdG90eXBlID0gbmV3IEVtcHR5KCk7XG4gICAgICAgICAgICAvLyBDbGVhbiB1cCBkYW5nbGluZyByZWZlcmVuY2VzLlxuICAgICAgICAgICAgRW1wdHkucHJvdG90eXBlID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRPRE9cbiAgICAgICAgLy8gMTguIFNldCB0aGUgW1tFeHRlbnNpYmxlXV0gaW50ZXJuYWwgcHJvcGVydHkgb2YgRiB0byB0cnVlLlxuXG4gICAgICAgIC8vIFRPRE9cbiAgICAgICAgLy8gMTkuIExldCB0aHJvd2VyIGJlIHRoZSBbW1Rocm93VHlwZUVycm9yXV0gZnVuY3Rpb24gT2JqZWN0ICgxMy4yLjMpLlxuICAgICAgICAvLyAyMC4gQ2FsbCB0aGUgW1tEZWZpbmVPd25Qcm9wZXJ0eV1dIGludGVybmFsIG1ldGhvZCBvZiBGIHdpdGhcbiAgICAgICAgLy8gICBhcmd1bWVudHMgXCJjYWxsZXJcIiwgUHJvcGVydHlEZXNjcmlwdG9yIHtbW0dldF1dOiB0aHJvd2VyLCBbW1NldF1dOlxuICAgICAgICAvLyAgIHRocm93ZXIsIFtbRW51bWVyYWJsZV1dOiBmYWxzZSwgW1tDb25maWd1cmFibGVdXTogZmFsc2V9LCBhbmRcbiAgICAgICAgLy8gICBmYWxzZS5cbiAgICAgICAgLy8gMjEuIENhbGwgdGhlIFtbRGVmaW5lT3duUHJvcGVydHldXSBpbnRlcm5hbCBtZXRob2Qgb2YgRiB3aXRoXG4gICAgICAgIC8vICAgYXJndW1lbnRzIFwiYXJndW1lbnRzXCIsIFByb3BlcnR5RGVzY3JpcHRvciB7W1tHZXRdXTogdGhyb3dlcixcbiAgICAgICAgLy8gICBbW1NldF1dOiB0aHJvd2VyLCBbW0VudW1lcmFibGVdXTogZmFsc2UsIFtbQ29uZmlndXJhYmxlXV06IGZhbHNlfSxcbiAgICAgICAgLy8gICBhbmQgZmFsc2UuXG5cbiAgICAgICAgLy8gVE9ET1xuICAgICAgICAvLyBOT1RFIEZ1bmN0aW9uIG9iamVjdHMgY3JlYXRlZCB1c2luZyBGdW5jdGlvbi5wcm90b3R5cGUuYmluZCBkbyBub3RcbiAgICAgICAgLy8gaGF2ZSBhIHByb3RvdHlwZSBwcm9wZXJ0eSBvciB0aGUgW1tDb2RlXV0sIFtbRm9ybWFsUGFyYW1ldGVyc11dLCBhbmRcbiAgICAgICAgLy8gW1tTY29wZV1dIGludGVybmFsIHByb3BlcnRpZXMuXG4gICAgICAgIC8vIFhYWCBjYW4ndCBkZWxldGUgcHJvdG90eXBlIGluIHB1cmUtanMuXG5cbiAgICAgICAgLy8gMjIuIFJldHVybiBGLlxuICAgICAgICByZXR1cm4gYm91bmQ7XG4gICAgfVxufSk7XG5cbi8vXG4vLyBBcnJheVxuLy8gPT09PT1cbi8vXG5cbi8vIEVTNSAxNS40LjMuMlxuLy8gaHR0cDovL2VzNS5naXRodWIuY29tLyN4MTUuNC4zLjJcbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL0FycmF5L2lzQXJyYXlcbmRlZmluZVByb3BlcnRpZXMoQXJyYXksIHsgaXNBcnJheTogaXNBcnJheSB9KTtcblxuXG52YXIgYm94ZWRTdHJpbmcgPSBPYmplY3QoJ2EnKTtcbnZhciBzcGxpdFN0cmluZyA9IGJveGVkU3RyaW5nWzBdICE9PSAnYScgfHwgISgwIGluIGJveGVkU3RyaW5nKTtcblxudmFyIHByb3Blcmx5Qm94ZXNDb250ZXh0ID0gZnVuY3Rpb24gcHJvcGVybHlCb3hlZChtZXRob2QpIHtcbiAgICAvLyBDaGVjayBub2RlIDAuNi4yMSBidWcgd2hlcmUgdGhpcmQgcGFyYW1ldGVyIGlzIG5vdCBib3hlZFxuICAgIHZhciBwcm9wZXJseUJveGVzTm9uU3RyaWN0ID0gdHJ1ZTtcbiAgICB2YXIgcHJvcGVybHlCb3hlc1N0cmljdCA9IHRydWU7XG4gICAgaWYgKG1ldGhvZCkge1xuICAgICAgICBtZXRob2QuY2FsbCgnZm9vJywgZnVuY3Rpb24gKF8sIF9fLCBjb250ZXh0KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRleHQgIT09ICdvYmplY3QnKSB7IHByb3Blcmx5Qm94ZXNOb25TdHJpY3QgPSBmYWxzZTsgfVxuICAgICAgICB9KTtcblxuICAgICAgICBtZXRob2QuY2FsbChbMV0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICd1c2Ugc3RyaWN0JztcbiAgICAgICAgICAgIHByb3Blcmx5Qm94ZXNTdHJpY3QgPSB0eXBlb2YgdGhpcyA9PT0gJ3N0cmluZyc7XG4gICAgICAgIH0sICd4Jyk7XG4gICAgfVxuICAgIHJldHVybiAhIW1ldGhvZCAmJiBwcm9wZXJseUJveGVzTm9uU3RyaWN0ICYmIHByb3Blcmx5Qm94ZXNTdHJpY3Q7XG59O1xuXG5kZWZpbmVQcm9wZXJ0aWVzKEFycmF5UHJvdG90eXBlLCB7XG4gICAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChmdW4gLyosIHRoaXNwKi8pIHtcbiAgICAgICAgdmFyIG9iamVjdCA9IHRvT2JqZWN0KHRoaXMpLFxuICAgICAgICAgICAgc2VsZiA9IHNwbGl0U3RyaW5nICYmIGlzU3RyaW5nKHRoaXMpID8gdGhpcy5zcGxpdCgnJykgOiBvYmplY3QsXG4gICAgICAgICAgICB0aGlzcCA9IGFyZ3VtZW50c1sxXSxcbiAgICAgICAgICAgIGkgPSAtMSxcbiAgICAgICAgICAgIGxlbmd0aCA9IHNlbGYubGVuZ3RoID4+PiAwO1xuXG4gICAgICAgIC8vIElmIG5vIGNhbGxiYWNrIGZ1bmN0aW9uIG9yIGlmIGNhbGxiYWNrIGlzIG5vdCBhIGNhbGxhYmxlIGZ1bmN0aW9uXG4gICAgICAgIGlmICghaXNGdW5jdGlvbihmdW4pKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCk7IC8vIFRPRE8gbWVzc2FnZVxuICAgICAgICB9XG5cbiAgICAgICAgd2hpbGUgKCsraSA8IGxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKGkgaW4gc2VsZikge1xuICAgICAgICAgICAgICAgIC8vIEludm9rZSB0aGUgY2FsbGJhY2sgZnVuY3Rpb24gd2l0aCBjYWxsLCBwYXNzaW5nIGFyZ3VtZW50czpcbiAgICAgICAgICAgICAgICAvLyBjb250ZXh0LCBwcm9wZXJ0eSB2YWx1ZSwgcHJvcGVydHkga2V5LCB0aGlzQXJnIG9iamVjdFxuICAgICAgICAgICAgICAgIC8vIGNvbnRleHRcbiAgICAgICAgICAgICAgICBmdW4uY2FsbCh0aGlzcCwgc2VsZltpXSwgaSwgb2JqZWN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0sICFwcm9wZXJseUJveGVzQ29udGV4dChBcnJheVByb3RvdHlwZS5mb3JFYWNoKSk7XG5cbi8vIEVTNSAxNS40LjQuMTRcbi8vIGh0dHA6Ly9lczUuZ2l0aHViLmNvbS8jeDE1LjQuNC4xNFxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4vSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvQXJyYXkvaW5kZXhPZlxudmFyIGhhc0ZpcmVmb3gySW5kZXhPZkJ1ZyA9IEFycmF5LnByb3RvdHlwZS5pbmRleE9mICYmIFswLCAxXS5pbmRleE9mKDEsIDIpICE9PSAtMTtcbmRlZmluZVByb3BlcnRpZXMoQXJyYXlQcm90b3R5cGUsIHtcbiAgICBpbmRleE9mOiBmdW5jdGlvbiBpbmRleE9mKHNvdWdodCAvKiwgZnJvbUluZGV4ICovICkge1xuICAgICAgICB2YXIgc2VsZiA9IHNwbGl0U3RyaW5nICYmIGlzU3RyaW5nKHRoaXMpID8gdGhpcy5zcGxpdCgnJykgOiB0b09iamVjdCh0aGlzKSxcbiAgICAgICAgICAgIGxlbmd0aCA9IHNlbGYubGVuZ3RoID4+PiAwO1xuXG4gICAgICAgIGlmICghbGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgaSA9IHRvSW50ZWdlcihhcmd1bWVudHNbMV0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaGFuZGxlIG5lZ2F0aXZlIGluZGljZXNcbiAgICAgICAgaSA9IGkgPj0gMCA/IGkgOiBNYXRoLm1heCgwLCBsZW5ndGggKyBpKTtcbiAgICAgICAgZm9yICg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGkgaW4gc2VsZiAmJiBzZWxmW2ldID09PSBzb3VnaHQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gLTE7XG4gICAgfVxufSwgaGFzRmlyZWZveDJJbmRleE9mQnVnKTtcblxuLy9cbi8vIFN0cmluZ1xuLy8gPT09PT09XG4vL1xuXG4vLyBFUzUgMTUuNS40LjE0XG4vLyBodHRwOi8vZXM1LmdpdGh1Yi5jb20vI3gxNS41LjQuMTRcblxuLy8gW2J1Z2ZpeCwgSUUgbHQgOSwgZmlyZWZveCA0LCBLb25xdWVyb3IsIE9wZXJhLCBvYnNjdXJlIGJyb3dzZXJzXVxuLy8gTWFueSBicm93c2VycyBkbyBub3Qgc3BsaXQgcHJvcGVybHkgd2l0aCByZWd1bGFyIGV4cHJlc3Npb25zIG9yIHRoZXlcbi8vIGRvIG5vdCBwZXJmb3JtIHRoZSBzcGxpdCBjb3JyZWN0bHkgdW5kZXIgb2JzY3VyZSBjb25kaXRpb25zLlxuLy8gU2VlIGh0dHA6Ly9ibG9nLnN0ZXZlbmxldml0aGFuLmNvbS9hcmNoaXZlcy9jcm9zcy1icm93c2VyLXNwbGl0XG4vLyBJJ3ZlIHRlc3RlZCBpbiBtYW55IGJyb3dzZXJzIGFuZCB0aGlzIHNlZW1zIHRvIGNvdmVyIHRoZSBkZXZpYW50IG9uZXM6XG4vLyAgICAnYWInLnNwbGl0KC8oPzphYikqLykgc2hvdWxkIGJlIFtcIlwiLCBcIlwiXSwgbm90IFtcIlwiXVxuLy8gICAgJy4nLnNwbGl0KC8oLj8pKC4/KS8pIHNob3VsZCBiZSBbXCJcIiwgXCIuXCIsIFwiXCIsIFwiXCJdLCBub3QgW1wiXCIsIFwiXCJdXG4vLyAgICAndGVzc3QnLnNwbGl0KC8ocykqLykgc2hvdWxkIGJlIFtcInRcIiwgdW5kZWZpbmVkLCBcImVcIiwgXCJzXCIsIFwidFwiXSwgbm90XG4vLyAgICAgICBbdW5kZWZpbmVkLCBcInRcIiwgdW5kZWZpbmVkLCBcImVcIiwgLi4uXVxuLy8gICAgJycuc3BsaXQoLy4/Lykgc2hvdWxkIGJlIFtdLCBub3QgW1wiXCJdXG4vLyAgICAnLicuc3BsaXQoLygpKCkvKSBzaG91bGQgYmUgW1wiLlwiXSwgbm90IFtcIlwiLCBcIlwiLCBcIi5cIl1cblxudmFyIHN0cmluZ19zcGxpdCA9IFN0cmluZ1Byb3RvdHlwZS5zcGxpdDtcbmlmIChcbiAgICAnYWInLnNwbGl0KC8oPzphYikqLykubGVuZ3RoICE9PSAyIHx8XG4gICAgJy4nLnNwbGl0KC8oLj8pKC4/KS8pLmxlbmd0aCAhPT0gNCB8fFxuICAgICd0ZXNzdCcuc3BsaXQoLyhzKSovKVsxXSA9PT0gJ3QnIHx8XG4gICAgJ3Rlc3QnLnNwbGl0KC8oPzopLywgLTEpLmxlbmd0aCAhPT0gNCB8fFxuICAgICcnLnNwbGl0KC8uPy8pLmxlbmd0aCB8fFxuICAgICcuJy5zcGxpdCgvKCkoKS8pLmxlbmd0aCA+IDFcbikge1xuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjb21wbGlhbnRFeGVjTnBjZyA9IC8oKT8/Ly5leGVjKCcnKVsxXSA9PT0gdm9pZCAwOyAvLyBOUENHOiBub25wYXJ0aWNpcGF0aW5nIGNhcHR1cmluZyBncm91cFxuXG4gICAgICAgIFN0cmluZ1Byb3RvdHlwZS5zcGxpdCA9IGZ1bmN0aW9uIChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgICAgICAgICB2YXIgc3RyaW5nID0gdGhpcztcbiAgICAgICAgICAgIGlmIChzZXBhcmF0b3IgPT09IHZvaWQgMCAmJiBsaW1pdCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gSWYgYHNlcGFyYXRvcmAgaXMgbm90IGEgcmVnZXgsIHVzZSBuYXRpdmUgc3BsaXRcbiAgICAgICAgICAgIGlmIChfdG9TdHJpbmcuY2FsbChzZXBhcmF0b3IpICE9PSAnW29iamVjdCBSZWdFeHBdJykge1xuICAgICAgICAgICAgICAgIHJldHVybiBzdHJpbmdfc3BsaXQuY2FsbCh0aGlzLCBzZXBhcmF0b3IsIGxpbWl0KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIG91dHB1dCA9IFtdLFxuICAgICAgICAgICAgICAgIGZsYWdzID0gKHNlcGFyYXRvci5pZ25vcmVDYXNlID8gJ2knIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgIChzZXBhcmF0b3IubXVsdGlsaW5lICA/ICdtJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAoc2VwYXJhdG9yLmV4dGVuZGVkICAgPyAneCcgOiAnJykgKyAvLyBQcm9wb3NlZCBmb3IgRVM2XG4gICAgICAgICAgICAgICAgICAgICAgICAoc2VwYXJhdG9yLnN0aWNreSAgICAgPyAneScgOiAnJyksIC8vIEZpcmVmb3ggMytcbiAgICAgICAgICAgICAgICBsYXN0TGFzdEluZGV4ID0gMCxcbiAgICAgICAgICAgICAgICAvLyBNYWtlIGBnbG9iYWxgIGFuZCBhdm9pZCBgbGFzdEluZGV4YCBpc3N1ZXMgYnkgd29ya2luZyB3aXRoIGEgY29weVxuICAgICAgICAgICAgICAgIHNlcGFyYXRvcjIsIG1hdGNoLCBsYXN0SW5kZXgsIGxhc3RMZW5ndGg7XG4gICAgICAgICAgICBzZXBhcmF0b3IgPSBuZXcgUmVnRXhwKHNlcGFyYXRvci5zb3VyY2UsIGZsYWdzICsgJ2cnKTtcbiAgICAgICAgICAgIHN0cmluZyArPSAnJzsgLy8gVHlwZS1jb252ZXJ0XG4gICAgICAgICAgICBpZiAoIWNvbXBsaWFudEV4ZWNOcGNnKSB7XG4gICAgICAgICAgICAgICAgLy8gRG9lc24ndCBuZWVkIGZsYWdzIGd5LCBidXQgdGhleSBkb24ndCBodXJ0XG4gICAgICAgICAgICAgICAgc2VwYXJhdG9yMiA9IG5ldyBSZWdFeHAoJ14nICsgc2VwYXJhdG9yLnNvdXJjZSArICckKD8hXFxcXHMpJywgZmxhZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLyogVmFsdWVzIGZvciBgbGltaXRgLCBwZXIgdGhlIHNwZWM6XG4gICAgICAgICAgICAgKiBJZiB1bmRlZmluZWQ6IDQyOTQ5NjcyOTUgLy8gTWF0aC5wb3coMiwgMzIpIC0gMVxuICAgICAgICAgICAgICogSWYgMCwgSW5maW5pdHksIG9yIE5hTjogMFxuICAgICAgICAgICAgICogSWYgcG9zaXRpdmUgbnVtYmVyOiBsaW1pdCA9IE1hdGguZmxvb3IobGltaXQpOyBpZiAobGltaXQgPiA0Mjk0OTY3Mjk1KSBsaW1pdCAtPSA0Mjk0OTY3Mjk2O1xuICAgICAgICAgICAgICogSWYgbmVnYXRpdmUgbnVtYmVyOiA0Mjk0OTY3Mjk2IC0gTWF0aC5mbG9vcihNYXRoLmFicyhsaW1pdCkpXG4gICAgICAgICAgICAgKiBJZiBvdGhlcjogVHlwZS1jb252ZXJ0LCB0aGVuIHVzZSB0aGUgYWJvdmUgcnVsZXNcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgbGltaXQgPSBsaW1pdCA9PT0gdm9pZCAwID9cbiAgICAgICAgICAgICAgICAtMSA+Pj4gMCA6IC8vIE1hdGgucG93KDIsIDMyKSAtIDFcbiAgICAgICAgICAgICAgICBUb1VpbnQzMihsaW1pdCk7XG4gICAgICAgICAgICB3aGlsZSAobWF0Y2ggPSBzZXBhcmF0b3IuZXhlYyhzdHJpbmcpKSB7XG4gICAgICAgICAgICAgICAgLy8gYHNlcGFyYXRvci5sYXN0SW5kZXhgIGlzIG5vdCByZWxpYWJsZSBjcm9zcy1icm93c2VyXG4gICAgICAgICAgICAgICAgbGFzdEluZGV4ID0gbWF0Y2guaW5kZXggKyBtYXRjaFswXS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgaWYgKGxhc3RJbmRleCA+IGxhc3RMYXN0SW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgsIG1hdGNoLmluZGV4KSk7XG4gICAgICAgICAgICAgICAgICAgIC8vIEZpeCBicm93c2VycyB3aG9zZSBgZXhlY2AgbWV0aG9kcyBkb24ndCBjb25zaXN0ZW50bHkgcmV0dXJuIGB1bmRlZmluZWRgIGZvclxuICAgICAgICAgICAgICAgICAgICAvLyBub25wYXJ0aWNpcGF0aW5nIGNhcHR1cmluZyBncm91cHNcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjb21wbGlhbnRFeGVjTnBjZyAmJiBtYXRjaC5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXRjaFswXS5yZXBsYWNlKHNlcGFyYXRvcjIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGggLSAyOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFyZ3VtZW50c1tpXSA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaFtpXSA9IHZvaWQgMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaC5sZW5ndGggPiAxICYmIG1hdGNoLmluZGV4IDwgc3RyaW5nLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXlQcm90b3R5cGUucHVzaC5hcHBseShvdXRwdXQsIG1hdGNoLnNsaWNlKDEpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBsYXN0TGVuZ3RoID0gbWF0Y2hbMF0ubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBsYXN0TGFzdEluZGV4ID0gbGFzdEluZGV4O1xuICAgICAgICAgICAgICAgICAgICBpZiAob3V0cHV0Lmxlbmd0aCA+PSBsaW1pdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHNlcGFyYXRvci5sYXN0SW5kZXggPT09IG1hdGNoLmluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIHNlcGFyYXRvci5sYXN0SW5kZXgrKzsgLy8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChsYXN0TGFzdEluZGV4ID09PSBzdHJpbmcubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgaWYgKGxhc3RMZW5ndGggfHwgIXNlcGFyYXRvci50ZXN0KCcnKSkge1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXQucHVzaCgnJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBvdXRwdXQucHVzaChzdHJpbmcuc2xpY2UobGFzdExhc3RJbmRleCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG91dHB1dC5sZW5ndGggPiBsaW1pdCA/IG91dHB1dC5zbGljZSgwLCBsaW1pdCkgOiBvdXRwdXQ7XG4gICAgICAgIH07XG4gICAgfSgpKTtcblxuLy8gW2J1Z2ZpeCwgY2hyb21lXVxuLy8gSWYgc2VwYXJhdG9yIGlzIHVuZGVmaW5lZCwgdGhlbiB0aGUgcmVzdWx0IGFycmF5IGNvbnRhaW5zIGp1c3Qgb25lIFN0cmluZyxcbi8vIHdoaWNoIGlzIHRoZSB0aGlzIHZhbHVlIChjb252ZXJ0ZWQgdG8gYSBTdHJpbmcpLiBJZiBsaW1pdCBpcyBub3QgdW5kZWZpbmVkLFxuLy8gdGhlbiB0aGUgb3V0cHV0IGFycmF5IGlzIHRydW5jYXRlZCBzbyB0aGF0IGl0IGNvbnRhaW5zIG5vIG1vcmUgdGhhbiBsaW1pdFxuLy8gZWxlbWVudHMuXG4vLyBcIjBcIi5zcGxpdCh1bmRlZmluZWQsIDApIC0+IFtdXG59IGVsc2UgaWYgKCcwJy5zcGxpdCh2b2lkIDAsIDApLmxlbmd0aCkge1xuICAgIFN0cmluZ1Byb3RvdHlwZS5zcGxpdCA9IGZ1bmN0aW9uIHNwbGl0KHNlcGFyYXRvciwgbGltaXQpIHtcbiAgICAgICAgaWYgKHNlcGFyYXRvciA9PT0gdm9pZCAwICYmIGxpbWl0ID09PSAwKSB7IHJldHVybiBbXTsgfVxuICAgICAgICByZXR1cm4gc3RyaW5nX3NwbGl0LmNhbGwodGhpcywgc2VwYXJhdG9yLCBsaW1pdCk7XG4gICAgfTtcbn1cblxuLy8gRUNNQS0yNjIsIDNyZCBCLjIuM1xuLy8gTm90IGFuIEVDTUFTY3JpcHQgc3RhbmRhcmQsIGFsdGhvdWdoIEVDTUFTY3JpcHQgM3JkIEVkaXRpb24gaGFzIGFcbi8vIG5vbi1ub3JtYXRpdmUgc2VjdGlvbiBzdWdnZXN0aW5nIHVuaWZvcm0gc2VtYW50aWNzIGFuZCBpdCBzaG91bGQgYmVcbi8vIG5vcm1hbGl6ZWQgYWNyb3NzIGFsbCBicm93c2Vyc1xuLy8gW2J1Z2ZpeCwgSUUgbHQgOV0gSUUgPCA5IHN1YnN0cigpIHdpdGggbmVnYXRpdmUgdmFsdWUgbm90IHdvcmtpbmcgaW4gSUVcbnZhciBzdHJpbmdfc3Vic3RyID0gU3RyaW5nUHJvdG90eXBlLnN1YnN0cjtcbnZhciBoYXNOZWdhdGl2ZVN1YnN0ckJ1ZyA9ICcnLnN1YnN0ciAmJiAnMGInLnN1YnN0cigtMSkgIT09ICdiJztcbmRlZmluZVByb3BlcnRpZXMoU3RyaW5nUHJvdG90eXBlLCB7XG4gICAgc3Vic3RyOiBmdW5jdGlvbiBzdWJzdHIoc3RhcnQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gc3RyaW5nX3N1YnN0ci5jYWxsKFxuICAgICAgICAgICAgdGhpcyxcbiAgICAgICAgICAgIHN0YXJ0IDwgMCA/ICgoc3RhcnQgPSB0aGlzLmxlbmd0aCArIHN0YXJ0KSA8IDAgPyAwIDogc3RhcnQpIDogc3RhcnQsXG4gICAgICAgICAgICBsZW5ndGhcbiAgICAgICAgKTtcbiAgICB9XG59LCBoYXNOZWdhdGl2ZVN1YnN0ckJ1Zyk7XG5cbn0se31dLDE2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBbXG4gIC8vIHN0cmVhbWluZyB0cmFuc3BvcnRzXG4gIHJlcXVpcmUoJy4vdHJhbnNwb3J0L3dlYnNvY2tldCcpXG4sIHJlcXVpcmUoJy4vdHJhbnNwb3J0L3hoci1zdHJlYW1pbmcnKVxuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC94ZHItc3RyZWFtaW5nJylcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQvZXZlbnRzb3VyY2UnKVxuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC9saWIvaWZyYW1lLXdyYXAnKShyZXF1aXJlKCcuL3RyYW5zcG9ydC9ldmVudHNvdXJjZScpKVxuXG4gIC8vIHBvbGxpbmcgdHJhbnNwb3J0c1xuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC9odG1sZmlsZScpXG4sIHJlcXVpcmUoJy4vdHJhbnNwb3J0L2xpYi9pZnJhbWUtd3JhcCcpKHJlcXVpcmUoJy4vdHJhbnNwb3J0L2h0bWxmaWxlJykpXG4sIHJlcXVpcmUoJy4vdHJhbnNwb3J0L3hoci1wb2xsaW5nJylcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQveGRyLXBvbGxpbmcnKVxuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC9saWIvaWZyYW1lLXdyYXAnKShyZXF1aXJlKCcuL3RyYW5zcG9ydC94aHItcG9sbGluZycpKVxuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC9qc29ucC1wb2xsaW5nJylcbl07XG5cbn0se1wiLi90cmFuc3BvcnQvZXZlbnRzb3VyY2VcIjoyMCxcIi4vdHJhbnNwb3J0L2h0bWxmaWxlXCI6MjEsXCIuL3RyYW5zcG9ydC9qc29ucC1wb2xsaW5nXCI6MjMsXCIuL3RyYW5zcG9ydC9saWIvaWZyYW1lLXdyYXBcIjoyNixcIi4vdHJhbnNwb3J0L3dlYnNvY2tldFwiOjM4LFwiLi90cmFuc3BvcnQveGRyLXBvbGxpbmdcIjozOSxcIi4vdHJhbnNwb3J0L3hkci1zdHJlYW1pbmdcIjo0MCxcIi4vdHJhbnNwb3J0L3hoci1wb2xsaW5nXCI6NDEsXCIuL3RyYW5zcG9ydC94aHItc3RyZWFtaW5nXCI6NDJ9XSwxNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3MsZ2xvYmFsKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIHV0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvZXZlbnQnKVxuICAsIHVybFV0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvdXJsJylcbiAgLCBYSFIgPSBnbG9iYWwuWE1MSHR0cFJlcXVlc3RcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OmJyb3dzZXI6eGhyJyk7XG59XG5cbmZ1bmN0aW9uIEFic3RyYWN0WEhST2JqZWN0KG1ldGhvZCwgdXJsLCBwYXlsb2FkLCBvcHRzKSB7XG4gIGRlYnVnKG1ldGhvZCwgdXJsKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICBzZWxmLl9zdGFydChtZXRob2QsIHVybCwgcGF5bG9hZCwgb3B0cyk7XG4gIH0sIDApO1xufVxuXG5pbmhlcml0cyhBYnN0cmFjdFhIUk9iamVjdCwgRXZlbnRFbWl0dGVyKTtcblxuQWJzdHJhY3RYSFJPYmplY3QucHJvdG90eXBlLl9zdGFydCA9IGZ1bmN0aW9uKG1ldGhvZCwgdXJsLCBwYXlsb2FkLCBvcHRzKSB7XG4gIHZhciBzZWxmID0gdGhpcztcblxuICB0cnkge1xuICAgIHRoaXMueGhyID0gbmV3IFhIUigpO1xuICB9IGNhdGNoICh4KSB7XG4gICAgLy8gaW50ZW50aW9uYWxseSBlbXB0eVxuICB9XG5cbiAgaWYgKCF0aGlzLnhocikge1xuICAgIGRlYnVnKCdubyB4aHInKTtcbiAgICB0aGlzLmVtaXQoJ2ZpbmlzaCcsIDAsICdubyB4aHIgc3VwcG9ydCcpO1xuICAgIHRoaXMuX2NsZWFudXAoKTtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBzZXZlcmFsIGJyb3dzZXJzIGNhY2hlIFBPU1RzXG4gIHVybCA9IHVybFV0aWxzLmFkZFF1ZXJ5KHVybCwgJ3Q9JyArICgrbmV3IERhdGUoKSkpO1xuXG4gIC8vIEV4cGxvcmVyIHRlbmRzIHRvIGtlZXAgY29ubmVjdGlvbiBvcGVuLCBldmVuIGFmdGVyIHRoZVxuICAvLyB0YWIgZ2V0cyBjbG9zZWQ6IGh0dHA6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzUyODBcbiAgdGhpcy51bmxvYWRSZWYgPSB1dGlscy51bmxvYWRBZGQoZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ3VubG9hZCBjbGVhbnVwJyk7XG4gICAgc2VsZi5fY2xlYW51cCh0cnVlKTtcbiAgfSk7XG4gIHRyeSB7XG4gICAgdGhpcy54aHIub3BlbihtZXRob2QsIHVybCwgdHJ1ZSk7XG4gICAgaWYgKHRoaXMudGltZW91dCAmJiAndGltZW91dCcgaW4gdGhpcy54aHIpIHtcbiAgICAgIHRoaXMueGhyLnRpbWVvdXQgPSB0aGlzLnRpbWVvdXQ7XG4gICAgICB0aGlzLnhoci5vbnRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgZGVidWcoJ3hociB0aW1lb3V0Jyk7XG4gICAgICAgIHNlbGYuZW1pdCgnZmluaXNoJywgMCwgJycpO1xuICAgICAgICBzZWxmLl9jbGVhbnVwKGZhbHNlKTtcbiAgICAgIH07XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgZGVidWcoJ2V4Y2VwdGlvbicsIGUpO1xuICAgIC8vIElFIHJhaXNlcyBhbiBleGNlcHRpb24gb24gd3JvbmcgcG9ydC5cbiAgICB0aGlzLmVtaXQoJ2ZpbmlzaCcsIDAsICcnKTtcbiAgICB0aGlzLl9jbGVhbnVwKGZhbHNlKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoKCFvcHRzIHx8ICFvcHRzLm5vQ3JlZGVudGlhbHMpICYmIEFic3RyYWN0WEhST2JqZWN0LnN1cHBvcnRzQ09SUykge1xuICAgIGRlYnVnKCd3aXRoQ3JlZGVudGlhbHMnKTtcbiAgICAvLyBNb3ppbGxhIGRvY3Mgc2F5cyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi9YTUxIdHRwUmVxdWVzdCA6XG4gICAgLy8gXCJUaGlzIG5ldmVyIGFmZmVjdHMgc2FtZS1zaXRlIHJlcXVlc3RzLlwiXG5cbiAgICB0aGlzLnhoci53aXRoQ3JlZGVudGlhbHMgPSB0cnVlO1xuICB9XG4gIGlmIChvcHRzICYmIG9wdHMuaGVhZGVycykge1xuICAgIGZvciAodmFyIGtleSBpbiBvcHRzLmhlYWRlcnMpIHtcbiAgICAgIHRoaXMueGhyLnNldFJlcXVlc3RIZWFkZXIoa2V5LCBvcHRzLmhlYWRlcnNba2V5XSk7XG4gICAgfVxuICB9XG5cbiAgdGhpcy54aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHNlbGYueGhyKSB7XG4gICAgICB2YXIgeCA9IHNlbGYueGhyO1xuICAgICAgdmFyIHRleHQsIHN0YXR1cztcbiAgICAgIGRlYnVnKCdyZWFkeVN0YXRlJywgeC5yZWFkeVN0YXRlKTtcbiAgICAgIHN3aXRjaCAoeC5yZWFkeVN0YXRlKSB7XG4gICAgICBjYXNlIDM6XG4gICAgICAgIC8vIElFIGRvZXNuJ3QgbGlrZSBwZWVraW5nIGludG8gcmVzcG9uc2VUZXh0IG9yIHN0YXR1c1xuICAgICAgICAvLyBvbiBNaWNyb3NvZnQuWE1MSFRUUCBhbmQgcmVhZHlzdGF0ZT0zXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgc3RhdHVzID0geC5zdGF0dXM7XG4gICAgICAgICAgdGV4dCA9IHgucmVzcG9uc2VUZXh0O1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgLy8gaW50ZW50aW9uYWxseSBlbXB0eVxuICAgICAgICB9XG4gICAgICAgIGRlYnVnKCdzdGF0dXMnLCBzdGF0dXMpO1xuICAgICAgICAvLyBJRSByZXR1cm5zIDEyMjMgZm9yIDIwNDogaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTQ1MFxuICAgICAgICBpZiAoc3RhdHVzID09PSAxMjIzKSB7XG4gICAgICAgICAgc3RhdHVzID0gMjA0O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSUUgZG9lcyByZXR1cm4gcmVhZHlzdGF0ZSA9PSAzIGZvciA0MDQgYW5zd2Vycy5cbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gMjAwICYmIHRleHQgJiYgdGV4dC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgZGVidWcoJ2NodW5rJyk7XG4gICAgICAgICAgc2VsZi5lbWl0KCdjaHVuaycsIHN0YXR1cywgdGV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDQ6XG4gICAgICAgIHN0YXR1cyA9IHguc3RhdHVzO1xuICAgICAgICBkZWJ1Zygnc3RhdHVzJywgc3RhdHVzKTtcbiAgICAgICAgLy8gSUUgcmV0dXJucyAxMjIzIGZvciAyMDQ6IGh0dHA6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzE0NTBcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gMTIyMykge1xuICAgICAgICAgIHN0YXR1cyA9IDIwNDtcbiAgICAgICAgfVxuICAgICAgICAvLyBJRSByZXR1cm5zIHRoaXMgZm9yIGEgYmFkIHBvcnRcbiAgICAgICAgLy8gaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L3dpbmRvd3MvZGVza3RvcC9hYTM4Mzc3MCh2PXZzLjg1KS5hc3B4XG4gICAgICAgIGlmIChzdGF0dXMgPT09IDEyMDA1IHx8IHN0YXR1cyA9PT0gMTIwMjkpIHtcbiAgICAgICAgICBzdGF0dXMgPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgZGVidWcoJ2ZpbmlzaCcsIHN0YXR1cywgeC5yZXNwb25zZVRleHQpO1xuICAgICAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcsIHN0YXR1cywgeC5yZXNwb25zZVRleHQpO1xuICAgICAgICBzZWxmLl9jbGVhbnVwKGZhbHNlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHRyeSB7XG4gICAgc2VsZi54aHIuc2VuZChwYXlsb2FkKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHNlbGYuZW1pdCgnZmluaXNoJywgMCwgJycpO1xuICAgIHNlbGYuX2NsZWFudXAoZmFsc2UpO1xuICB9XG59O1xuXG5BYnN0cmFjdFhIUk9iamVjdC5wcm90b3R5cGUuX2NsZWFudXAgPSBmdW5jdGlvbihhYm9ydCkge1xuICBkZWJ1ZygnY2xlYW51cCcpO1xuICBpZiAoIXRoaXMueGhyKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIHV0aWxzLnVubG9hZERlbCh0aGlzLnVubG9hZFJlZik7XG5cbiAgLy8gSUUgbmVlZHMgdGhpcyBmaWVsZCB0byBiZSBhIGZ1bmN0aW9uXG4gIHRoaXMueGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge307XG4gIGlmICh0aGlzLnhoci5vbnRpbWVvdXQpIHtcbiAgICB0aGlzLnhoci5vbnRpbWVvdXQgPSBudWxsO1xuICB9XG5cbiAgaWYgKGFib3J0KSB7XG4gICAgdHJ5IHtcbiAgICAgIHRoaXMueGhyLmFib3J0KCk7XG4gICAgfSBjYXRjaCAoeCkge1xuICAgICAgLy8gaW50ZW50aW9uYWxseSBlbXB0eVxuICAgIH1cbiAgfVxuICB0aGlzLnVubG9hZFJlZiA9IHRoaXMueGhyID0gbnVsbDtcbn07XG5cbkFic3RyYWN0WEhST2JqZWN0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5fY2xlYW51cCh0cnVlKTtcbn07XG5cbkFic3RyYWN0WEhST2JqZWN0LmVuYWJsZWQgPSAhIVhIUjtcbi8vIG92ZXJyaWRlIFhNTEh0dHBSZXF1ZXN0IGZvciBJRTYvN1xuLy8gb2JmdXNjYXRlIHRvIGF2b2lkIGZpcmV3YWxsc1xudmFyIGF4byA9IFsnQWN0aXZlJ10uY29uY2F0KCdPYmplY3QnKS5qb2luKCdYJyk7XG5pZiAoIUFic3RyYWN0WEhST2JqZWN0LmVuYWJsZWQgJiYgKGF4byBpbiBnbG9iYWwpKSB7XG4gIGRlYnVnKCdvdmVycmlkaW5nIHhtbGh0dHByZXF1ZXN0Jyk7XG4gIFhIUiA9IGZ1bmN0aW9uKCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gbmV3IGdsb2JhbFtheG9dKCdNaWNyb3NvZnQuWE1MSFRUUCcpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfTtcbiAgQWJzdHJhY3RYSFJPYmplY3QuZW5hYmxlZCA9ICEhbmV3IFhIUigpO1xufVxuXG52YXIgY29ycyA9IGZhbHNlO1xudHJ5IHtcbiAgY29ycyA9ICd3aXRoQ3JlZGVudGlhbHMnIGluIG5ldyBYSFIoKTtcbn0gY2F0Y2ggKGlnbm9yZWQpIHtcbiAgLy8gaW50ZW50aW9uYWxseSBlbXB0eVxufVxuXG5BYnN0cmFjdFhIUk9iamVjdC5zdXBwb3J0c0NPUlMgPSBjb3JzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFic3RyYWN0WEhST2JqZWN0O1xuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0sdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbCA6IHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cgOiB7fSlcblxufSx7XCIuLi8uLi91dGlscy9ldmVudFwiOjQ2LFwiLi4vLi4vdXRpbHMvdXJsXCI6NTIsXCJkZWJ1Z1wiOjU1LFwiZXZlbnRzXCI6MyxcImluaGVyaXRzXCI6NTd9XSwxODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG5tb2R1bGUuZXhwb3J0cyA9IGdsb2JhbC5FdmVudFNvdXJjZTtcblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se31dLDE5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAoZ2xvYmFsKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIERyaXZlciA9IGdsb2JhbC5XZWJTb2NrZXQgfHwgZ2xvYmFsLk1veldlYlNvY2tldDtcbmlmIChEcml2ZXIpIHtcblx0bW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBXZWJTb2NrZXRCcm93c2VyRHJpdmVyKHVybCkge1xuXHRcdHJldHVybiBuZXcgRHJpdmVyKHVybCk7XG5cdH07XG59IGVsc2Uge1xuXHRtb2R1bGUuZXhwb3J0cyA9IHVuZGVmaW5lZDtcbn1cblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se31dLDIwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEFqYXhCYXNlZFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vbGliL2FqYXgtYmFzZWQnKVxuICAsIEV2ZW50U291cmNlUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL2V2ZW50c291cmNlJylcbiAgLCBYSFJDb3JzT2JqZWN0ID0gcmVxdWlyZSgnLi9zZW5kZXIveGhyLWNvcnMnKVxuICAsIEV2ZW50U291cmNlRHJpdmVyID0gcmVxdWlyZSgnZXZlbnRzb3VyY2UnKVxuICA7XG5cbmZ1bmN0aW9uIEV2ZW50U291cmNlVHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghRXZlbnRTb3VyY2VUcmFuc3BvcnQuZW5hYmxlZCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cblxuICBBamF4QmFzZWRUcmFuc3BvcnQuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy9ldmVudHNvdXJjZScsIEV2ZW50U291cmNlUmVjZWl2ZXIsIFhIUkNvcnNPYmplY3QpO1xufVxuXG5pbmhlcml0cyhFdmVudFNvdXJjZVRyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuRXZlbnRTb3VyY2VUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gISFFdmVudFNvdXJjZURyaXZlcjtcbn07XG5cbkV2ZW50U291cmNlVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAnZXZlbnRzb3VyY2UnO1xuRXZlbnRTb3VyY2VUcmFuc3BvcnQucm91bmRUcmlwcyA9IDI7XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRTb3VyY2VUcmFuc3BvcnQ7XG5cbn0se1wiLi9saWIvYWpheC1iYXNlZFwiOjI0LFwiLi9yZWNlaXZlci9ldmVudHNvdXJjZVwiOjI5LFwiLi9zZW5kZXIveGhyLWNvcnNcIjozNSxcImV2ZW50c291cmNlXCI6MTgsXCJpbmhlcml0c1wiOjU3fV0sMjE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgSHRtbGZpbGVSZWNlaXZlciA9IHJlcXVpcmUoJy4vcmVjZWl2ZXIvaHRtbGZpbGUnKVxuICAsIFhIUkxvY2FsT2JqZWN0ID0gcmVxdWlyZSgnLi9zZW5kZXIveGhyLWxvY2FsJylcbiAgLCBBamF4QmFzZWRUcmFuc3BvcnQgPSByZXF1aXJlKCcuL2xpYi9hamF4LWJhc2VkJylcbiAgO1xuXG5mdW5jdGlvbiBIdG1sRmlsZVRyYW5zcG9ydCh0cmFuc1VybCkge1xuICBpZiAoIUh0bWxmaWxlUmVjZWl2ZXIuZW5hYmxlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG4gIEFqYXhCYXNlZFRyYW5zcG9ydC5jYWxsKHRoaXMsIHRyYW5zVXJsLCAnL2h0bWxmaWxlJywgSHRtbGZpbGVSZWNlaXZlciwgWEhSTG9jYWxPYmplY3QpO1xufVxuXG5pbmhlcml0cyhIdG1sRmlsZVRyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuSHRtbEZpbGVUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKGluZm8pIHtcbiAgcmV0dXJuIEh0bWxmaWxlUmVjZWl2ZXIuZW5hYmxlZCAmJiBpbmZvLnNhbWVPcmlnaW47XG59O1xuXG5IdG1sRmlsZVRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ2h0bWxmaWxlJztcbkh0bWxGaWxlVHJhbnNwb3J0LnJvdW5kVHJpcHMgPSAyO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEh0bWxGaWxlVHJhbnNwb3J0O1xuXG59LHtcIi4vbGliL2FqYXgtYmFzZWRcIjoyNCxcIi4vcmVjZWl2ZXIvaHRtbGZpbGVcIjozMCxcIi4vc2VuZGVyL3hoci1sb2NhbFwiOjM3LFwiaW5oZXJpdHNcIjo1N31dLDIyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAocHJvY2Vzcyl7XG4ndXNlIHN0cmljdCc7XG5cbi8vIEZldyBjb29sIHRyYW5zcG9ydHMgZG8gd29yayBvbmx5IGZvciBzYW1lLW9yaWdpbi4gSW4gb3JkZXIgdG8gbWFrZVxuLy8gdGhlbSB3b3JrIGNyb3NzLWRvbWFpbiB3ZSBzaGFsbCB1c2UgaWZyYW1lLCBzZXJ2ZWQgZnJvbSB0aGVcbi8vIHJlbW90ZSBkb21haW4uIE5ldyBicm93c2VycyBoYXZlIGNhcGFiaWxpdGllcyB0byBjb21tdW5pY2F0ZSB3aXRoXG4vLyBjcm9zcyBkb21haW4gaWZyYW1lIHVzaW5nIHBvc3RNZXNzYWdlKCkuIEluIElFIGl0IHdhcyBpbXBsZW1lbnRlZFxuLy8gZnJvbSBJRSA4KywgYnV0IG9mIGNvdXJzZSwgSUUgZ290IHNvbWUgZGV0YWlscyB3cm9uZzpcbi8vICAgIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9jYzE5NzAxNSh2PVZTLjg1KS5hc3B4XG4vLyAgICBodHRwOi8vc3RldmVzb3VkZXJzLmNvbS9taXNjL3Rlc3QtcG9zdG1lc3NhZ2UucGhwXG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBKU09OMyA9IHJlcXVpcmUoJ2pzb24zJylcbiAgLCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCB2ZXJzaW9uID0gcmVxdWlyZSgnLi4vdmVyc2lvbicpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy91cmwnKVxuICAsIGlmcmFtZVV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMvaWZyYW1lJylcbiAgLCBldmVudFV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMvZXZlbnQnKVxuICAsIHJhbmRvbSA9IHJlcXVpcmUoJy4uL3V0aWxzL3JhbmRvbScpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDp0cmFuc3BvcnQ6aWZyYW1lJyk7XG59XG5cbmZ1bmN0aW9uIElmcmFtZVRyYW5zcG9ydCh0cmFuc3BvcnQsIHRyYW5zVXJsLCBiYXNlVXJsKSB7XG4gIGlmICghSWZyYW1lVHJhbnNwb3J0LmVuYWJsZWQoKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHZhciBzZWxmID0gdGhpcztcbiAgdGhpcy5vcmlnaW4gPSB1cmxVdGlscy5nZXRPcmlnaW4oYmFzZVVybCk7XG4gIHRoaXMuYmFzZVVybCA9IGJhc2VVcmw7XG4gIHRoaXMudHJhbnNVcmwgPSB0cmFuc1VybDtcbiAgdGhpcy50cmFuc3BvcnQgPSB0cmFuc3BvcnQ7XG4gIHRoaXMud2luZG93SWQgPSByYW5kb20uc3RyaW5nKDgpO1xuXG4gIHZhciBpZnJhbWVVcmwgPSB1cmxVdGlscy5hZGRQYXRoKGJhc2VVcmwsICcvaWZyYW1lLmh0bWwnKSArICcjJyArIHRoaXMud2luZG93SWQ7XG4gIGRlYnVnKHRyYW5zcG9ydCwgdHJhbnNVcmwsIGlmcmFtZVVybCk7XG5cbiAgdGhpcy5pZnJhbWVPYmogPSBpZnJhbWVVdGlscy5jcmVhdGVJZnJhbWUoaWZyYW1lVXJsLCBmdW5jdGlvbihyKSB7XG4gICAgZGVidWcoJ2VyciBjYWxsYmFjaycpO1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCAxMDA2LCAnVW5hYmxlIHRvIGxvYWQgYW4gaWZyYW1lICgnICsgciArICcpJyk7XG4gICAgc2VsZi5jbG9zZSgpO1xuICB9KTtcblxuICB0aGlzLm9ubWVzc2FnZUNhbGxiYWNrID0gdGhpcy5fbWVzc2FnZS5iaW5kKHRoaXMpO1xuICBldmVudFV0aWxzLmF0dGFjaEV2ZW50KCdtZXNzYWdlJywgdGhpcy5vbm1lc3NhZ2VDYWxsYmFjayk7XG59XG5cbmluaGVyaXRzKElmcmFtZVRyYW5zcG9ydCwgRXZlbnRFbWl0dGVyKTtcblxuSWZyYW1lVHJhbnNwb3J0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgaWYgKHRoaXMuaWZyYW1lT2JqKSB7XG4gICAgZXZlbnRVdGlscy5kZXRhY2hFdmVudCgnbWVzc2FnZScsIHRoaXMub25tZXNzYWdlQ2FsbGJhY2spO1xuICAgIHRyeSB7XG4gICAgICAvLyBXaGVuIHRoZSBpZnJhbWUgaXMgbm90IGxvYWRlZCwgSUUgcmFpc2VzIGFuIGV4Y2VwdGlvblxuICAgICAgLy8gb24gJ2NvbnRlbnRXaW5kb3cnLlxuICAgICAgdGhpcy5wb3N0TWVzc2FnZSgnYycpO1xuICAgIH0gY2F0Y2ggKHgpIHtcbiAgICAgIC8vIGludGVudGlvbmFsbHkgZW1wdHlcbiAgICB9XG4gICAgdGhpcy5pZnJhbWVPYmouY2xlYW51cCgpO1xuICAgIHRoaXMuaWZyYW1lT2JqID0gbnVsbDtcbiAgICB0aGlzLm9ubWVzc2FnZUNhbGxiYWNrID0gdGhpcy5pZnJhbWVPYmogPSBudWxsO1xuICB9XG59O1xuXG5JZnJhbWVUcmFuc3BvcnQucHJvdG90eXBlLl9tZXNzYWdlID0gZnVuY3Rpb24oZSkge1xuICBkZWJ1ZygnbWVzc2FnZScsIGUuZGF0YSk7XG4gIGlmICghdXJsVXRpbHMuaXNPcmlnaW5FcXVhbChlLm9yaWdpbiwgdGhpcy5vcmlnaW4pKSB7XG4gICAgZGVidWcoJ25vdCBzYW1lIG9yaWdpbicsIGUub3JpZ2luLCB0aGlzLm9yaWdpbik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGlmcmFtZU1lc3NhZ2U7XG4gIHRyeSB7XG4gICAgaWZyYW1lTWVzc2FnZSA9IEpTT04zLnBhcnNlKGUuZGF0YSk7XG4gIH0gY2F0Y2ggKGlnbm9yZWQpIHtcbiAgICBkZWJ1ZygnYmFkIGpzb24nLCBlLmRhdGEpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpZnJhbWVNZXNzYWdlLndpbmRvd0lkICE9PSB0aGlzLndpbmRvd0lkKSB7XG4gICAgZGVidWcoJ21pc21hdGNoZWQgd2luZG93IGlkJywgaWZyYW1lTWVzc2FnZS53aW5kb3dJZCwgdGhpcy53aW5kb3dJZCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc3dpdGNoIChpZnJhbWVNZXNzYWdlLnR5cGUpIHtcbiAgY2FzZSAncyc6XG4gICAgdGhpcy5pZnJhbWVPYmoubG9hZGVkKCk7XG4gICAgLy8gd2luZG93IGdsb2JhbCBkZXBlbmRlbmN5XG4gICAgdGhpcy5wb3N0TWVzc2FnZSgncycsIEpTT04zLnN0cmluZ2lmeShbXG4gICAgICB2ZXJzaW9uXG4gICAgLCB0aGlzLnRyYW5zcG9ydFxuICAgICwgdGhpcy50cmFuc1VybFxuICAgICwgdGhpcy5iYXNlVXJsXG4gICAgXSkpO1xuICAgIGJyZWFrO1xuICBjYXNlICd0JzpcbiAgICB0aGlzLmVtaXQoJ21lc3NhZ2UnLCBpZnJhbWVNZXNzYWdlLmRhdGEpO1xuICAgIGJyZWFrO1xuICBjYXNlICdjJzpcbiAgICB2YXIgY2RhdGE7XG4gICAgdHJ5IHtcbiAgICAgIGNkYXRhID0gSlNPTjMucGFyc2UoaWZyYW1lTWVzc2FnZS5kYXRhKTtcbiAgICB9IGNhdGNoIChpZ25vcmVkKSB7XG4gICAgICBkZWJ1ZygnYmFkIGpzb24nLCBpZnJhbWVNZXNzYWdlLmRhdGEpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmVtaXQoJ2Nsb3NlJywgY2RhdGFbMF0sIGNkYXRhWzFdKTtcbiAgICB0aGlzLmNsb3NlKCk7XG4gICAgYnJlYWs7XG4gIH1cbn07XG5cbklmcmFtZVRyYW5zcG9ydC5wcm90b3R5cGUucG9zdE1lc3NhZ2UgPSBmdW5jdGlvbih0eXBlLCBkYXRhKSB7XG4gIGRlYnVnKCdwb3N0TWVzc2FnZScsIHR5cGUsIGRhdGEpO1xuICB0aGlzLmlmcmFtZU9iai5wb3N0KEpTT04zLnN0cmluZ2lmeSh7XG4gICAgd2luZG93SWQ6IHRoaXMud2luZG93SWRcbiAgLCB0eXBlOiB0eXBlXG4gICwgZGF0YTogZGF0YSB8fCAnJ1xuICB9KSwgdGhpcy5vcmlnaW4pO1xufTtcblxuSWZyYW1lVHJhbnNwb3J0LnByb3RvdHlwZS5zZW5kID0gZnVuY3Rpb24obWVzc2FnZSkge1xuICBkZWJ1Zygnc2VuZCcsIG1lc3NhZ2UpO1xuICB0aGlzLnBvc3RNZXNzYWdlKCdtJywgbWVzc2FnZSk7XG59O1xuXG5JZnJhbWVUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gaWZyYW1lVXRpbHMuaWZyYW1lRW5hYmxlZDtcbn07XG5cbklmcmFtZVRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ2lmcmFtZSc7XG5JZnJhbWVUcmFuc3BvcnQucm91bmRUcmlwcyA9IDI7XG5cbm1vZHVsZS5leHBvcnRzID0gSWZyYW1lVHJhbnNwb3J0O1xuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0pXG5cbn0se1wiLi4vdXRpbHMvZXZlbnRcIjo0NixcIi4uL3V0aWxzL2lmcmFtZVwiOjQ3LFwiLi4vdXRpbHMvcmFuZG9tXCI6NTAsXCIuLi91dGlscy91cmxcIjo1MixcIi4uL3ZlcnNpb25cIjo1MyxcImRlYnVnXCI6NTUsXCJldmVudHNcIjozLFwiaW5oZXJpdHNcIjo1NyxcImpzb24zXCI6NTh9XSwyMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbi8vIFRoZSBzaW1wbGVzdCBhbmQgbW9zdCByb2J1c3QgdHJhbnNwb3J0LCB1c2luZyB0aGUgd2VsbC1rbm93IGNyb3NzXG4vLyBkb21haW4gaGFjayAtIEpTT05QLiBUaGlzIHRyYW5zcG9ydCBpcyBxdWl0ZSBpbmVmZmljaWVudCAtIG9uZVxuLy8gbWVzc2FnZSBjb3VsZCB1c2UgdXAgdG8gb25lIGh0dHAgcmVxdWVzdC4gQnV0IGF0IGxlYXN0IGl0IHdvcmtzIGFsbW9zdFxuLy8gZXZlcnl3aGVyZS5cbi8vIEtub3duIGxpbWl0YXRpb25zOlxuLy8gICBvIHlvdSB3aWxsIGdldCBhIHNwaW5uaW5nIGN1cnNvclxuLy8gICBvIGZvciBLb25xdWVyb3IgYSBkdW1iIHRpbWVyIGlzIG5lZWRlZCB0byBkZXRlY3QgZXJyb3JzXG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBTZW5kZXJSZWNlaXZlciA9IHJlcXVpcmUoJy4vbGliL3NlbmRlci1yZWNlaXZlcicpXG4gICwgSnNvbnBSZWNlaXZlciA9IHJlcXVpcmUoJy4vcmVjZWl2ZXIvanNvbnAnKVxuICAsIGpzb25wU2VuZGVyID0gcmVxdWlyZSgnLi9zZW5kZXIvanNvbnAnKVxuICA7XG5cbmZ1bmN0aW9uIEpzb25QVHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghSnNvblBUcmFuc3BvcnQuZW5hYmxlZCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cbiAgU2VuZGVyUmVjZWl2ZXIuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy9qc29ucCcsIGpzb25wU2VuZGVyLCBKc29ucFJlY2VpdmVyKTtcbn1cblxuaW5oZXJpdHMoSnNvblBUcmFuc3BvcnQsIFNlbmRlclJlY2VpdmVyKTtcblxuSnNvblBUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gISFnbG9iYWwuZG9jdW1lbnQ7XG59O1xuXG5Kc29uUFRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ2pzb25wLXBvbGxpbmcnO1xuSnNvblBUcmFuc3BvcnQucm91bmRUcmlwcyA9IDE7XG5Kc29uUFRyYW5zcG9ydC5uZWVkQm9keSA9IHRydWU7XG5cbm1vZHVsZS5leHBvcnRzID0gSnNvblBUcmFuc3BvcnQ7XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4vbGliL3NlbmRlci1yZWNlaXZlclwiOjI4LFwiLi9yZWNlaXZlci9qc29ucFwiOjMxLFwiLi9zZW5kZXIvanNvbnBcIjozMyxcImluaGVyaXRzXCI6NTd9XSwyNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy91cmwnKVxuICAsIFNlbmRlclJlY2VpdmVyID0gcmVxdWlyZSgnLi9zZW5kZXItcmVjZWl2ZXInKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6YWpheC1iYXNlZCcpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVBamF4U2VuZGVyKEFqYXhPYmplY3QpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHVybCwgcGF5bG9hZCwgY2FsbGJhY2spIHtcbiAgICBkZWJ1ZygnY3JlYXRlIGFqYXggc2VuZGVyJywgdXJsLCBwYXlsb2FkKTtcbiAgICB2YXIgb3B0ID0ge307XG4gICAgaWYgKHR5cGVvZiBwYXlsb2FkID09PSAnc3RyaW5nJykge1xuICAgICAgb3B0LmhlYWRlcnMgPSB7J0NvbnRlbnQtdHlwZSc6ICd0ZXh0L3BsYWluJ307XG4gICAgfVxuICAgIHZhciBhamF4VXJsID0gdXJsVXRpbHMuYWRkUGF0aCh1cmwsICcveGhyX3NlbmQnKTtcbiAgICB2YXIgeG8gPSBuZXcgQWpheE9iamVjdCgnUE9TVCcsIGFqYXhVcmwsIHBheWxvYWQsIG9wdCk7XG4gICAgeG8ub25jZSgnZmluaXNoJywgZnVuY3Rpb24oc3RhdHVzKSB7XG4gICAgICBkZWJ1ZygnZmluaXNoJywgc3RhdHVzKTtcbiAgICAgIHhvID0gbnVsbDtcblxuICAgICAgaWYgKHN0YXR1cyAhPT0gMjAwICYmIHN0YXR1cyAhPT0gMjA0KSB7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayhuZXcgRXJyb3IoJ2h0dHAgc3RhdHVzICcgKyBzdGF0dXMpKTtcbiAgICAgIH1cbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgZGVidWcoJ2Fib3J0Jyk7XG4gICAgICB4by5jbG9zZSgpO1xuICAgICAgeG8gPSBudWxsO1xuXG4gICAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdBYm9ydGVkJyk7XG4gICAgICBlcnIuY29kZSA9IDEwMDA7XG4gICAgICBjYWxsYmFjayhlcnIpO1xuICAgIH07XG4gIH07XG59XG5cbmZ1bmN0aW9uIEFqYXhCYXNlZFRyYW5zcG9ydCh0cmFuc1VybCwgdXJsU3VmZml4LCBSZWNlaXZlciwgQWpheE9iamVjdCkge1xuICBTZW5kZXJSZWNlaXZlci5jYWxsKHRoaXMsIHRyYW5zVXJsLCB1cmxTdWZmaXgsIGNyZWF0ZUFqYXhTZW5kZXIoQWpheE9iamVjdCksIFJlY2VpdmVyLCBBamF4T2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoQWpheEJhc2VkVHJhbnNwb3J0LCBTZW5kZXJSZWNlaXZlcik7XG5cbm1vZHVsZS5leHBvcnRzID0gQWpheEJhc2VkVHJhbnNwb3J0O1xuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0pXG5cbn0se1wiLi4vLi4vdXRpbHMvdXJsXCI6NTIsXCIuL3NlbmRlci1yZWNlaXZlclwiOjI4LFwiZGVidWdcIjo1NSxcImluaGVyaXRzXCI6NTd9XSwyNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpidWZmZXJlZC1zZW5kZXInKTtcbn1cblxuZnVuY3Rpb24gQnVmZmVyZWRTZW5kZXIodXJsLCBzZW5kZXIpIHtcbiAgZGVidWcodXJsKTtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG4gIHRoaXMuc2VuZEJ1ZmZlciA9IFtdO1xuICB0aGlzLnNlbmRlciA9IHNlbmRlcjtcbiAgdGhpcy51cmwgPSB1cmw7XG59XG5cbmluaGVyaXRzKEJ1ZmZlcmVkU2VuZGVyLCBFdmVudEVtaXR0ZXIpO1xuXG5CdWZmZXJlZFNlbmRlci5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgZGVidWcoJ3NlbmQnLCBtZXNzYWdlKTtcbiAgdGhpcy5zZW5kQnVmZmVyLnB1c2gobWVzc2FnZSk7XG4gIGlmICghdGhpcy5zZW5kU3RvcCkge1xuICAgIHRoaXMuc2VuZFNjaGVkdWxlKCk7XG4gIH1cbn07XG5cbi8vIEZvciBwb2xsaW5nIHRyYW5zcG9ydHMgaW4gYSBzaXR1YXRpb24gd2hlbiBpbiB0aGUgbWVzc2FnZSBjYWxsYmFjayxcbi8vIG5ldyBtZXNzYWdlIGlzIGJlaW5nIHNlbmQuIElmIHRoZSBzZW5kaW5nIGNvbm5lY3Rpb24gd2FzIHN0YXJ0ZWRcbi8vIGJlZm9yZSByZWNlaXZpbmcgb25lLCBpdCBpcyBwb3NzaWJsZSB0byBzYXR1cmF0ZSB0aGUgbmV0d29yayBhbmRcbi8vIHRpbWVvdXQgZHVlIHRvIHRoZSBsYWNrIG9mIHJlY2VpdmluZyBzb2NrZXQuIFRvIGF2b2lkIHRoYXQgd2UgZGVsYXlcbi8vIHNlbmRpbmcgbWVzc2FnZXMgYnkgc29tZSBzbWFsbCB0aW1lLCBpbiBvcmRlciB0byBsZXQgcmVjZWl2aW5nXG4vLyBjb25uZWN0aW9uIGJlIHN0YXJ0ZWQgYmVmb3JlaGFuZC4gVGhpcyBpcyBvbmx5IGEgaGFsZm1lYXN1cmUgYW5kXG4vLyBkb2VzIG5vdCBmaXggdGhlIGJpZyBwcm9ibGVtLCBidXQgaXQgZG9lcyBtYWtlIHRoZSB0ZXN0cyBnbyBtb3JlXG4vLyBzdGFibGUgb24gc2xvdyBuZXR3b3Jrcy5cbkJ1ZmZlcmVkU2VuZGVyLnByb3RvdHlwZS5zZW5kU2NoZWR1bGVXYWl0ID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdzZW5kU2NoZWR1bGVXYWl0Jyk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHRyZWY7XG4gIHRoaXMuc2VuZFN0b3AgPSBmdW5jdGlvbigpIHtcbiAgICBkZWJ1Zygnc2VuZFN0b3AnKTtcbiAgICBzZWxmLnNlbmRTdG9wID0gbnVsbDtcbiAgICBjbGVhclRpbWVvdXQodHJlZik7XG4gIH07XG4gIHRyZWYgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCd0aW1lb3V0Jyk7XG4gICAgc2VsZi5zZW5kU3RvcCA9IG51bGw7XG4gICAgc2VsZi5zZW5kU2NoZWR1bGUoKTtcbiAgfSwgMjUpO1xufTtcblxuQnVmZmVyZWRTZW5kZXIucHJvdG90eXBlLnNlbmRTY2hlZHVsZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1Zygnc2VuZFNjaGVkdWxlJywgdGhpcy5zZW5kQnVmZmVyLmxlbmd0aCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgaWYgKHRoaXMuc2VuZEJ1ZmZlci5sZW5ndGggPiAwKSB7XG4gICAgdmFyIHBheWxvYWQgPSAnWycgKyB0aGlzLnNlbmRCdWZmZXIuam9pbignLCcpICsgJ10nO1xuICAgIHRoaXMuc2VuZFN0b3AgPSB0aGlzLnNlbmRlcih0aGlzLnVybCwgcGF5bG9hZCwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICBzZWxmLnNlbmRTdG9wID0gbnVsbDtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgZGVidWcoJ2Vycm9yJywgZXJyKTtcbiAgICAgICAgc2VsZi5lbWl0KCdjbG9zZScsIGVyci5jb2RlIHx8IDEwMDYsICdTZW5kaW5nIGVycm9yOiAnICsgZXJyKTtcbiAgICAgICAgc2VsZi5jbG9zZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZi5zZW5kU2NoZWR1bGVXYWl0KCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5zZW5kQnVmZmVyID0gW107XG4gIH1cbn07XG5cbkJ1ZmZlcmVkU2VuZGVyLnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnX2NsZWFudXAnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cbkJ1ZmZlcmVkU2VuZGVyLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5fY2xlYW51cCgpO1xuICBpZiAodGhpcy5zZW5kU3RvcCkge1xuICAgIHRoaXMuc2VuZFN0b3AoKTtcbiAgICB0aGlzLnNlbmRTdG9wID0gbnVsbDtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBCdWZmZXJlZFNlbmRlcjtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9KVxuXG59LHtcImRlYnVnXCI6NTUsXCJldmVudHNcIjozLFwiaW5oZXJpdHNcIjo1N31dLDI2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAoZ2xvYmFsKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIElmcmFtZVRyYW5zcG9ydCA9IHJlcXVpcmUoJy4uL2lmcmFtZScpXG4gICwgb2JqZWN0VXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy9vYmplY3QnKVxuICA7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odHJhbnNwb3J0KSB7XG5cbiAgZnVuY3Rpb24gSWZyYW1lV3JhcFRyYW5zcG9ydCh0cmFuc1VybCwgYmFzZVVybCkge1xuICAgIElmcmFtZVRyYW5zcG9ydC5jYWxsKHRoaXMsIHRyYW5zcG9ydC50cmFuc3BvcnROYW1lLCB0cmFuc1VybCwgYmFzZVVybCk7XG4gIH1cblxuICBpbmhlcml0cyhJZnJhbWVXcmFwVHJhbnNwb3J0LCBJZnJhbWVUcmFuc3BvcnQpO1xuXG4gIElmcmFtZVdyYXBUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKHVybCwgaW5mbykge1xuICAgIGlmICghZ2xvYmFsLmRvY3VtZW50KSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIGlmcmFtZUluZm8gPSBvYmplY3RVdGlscy5leHRlbmQoe30sIGluZm8pO1xuICAgIGlmcmFtZUluZm8uc2FtZU9yaWdpbiA9IHRydWU7XG4gICAgcmV0dXJuIHRyYW5zcG9ydC5lbmFibGVkKGlmcmFtZUluZm8pICYmIElmcmFtZVRyYW5zcG9ydC5lbmFibGVkKCk7XG4gIH07XG5cbiAgSWZyYW1lV3JhcFRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ2lmcmFtZS0nICsgdHJhbnNwb3J0LnRyYW5zcG9ydE5hbWU7XG4gIElmcmFtZVdyYXBUcmFuc3BvcnQubmVlZEJvZHkgPSB0cnVlO1xuICBJZnJhbWVXcmFwVHJhbnNwb3J0LnJvdW5kVHJpcHMgPSBJZnJhbWVUcmFuc3BvcnQucm91bmRUcmlwcyArIHRyYW5zcG9ydC5yb3VuZFRyaXBzIC0gMTsgLy8gaHRtbCwgamF2YXNjcmlwdCAoMikgKyB0cmFuc3BvcnQgLSBubyBDT1JTICgxKVxuXG4gIElmcmFtZVdyYXBUcmFuc3BvcnQuZmFjYWRlVHJhbnNwb3J0ID0gdHJhbnNwb3J0O1xuXG4gIHJldHVybiBJZnJhbWVXcmFwVHJhbnNwb3J0O1xufTtcblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se1wiLi4vLi4vdXRpbHMvb2JqZWN0XCI6NDksXCIuLi9pZnJhbWVcIjoyMixcImluaGVyaXRzXCI6NTd9XSwyNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpwb2xsaW5nJyk7XG59XG5cbmZ1bmN0aW9uIFBvbGxpbmcoUmVjZWl2ZXIsIHJlY2VpdmVVcmwsIEFqYXhPYmplY3QpIHtcbiAgZGVidWcocmVjZWl2ZVVybCk7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuICB0aGlzLlJlY2VpdmVyID0gUmVjZWl2ZXI7XG4gIHRoaXMucmVjZWl2ZVVybCA9IHJlY2VpdmVVcmw7XG4gIHRoaXMuQWpheE9iamVjdCA9IEFqYXhPYmplY3Q7XG4gIHRoaXMuX3NjaGVkdWxlUmVjZWl2ZXIoKTtcbn1cblxuaW5oZXJpdHMoUG9sbGluZywgRXZlbnRFbWl0dGVyKTtcblxuUG9sbGluZy5wcm90b3R5cGUuX3NjaGVkdWxlUmVjZWl2ZXIgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ19zY2hlZHVsZVJlY2VpdmVyJyk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHBvbGwgPSB0aGlzLnBvbGwgPSBuZXcgdGhpcy5SZWNlaXZlcih0aGlzLnJlY2VpdmVVcmwsIHRoaXMuQWpheE9iamVjdCk7XG5cbiAgcG9sbC5vbignbWVzc2FnZScsIGZ1bmN0aW9uKG1zZykge1xuICAgIGRlYnVnKCdtZXNzYWdlJywgbXNnKTtcbiAgICBzZWxmLmVtaXQoJ21lc3NhZ2UnLCBtc2cpO1xuICB9KTtcblxuICBwb2xsLm9uY2UoJ2Nsb3NlJywgZnVuY3Rpb24oY29kZSwgcmVhc29uKSB7XG4gICAgZGVidWcoJ2Nsb3NlJywgY29kZSwgcmVhc29uLCBzZWxmLnBvbGxJc0Nsb3NpbmcpO1xuICAgIHNlbGYucG9sbCA9IHBvbGwgPSBudWxsO1xuXG4gICAgaWYgKCFzZWxmLnBvbGxJc0Nsb3NpbmcpIHtcbiAgICAgIGlmIChyZWFzb24gPT09ICduZXR3b3JrJykge1xuICAgICAgICBzZWxmLl9zY2hlZHVsZVJlY2VpdmVyKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZWxmLmVtaXQoJ2Nsb3NlJywgY29kZSB8fCAxMDA2LCByZWFzb24pO1xuICAgICAgICBzZWxmLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59O1xuXG5Qb2xsaW5nLnByb3RvdHlwZS5hYm9ydCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnYWJvcnQnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgdGhpcy5wb2xsSXNDbG9zaW5nID0gdHJ1ZTtcbiAgaWYgKHRoaXMucG9sbCkge1xuICAgIHRoaXMucG9sbC5hYm9ydCgpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBvbGxpbmc7XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSlcblxufSx7XCJkZWJ1Z1wiOjU1LFwiZXZlbnRzXCI6MyxcImluaGVyaXRzXCI6NTd9XSwyODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy91cmwnKVxuICAsIEJ1ZmZlcmVkU2VuZGVyID0gcmVxdWlyZSgnLi9idWZmZXJlZC1zZW5kZXInKVxuICAsIFBvbGxpbmcgPSByZXF1aXJlKCcuL3BvbGxpbmcnKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6c2VuZGVyLXJlY2VpdmVyJyk7XG59XG5cbmZ1bmN0aW9uIFNlbmRlclJlY2VpdmVyKHRyYW5zVXJsLCB1cmxTdWZmaXgsIHNlbmRlckZ1bmMsIFJlY2VpdmVyLCBBamF4T2JqZWN0KSB7XG4gIHZhciBwb2xsVXJsID0gdXJsVXRpbHMuYWRkUGF0aCh0cmFuc1VybCwgdXJsU3VmZml4KTtcbiAgZGVidWcocG9sbFVybCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgQnVmZmVyZWRTZW5kZXIuY2FsbCh0aGlzLCB0cmFuc1VybCwgc2VuZGVyRnVuYyk7XG5cbiAgdGhpcy5wb2xsID0gbmV3IFBvbGxpbmcoUmVjZWl2ZXIsIHBvbGxVcmwsIEFqYXhPYmplY3QpO1xuICB0aGlzLnBvbGwub24oJ21lc3NhZ2UnLCBmdW5jdGlvbihtc2cpIHtcbiAgICBkZWJ1ZygncG9sbCBtZXNzYWdlJywgbXNnKTtcbiAgICBzZWxmLmVtaXQoJ21lc3NhZ2UnLCBtc2cpO1xuICB9KTtcbiAgdGhpcy5wb2xsLm9uY2UoJ2Nsb3NlJywgZnVuY3Rpb24oY29kZSwgcmVhc29uKSB7XG4gICAgZGVidWcoJ3BvbGwgY2xvc2UnLCBjb2RlLCByZWFzb24pO1xuICAgIHNlbGYucG9sbCA9IG51bGw7XG4gICAgc2VsZi5lbWl0KCdjbG9zZScsIGNvZGUsIHJlYXNvbik7XG4gICAgc2VsZi5jbG9zZSgpO1xuICB9KTtcbn1cblxuaW5oZXJpdHMoU2VuZGVyUmVjZWl2ZXIsIEJ1ZmZlcmVkU2VuZGVyKTtcblxuU2VuZGVyUmVjZWl2ZXIucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIEJ1ZmZlcmVkU2VuZGVyLnByb3RvdHlwZS5jbG9zZS5jYWxsKHRoaXMpO1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgaWYgKHRoaXMucG9sbCkge1xuICAgIHRoaXMucG9sbC5hYm9ydCgpO1xuICAgIHRoaXMucG9sbCA9IG51bGw7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gU2VuZGVyUmVjZWl2ZXI7XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSlcblxufSx7XCIuLi8uLi91dGlscy91cmxcIjo1MixcIi4vYnVmZmVyZWQtc2VuZGVyXCI6MjUsXCIuL3BvbGxpbmdcIjoyNyxcImRlYnVnXCI6NTUsXCJpbmhlcml0c1wiOjU3fV0sMjk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIEV2ZW50U291cmNlRHJpdmVyID0gcmVxdWlyZSgnZXZlbnRzb3VyY2UnKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6cmVjZWl2ZXI6ZXZlbnRzb3VyY2UnKTtcbn1cblxuZnVuY3Rpb24gRXZlbnRTb3VyY2VSZWNlaXZlcih1cmwpIHtcbiAgZGVidWcodXJsKTtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG5cbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgZXMgPSB0aGlzLmVzID0gbmV3IEV2ZW50U291cmNlRHJpdmVyKHVybCk7XG4gIGVzLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKGUpIHtcbiAgICBkZWJ1ZygnbWVzc2FnZScsIGUuZGF0YSk7XG4gICAgc2VsZi5lbWl0KCdtZXNzYWdlJywgZGVjb2RlVVJJKGUuZGF0YSkpO1xuICB9O1xuICBlcy5vbmVycm9yID0gZnVuY3Rpb24oZSkge1xuICAgIGRlYnVnKCdlcnJvcicsIGVzLnJlYWR5U3RhdGUsIGUpO1xuICAgIC8vIEVTIG9uIHJlY29ubmVjdGlvbiBoYXMgcmVhZHlTdGF0ZSA9IDAgb3IgMS5cbiAgICAvLyBvbiBuZXR3b3JrIGVycm9yIGl0J3MgQ0xPU0VEID0gMlxuICAgIHZhciByZWFzb24gPSAoZXMucmVhZHlTdGF0ZSAhPT0gMiA/ICduZXR3b3JrJyA6ICdwZXJtYW5lbnQnKTtcbiAgICBzZWxmLl9jbGVhbnVwKCk7XG4gICAgc2VsZi5fY2xvc2UocmVhc29uKTtcbiAgfTtcbn1cblxuaW5oZXJpdHMoRXZlbnRTb3VyY2VSZWNlaXZlciwgRXZlbnRFbWl0dGVyKTtcblxuRXZlbnRTb3VyY2VSZWNlaXZlci5wcm90b3R5cGUuYWJvcnQgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ2Fib3J0Jyk7XG4gIHRoaXMuX2NsZWFudXAoKTtcbiAgdGhpcy5fY2xvc2UoJ3VzZXInKTtcbn07XG5cbkV2ZW50U291cmNlUmVjZWl2ZXIucHJvdG90eXBlLl9jbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdjbGVhbnVwJyk7XG4gIHZhciBlcyA9IHRoaXMuZXM7XG4gIGlmIChlcykge1xuICAgIGVzLm9ubWVzc2FnZSA9IGVzLm9uZXJyb3IgPSBudWxsO1xuICAgIGVzLmNsb3NlKCk7XG4gICAgdGhpcy5lcyA9IG51bGw7XG4gIH1cbn07XG5cbkV2ZW50U291cmNlUmVjZWl2ZXIucHJvdG90eXBlLl9jbG9zZSA9IGZ1bmN0aW9uKHJlYXNvbikge1xuICBkZWJ1ZygnY2xvc2UnLCByZWFzb24pO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIC8vIFNhZmFyaSBhbmQgY2hyb21lIDwgMTUgY3Jhc2ggaWYgd2UgY2xvc2Ugd2luZG93IGJlZm9yZVxuICAvLyB3YWl0aW5nIGZvciBFUyBjbGVhbnVwLiBTZWU6XG4gIC8vIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD04OTE1NVxuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCBudWxsLCByZWFzb24pO1xuICAgIHNlbGYucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIH0sIDIwMCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50U291cmNlUmVjZWl2ZXI7XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSlcblxufSx7XCJkZWJ1Z1wiOjU1LFwiZXZlbnRzXCI6MyxcImV2ZW50c291cmNlXCI6MTgsXCJpbmhlcml0c1wiOjU3fV0sMzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzLGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBpZnJhbWVVdGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2lmcmFtZScpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy91cmwnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIHJhbmRvbSA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3JhbmRvbScpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpyZWNlaXZlcjpodG1sZmlsZScpO1xufVxuXG5mdW5jdGlvbiBIdG1sZmlsZVJlY2VpdmVyKHVybCkge1xuICBkZWJ1Zyh1cmwpO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBpZnJhbWVVdGlscy5wb2xsdXRlR2xvYmFsTmFtZXNwYWNlKCk7XG5cbiAgdGhpcy5pZCA9ICdhJyArIHJhbmRvbS5zdHJpbmcoNik7XG4gIHVybCA9IHVybFV0aWxzLmFkZFF1ZXJ5KHVybCwgJ2M9JyArIGRlY29kZVVSSUNvbXBvbmVudChpZnJhbWVVdGlscy5XUHJlZml4ICsgJy4nICsgdGhpcy5pZCkpO1xuXG4gIGRlYnVnKCd1c2luZyBodG1sZmlsZScsIEh0bWxmaWxlUmVjZWl2ZXIuaHRtbGZpbGVFbmFibGVkKTtcbiAgdmFyIGNvbnN0cnVjdEZ1bmMgPSBIdG1sZmlsZVJlY2VpdmVyLmh0bWxmaWxlRW5hYmxlZCA/XG4gICAgICBpZnJhbWVVdGlscy5jcmVhdGVIdG1sZmlsZSA6IGlmcmFtZVV0aWxzLmNyZWF0ZUlmcmFtZTtcblxuICBnbG9iYWxbaWZyYW1lVXRpbHMuV1ByZWZpeF1bdGhpcy5pZF0gPSB7XG4gICAgc3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgZGVidWcoJ3N0YXJ0Jyk7XG4gICAgICBzZWxmLmlmcmFtZU9iai5sb2FkZWQoKTtcbiAgICB9XG4gICwgbWVzc2FnZTogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgZGVidWcoJ21lc3NhZ2UnLCBkYXRhKTtcbiAgICAgIHNlbGYuZW1pdCgnbWVzc2FnZScsIGRhdGEpO1xuICAgIH1cbiAgLCBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIGRlYnVnKCdzdG9wJyk7XG4gICAgICBzZWxmLl9jbGVhbnVwKCk7XG4gICAgICBzZWxmLl9jbG9zZSgnbmV0d29yaycpO1xuICAgIH1cbiAgfTtcbiAgdGhpcy5pZnJhbWVPYmogPSBjb25zdHJ1Y3RGdW5jKHVybCwgZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ2NhbGxiYWNrJyk7XG4gICAgc2VsZi5fY2xlYW51cCgpO1xuICAgIHNlbGYuX2Nsb3NlKCdwZXJtYW5lbnQnKTtcbiAgfSk7XG59XG5cbmluaGVyaXRzKEh0bWxmaWxlUmVjZWl2ZXIsIEV2ZW50RW1pdHRlcik7XG5cbkh0bWxmaWxlUmVjZWl2ZXIucHJvdG90eXBlLmFib3J0ID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdhYm9ydCcpO1xuICB0aGlzLl9jbGVhbnVwKCk7XG4gIHRoaXMuX2Nsb3NlKCd1c2VyJyk7XG59O1xuXG5IdG1sZmlsZVJlY2VpdmVyLnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnX2NsZWFudXAnKTtcbiAgaWYgKHRoaXMuaWZyYW1lT2JqKSB7XG4gICAgdGhpcy5pZnJhbWVPYmouY2xlYW51cCgpO1xuICAgIHRoaXMuaWZyYW1lT2JqID0gbnVsbDtcbiAgfVxuICBkZWxldGUgZ2xvYmFsW2lmcmFtZVV0aWxzLldQcmVmaXhdW3RoaXMuaWRdO1xufTtcblxuSHRtbGZpbGVSZWNlaXZlci5wcm90b3R5cGUuX2Nsb3NlID0gZnVuY3Rpb24ocmVhc29uKSB7XG4gIGRlYnVnKCdfY2xvc2UnLCByZWFzb24pO1xuICB0aGlzLmVtaXQoJ2Nsb3NlJywgbnVsbCwgcmVhc29uKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cbkh0bWxmaWxlUmVjZWl2ZXIuaHRtbGZpbGVFbmFibGVkID0gZmFsc2U7XG5cbi8vIG9iZnVzY2F0ZSB0byBhdm9pZCBmaXJld2FsbHNcbnZhciBheG8gPSBbJ0FjdGl2ZSddLmNvbmNhdCgnT2JqZWN0Jykuam9pbignWCcpO1xuaWYgKGF4byBpbiBnbG9iYWwpIHtcbiAgdHJ5IHtcbiAgICBIdG1sZmlsZVJlY2VpdmVyLmh0bWxmaWxlRW5hYmxlZCA9ICEhbmV3IGdsb2JhbFtheG9dKCdodG1sZmlsZScpO1xuICB9IGNhdGNoICh4KSB7XG4gICAgLy8gaW50ZW50aW9uYWxseSBlbXB0eVxuICB9XG59XG5cbkh0bWxmaWxlUmVjZWl2ZXIuZW5hYmxlZCA9IEh0bWxmaWxlUmVjZWl2ZXIuaHRtbGZpbGVFbmFibGVkIHx8IGlmcmFtZVV0aWxzLmlmcmFtZUVuYWJsZWQ7XG5cbm1vZHVsZS5leHBvcnRzID0gSHRtbGZpbGVSZWNlaXZlcjtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9LHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se1wiLi4vLi4vdXRpbHMvaWZyYW1lXCI6NDcsXCIuLi8uLi91dGlscy9yYW5kb21cIjo1MCxcIi4uLy4uL3V0aWxzL3VybFwiOjUyLFwiZGVidWdcIjo1NSxcImV2ZW50c1wiOjMsXCJpbmhlcml0c1wiOjU3fV0sMzE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzLGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2lmcmFtZScpXG4gICwgcmFuZG9tID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvcmFuZG9tJylcbiAgLCBicm93c2VyID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvYnJvd3NlcicpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy91cmwnKVxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6cmVjZWl2ZXI6anNvbnAnKTtcbn1cblxuZnVuY3Rpb24gSnNvbnBSZWNlaXZlcih1cmwpIHtcbiAgZGVidWcodXJsKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICB1dGlscy5wb2xsdXRlR2xvYmFsTmFtZXNwYWNlKCk7XG5cbiAgdGhpcy5pZCA9ICdhJyArIHJhbmRvbS5zdHJpbmcoNik7XG4gIHZhciB1cmxXaXRoSWQgPSB1cmxVdGlscy5hZGRRdWVyeSh1cmwsICdjPScgKyBlbmNvZGVVUklDb21wb25lbnQodXRpbHMuV1ByZWZpeCArICcuJyArIHRoaXMuaWQpKTtcblxuICBnbG9iYWxbdXRpbHMuV1ByZWZpeF1bdGhpcy5pZF0gPSB0aGlzLl9jYWxsYmFjay5iaW5kKHRoaXMpO1xuICB0aGlzLl9jcmVhdGVTY3JpcHQodXJsV2l0aElkKTtcblxuICAvLyBGYWxsYmFjayBtb3N0bHkgZm9yIEtvbnF1ZXJvciAtIHN0dXBpZCB0aW1lciwgMzUgc2Vjb25kcyBzaGFsbCBiZSBwbGVudHkuXG4gIHRoaXMudGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICBkZWJ1ZygndGltZW91dCcpO1xuICAgIHNlbGYuX2Fib3J0KG5ldyBFcnJvcignSlNPTlAgc2NyaXB0IGxvYWRlZCBhYm5vcm1hbGx5ICh0aW1lb3V0KScpKTtcbiAgfSwgSnNvbnBSZWNlaXZlci50aW1lb3V0KTtcbn1cblxuaW5oZXJpdHMoSnNvbnBSZWNlaXZlciwgRXZlbnRFbWl0dGVyKTtcblxuSnNvbnBSZWNlaXZlci5wcm90b3R5cGUuYWJvcnQgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ2Fib3J0Jyk7XG4gIGlmIChnbG9iYWxbdXRpbHMuV1ByZWZpeF1bdGhpcy5pZF0pIHtcbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdKU09OUCB1c2VyIGFib3J0ZWQgcmVhZCcpO1xuICAgIGVyci5jb2RlID0gMTAwMDtcbiAgICB0aGlzLl9hYm9ydChlcnIpO1xuICB9XG59O1xuXG5Kc29ucFJlY2VpdmVyLnRpbWVvdXQgPSAzNTAwMDtcbkpzb25wUmVjZWl2ZXIuc2NyaXB0RXJyb3JUaW1lb3V0ID0gMTAwMDtcblxuSnNvbnBSZWNlaXZlci5wcm90b3R5cGUuX2NhbGxiYWNrID0gZnVuY3Rpb24oZGF0YSkge1xuICBkZWJ1ZygnX2NhbGxiYWNrJywgZGF0YSk7XG4gIHRoaXMuX2NsZWFudXAoKTtcblxuICBpZiAodGhpcy5hYm9ydGluZykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChkYXRhKSB7XG4gICAgZGVidWcoJ21lc3NhZ2UnLCBkYXRhKTtcbiAgICB0aGlzLmVtaXQoJ21lc3NhZ2UnLCBkYXRhKTtcbiAgfVxuICB0aGlzLmVtaXQoJ2Nsb3NlJywgbnVsbCwgJ25ldHdvcmsnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cbkpzb25wUmVjZWl2ZXIucHJvdG90eXBlLl9hYm9ydCA9IGZ1bmN0aW9uKGVycikge1xuICBkZWJ1ZygnX2Fib3J0JywgZXJyKTtcbiAgdGhpcy5fY2xlYW51cCgpO1xuICB0aGlzLmFib3J0aW5nID0gdHJ1ZTtcbiAgdGhpcy5lbWl0KCdjbG9zZScsIGVyci5jb2RlLCBlcnIubWVzc2FnZSk7XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG59O1xuXG5Kc29ucFJlY2VpdmVyLnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnX2NsZWFudXAnKTtcbiAgY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dElkKTtcbiAgaWYgKHRoaXMuc2NyaXB0Mikge1xuICAgIHRoaXMuc2NyaXB0Mi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuc2NyaXB0Mik7XG4gICAgdGhpcy5zY3JpcHQyID0gbnVsbDtcbiAgfVxuICBpZiAodGhpcy5zY3JpcHQpIHtcbiAgICB2YXIgc2NyaXB0ID0gdGhpcy5zY3JpcHQ7XG4gICAgLy8gVW5mb3J0dW5hdGVseSwgeW91IGNhbid0IHJlYWxseSBhYm9ydCBzY3JpcHQgbG9hZGluZyBvZlxuICAgIC8vIHRoZSBzY3JpcHQuXG4gICAgc2NyaXB0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcbiAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gc2NyaXB0Lm9uZXJyb3IgPVxuICAgICAgICBzY3JpcHQub25sb2FkID0gc2NyaXB0Lm9uY2xpY2sgPSBudWxsO1xuICAgIHRoaXMuc2NyaXB0ID0gbnVsbDtcbiAgfVxuICBkZWxldGUgZ2xvYmFsW3V0aWxzLldQcmVmaXhdW3RoaXMuaWRdO1xufTtcblxuSnNvbnBSZWNlaXZlci5wcm90b3R5cGUuX3NjcmlwdEVycm9yID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfc2NyaXB0RXJyb3InKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBpZiAodGhpcy5lcnJvclRpbWVyKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdGhpcy5lcnJvclRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICBpZiAoIXNlbGYubG9hZGVkT2theSkge1xuICAgICAgc2VsZi5fYWJvcnQobmV3IEVycm9yKCdKU09OUCBzY3JpcHQgbG9hZGVkIGFibm9ybWFsbHkgKG9uZXJyb3IpJykpO1xuICAgIH1cbiAgfSwgSnNvbnBSZWNlaXZlci5zY3JpcHRFcnJvclRpbWVvdXQpO1xufTtcblxuSnNvbnBSZWNlaXZlci5wcm90b3R5cGUuX2NyZWF0ZVNjcmlwdCA9IGZ1bmN0aW9uKHVybCkge1xuICBkZWJ1ZygnX2NyZWF0ZVNjcmlwdCcsIHVybCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHNjcmlwdCA9IHRoaXMuc2NyaXB0ID0gZ2xvYmFsLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICB2YXIgc2NyaXB0MjsgIC8vIE9wZXJhIHN5bmNocm9ub3VzIGxvYWQgdHJpY2suXG5cbiAgc2NyaXB0LmlkID0gJ2EnICsgcmFuZG9tLnN0cmluZyg4KTtcbiAgc2NyaXB0LnNyYyA9IHVybDtcbiAgc2NyaXB0LnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JztcbiAgc2NyaXB0LmNoYXJzZXQgPSAnVVRGLTgnO1xuICBzY3JpcHQub25lcnJvciA9IHRoaXMuX3NjcmlwdEVycm9yLmJpbmQodGhpcyk7XG4gIHNjcmlwdC5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICBkZWJ1Zygnb25sb2FkJyk7XG4gICAgc2VsZi5fYWJvcnQobmV3IEVycm9yKCdKU09OUCBzY3JpcHQgbG9hZGVkIGFibm9ybWFsbHkgKG9ubG9hZCknKSk7XG4gIH07XG5cbiAgLy8gSUU5IGZpcmVzICdlcnJvcicgZXZlbnQgYWZ0ZXIgb25yZWFkeXN0YXRlY2hhbmdlIG9yIGJlZm9yZSwgaW4gcmFuZG9tIG9yZGVyLlxuICAvLyBVc2UgbG9hZGVkT2theSB0byBkZXRlcm1pbmUgaWYgYWN0dWFsbHkgZXJyb3JlZFxuICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ29ucmVhZHlzdGF0ZWNoYW5nZScsIHNjcmlwdC5yZWFkeVN0YXRlKTtcbiAgICBpZiAoL2xvYWRlZHxjbG9zZWQvLnRlc3Qoc2NyaXB0LnJlYWR5U3RhdGUpKSB7XG4gICAgICBpZiAoc2NyaXB0ICYmIHNjcmlwdC5odG1sRm9yICYmIHNjcmlwdC5vbmNsaWNrKSB7XG4gICAgICAgIHNlbGYubG9hZGVkT2theSA9IHRydWU7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gSW4gSUUsIGFjdHVhbGx5IGV4ZWN1dGUgdGhlIHNjcmlwdC5cbiAgICAgICAgICBzY3JpcHQub25jbGljaygpO1xuICAgICAgICB9IGNhdGNoICh4KSB7XG4gICAgICAgICAgLy8gaW50ZW50aW9uYWxseSBlbXB0eVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc2NyaXB0KSB7XG4gICAgICAgIHNlbGYuX2Fib3J0KG5ldyBFcnJvcignSlNPTlAgc2NyaXB0IGxvYWRlZCBhYm5vcm1hbGx5IChvbnJlYWR5c3RhdGVjaGFuZ2UpJykpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgLy8gSUU6IGV2ZW50L2h0bWxGb3Ivb25jbGljayB0cmljay5cbiAgLy8gT25lIGNhbid0IHJlbHkgb24gcHJvcGVyIG9yZGVyIGZvciBvbnJlYWR5c3RhdGVjaGFuZ2UuIEluIG9yZGVyIHRvXG4gIC8vIG1ha2Ugc3VyZSwgc2V0IGEgJ2h0bWxGb3InIGFuZCAnZXZlbnQnIHByb3BlcnRpZXMsIHNvIHRoYXRcbiAgLy8gc2NyaXB0IGNvZGUgd2lsbCBiZSBpbnN0YWxsZWQgYXMgJ29uY2xpY2snIGhhbmRsZXIgZm9yIHRoZVxuICAvLyBzY3JpcHQgb2JqZWN0LiBMYXRlciwgb25yZWFkeXN0YXRlY2hhbmdlLCBtYW51YWxseSBleGVjdXRlIHRoaXNcbiAgLy8gY29kZS4gRkYgYW5kIENocm9tZSBkb2Vzbid0IHdvcmsgd2l0aCAnZXZlbnQnIGFuZCAnaHRtbEZvcidcbiAgLy8gc2V0LiBGb3IgcmVmZXJlbmNlIHNlZTpcbiAgLy8gICBodHRwOi8vamF1Ym91cmcubmV0LzIwMTAvMDcvbG9hZGluZy1zY3JpcHQtYXMtb25jbGljay1oYW5kbGVyLW9mLmh0bWxcbiAgLy8gQWxzbywgcmVhZCBvbiB0aGF0IGFib3V0IHNjcmlwdCBvcmRlcmluZzpcbiAgLy8gICBodHRwOi8vd2lraS53aGF0d2cub3JnL3dpa2kvRHluYW1pY19TY3JpcHRfRXhlY3V0aW9uX09yZGVyXG4gIGlmICh0eXBlb2Ygc2NyaXB0LmFzeW5jID09PSAndW5kZWZpbmVkJyAmJiBnbG9iYWwuZG9jdW1lbnQuYXR0YWNoRXZlbnQpIHtcbiAgICAvLyBBY2NvcmRpbmcgdG8gbW96aWxsYSBkb2NzLCBpbiByZWNlbnQgYnJvd3NlcnMgc2NyaXB0LmFzeW5jIGRlZmF1bHRzXG4gICAgLy8gdG8gJ3RydWUnLCBzbyB3ZSBtYXkgdXNlIGl0IHRvIGRldGVjdCBhIGdvb2QgYnJvd3NlcjpcbiAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi9IVE1ML0VsZW1lbnQvc2NyaXB0XG4gICAgaWYgKCFicm93c2VyLmlzT3BlcmEoKSkge1xuICAgICAgLy8gTmFpdmVseSBhc3N1bWUgd2UncmUgaW4gSUVcbiAgICAgIHRyeSB7XG4gICAgICAgIHNjcmlwdC5odG1sRm9yID0gc2NyaXB0LmlkO1xuICAgICAgICBzY3JpcHQuZXZlbnQgPSAnb25jbGljayc7XG4gICAgICB9IGNhdGNoICh4KSB7XG4gICAgICAgIC8vIGludGVudGlvbmFsbHkgZW1wdHlcbiAgICAgIH1cbiAgICAgIHNjcmlwdC5hc3luYyA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIE9wZXJhLCBzZWNvbmQgc3luYyBzY3JpcHQgaGFja1xuICAgICAgc2NyaXB0MiA9IHRoaXMuc2NyaXB0MiA9IGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICAgIHNjcmlwdDIudGV4dCA9IFwidHJ5e3ZhciBhID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ1wiICsgc2NyaXB0LmlkICsgXCInKTsgaWYoYSlhLm9uZXJyb3IoKTt9Y2F0Y2goeCl7fTtcIjtcbiAgICAgIHNjcmlwdC5hc3luYyA9IHNjcmlwdDIuYXN5bmMgPSBmYWxzZTtcbiAgICB9XG4gIH1cbiAgaWYgKHR5cGVvZiBzY3JpcHQuYXN5bmMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgc2NyaXB0LmFzeW5jID0gdHJ1ZTtcbiAgfVxuXG4gIHZhciBoZWFkID0gZ2xvYmFsLmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF07XG4gIGhlYWQuaW5zZXJ0QmVmb3JlKHNjcmlwdCwgaGVhZC5maXJzdENoaWxkKTtcbiAgaWYgKHNjcmlwdDIpIHtcbiAgICBoZWFkLmluc2VydEJlZm9yZShzY3JpcHQyLCBoZWFkLmZpcnN0Q2hpbGQpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEpzb25wUmVjZWl2ZXI7XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4uLy4uL3V0aWxzL2Jyb3dzZXJcIjo0NCxcIi4uLy4uL3V0aWxzL2lmcmFtZVwiOjQ3LFwiLi4vLi4vdXRpbHMvcmFuZG9tXCI6NTAsXCIuLi8uLi91dGlscy91cmxcIjo1MixcImRlYnVnXCI6NTUsXCJldmVudHNcIjozLFwiaW5oZXJpdHNcIjo1N31dLDMyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAocHJvY2Vzcyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnJlY2VpdmVyOnhocicpO1xufVxuXG5mdW5jdGlvbiBYaHJSZWNlaXZlcih1cmwsIEFqYXhPYmplY3QpIHtcbiAgZGVidWcodXJsKTtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG4gIHZhciBzZWxmID0gdGhpcztcblxuICB0aGlzLmJ1ZmZlclBvc2l0aW9uID0gMDtcblxuICB0aGlzLnhvID0gbmV3IEFqYXhPYmplY3QoJ1BPU1QnLCB1cmwsIG51bGwpO1xuICB0aGlzLnhvLm9uKCdjaHVuaycsIHRoaXMuX2NodW5rSGFuZGxlci5iaW5kKHRoaXMpKTtcbiAgdGhpcy54by5vbmNlKCdmaW5pc2gnLCBmdW5jdGlvbihzdGF0dXMsIHRleHQpIHtcbiAgICBkZWJ1ZygnZmluaXNoJywgc3RhdHVzLCB0ZXh0KTtcbiAgICBzZWxmLl9jaHVua0hhbmRsZXIoc3RhdHVzLCB0ZXh0KTtcbiAgICBzZWxmLnhvID0gbnVsbDtcbiAgICB2YXIgcmVhc29uID0gc3RhdHVzID09PSAyMDAgPyAnbmV0d29yaycgOiAncGVybWFuZW50JztcbiAgICBkZWJ1ZygnY2xvc2UnLCByZWFzb24pO1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCBudWxsLCByZWFzb24pO1xuICAgIHNlbGYuX2NsZWFudXAoKTtcbiAgfSk7XG59XG5cbmluaGVyaXRzKFhoclJlY2VpdmVyLCBFdmVudEVtaXR0ZXIpO1xuXG5YaHJSZWNlaXZlci5wcm90b3R5cGUuX2NodW5rSGFuZGxlciA9IGZ1bmN0aW9uKHN0YXR1cywgdGV4dCkge1xuICBkZWJ1ZygnX2NodW5rSGFuZGxlcicsIHN0YXR1cyk7XG4gIGlmIChzdGF0dXMgIT09IDIwMCB8fCAhdGV4dCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGZvciAodmFyIGlkeCA9IC0xOyA7IHRoaXMuYnVmZmVyUG9zaXRpb24gKz0gaWR4ICsgMSkge1xuICAgIHZhciBidWYgPSB0ZXh0LnNsaWNlKHRoaXMuYnVmZmVyUG9zaXRpb24pO1xuICAgIGlkeCA9IGJ1Zi5pbmRleE9mKCdcXG4nKTtcbiAgICBpZiAoaWR4ID09PSAtMSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHZhciBtc2cgPSBidWYuc2xpY2UoMCwgaWR4KTtcbiAgICBpZiAobXNnKSB7XG4gICAgICBkZWJ1ZygnbWVzc2FnZScsIG1zZyk7XG4gICAgICB0aGlzLmVtaXQoJ21lc3NhZ2UnLCBtc2cpO1xuICAgIH1cbiAgfVxufTtcblxuWGhyUmVjZWl2ZXIucHJvdG90eXBlLl9jbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfY2xlYW51cCcpO1xuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xufTtcblxuWGhyUmVjZWl2ZXIucHJvdG90eXBlLmFib3J0ID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdhYm9ydCcpO1xuICBpZiAodGhpcy54bykge1xuICAgIHRoaXMueG8uY2xvc2UoKTtcbiAgICBkZWJ1ZygnY2xvc2UnKTtcbiAgICB0aGlzLmVtaXQoJ2Nsb3NlJywgbnVsbCwgJ3VzZXInKTtcbiAgICB0aGlzLnhvID0gbnVsbDtcbiAgfVxuICB0aGlzLl9jbGVhbnVwKCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFhoclJlY2VpdmVyO1xuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0pXG5cbn0se1wiZGVidWdcIjo1NSxcImV2ZW50c1wiOjMsXCJpbmhlcml0c1wiOjU3fV0sMzM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzLGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciByYW5kb20gPSByZXF1aXJlKCcuLi8uLi91dGlscy9yYW5kb20nKVxuICAsIHVybFV0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvdXJsJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnNlbmRlcjpqc29ucCcpO1xufVxuXG52YXIgZm9ybSwgYXJlYTtcblxuZnVuY3Rpb24gY3JlYXRlSWZyYW1lKGlkKSB7XG4gIGRlYnVnKCdjcmVhdGVJZnJhbWUnLCBpZCk7XG4gIHRyeSB7XG4gICAgLy8gaWU2IGR5bmFtaWMgaWZyYW1lcyB3aXRoIHRhcmdldD1cIlwiIHN1cHBvcnQgKHRoYW5rcyBDaHJpcyBMYW1iYWNoZXIpXG4gICAgcmV0dXJuIGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCc8aWZyYW1lIG5hbWU9XCInICsgaWQgKyAnXCI+Jyk7XG4gIH0gY2F0Y2ggKHgpIHtcbiAgICB2YXIgaWZyYW1lID0gZ2xvYmFsLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpO1xuICAgIGlmcmFtZS5uYW1lID0gaWQ7XG4gICAgcmV0dXJuIGlmcmFtZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVGb3JtKCkge1xuICBkZWJ1ZygnY3JlYXRlRm9ybScpO1xuICBmb3JtID0gZ2xvYmFsLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgZm9ybS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICBmb3JtLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgZm9ybS5tZXRob2QgPSAnUE9TVCc7XG4gIGZvcm0uZW5jdHlwZSA9ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnO1xuICBmb3JtLmFjY2VwdENoYXJzZXQgPSAnVVRGLTgnO1xuXG4gIGFyZWEgPSBnbG9iYWwuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcbiAgYXJlYS5uYW1lID0gJ2QnO1xuICBmb3JtLmFwcGVuZENoaWxkKGFyZWEpO1xuXG4gIGdsb2JhbC5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGZvcm0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVybCwgcGF5bG9hZCwgY2FsbGJhY2spIHtcbiAgZGVidWcodXJsLCBwYXlsb2FkKTtcbiAgaWYgKCFmb3JtKSB7XG4gICAgY3JlYXRlRm9ybSgpO1xuICB9XG4gIHZhciBpZCA9ICdhJyArIHJhbmRvbS5zdHJpbmcoOCk7XG4gIGZvcm0udGFyZ2V0ID0gaWQ7XG4gIGZvcm0uYWN0aW9uID0gdXJsVXRpbHMuYWRkUXVlcnkodXJsVXRpbHMuYWRkUGF0aCh1cmwsICcvanNvbnBfc2VuZCcpLCAnaT0nICsgaWQpO1xuXG4gIHZhciBpZnJhbWUgPSBjcmVhdGVJZnJhbWUoaWQpO1xuICBpZnJhbWUuaWQgPSBpZDtcbiAgaWZyYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIGZvcm0uYXBwZW5kQ2hpbGQoaWZyYW1lKTtcblxuICB0cnkge1xuICAgIGFyZWEudmFsdWUgPSBwYXlsb2FkO1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gc2VyaW91c2x5IGJyb2tlbiBicm93c2VycyBnZXQgaGVyZVxuICB9XG4gIGZvcm0uc3VibWl0KCk7XG5cbiAgdmFyIGNvbXBsZXRlZCA9IGZ1bmN0aW9uKGVycikge1xuICAgIGRlYnVnKCdjb21wbGV0ZWQnLCBpZCwgZXJyKTtcbiAgICBpZiAoIWlmcmFtZS5vbmVycm9yKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmcmFtZS5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBpZnJhbWUub25lcnJvciA9IGlmcmFtZS5vbmxvYWQgPSBudWxsO1xuICAgIC8vIE9wZXJhIG1pbmkgZG9lc24ndCBsaWtlIGlmIHdlIEdDIGlmcmFtZVxuICAgIC8vIGltbWVkaWF0ZWx5LCB0aHVzIHRoaXMgdGltZW91dC5cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgZGVidWcoJ2NsZWFuaW5nIHVwJywgaWQpO1xuICAgICAgaWZyYW1lLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbiAgICAgIGlmcmFtZSA9IG51bGw7XG4gICAgfSwgNTAwKTtcbiAgICBhcmVhLnZhbHVlID0gJyc7XG4gICAgLy8gSXQgaXMgbm90IHBvc3NpYmxlIHRvIGRldGVjdCBpZiB0aGUgaWZyYW1lIHN1Y2NlZWRlZCBvclxuICAgIC8vIGZhaWxlZCB0byBzdWJtaXQgb3VyIGZvcm0uXG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfTtcbiAgaWZyYW1lLm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgICBkZWJ1Zygnb25lcnJvcicsIGlkKTtcbiAgICBjb21wbGV0ZWQoKTtcbiAgfTtcbiAgaWZyYW1lLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdvbmxvYWQnLCBpZCk7XG4gICAgY29tcGxldGVkKCk7XG4gIH07XG4gIGlmcmFtZS5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbihlKSB7XG4gICAgZGVidWcoJ29ucmVhZHlzdGF0ZWNoYW5nZScsIGlkLCBpZnJhbWUucmVhZHlTdGF0ZSwgZSk7XG4gICAgaWYgKGlmcmFtZS5yZWFkeVN0YXRlID09PSAnY29tcGxldGUnKSB7XG4gICAgICBjb21wbGV0ZWQoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBkZWJ1ZygnYWJvcnRlZCcsIGlkKTtcbiAgICBjb21wbGV0ZWQobmV3IEVycm9yKCdBYm9ydGVkJykpO1xuICB9O1xufTtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9LHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se1wiLi4vLi4vdXRpbHMvcmFuZG9tXCI6NTAsXCIuLi8uLi91dGlscy91cmxcIjo1MixcImRlYnVnXCI6NTV9XSwzNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3MsZ2xvYmFsKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIGV2ZW50VXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy9ldmVudCcpXG4gICwgYnJvd3NlciA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2Jyb3dzZXInKVxuICAsIHVybFV0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvdXJsJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnNlbmRlcjp4ZHInKTtcbn1cblxuLy8gUmVmZXJlbmNlczpcbi8vICAgaHR0cDovL2FqYXhpYW4uY29tL2FyY2hpdmVzLzEwMC1saW5lLWFqYXgtd3JhcHBlclxuLy8gICBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvY2MyODgwNjAodj1WUy44NSkuYXNweFxuXG5mdW5jdGlvbiBYRFJPYmplY3QobWV0aG9kLCB1cmwsIHBheWxvYWQpIHtcbiAgZGVidWcobWV0aG9kLCB1cmwpO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgc2VsZi5fc3RhcnQobWV0aG9kLCB1cmwsIHBheWxvYWQpO1xuICB9LCAwKTtcbn1cblxuaW5oZXJpdHMoWERST2JqZWN0LCBFdmVudEVtaXR0ZXIpO1xuXG5YRFJPYmplY3QucHJvdG90eXBlLl9zdGFydCA9IGZ1bmN0aW9uKG1ldGhvZCwgdXJsLCBwYXlsb2FkKSB7XG4gIGRlYnVnKCdfc3RhcnQnKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgeGRyID0gbmV3IGdsb2JhbC5YRG9tYWluUmVxdWVzdCgpO1xuICAvLyBJRSBjYWNoZXMgZXZlbiBQT1NUc1xuICB1cmwgPSB1cmxVdGlscy5hZGRRdWVyeSh1cmwsICd0PScgKyAoK25ldyBEYXRlKCkpKTtcblxuICB4ZHIub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdvbmVycm9yJyk7XG4gICAgc2VsZi5fZXJyb3IoKTtcbiAgfTtcbiAgeGRyLm9udGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdvbnRpbWVvdXQnKTtcbiAgICBzZWxmLl9lcnJvcigpO1xuICB9O1xuICB4ZHIub25wcm9ncmVzcyA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdwcm9ncmVzcycsIHhkci5yZXNwb25zZVRleHQpO1xuICAgIHNlbGYuZW1pdCgnY2h1bmsnLCAyMDAsIHhkci5yZXNwb25zZVRleHQpO1xuICB9O1xuICB4ZHIub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ2xvYWQnKTtcbiAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcsIDIwMCwgeGRyLnJlc3BvbnNlVGV4dCk7XG4gICAgc2VsZi5fY2xlYW51cChmYWxzZSk7XG4gIH07XG4gIHRoaXMueGRyID0geGRyO1xuICB0aGlzLnVubG9hZFJlZiA9IGV2ZW50VXRpbHMudW5sb2FkQWRkKGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuX2NsZWFudXAodHJ1ZSk7XG4gIH0pO1xuICB0cnkge1xuICAgIC8vIEZhaWxzIHdpdGggQWNjZXNzRGVuaWVkIGlmIHBvcnQgbnVtYmVyIGlzIGJvZ3VzXG4gICAgdGhpcy54ZHIub3BlbihtZXRob2QsIHVybCk7XG4gICAgaWYgKHRoaXMudGltZW91dCkge1xuICAgICAgdGhpcy54ZHIudGltZW91dCA9IHRoaXMudGltZW91dDtcbiAgICB9XG4gICAgdGhpcy54ZHIuc2VuZChwYXlsb2FkKTtcbiAgfSBjYXRjaCAoeCkge1xuICAgIHRoaXMuX2Vycm9yKCk7XG4gIH1cbn07XG5cblhEUk9iamVjdC5wcm90b3R5cGUuX2Vycm9yID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuZW1pdCgnZmluaXNoJywgMCwgJycpO1xuICB0aGlzLl9jbGVhbnVwKGZhbHNlKTtcbn07XG5cblhEUk9iamVjdC5wcm90b3R5cGUuX2NsZWFudXAgPSBmdW5jdGlvbihhYm9ydCkge1xuICBkZWJ1ZygnY2xlYW51cCcsIGFib3J0KTtcbiAgaWYgKCF0aGlzLnhkcikge1xuICAgIHJldHVybjtcbiAgfVxuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICBldmVudFV0aWxzLnVubG9hZERlbCh0aGlzLnVubG9hZFJlZik7XG5cbiAgdGhpcy54ZHIub250aW1lb3V0ID0gdGhpcy54ZHIub25lcnJvciA9IHRoaXMueGRyLm9ucHJvZ3Jlc3MgPSB0aGlzLnhkci5vbmxvYWQgPSBudWxsO1xuICBpZiAoYWJvcnQpIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy54ZHIuYWJvcnQoKTtcbiAgICB9IGNhdGNoICh4KSB7XG4gICAgICAvLyBpbnRlbnRpb25hbGx5IGVtcHR5XG4gICAgfVxuICB9XG4gIHRoaXMudW5sb2FkUmVmID0gdGhpcy54ZHIgPSBudWxsO1xufTtcblxuWERST2JqZWN0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5fY2xlYW51cCh0cnVlKTtcbn07XG5cbi8vIElFIDgvOSBpZiB0aGUgcmVxdWVzdCB0YXJnZXQgdXNlcyB0aGUgc2FtZSBzY2hlbWUgLSAjNzlcblhEUk9iamVjdC5lbmFibGVkID0gISEoZ2xvYmFsLlhEb21haW5SZXF1ZXN0ICYmIGJyb3dzZXIuaGFzRG9tYWluKCkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFhEUk9iamVjdDtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9LHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se1wiLi4vLi4vdXRpbHMvYnJvd3NlclwiOjQ0LFwiLi4vLi4vdXRpbHMvZXZlbnRcIjo0NixcIi4uLy4uL3V0aWxzL3VybFwiOjUyLFwiZGVidWdcIjo1NSxcImV2ZW50c1wiOjMsXCJpbmhlcml0c1wiOjU3fV0sMzU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgWGhyRHJpdmVyID0gcmVxdWlyZSgnLi4vZHJpdmVyL3hocicpXG4gIDtcblxuZnVuY3Rpb24gWEhSQ29yc09iamVjdChtZXRob2QsIHVybCwgcGF5bG9hZCwgb3B0cykge1xuICBYaHJEcml2ZXIuY2FsbCh0aGlzLCBtZXRob2QsIHVybCwgcGF5bG9hZCwgb3B0cyk7XG59XG5cbmluaGVyaXRzKFhIUkNvcnNPYmplY3QsIFhockRyaXZlcik7XG5cblhIUkNvcnNPYmplY3QuZW5hYmxlZCA9IFhockRyaXZlci5lbmFibGVkICYmIFhockRyaXZlci5zdXBwb3J0c0NPUlM7XG5cbm1vZHVsZS5leHBvcnRzID0gWEhSQ29yc09iamVjdDtcblxufSx7XCIuLi9kcml2ZXIveGhyXCI6MTcsXCJpbmhlcml0c1wiOjU3fV0sMzY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gICwgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gIDtcblxuZnVuY3Rpb24gWEhSRmFrZSgvKiBtZXRob2QsIHVybCwgcGF5bG9hZCwgb3B0cyAqLykge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHRoaXMudG8gPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuZW1pdCgnZmluaXNoJywgMjAwLCAne30nKTtcbiAgfSwgWEhSRmFrZS50aW1lb3V0KTtcbn1cblxuaW5oZXJpdHMoWEhSRmFrZSwgRXZlbnRFbWl0dGVyKTtcblxuWEhSRmFrZS5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgY2xlYXJUaW1lb3V0KHRoaXMudG8pO1xufTtcblxuWEhSRmFrZS50aW1lb3V0ID0gMjAwMDtcblxubW9kdWxlLmV4cG9ydHMgPSBYSFJGYWtlO1xuXG59LHtcImV2ZW50c1wiOjMsXCJpbmhlcml0c1wiOjU3fV0sMzc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgWGhyRHJpdmVyID0gcmVxdWlyZSgnLi4vZHJpdmVyL3hocicpXG4gIDtcblxuZnVuY3Rpb24gWEhSTG9jYWxPYmplY3QobWV0aG9kLCB1cmwsIHBheWxvYWQgLyosIG9wdHMgKi8pIHtcbiAgWGhyRHJpdmVyLmNhbGwodGhpcywgbWV0aG9kLCB1cmwsIHBheWxvYWQsIHtcbiAgICBub0NyZWRlbnRpYWxzOiB0cnVlXG4gIH0pO1xufVxuXG5pbmhlcml0cyhYSFJMb2NhbE9iamVjdCwgWGhyRHJpdmVyKTtcblxuWEhSTG9jYWxPYmplY3QuZW5hYmxlZCA9IFhockRyaXZlci5lbmFibGVkO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFhIUkxvY2FsT2JqZWN0O1xuXG59LHtcIi4uL2RyaXZlci94aHJcIjoxNyxcImluaGVyaXRzXCI6NTd9XSwzODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy9ldmVudCcpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy91cmwnKVxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIFdlYnNvY2tldERyaXZlciA9IHJlcXVpcmUoJy4vZHJpdmVyL3dlYnNvY2tldCcpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDp3ZWJzb2NrZXQnKTtcbn1cblxuZnVuY3Rpb24gV2ViU29ja2V0VHJhbnNwb3J0KHRyYW5zVXJsLCBpZ25vcmUsIG9wdGlvbnMpIHtcbiAgaWYgKCFXZWJTb2NrZXRUcmFuc3BvcnQuZW5hYmxlZCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cblxuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcbiAgZGVidWcoJ2NvbnN0cnVjdG9yJywgdHJhbnNVcmwpO1xuXG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHVybCA9IHVybFV0aWxzLmFkZFBhdGgodHJhbnNVcmwsICcvd2Vic29ja2V0Jyk7XG4gIGlmICh1cmwuc2xpY2UoMCwgNSkgPT09ICdodHRwcycpIHtcbiAgICB1cmwgPSAnd3NzJyArIHVybC5zbGljZSg1KTtcbiAgfSBlbHNlIHtcbiAgICB1cmwgPSAnd3MnICsgdXJsLnNsaWNlKDQpO1xuICB9XG4gIHRoaXMudXJsID0gdXJsO1xuXG4gIHRoaXMud3MgPSBuZXcgV2Vic29ja2V0RHJpdmVyKHRoaXMudXJsLCBbXSwgb3B0aW9ucyk7XG4gIHRoaXMud3Mub25tZXNzYWdlID0gZnVuY3Rpb24oZSkge1xuICAgIGRlYnVnKCdtZXNzYWdlIGV2ZW50JywgZS5kYXRhKTtcbiAgICBzZWxmLmVtaXQoJ21lc3NhZ2UnLCBlLmRhdGEpO1xuICB9O1xuICAvLyBGaXJlZm94IGhhcyBhbiBpbnRlcmVzdGluZyBidWcuIElmIGEgd2Vic29ja2V0IGNvbm5lY3Rpb24gaXNcbiAgLy8gY3JlYXRlZCBhZnRlciBvbnVubG9hZCwgaXQgc3RheXMgYWxpdmUgZXZlbiB3aGVuIHVzZXJcbiAgLy8gbmF2aWdhdGVzIGF3YXkgZnJvbSB0aGUgcGFnZS4gSW4gc3VjaCBzaXR1YXRpb24gbGV0J3MgbGllIC1cbiAgLy8gbGV0J3Mgbm90IG9wZW4gdGhlIHdzIGNvbm5lY3Rpb24gYXQgYWxsLiBTZWU6XG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zb2NranMvc29ja2pzLWNsaWVudC9pc3N1ZXMvMjhcbiAgLy8gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9Njk2MDg1XG4gIHRoaXMudW5sb2FkUmVmID0gdXRpbHMudW5sb2FkQWRkKGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCd1bmxvYWQnKTtcbiAgICBzZWxmLndzLmNsb3NlKCk7XG4gIH0pO1xuICB0aGlzLndzLm9uY2xvc2UgPSBmdW5jdGlvbihlKSB7XG4gICAgZGVidWcoJ2Nsb3NlIGV2ZW50JywgZS5jb2RlLCBlLnJlYXNvbik7XG4gICAgc2VsZi5lbWl0KCdjbG9zZScsIGUuY29kZSwgZS5yZWFzb24pO1xuICAgIHNlbGYuX2NsZWFudXAoKTtcbiAgfTtcbiAgdGhpcy53cy5vbmVycm9yID0gZnVuY3Rpb24oZSkge1xuICAgIGRlYnVnKCdlcnJvciBldmVudCcsIGUpO1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCAxMDA2LCAnV2ViU29ja2V0IGNvbm5lY3Rpb24gYnJva2VuJyk7XG4gICAgc2VsZi5fY2xlYW51cCgpO1xuICB9O1xufVxuXG5pbmhlcml0cyhXZWJTb2NrZXRUcmFuc3BvcnQsIEV2ZW50RW1pdHRlcik7XG5cbldlYlNvY2tldFRyYW5zcG9ydC5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgdmFyIG1zZyA9ICdbJyArIGRhdGEgKyAnXSc7XG4gIGRlYnVnKCdzZW5kJywgbXNnKTtcbiAgdGhpcy53cy5zZW5kKG1zZyk7XG59O1xuXG5XZWJTb2NrZXRUcmFuc3BvcnQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdjbG9zZScpO1xuICB2YXIgd3MgPSB0aGlzLndzO1xuICB0aGlzLl9jbGVhbnVwKCk7XG4gIGlmICh3cykge1xuICAgIHdzLmNsb3NlKCk7XG4gIH1cbn07XG5cbldlYlNvY2tldFRyYW5zcG9ydC5wcm90b3R5cGUuX2NsZWFudXAgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ19jbGVhbnVwJyk7XG4gIHZhciB3cyA9IHRoaXMud3M7XG4gIGlmICh3cykge1xuICAgIHdzLm9ubWVzc2FnZSA9IHdzLm9uY2xvc2UgPSB3cy5vbmVycm9yID0gbnVsbDtcbiAgfVxuICB1dGlscy51bmxvYWREZWwodGhpcy51bmxvYWRSZWYpO1xuICB0aGlzLnVubG9hZFJlZiA9IHRoaXMud3MgPSBudWxsO1xuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xufTtcblxuV2ViU29ja2V0VHJhbnNwb3J0LmVuYWJsZWQgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ2VuYWJsZWQnKTtcbiAgcmV0dXJuICEhV2Vic29ja2V0RHJpdmVyO1xufTtcbldlYlNvY2tldFRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ3dlYnNvY2tldCc7XG5cbi8vIEluIHRoZW9yeSwgd3Mgc2hvdWxkIHJlcXVpcmUgMSByb3VuZCB0cmlwLiBCdXQgaW4gY2hyb21lLCB0aGlzIGlzXG4vLyBub3QgdmVyeSBzdGFibGUgb3ZlciBTU0wuIE1vc3QgbGlrZWx5IGEgd3MgY29ubmVjdGlvbiByZXF1aXJlcyBhXG4vLyBzZXBhcmF0ZSBTU0wgY29ubmVjdGlvbiwgaW4gd2hpY2ggY2FzZSAyIHJvdW5kIHRyaXBzIGFyZSBhblxuLy8gYWJzb2x1dGUgbWludW11bS5cbldlYlNvY2tldFRyYW5zcG9ydC5yb3VuZFRyaXBzID0gMjtcblxubW9kdWxlLmV4cG9ydHMgPSBXZWJTb2NrZXRUcmFuc3BvcnQ7XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSlcblxufSx7XCIuLi91dGlscy9ldmVudFwiOjQ2LFwiLi4vdXRpbHMvdXJsXCI6NTIsXCIuL2RyaXZlci93ZWJzb2NrZXRcIjoxOSxcImRlYnVnXCI6NTUsXCJldmVudHNcIjozLFwiaW5oZXJpdHNcIjo1N31dLDM5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEFqYXhCYXNlZFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vbGliL2FqYXgtYmFzZWQnKVxuICAsIFhkclN0cmVhbWluZ1RyYW5zcG9ydCA9IHJlcXVpcmUoJy4veGRyLXN0cmVhbWluZycpXG4gICwgWGhyUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL3hocicpXG4gICwgWERST2JqZWN0ID0gcmVxdWlyZSgnLi9zZW5kZXIveGRyJylcbiAgO1xuXG5mdW5jdGlvbiBYZHJQb2xsaW5nVHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghWERST2JqZWN0LmVuYWJsZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zcG9ydCBjcmVhdGVkIHdoZW4gZGlzYWJsZWQnKTtcbiAgfVxuICBBamF4QmFzZWRUcmFuc3BvcnQuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy94aHInLCBYaHJSZWNlaXZlciwgWERST2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoWGRyUG9sbGluZ1RyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuWGRyUG9sbGluZ1RyYW5zcG9ydC5lbmFibGVkID0gWGRyU3RyZWFtaW5nVHJhbnNwb3J0LmVuYWJsZWQ7XG5YZHJQb2xsaW5nVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAneGRyLXBvbGxpbmcnO1xuWGRyUG9sbGluZ1RyYW5zcG9ydC5yb3VuZFRyaXBzID0gMjsgLy8gcHJlZmxpZ2h0LCBhamF4XG5cbm1vZHVsZS5leHBvcnRzID0gWGRyUG9sbGluZ1RyYW5zcG9ydDtcblxufSx7XCIuL2xpYi9hamF4LWJhc2VkXCI6MjQsXCIuL3JlY2VpdmVyL3hoclwiOjMyLFwiLi9zZW5kZXIveGRyXCI6MzQsXCIuL3hkci1zdHJlYW1pbmdcIjo0MCxcImluaGVyaXRzXCI6NTd9XSw0MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBBamF4QmFzZWRUcmFuc3BvcnQgPSByZXF1aXJlKCcuL2xpYi9hamF4LWJhc2VkJylcbiAgLCBYaHJSZWNlaXZlciA9IHJlcXVpcmUoJy4vcmVjZWl2ZXIveGhyJylcbiAgLCBYRFJPYmplY3QgPSByZXF1aXJlKCcuL3NlbmRlci94ZHInKVxuICA7XG5cbi8vIEFjY29yZGluZyB0bzpcbi8vICAgaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xNjQxNTA3L2RldGVjdC1icm93c2VyLXN1cHBvcnQtZm9yLWNyb3NzLWRvbWFpbi14bWxodHRwcmVxdWVzdHNcbi8vICAgaHR0cDovL2hhY2tzLm1vemlsbGEub3JnLzIwMDkvMDcvY3Jvc3Mtc2l0ZS14bWxodHRwcmVxdWVzdC13aXRoLWNvcnMvXG5cbmZ1bmN0aW9uIFhkclN0cmVhbWluZ1RyYW5zcG9ydCh0cmFuc1VybCkge1xuICBpZiAoIVhEUk9iamVjdC5lbmFibGVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cbiAgQWpheEJhc2VkVHJhbnNwb3J0LmNhbGwodGhpcywgdHJhbnNVcmwsICcveGhyX3N0cmVhbWluZycsIFhoclJlY2VpdmVyLCBYRFJPYmplY3QpO1xufVxuXG5pbmhlcml0cyhYZHJTdHJlYW1pbmdUcmFuc3BvcnQsIEFqYXhCYXNlZFRyYW5zcG9ydCk7XG5cblhkclN0cmVhbWluZ1RyYW5zcG9ydC5lbmFibGVkID0gZnVuY3Rpb24oaW5mbykge1xuICBpZiAoaW5mby5jb29raWVfbmVlZGVkIHx8IGluZm8ubnVsbE9yaWdpbikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gWERST2JqZWN0LmVuYWJsZWQgJiYgaW5mby5zYW1lU2NoZW1lO1xufTtcblxuWGRyU3RyZWFtaW5nVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAneGRyLXN0cmVhbWluZyc7XG5YZHJTdHJlYW1pbmdUcmFuc3BvcnQucm91bmRUcmlwcyA9IDI7IC8vIHByZWZsaWdodCwgYWpheFxuXG5tb2R1bGUuZXhwb3J0cyA9IFhkclN0cmVhbWluZ1RyYW5zcG9ydDtcblxufSx7XCIuL2xpYi9hamF4LWJhc2VkXCI6MjQsXCIuL3JlY2VpdmVyL3hoclwiOjMyLFwiLi9zZW5kZXIveGRyXCI6MzQsXCJpbmhlcml0c1wiOjU3fV0sNDE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgQWpheEJhc2VkVHJhbnNwb3J0ID0gcmVxdWlyZSgnLi9saWIvYWpheC1iYXNlZCcpXG4gICwgWGhyUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL3hocicpXG4gICwgWEhSQ29yc09iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hoci1jb3JzJylcbiAgLCBYSFJMb2NhbE9iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hoci1sb2NhbCcpXG4gIDtcblxuZnVuY3Rpb24gWGhyUG9sbGluZ1RyYW5zcG9ydCh0cmFuc1VybCkge1xuICBpZiAoIVhIUkxvY2FsT2JqZWN0LmVuYWJsZWQgJiYgIVhIUkNvcnNPYmplY3QuZW5hYmxlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG4gIEFqYXhCYXNlZFRyYW5zcG9ydC5jYWxsKHRoaXMsIHRyYW5zVXJsLCAnL3hocicsIFhoclJlY2VpdmVyLCBYSFJDb3JzT2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoWGhyUG9sbGluZ1RyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuWGhyUG9sbGluZ1RyYW5zcG9ydC5lbmFibGVkID0gZnVuY3Rpb24oaW5mbykge1xuICBpZiAoaW5mby5udWxsT3JpZ2luKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKFhIUkxvY2FsT2JqZWN0LmVuYWJsZWQgJiYgaW5mby5zYW1lT3JpZ2luKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIFhIUkNvcnNPYmplY3QuZW5hYmxlZDtcbn07XG5cblhoclBvbGxpbmdUcmFuc3BvcnQudHJhbnNwb3J0TmFtZSA9ICd4aHItcG9sbGluZyc7XG5YaHJQb2xsaW5nVHJhbnNwb3J0LnJvdW5kVHJpcHMgPSAyOyAvLyBwcmVmbGlnaHQsIGFqYXhcblxubW9kdWxlLmV4cG9ydHMgPSBYaHJQb2xsaW5nVHJhbnNwb3J0O1xuXG59LHtcIi4vbGliL2FqYXgtYmFzZWRcIjoyNCxcIi4vcmVjZWl2ZXIveGhyXCI6MzIsXCIuL3NlbmRlci94aHItY29yc1wiOjM1LFwiLi9zZW5kZXIveGhyLWxvY2FsXCI6MzcsXCJpbmhlcml0c1wiOjU3fV0sNDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChnbG9iYWwpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgQWpheEJhc2VkVHJhbnNwb3J0ID0gcmVxdWlyZSgnLi9saWIvYWpheC1iYXNlZCcpXG4gICwgWGhyUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL3hocicpXG4gICwgWEhSQ29yc09iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hoci1jb3JzJylcbiAgLCBYSFJMb2NhbE9iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hoci1sb2NhbCcpXG4gICwgYnJvd3NlciA9IHJlcXVpcmUoJy4uL3V0aWxzL2Jyb3dzZXInKVxuICA7XG5cbmZ1bmN0aW9uIFhoclN0cmVhbWluZ1RyYW5zcG9ydCh0cmFuc1VybCkge1xuICBpZiAoIVhIUkxvY2FsT2JqZWN0LmVuYWJsZWQgJiYgIVhIUkNvcnNPYmplY3QuZW5hYmxlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG4gIEFqYXhCYXNlZFRyYW5zcG9ydC5jYWxsKHRoaXMsIHRyYW5zVXJsLCAnL3hocl9zdHJlYW1pbmcnLCBYaHJSZWNlaXZlciwgWEhSQ29yc09iamVjdCk7XG59XG5cbmluaGVyaXRzKFhoclN0cmVhbWluZ1RyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuWGhyU3RyZWFtaW5nVHJhbnNwb3J0LmVuYWJsZWQgPSBmdW5jdGlvbihpbmZvKSB7XG4gIGlmIChpbmZvLm51bGxPcmlnaW4pIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy8gT3BlcmEgZG9lc24ndCBzdXBwb3J0IHhoci1zdHJlYW1pbmcgIzYwXG4gIC8vIEJ1dCBpdCBtaWdodCBiZSBhYmxlIHRvICM5MlxuICBpZiAoYnJvd3Nlci5pc09wZXJhKCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gWEhSQ29yc09iamVjdC5lbmFibGVkO1xufTtcblxuWGhyU3RyZWFtaW5nVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAneGhyLXN0cmVhbWluZyc7XG5YaHJTdHJlYW1pbmdUcmFuc3BvcnQucm91bmRUcmlwcyA9IDI7IC8vIHByZWZsaWdodCwgYWpheFxuXG4vLyBTYWZhcmkgZ2V0cyBjb25mdXNlZCB3aGVuIGEgc3RyZWFtaW5nIGFqYXggcmVxdWVzdCBpcyBzdGFydGVkXG4vLyBiZWZvcmUgb25sb2FkLiBUaGlzIGNhdXNlcyB0aGUgbG9hZCBpbmRpY2F0b3IgdG8gc3BpbiBpbmRlZmluZXRlbHkuXG4vLyBPbmx5IHJlcXVpcmUgYm9keSB3aGVuIHVzZWQgaW4gYSBicm93c2VyXG5YaHJTdHJlYW1pbmdUcmFuc3BvcnQubmVlZEJvZHkgPSAhIWdsb2JhbC5kb2N1bWVudDtcblxubW9kdWxlLmV4cG9ydHMgPSBYaHJTdHJlYW1pbmdUcmFuc3BvcnQ7XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4uL3V0aWxzL2Jyb3dzZXJcIjo0NCxcIi4vbGliL2FqYXgtYmFzZWRcIjoyNCxcIi4vcmVjZWl2ZXIveGhyXCI6MzIsXCIuL3NlbmRlci94aHItY29yc1wiOjM1LFwiLi9zZW5kZXIveGhyLWxvY2FsXCI6MzcsXCJpbmhlcml0c1wiOjU3fV0sNDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChnbG9iYWwpe1xuJ3VzZSBzdHJpY3QnO1xuXG5pZiAoZ2xvYmFsLmNyeXB0byAmJiBnbG9iYWwuY3J5cHRvLmdldFJhbmRvbVZhbHVlcykge1xuICBtb2R1bGUuZXhwb3J0cy5yYW5kb21CeXRlcyA9IGZ1bmN0aW9uKGxlbmd0aCkge1xuICAgIHZhciBieXRlcyA9IG5ldyBVaW50OEFycmF5KGxlbmd0aCk7XG4gICAgZ2xvYmFsLmNyeXB0by5nZXRSYW5kb21WYWx1ZXMoYnl0ZXMpO1xuICAgIHJldHVybiBieXRlcztcbiAgfTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzLnJhbmRvbUJ5dGVzID0gZnVuY3Rpb24obGVuZ3RoKSB7XG4gICAgdmFyIGJ5dGVzID0gbmV3IEFycmF5KGxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgYnl0ZXNbaV0gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyNTYpO1xuICAgIH1cbiAgICByZXR1cm4gYnl0ZXM7XG4gIH07XG59XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHt9XSw0NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc09wZXJhOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZ2xvYmFsLm5hdmlnYXRvciAmJlxuICAgICAgL29wZXJhL2kudGVzdChnbG9iYWwubmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gIH1cblxuLCBpc0tvbnF1ZXJvcjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGdsb2JhbC5uYXZpZ2F0b3IgJiZcbiAgICAgIC9rb25xdWVyb3IvaS50ZXN0KGdsb2JhbC5uYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgfVxuXG4gIC8vICMxODcgd3JhcCBkb2N1bWVudC5kb21haW4gaW4gdHJ5L2NhdGNoIGJlY2F1c2Ugb2YgV1A4IGZyb20gZmlsZTovLy9cbiwgaGFzRG9tYWluOiBmdW5jdGlvbiAoKSB7XG4gICAgLy8gbm9uLWJyb3dzZXIgY2xpZW50IGFsd2F5cyBoYXMgYSBkb21haW5cbiAgICBpZiAoIWdsb2JhbC5kb2N1bWVudCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAhIWdsb2JhbC5kb2N1bWVudC5kb21haW47XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufTtcblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se31dLDQ1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIEpTT04zID0gcmVxdWlyZSgnanNvbjMnKTtcblxuLy8gU29tZSBleHRyYSBjaGFyYWN0ZXJzIHRoYXQgQ2hyb21lIGdldHMgd3JvbmcsIGFuZCBzdWJzdGl0dXRlcyB3aXRoXG4vLyBzb21ldGhpbmcgZWxzZSBvbiB0aGUgd2lyZS5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250cm9sLXJlZ2V4XG52YXIgZXh0cmFFc2NhcGFibGUgPSAvW1xceDAwLVxceDFmXFx1ZDgwMC1cXHVkZmZmXFx1ZmZmZVxcdWZmZmZcXHUwMzAwLVxcdTAzMzNcXHUwMzNkLVxcdTAzNDZcXHUwMzRhLVxcdTAzNGNcXHUwMzUwLVxcdTAzNTJcXHUwMzU3LVxcdTAzNThcXHUwMzVjLVxcdTAzNjJcXHUwMzc0XFx1MDM3ZVxcdTAzODdcXHUwNTkxLVxcdTA1YWZcXHUwNWM0XFx1MDYxMC1cXHUwNjE3XFx1MDY1My1cXHUwNjU0XFx1MDY1Ny1cXHUwNjViXFx1MDY1ZC1cXHUwNjVlXFx1MDZkZi1cXHUwNmUyXFx1MDZlYi1cXHUwNmVjXFx1MDczMFxcdTA3MzItXFx1MDczM1xcdTA3MzUtXFx1MDczNlxcdTA3M2FcXHUwNzNkXFx1MDczZi1cXHUwNzQxXFx1MDc0M1xcdTA3NDVcXHUwNzQ3XFx1MDdlYi1cXHUwN2YxXFx1MDk1MVxcdTA5NTgtXFx1MDk1ZlxcdTA5ZGMtXFx1MDlkZFxcdTA5ZGZcXHUwYTMzXFx1MGEzNlxcdTBhNTktXFx1MGE1YlxcdTBhNWVcXHUwYjVjLVxcdTBiNWRcXHUwZTM4LVxcdTBlMzlcXHUwZjQzXFx1MGY0ZFxcdTBmNTJcXHUwZjU3XFx1MGY1Y1xcdTBmNjlcXHUwZjcyLVxcdTBmNzZcXHUwZjc4XFx1MGY4MC1cXHUwZjgzXFx1MGY5M1xcdTBmOWRcXHUwZmEyXFx1MGZhN1xcdTBmYWNcXHUwZmI5XFx1MTkzOS1cXHUxOTNhXFx1MWExN1xcdTFiNmJcXHUxY2RhLVxcdTFjZGJcXHUxZGMwLVxcdTFkY2ZcXHUxZGZjXFx1MWRmZVxcdTFmNzFcXHUxZjczXFx1MWY3NVxcdTFmNzdcXHUxZjc5XFx1MWY3YlxcdTFmN2RcXHUxZmJiXFx1MWZiZVxcdTFmYzlcXHUxZmNiXFx1MWZkM1xcdTFmZGJcXHUxZmUzXFx1MWZlYlxcdTFmZWUtXFx1MWZlZlxcdTFmZjlcXHUxZmZiXFx1MWZmZFxcdTIwMDAtXFx1MjAwMVxcdTIwZDAtXFx1MjBkMVxcdTIwZDQtXFx1MjBkN1xcdTIwZTctXFx1MjBlOVxcdTIxMjZcXHUyMTJhLVxcdTIxMmJcXHUyMzI5LVxcdTIzMmFcXHUyYWRjXFx1MzAyYi1cXHUzMDJjXFx1YWFiMi1cXHVhYWIzXFx1ZjkwMC1cXHVmYTBkXFx1ZmExMFxcdWZhMTJcXHVmYTE1LVxcdWZhMWVcXHVmYTIwXFx1ZmEyMlxcdWZhMjUtXFx1ZmEyNlxcdWZhMmEtXFx1ZmEyZFxcdWZhMzAtXFx1ZmE2ZFxcdWZhNzAtXFx1ZmFkOVxcdWZiMWRcXHVmYjFmXFx1ZmIyYS1cXHVmYjM2XFx1ZmIzOC1cXHVmYjNjXFx1ZmIzZVxcdWZiNDAtXFx1ZmI0MVxcdWZiNDMtXFx1ZmI0NFxcdWZiNDYtXFx1ZmI0ZVxcdWZmZjAtXFx1ZmZmZl0vZ1xuICAsIGV4dHJhTG9va3VwO1xuXG4vLyBUaGlzIG1heSBiZSBxdWl0ZSBzbG93LCBzbyBsZXQncyBkZWxheSB1bnRpbCB1c2VyIGFjdHVhbGx5IHVzZXMgYmFkXG4vLyBjaGFyYWN0ZXJzLlxudmFyIHVucm9sbExvb2t1cCA9IGZ1bmN0aW9uKGVzY2FwYWJsZSkge1xuICB2YXIgaTtcbiAgdmFyIHVucm9sbGVkID0ge307XG4gIHZhciBjID0gW107XG4gIGZvciAoaSA9IDA7IGkgPCA2NTUzNjsgaSsrKSB7XG4gICAgYy5wdXNoKCBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpICk7XG4gIH1cbiAgZXNjYXBhYmxlLmxhc3RJbmRleCA9IDA7XG4gIGMuam9pbignJykucmVwbGFjZShlc2NhcGFibGUsIGZ1bmN0aW9uKGEpIHtcbiAgICB1bnJvbGxlZFsgYSBdID0gJ1xcXFx1JyArICgnMDAwMCcgKyBhLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpKS5zbGljZSgtNCk7XG4gICAgcmV0dXJuICcnO1xuICB9KTtcbiAgZXNjYXBhYmxlLmxhc3RJbmRleCA9IDA7XG4gIHJldHVybiB1bnJvbGxlZDtcbn07XG5cbi8vIFF1b3RlIHN0cmluZywgYWxzbyB0YWtpbmcgY2FyZSBvZiB1bmljb2RlIGNoYXJhY3RlcnMgdGhhdCBicm93c2Vyc1xuLy8gb2Z0ZW4gYnJlYWsuIEVzcGVjaWFsbHksIHRha2UgY2FyZSBvZiB1bmljb2RlIHN1cnJvZ2F0ZXM6XG4vLyBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL01hcHBpbmdfb2ZfVW5pY29kZV9jaGFyYWN0ZXJzI1N1cnJvZ2F0ZXNcbm1vZHVsZS5leHBvcnRzID0ge1xuICBxdW90ZTogZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgdmFyIHF1b3RlZCA9IEpTT04zLnN0cmluZ2lmeShzdHJpbmcpO1xuXG4gICAgLy8gSW4gbW9zdCBjYXNlcyB0aGlzIHNob3VsZCBiZSB2ZXJ5IGZhc3QgYW5kIGdvb2QgZW5vdWdoLlxuICAgIGV4dHJhRXNjYXBhYmxlLmxhc3RJbmRleCA9IDA7XG4gICAgaWYgKCFleHRyYUVzY2FwYWJsZS50ZXN0KHF1b3RlZCkpIHtcbiAgICAgIHJldHVybiBxdW90ZWQ7XG4gICAgfVxuXG4gICAgaWYgKCFleHRyYUxvb2t1cCkge1xuICAgICAgZXh0cmFMb29rdXAgPSB1bnJvbGxMb29rdXAoZXh0cmFFc2NhcGFibGUpO1xuICAgIH1cblxuICAgIHJldHVybiBxdW90ZWQucmVwbGFjZShleHRyYUVzY2FwYWJsZSwgZnVuY3Rpb24oYSkge1xuICAgICAgcmV0dXJuIGV4dHJhTG9va3VwW2FdO1xuICAgIH0pO1xuICB9XG59O1xuXG59LHtcImpzb24zXCI6NTh9XSw0NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciByYW5kb20gPSByZXF1aXJlKCcuL3JhbmRvbScpO1xuXG52YXIgb25VbmxvYWQgPSB7fVxuICAsIGFmdGVyVW5sb2FkID0gZmFsc2VcbiAgICAvLyBkZXRlY3QgZ29vZ2xlIGNocm9tZSBwYWNrYWdlZCBhcHBzIGJlY2F1c2UgdGhleSBkb24ndCBhbGxvdyB0aGUgJ3VubG9hZCcgZXZlbnRcbiAgLCBpc0Nocm9tZVBhY2thZ2VkQXBwID0gZ2xvYmFsLmNocm9tZSAmJiBnbG9iYWwuY2hyb21lLmFwcCAmJiBnbG9iYWwuY2hyb21lLmFwcC5ydW50aW1lXG4gIDtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGF0dGFjaEV2ZW50OiBmdW5jdGlvbihldmVudCwgbGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgfSBlbHNlIGlmIChnbG9iYWwuZG9jdW1lbnQgJiYgZ2xvYmFsLmF0dGFjaEV2ZW50KSB7XG4gICAgICAvLyBJRSBxdWlya3MuXG4gICAgICAvLyBBY2NvcmRpbmcgdG86IGh0dHA6Ly9zdGV2ZXNvdWRlcnMuY29tL21pc2MvdGVzdC1wb3N0bWVzc2FnZS5waHBcbiAgICAgIC8vIHRoZSBtZXNzYWdlIGdldHMgZGVsaXZlcmVkIG9ubHkgdG8gJ2RvY3VtZW50Jywgbm90ICd3aW5kb3cnLlxuICAgICAgZ2xvYmFsLmRvY3VtZW50LmF0dGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xuICAgICAgLy8gSSBnZXQgJ3dpbmRvdycgZm9yIGllOC5cbiAgICAgIGdsb2JhbC5hdHRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gIH1cblxuLCBkZXRhY2hFdmVudDogZnVuY3Rpb24oZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgaWYgKHR5cGVvZiBnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGdsb2JhbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpO1xuICAgIH0gZWxzZSBpZiAoZ2xvYmFsLmRvY3VtZW50ICYmIGdsb2JhbC5kZXRhY2hFdmVudCkge1xuICAgICAgZ2xvYmFsLmRvY3VtZW50LmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xuICAgICAgZ2xvYmFsLmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgfVxuXG4sIHVubG9hZEFkZDogZnVuY3Rpb24obGlzdGVuZXIpIHtcbiAgICBpZiAoaXNDaHJvbWVQYWNrYWdlZEFwcCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHJlZiA9IHJhbmRvbS5zdHJpbmcoOCk7XG4gICAgb25VbmxvYWRbcmVmXSA9IGxpc3RlbmVyO1xuICAgIGlmIChhZnRlclVubG9hZCkge1xuICAgICAgc2V0VGltZW91dCh0aGlzLnRyaWdnZXJVbmxvYWRDYWxsYmFja3MsIDApO1xuICAgIH1cbiAgICByZXR1cm4gcmVmO1xuICB9XG5cbiwgdW5sb2FkRGVsOiBmdW5jdGlvbihyZWYpIHtcbiAgICBpZiAocmVmIGluIG9uVW5sb2FkKSB7XG4gICAgICBkZWxldGUgb25VbmxvYWRbcmVmXTtcbiAgICB9XG4gIH1cblxuLCB0cmlnZ2VyVW5sb2FkQ2FsbGJhY2tzOiBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciByZWYgaW4gb25VbmxvYWQpIHtcbiAgICAgIG9uVW5sb2FkW3JlZl0oKTtcbiAgICAgIGRlbGV0ZSBvblVubG9hZFtyZWZdO1xuICAgIH1cbiAgfVxufTtcblxudmFyIHVubG9hZFRyaWdnZXJlZCA9IGZ1bmN0aW9uKCkge1xuICBpZiAoYWZ0ZXJVbmxvYWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgYWZ0ZXJVbmxvYWQgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cy50cmlnZ2VyVW5sb2FkQ2FsbGJhY2tzKCk7XG59O1xuXG4vLyAndW5sb2FkJyBhbG9uZSBpcyBub3QgcmVsaWFibGUgaW4gb3BlcmEgd2l0aGluIGFuIGlmcmFtZSwgYnV0IHdlXG4vLyBjYW4ndCB1c2UgYGJlZm9yZXVubG9hZGAgYXMgSUUgZmlyZXMgaXQgb24gamF2YXNjcmlwdDogbGlua3MuXG5pZiAoIWlzQ2hyb21lUGFja2FnZWRBcHApIHtcbiAgbW9kdWxlLmV4cG9ydHMuYXR0YWNoRXZlbnQoJ3VubG9hZCcsIHVubG9hZFRyaWdnZXJlZCk7XG59XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4vcmFuZG9tXCI6NTB9XSw0NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3MsZ2xvYmFsKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGV2ZW50VXRpbHMgPSByZXF1aXJlKCcuL2V2ZW50JylcbiAgLCBKU09OMyA9IHJlcXVpcmUoJ2pzb24zJylcbiAgLCBicm93c2VyID0gcmVxdWlyZSgnLi9icm93c2VyJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnV0aWxzOmlmcmFtZScpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgV1ByZWZpeDogJ19qcCdcbiwgY3VycmVudFdpbmRvd0lkOiBudWxsXG5cbiwgcG9sbHV0ZUdsb2JhbE5hbWVzcGFjZTogZnVuY3Rpb24oKSB7XG4gICAgaWYgKCEobW9kdWxlLmV4cG9ydHMuV1ByZWZpeCBpbiBnbG9iYWwpKSB7XG4gICAgICBnbG9iYWxbbW9kdWxlLmV4cG9ydHMuV1ByZWZpeF0gPSB7fTtcbiAgICB9XG4gIH1cblxuLCBwb3N0TWVzc2FnZTogZnVuY3Rpb24odHlwZSwgZGF0YSkge1xuICAgIGlmIChnbG9iYWwucGFyZW50ICE9PSBnbG9iYWwpIHtcbiAgICAgIGdsb2JhbC5wYXJlbnQucG9zdE1lc3NhZ2UoSlNPTjMuc3RyaW5naWZ5KHtcbiAgICAgICAgd2luZG93SWQ6IG1vZHVsZS5leHBvcnRzLmN1cnJlbnRXaW5kb3dJZFxuICAgICAgLCB0eXBlOiB0eXBlXG4gICAgICAsIGRhdGE6IGRhdGEgfHwgJydcbiAgICAgIH0pLCAnKicpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkZWJ1ZygnQ2Fubm90IHBvc3RNZXNzYWdlLCBubyBwYXJlbnQgd2luZG93LicsIHR5cGUsIGRhdGEpO1xuICAgIH1cbiAgfVxuXG4sIGNyZWF0ZUlmcmFtZTogZnVuY3Rpb24oaWZyYW1lVXJsLCBlcnJvckNhbGxiYWNrKSB7XG4gICAgdmFyIGlmcmFtZSA9IGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTtcbiAgICB2YXIgdHJlZiwgdW5sb2FkUmVmO1xuICAgIHZhciB1bmF0dGFjaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgZGVidWcoJ3VuYXR0YWNoJyk7XG4gICAgICBjbGVhclRpbWVvdXQodHJlZik7XG4gICAgICAvLyBFeHBsb3JlciBoYWQgcHJvYmxlbXMgd2l0aCB0aGF0LlxuICAgICAgdHJ5IHtcbiAgICAgICAgaWZyYW1lLm9ubG9hZCA9IG51bGw7XG4gICAgICB9IGNhdGNoICh4KSB7XG4gICAgICAgIC8vIGludGVudGlvbmFsbHkgZW1wdHlcbiAgICAgIH1cbiAgICAgIGlmcmFtZS5vbmVycm9yID0gbnVsbDtcbiAgICB9O1xuICAgIHZhciBjbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gICAgICBkZWJ1ZygnY2xlYW51cCcpO1xuICAgICAgaWYgKGlmcmFtZSkge1xuICAgICAgICB1bmF0dGFjaCgpO1xuICAgICAgICAvLyBUaGlzIHRpbWVvdXQgbWFrZXMgY2hyb21lIGZpcmUgb25iZWZvcmV1bmxvYWQgZXZlbnRcbiAgICAgICAgLy8gd2l0aGluIGlmcmFtZS4gV2l0aG91dCB0aGUgdGltZW91dCBpdCBnb2VzIHN0cmFpZ2h0IHRvXG4gICAgICAgIC8vIG9udW5sb2FkLlxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmIChpZnJhbWUpIHtcbiAgICAgICAgICAgIGlmcmFtZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmcmFtZSA9IG51bGw7XG4gICAgICAgIH0sIDApO1xuICAgICAgICBldmVudFV0aWxzLnVubG9hZERlbCh1bmxvYWRSZWYpO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIG9uZXJyb3IgPSBmdW5jdGlvbihlcnIpIHtcbiAgICAgIGRlYnVnKCdvbmVycm9yJywgZXJyKTtcbiAgICAgIGlmIChpZnJhbWUpIHtcbiAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICBlcnJvckNhbGxiYWNrKGVycik7XG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgcG9zdCA9IGZ1bmN0aW9uKG1zZywgb3JpZ2luKSB7XG4gICAgICBkZWJ1ZygncG9zdCcsIG1zZywgb3JpZ2luKTtcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gV2hlbiB0aGUgaWZyYW1lIGlzIG5vdCBsb2FkZWQsIElFIHJhaXNlcyBhbiBleGNlcHRpb25cbiAgICAgICAgICAvLyBvbiAnY29udGVudFdpbmRvdycuXG4gICAgICAgICAgaWYgKGlmcmFtZSAmJiBpZnJhbWUuY29udGVudFdpbmRvdykge1xuICAgICAgICAgICAgaWZyYW1lLmNvbnRlbnRXaW5kb3cucG9zdE1lc3NhZ2UobXNnLCBvcmlnaW4pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICAgIC8vIGludGVudGlvbmFsbHkgZW1wdHlcbiAgICAgICAgfVxuICAgICAgfSwgMCk7XG4gICAgfTtcblxuICAgIGlmcmFtZS5zcmMgPSBpZnJhbWVVcmw7XG4gICAgaWZyYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgaWZyYW1lLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgICBpZnJhbWUub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgICAgb25lcnJvcignb25lcnJvcicpO1xuICAgIH07XG4gICAgaWZyYW1lLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgZGVidWcoJ29ubG9hZCcpO1xuICAgICAgLy8gYG9ubG9hZGAgaXMgdHJpZ2dlcmVkIGJlZm9yZSBzY3JpcHRzIG9uIHRoZSBpZnJhbWUgYXJlXG4gICAgICAvLyBleGVjdXRlZC4gR2l2ZSBpdCBmZXcgc2Vjb25kcyB0byBhY3R1YWxseSBsb2FkIHN0dWZmLlxuICAgICAgY2xlYXJUaW1lb3V0KHRyZWYpO1xuICAgICAgdHJlZiA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIG9uZXJyb3IoJ29ubG9hZCB0aW1lb3V0Jyk7XG4gICAgICB9LCAyMDAwKTtcbiAgICB9O1xuICAgIGdsb2JhbC5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gICAgdHJlZiA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBvbmVycm9yKCd0aW1lb3V0Jyk7XG4gICAgfSwgMTUwMDApO1xuICAgIHVubG9hZFJlZiA9IGV2ZW50VXRpbHMudW5sb2FkQWRkKGNsZWFudXApO1xuICAgIHJldHVybiB7XG4gICAgICBwb3N0OiBwb3N0XG4gICAgLCBjbGVhbnVwOiBjbGVhbnVwXG4gICAgLCBsb2FkZWQ6IHVuYXR0YWNoXG4gICAgfTtcbiAgfVxuXG4vKiBlc2xpbnQgbm8tdW5kZWY6IFwib2ZmXCIsIG5ldy1jYXA6IFwib2ZmXCIgKi9cbiwgY3JlYXRlSHRtbGZpbGU6IGZ1bmN0aW9uKGlmcmFtZVVybCwgZXJyb3JDYWxsYmFjaykge1xuICAgIHZhciBheG8gPSBbJ0FjdGl2ZSddLmNvbmNhdCgnT2JqZWN0Jykuam9pbignWCcpO1xuICAgIHZhciBkb2MgPSBuZXcgZ2xvYmFsW2F4b10oJ2h0bWxmaWxlJyk7XG4gICAgdmFyIHRyZWYsIHVubG9hZFJlZjtcbiAgICB2YXIgaWZyYW1lO1xuICAgIHZhciB1bmF0dGFjaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRyZWYpO1xuICAgICAgaWZyYW1lLm9uZXJyb3IgPSBudWxsO1xuICAgIH07XG4gICAgdmFyIGNsZWFudXAgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmIChkb2MpIHtcbiAgICAgICAgdW5hdHRhY2goKTtcbiAgICAgICAgZXZlbnRVdGlscy51bmxvYWREZWwodW5sb2FkUmVmKTtcbiAgICAgICAgaWZyYW1lLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbiAgICAgICAgaWZyYW1lID0gZG9jID0gbnVsbDtcbiAgICAgICAgQ29sbGVjdEdhcmJhZ2UoKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBvbmVycm9yID0gZnVuY3Rpb24ocikge1xuICAgICAgZGVidWcoJ29uZXJyb3InLCByKTtcbiAgICAgIGlmIChkb2MpIHtcbiAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICBlcnJvckNhbGxiYWNrKHIpO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIHBvc3QgPSBmdW5jdGlvbihtc2csIG9yaWdpbikge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gV2hlbiB0aGUgaWZyYW1lIGlzIG5vdCBsb2FkZWQsIElFIHJhaXNlcyBhbiBleGNlcHRpb25cbiAgICAgICAgLy8gb24gJ2NvbnRlbnRXaW5kb3cnLlxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmIChpZnJhbWUgJiYgaWZyYW1lLmNvbnRlbnRXaW5kb3cpIHtcbiAgICAgICAgICAgICAgaWZyYW1lLmNvbnRlbnRXaW5kb3cucG9zdE1lc3NhZ2UobXNnLCBvcmlnaW4pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgMCk7XG4gICAgICB9IGNhdGNoICh4KSB7XG4gICAgICAgIC8vIGludGVudGlvbmFsbHkgZW1wdHlcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZG9jLm9wZW4oKTtcbiAgICBkb2Mud3JpdGUoJzxodG1sPjxzJyArICdjcmlwdD4nICtcbiAgICAgICAgICAgICAgJ2RvY3VtZW50LmRvbWFpbj1cIicgKyBnbG9iYWwuZG9jdW1lbnQuZG9tYWluICsgJ1wiOycgK1xuICAgICAgICAgICAgICAnPC9zJyArICdjcmlwdD48L2h0bWw+Jyk7XG4gICAgZG9jLmNsb3NlKCk7XG4gICAgZG9jLnBhcmVudFdpbmRvd1ttb2R1bGUuZXhwb3J0cy5XUHJlZml4XSA9IGdsb2JhbFttb2R1bGUuZXhwb3J0cy5XUHJlZml4XTtcbiAgICB2YXIgYyA9IGRvYy5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBkb2MuYm9keS5hcHBlbmRDaGlsZChjKTtcbiAgICBpZnJhbWUgPSBkb2MuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gICAgYy5hcHBlbmRDaGlsZChpZnJhbWUpO1xuICAgIGlmcmFtZS5zcmMgPSBpZnJhbWVVcmw7XG4gICAgaWZyYW1lLm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgICAgIG9uZXJyb3IoJ29uZXJyb3InKTtcbiAgICB9O1xuICAgIHRyZWYgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgb25lcnJvcigndGltZW91dCcpO1xuICAgIH0sIDE1MDAwKTtcbiAgICB1bmxvYWRSZWYgPSBldmVudFV0aWxzLnVubG9hZEFkZChjbGVhbnVwKTtcbiAgICByZXR1cm4ge1xuICAgICAgcG9zdDogcG9zdFxuICAgICwgY2xlYW51cDogY2xlYW51cFxuICAgICwgbG9hZGVkOiB1bmF0dGFjaFxuICAgIH07XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzLmlmcmFtZUVuYWJsZWQgPSBmYWxzZTtcbmlmIChnbG9iYWwuZG9jdW1lbnQpIHtcbiAgLy8gcG9zdE1lc3NhZ2UgbWlzYmVoYXZlcyBpbiBrb25xdWVyb3IgNC42LjUgLSB0aGUgbWVzc2FnZXMgYXJlIGRlbGl2ZXJlZCB3aXRoXG4gIC8vIGh1Z2UgZGVsYXksIG9yIG5vdCBhdCBhbGwuXG4gIG1vZHVsZS5leHBvcnRzLmlmcmFtZUVuYWJsZWQgPSAodHlwZW9mIGdsb2JhbC5wb3N0TWVzc2FnZSA9PT0gJ2Z1bmN0aW9uJyB8fFxuICAgIHR5cGVvZiBnbG9iYWwucG9zdE1lc3NhZ2UgPT09ICdvYmplY3QnKSAmJiAoIWJyb3dzZXIuaXNLb25xdWVyb3IoKSk7XG59XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHtcIi4vYnJvd3NlclwiOjQ0LFwiLi9ldmVudFwiOjQ2LFwiZGVidWdcIjo1NSxcImpzb24zXCI6NTh9XSw0ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBsb2dPYmplY3QgPSB7fTtcblsnbG9nJywgJ2RlYnVnJywgJ3dhcm4nXS5mb3JFYWNoKGZ1bmN0aW9uIChsZXZlbCkge1xuICB2YXIgbGV2ZWxFeGlzdHM7XG5cbiAgdHJ5IHtcbiAgICBsZXZlbEV4aXN0cyA9IGdsb2JhbC5jb25zb2xlICYmIGdsb2JhbC5jb25zb2xlW2xldmVsXSAmJiBnbG9iYWwuY29uc29sZVtsZXZlbF0uYXBwbHk7XG4gIH0gY2F0Y2goZSkge1xuICAgIC8vIGRvIG5vdGhpbmdcbiAgfVxuXG4gIGxvZ09iamVjdFtsZXZlbF0gPSBsZXZlbEV4aXN0cyA/IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZ2xvYmFsLmNvbnNvbGVbbGV2ZWxdLmFwcGx5KGdsb2JhbC5jb25zb2xlLCBhcmd1bWVudHMpO1xuICB9IDogKGxldmVsID09PSAnbG9nJyA/IGZ1bmN0aW9uICgpIHt9IDogbG9nT2JqZWN0LmxvZyk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBsb2dPYmplY3Q7XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHt9XSw0OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc09iamVjdDogZnVuY3Rpb24ob2JqKSB7XG4gICAgdmFyIHR5cGUgPSB0eXBlb2Ygb2JqO1xuICAgIHJldHVybiB0eXBlID09PSAnZnVuY3Rpb24nIHx8IHR5cGUgPT09ICdvYmplY3QnICYmICEhb2JqO1xuICB9XG5cbiwgZXh0ZW5kOiBmdW5jdGlvbihvYmopIHtcbiAgICBpZiAoIXRoaXMuaXNPYmplY3Qob2JqKSkge1xuICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gICAgdmFyIHNvdXJjZSwgcHJvcDtcbiAgICBmb3IgKHZhciBpID0gMSwgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG4gICAgICBmb3IgKHByb3AgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBwcm9wKSkge1xuICAgICAgICAgIG9ialtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb2JqO1xuICB9XG59O1xuXG59LHt9XSw1MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbi8qIGdsb2JhbCBjcnlwdG86dHJ1ZSAqL1xudmFyIGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuXG4vLyBUaGlzIHN0cmluZyBoYXMgbGVuZ3RoIDMyLCBhIHBvd2VyIG9mIDIsIHNvIHRoZSBtb2R1bHVzIGRvZXNuJ3QgaW50cm9kdWNlIGFcbi8vIGJpYXMuXG52YXIgX3JhbmRvbVN0cmluZ0NoYXJzID0gJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Jztcbm1vZHVsZS5leHBvcnRzID0ge1xuICBzdHJpbmc6IGZ1bmN0aW9uKGxlbmd0aCkge1xuICAgIHZhciBtYXggPSBfcmFuZG9tU3RyaW5nQ2hhcnMubGVuZ3RoO1xuICAgIHZhciBieXRlcyA9IGNyeXB0by5yYW5kb21CeXRlcyhsZW5ndGgpO1xuICAgIHZhciByZXQgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICByZXQucHVzaChfcmFuZG9tU3RyaW5nQ2hhcnMuc3Vic3RyKGJ5dGVzW2ldICUgbWF4LCAxKSk7XG4gICAgfVxuICAgIHJldHVybiByZXQuam9pbignJyk7XG4gIH1cblxuLCBudW1iZXI6IGZ1bmN0aW9uKG1heCkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBtYXgpO1xuICB9XG5cbiwgbnVtYmVyU3RyaW5nOiBmdW5jdGlvbihtYXgpIHtcbiAgICB2YXIgdCA9ICgnJyArIChtYXggLSAxKSkubGVuZ3RoO1xuICAgIHZhciBwID0gbmV3IEFycmF5KHQgKyAxKS5qb2luKCcwJyk7XG4gICAgcmV0dXJuIChwICsgdGhpcy5udW1iZXIobWF4KSkuc2xpY2UoLXQpO1xuICB9XG59O1xuXG59LHtcImNyeXB0b1wiOjQzfV0sNTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDp1dGlsczp0cmFuc3BvcnQnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihhdmFpbGFibGVUcmFuc3BvcnRzKSB7XG4gIHJldHVybiB7XG4gICAgZmlsdGVyVG9FbmFibGVkOiBmdW5jdGlvbih0cmFuc3BvcnRzV2hpdGVsaXN0LCBpbmZvKSB7XG4gICAgICB2YXIgdHJhbnNwb3J0cyA9IHtcbiAgICAgICAgbWFpbjogW11cbiAgICAgICwgZmFjYWRlOiBbXVxuICAgICAgfTtcbiAgICAgIGlmICghdHJhbnNwb3J0c1doaXRlbGlzdCkge1xuICAgICAgICB0cmFuc3BvcnRzV2hpdGVsaXN0ID0gW107XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiB0cmFuc3BvcnRzV2hpdGVsaXN0ID09PSAnc3RyaW5nJykge1xuICAgICAgICB0cmFuc3BvcnRzV2hpdGVsaXN0ID0gW3RyYW5zcG9ydHNXaGl0ZWxpc3RdO1xuICAgICAgfVxuXG4gICAgICBhdmFpbGFibGVUcmFuc3BvcnRzLmZvckVhY2goZnVuY3Rpb24odHJhbnMpIHtcbiAgICAgICAgaWYgKCF0cmFucykge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0cmFucy50cmFuc3BvcnROYW1lID09PSAnd2Vic29ja2V0JyAmJiBpbmZvLndlYnNvY2tldCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICBkZWJ1ZygnZGlzYWJsZWQgZnJvbSBzZXJ2ZXInLCAnd2Vic29ja2V0Jyk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRyYW5zcG9ydHNXaGl0ZWxpc3QubGVuZ3RoICYmXG4gICAgICAgICAgICB0cmFuc3BvcnRzV2hpdGVsaXN0LmluZGV4T2YodHJhbnMudHJhbnNwb3J0TmFtZSkgPT09IC0xKSB7XG4gICAgICAgICAgZGVidWcoJ25vdCBpbiB3aGl0ZWxpc3QnLCB0cmFucy50cmFuc3BvcnROYW1lKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHJhbnMuZW5hYmxlZChpbmZvKSkge1xuICAgICAgICAgIGRlYnVnKCdlbmFibGVkJywgdHJhbnMudHJhbnNwb3J0TmFtZSk7XG4gICAgICAgICAgdHJhbnNwb3J0cy5tYWluLnB1c2godHJhbnMpO1xuICAgICAgICAgIGlmICh0cmFucy5mYWNhZGVUcmFuc3BvcnQpIHtcbiAgICAgICAgICAgIHRyYW5zcG9ydHMuZmFjYWRlLnB1c2godHJhbnMuZmFjYWRlVHJhbnNwb3J0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGVidWcoJ2Rpc2FibGVkJywgdHJhbnMudHJhbnNwb3J0TmFtZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHRyYW5zcG9ydHM7XG4gICAgfVxuICB9O1xufTtcblxufSkuY2FsbCh0aGlzLHsgZW52OiB7fSB9KVxuXG59LHtcImRlYnVnXCI6NTV9XSw1MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgVVJMID0gcmVxdWlyZSgndXJsLXBhcnNlJyk7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6dXRpbHM6dXJsJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRPcmlnaW46IGZ1bmN0aW9uKHVybCkge1xuICAgIGlmICghdXJsKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB2YXIgcCA9IG5ldyBVUkwodXJsKTtcbiAgICBpZiAocC5wcm90b2NvbCA9PT0gJ2ZpbGU6Jykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHBvcnQgPSBwLnBvcnQ7XG4gICAgaWYgKCFwb3J0KSB7XG4gICAgICBwb3J0ID0gKHAucHJvdG9jb2wgPT09ICdodHRwczonKSA/ICc0NDMnIDogJzgwJztcbiAgICB9XG5cbiAgICByZXR1cm4gcC5wcm90b2NvbCArICcvLycgKyBwLmhvc3RuYW1lICsgJzonICsgcG9ydDtcbiAgfVxuXG4sIGlzT3JpZ2luRXF1YWw6IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICB2YXIgcmVzID0gdGhpcy5nZXRPcmlnaW4oYSkgPT09IHRoaXMuZ2V0T3JpZ2luKGIpO1xuICAgIGRlYnVnKCdzYW1lJywgYSwgYiwgcmVzKTtcbiAgICByZXR1cm4gcmVzO1xuICB9XG5cbiwgaXNTY2hlbWVFcXVhbDogZnVuY3Rpb24oYSwgYikge1xuICAgIHJldHVybiAoYS5zcGxpdCgnOicpWzBdID09PSBiLnNwbGl0KCc6JylbMF0pO1xuICB9XG5cbiwgYWRkUGF0aDogZnVuY3Rpb24gKHVybCwgcGF0aCkge1xuICAgIHZhciBxcyA9IHVybC5zcGxpdCgnPycpO1xuICAgIHJldHVybiBxc1swXSArIHBhdGggKyAocXNbMV0gPyAnPycgKyBxc1sxXSA6ICcnKTtcbiAgfVxuXG4sIGFkZFF1ZXJ5OiBmdW5jdGlvbiAodXJsLCBxKSB7XG4gICAgcmV0dXJuIHVybCArICh1cmwuaW5kZXhPZignPycpID09PSAtMSA/ICgnPycgKyBxKSA6ICgnJicgKyBxKSk7XG4gIH1cbn07XG5cbn0pLmNhbGwodGhpcyx7IGVudjoge30gfSlcblxufSx7XCJkZWJ1Z1wiOjU1LFwidXJsLXBhcnNlXCI6NjF9XSw1MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG5tb2R1bGUuZXhwb3J0cyA9ICcxLjQuMCc7XG5cbn0se31dLDU0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbi8qKlxuICogSGVscGVycy5cbiAqL1xuXG52YXIgcyA9IDEwMDA7XG52YXIgbSA9IHMgKiA2MDtcbnZhciBoID0gbSAqIDYwO1xudmFyIGQgPSBoICogMjQ7XG52YXIgdyA9IGQgKiA3O1xudmFyIHkgPSBkICogMzY1LjI1O1xuXG4vKipcbiAqIFBhcnNlIG9yIGZvcm1hdCB0aGUgZ2l2ZW4gYHZhbGAuXG4gKlxuICogT3B0aW9uczpcbiAqXG4gKiAgLSBgbG9uZ2AgdmVyYm9zZSBmb3JtYXR0aW5nIFtmYWxzZV1cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IHZhbFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHRocm93cyB7RXJyb3J9IHRocm93IGFuIGVycm9yIGlmIHZhbCBpcyBub3QgYSBub24tZW1wdHkgc3RyaW5nIG9yIGEgbnVtYmVyXG4gKiBAcmV0dXJuIHtTdHJpbmd8TnVtYmVyfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHZhbCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsO1xuICBpZiAodHlwZSA9PT0gJ3N0cmluZycgJiYgdmFsLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gcGFyc2UodmFsKTtcbiAgfSBlbHNlIGlmICh0eXBlID09PSAnbnVtYmVyJyAmJiBpc05hTih2YWwpID09PSBmYWxzZSkge1xuICAgIHJldHVybiBvcHRpb25zLmxvbmcgPyBmbXRMb25nKHZhbCkgOiBmbXRTaG9ydCh2YWwpO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICAndmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSB2YWxpZCBudW1iZXIuIHZhbD0nICtcbiAgICAgIEpTT04uc3RyaW5naWZ5KHZhbClcbiAgKTtcbn07XG5cbi8qKlxuICogUGFyc2UgdGhlIGdpdmVuIGBzdHJgIGFuZCByZXR1cm4gbWlsbGlzZWNvbmRzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHN0cikge1xuICBzdHIgPSBTdHJpbmcoc3RyKTtcbiAgaWYgKHN0ci5sZW5ndGggPiAxMDApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIG1hdGNoID0gL14oKD86XFxkKyk/XFwtP1xcZD9cXC4/XFxkKykgKihtaWxsaXNlY29uZHM/fG1zZWNzP3xtc3xzZWNvbmRzP3xzZWNzP3xzfG1pbnV0ZXM/fG1pbnM/fG18aG91cnM/fGhycz98aHxkYXlzP3xkfHdlZWtzP3x3fHllYXJzP3x5cnM/fHkpPyQvaS5leGVjKFxuICAgIHN0clxuICApO1xuICBpZiAoIW1hdGNoKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBuID0gcGFyc2VGbG9hdChtYXRjaFsxXSk7XG4gIHZhciB0eXBlID0gKG1hdGNoWzJdIHx8ICdtcycpLnRvTG93ZXJDYXNlKCk7XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ3llYXJzJzpcbiAgICBjYXNlICd5ZWFyJzpcbiAgICBjYXNlICd5cnMnOlxuICAgIGNhc2UgJ3lyJzpcbiAgICBjYXNlICd5JzpcbiAgICAgIHJldHVybiBuICogeTtcbiAgICBjYXNlICd3ZWVrcyc6XG4gICAgY2FzZSAnd2Vlayc6XG4gICAgY2FzZSAndyc6XG4gICAgICByZXR1cm4gbiAqIHc7XG4gICAgY2FzZSAnZGF5cyc6XG4gICAgY2FzZSAnZGF5JzpcbiAgICBjYXNlICdkJzpcbiAgICAgIHJldHVybiBuICogZDtcbiAgICBjYXNlICdob3Vycyc6XG4gICAgY2FzZSAnaG91cic6XG4gICAgY2FzZSAnaHJzJzpcbiAgICBjYXNlICdocic6XG4gICAgY2FzZSAnaCc6XG4gICAgICByZXR1cm4gbiAqIGg7XG4gICAgY2FzZSAnbWludXRlcyc6XG4gICAgY2FzZSAnbWludXRlJzpcbiAgICBjYXNlICdtaW5zJzpcbiAgICBjYXNlICdtaW4nOlxuICAgIGNhc2UgJ20nOlxuICAgICAgcmV0dXJuIG4gKiBtO1xuICAgIGNhc2UgJ3NlY29uZHMnOlxuICAgIGNhc2UgJ3NlY29uZCc6XG4gICAgY2FzZSAnc2Vjcyc6XG4gICAgY2FzZSAnc2VjJzpcbiAgICBjYXNlICdzJzpcbiAgICAgIHJldHVybiBuICogcztcbiAgICBjYXNlICdtaWxsaXNlY29uZHMnOlxuICAgIGNhc2UgJ21pbGxpc2Vjb25kJzpcbiAgICBjYXNlICdtc2Vjcyc6XG4gICAgY2FzZSAnbXNlYyc6XG4gICAgY2FzZSAnbXMnOlxuICAgICAgcmV0dXJuIG47XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuLyoqXG4gKiBTaG9ydCBmb3JtYXQgZm9yIGBtc2AuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IG1zXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBmbXRTaG9ydChtcykge1xuICB2YXIgbXNBYnMgPSBNYXRoLmFicyhtcyk7XG4gIGlmIChtc0FicyA+PSBkKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBkKSArICdkJztcbiAgfVxuICBpZiAobXNBYnMgPj0gaCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gaCkgKyAnaCc7XG4gIH1cbiAgaWYgKG1zQWJzID49IG0pIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIG0pICsgJ20nO1xuICB9XG4gIGlmIChtc0FicyA+PSBzKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBzKSArICdzJztcbiAgfVxuICByZXR1cm4gbXMgKyAnbXMnO1xufVxuXG4vKipcbiAqIExvbmcgZm9ybWF0IGZvciBgbXNgLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBtc1xuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZm10TG9uZyhtcykge1xuICB2YXIgbXNBYnMgPSBNYXRoLmFicyhtcyk7XG4gIGlmIChtc0FicyA+PSBkKSB7XG4gICAgcmV0dXJuIHBsdXJhbChtcywgbXNBYnMsIGQsICdkYXknKTtcbiAgfVxuICBpZiAobXNBYnMgPj0gaCkge1xuICAgIHJldHVybiBwbHVyYWwobXMsIG1zQWJzLCBoLCAnaG91cicpO1xuICB9XG4gIGlmIChtc0FicyA+PSBtKSB7XG4gICAgcmV0dXJuIHBsdXJhbChtcywgbXNBYnMsIG0sICdtaW51dGUnKTtcbiAgfVxuICBpZiAobXNBYnMgPj0gcykge1xuICAgIHJldHVybiBwbHVyYWwobXMsIG1zQWJzLCBzLCAnc2Vjb25kJyk7XG4gIH1cbiAgcmV0dXJuIG1zICsgJyBtcyc7XG59XG5cbi8qKlxuICogUGx1cmFsaXphdGlvbiBoZWxwZXIuXG4gKi9cblxuZnVuY3Rpb24gcGx1cmFsKG1zLCBtc0FicywgbiwgbmFtZSkge1xuICB2YXIgaXNQbHVyYWwgPSBtc0FicyA+PSBuICogMS41O1xuICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIG4pICsgJyAnICsgbmFtZSArIChpc1BsdXJhbCA/ICdzJyA6ICcnKTtcbn1cblxufSx7fV0sNTU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzKXtcblwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG4vKiBlc2xpbnQtZW52IGJyb3dzZXIgKi9cblxuLyoqXG4gKiBUaGlzIGlzIHRoZSB3ZWIgYnJvd3NlciBpbXBsZW1lbnRhdGlvbiBvZiBgZGVidWcoKWAuXG4gKi9cbmV4cG9ydHMubG9nID0gbG9nO1xuZXhwb3J0cy5mb3JtYXRBcmdzID0gZm9ybWF0QXJncztcbmV4cG9ydHMuc2F2ZSA9IHNhdmU7XG5leHBvcnRzLmxvYWQgPSBsb2FkO1xuZXhwb3J0cy51c2VDb2xvcnMgPSB1c2VDb2xvcnM7XG5leHBvcnRzLnN0b3JhZ2UgPSBsb2NhbHN0b3JhZ2UoKTtcbi8qKlxuICogQ29sb3JzLlxuICovXG5cbmV4cG9ydHMuY29sb3JzID0gWycjMDAwMENDJywgJyMwMDAwRkYnLCAnIzAwMzNDQycsICcjMDAzM0ZGJywgJyMwMDY2Q0MnLCAnIzAwNjZGRicsICcjMDA5OUNDJywgJyMwMDk5RkYnLCAnIzAwQ0MwMCcsICcjMDBDQzMzJywgJyMwMENDNjYnLCAnIzAwQ0M5OScsICcjMDBDQ0NDJywgJyMwMENDRkYnLCAnIzMzMDBDQycsICcjMzMwMEZGJywgJyMzMzMzQ0MnLCAnIzMzMzNGRicsICcjMzM2NkNDJywgJyMzMzY2RkYnLCAnIzMzOTlDQycsICcjMzM5OUZGJywgJyMzM0NDMDAnLCAnIzMzQ0MzMycsICcjMzNDQzY2JywgJyMzM0NDOTknLCAnIzMzQ0NDQycsICcjMzNDQ0ZGJywgJyM2NjAwQ0MnLCAnIzY2MDBGRicsICcjNjYzM0NDJywgJyM2NjMzRkYnLCAnIzY2Q0MwMCcsICcjNjZDQzMzJywgJyM5OTAwQ0MnLCAnIzk5MDBGRicsICcjOTkzM0NDJywgJyM5OTMzRkYnLCAnIzk5Q0MwMCcsICcjOTlDQzMzJywgJyNDQzAwMDAnLCAnI0NDMDAzMycsICcjQ0MwMDY2JywgJyNDQzAwOTknLCAnI0NDMDBDQycsICcjQ0MwMEZGJywgJyNDQzMzMDAnLCAnI0NDMzMzMycsICcjQ0MzMzY2JywgJyNDQzMzOTknLCAnI0NDMzNDQycsICcjQ0MzM0ZGJywgJyNDQzY2MDAnLCAnI0NDNjYzMycsICcjQ0M5OTAwJywgJyNDQzk5MzMnLCAnI0NDQ0MwMCcsICcjQ0NDQzMzJywgJyNGRjAwMDAnLCAnI0ZGMDAzMycsICcjRkYwMDY2JywgJyNGRjAwOTknLCAnI0ZGMDBDQycsICcjRkYwMEZGJywgJyNGRjMzMDAnLCAnI0ZGMzMzMycsICcjRkYzMzY2JywgJyNGRjMzOTknLCAnI0ZGMzNDQycsICcjRkYzM0ZGJywgJyNGRjY2MDAnLCAnI0ZGNjYzMycsICcjRkY5OTAwJywgJyNGRjk5MzMnLCAnI0ZGQ0MwMCcsICcjRkZDQzMzJ107XG4vKipcbiAqIEN1cnJlbnRseSBvbmx5IFdlYktpdC1iYXNlZCBXZWIgSW5zcGVjdG9ycywgRmlyZWZveCA+PSB2MzEsXG4gKiBhbmQgdGhlIEZpcmVidWcgZXh0ZW5zaW9uIChhbnkgRmlyZWZveCB2ZXJzaW9uKSBhcmUga25vd25cbiAqIHRvIHN1cHBvcnQgXCIlY1wiIENTUyBjdXN0b21pemF0aW9ucy5cbiAqXG4gKiBUT0RPOiBhZGQgYSBgbG9jYWxTdG9yYWdlYCB2YXJpYWJsZSB0byBleHBsaWNpdGx5IGVuYWJsZS9kaXNhYmxlIGNvbG9yc1xuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29tcGxleGl0eVxuXG5mdW5jdGlvbiB1c2VDb2xvcnMoKSB7XG4gIC8vIE5COiBJbiBhbiBFbGVjdHJvbiBwcmVsb2FkIHNjcmlwdCwgZG9jdW1lbnQgd2lsbCBiZSBkZWZpbmVkIGJ1dCBub3QgZnVsbHlcbiAgLy8gaW5pdGlhbGl6ZWQuIFNpbmNlIHdlIGtub3cgd2UncmUgaW4gQ2hyb21lLCB3ZSdsbCBqdXN0IGRldGVjdCB0aGlzIGNhc2VcbiAgLy8gZXhwbGljaXRseVxuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LnByb2Nlc3MgJiYgKHdpbmRvdy5wcm9jZXNzLnR5cGUgPT09ICdyZW5kZXJlcicgfHwgd2luZG93LnByb2Nlc3MuX19ud2pzKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IC8vIEludGVybmV0IEV4cGxvcmVyIGFuZCBFZGdlIGRvIG5vdCBzdXBwb3J0IGNvbG9ycy5cblxuXG4gIGlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IudXNlckFnZW50ICYmIG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5tYXRjaCgvKGVkZ2V8dHJpZGVudClcXC8oXFxkKykvKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSAvLyBJcyB3ZWJraXQ/IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzE2NDU5NjA2LzM3Njc3M1xuICAvLyBkb2N1bWVudCBpcyB1bmRlZmluZWQgaW4gcmVhY3QtbmF0aXZlOiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QtbmF0aXZlL3B1bGwvMTYzMlxuXG5cbiAgcmV0dXJuIHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZSAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuV2Via2l0QXBwZWFyYW5jZSB8fCAvLyBJcyBmaXJlYnVnPyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8zOTgxMjAvMzc2NzczXG4gIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5jb25zb2xlICYmICh3aW5kb3cuY29uc29sZS5maXJlYnVnIHx8IHdpbmRvdy5jb25zb2xlLmV4Y2VwdGlvbiAmJiB3aW5kb3cuY29uc29sZS50YWJsZSkgfHwgLy8gSXMgZmlyZWZveCA+PSB2MzE/XG4gIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvVG9vbHMvV2ViX0NvbnNvbGUjU3R5bGluZ19tZXNzYWdlc1xuICB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IudXNlckFnZW50ICYmIG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5tYXRjaCgvZmlyZWZveFxcLyhcXGQrKS8pICYmIHBhcnNlSW50KFJlZ0V4cC4kMSwgMTApID49IDMxIHx8IC8vIERvdWJsZSBjaGVjayB3ZWJraXQgaW4gdXNlckFnZW50IGp1c3QgaW4gY2FzZSB3ZSBhcmUgaW4gYSB3b3JrZXJcbiAgdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkubWF0Y2goL2FwcGxld2Via2l0XFwvKFxcZCspLyk7XG59XG4vKipcbiAqIENvbG9yaXplIGxvZyBhcmd1bWVudHMgaWYgZW5hYmxlZC5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblxuZnVuY3Rpb24gZm9ybWF0QXJncyhhcmdzKSB7XG4gIGFyZ3NbMF0gPSAodGhpcy51c2VDb2xvcnMgPyAnJWMnIDogJycpICsgdGhpcy5uYW1lc3BhY2UgKyAodGhpcy51c2VDb2xvcnMgPyAnICVjJyA6ICcgJykgKyBhcmdzWzBdICsgKHRoaXMudXNlQ29sb3JzID8gJyVjICcgOiAnICcpICsgJysnICsgbW9kdWxlLmV4cG9ydHMuaHVtYW5pemUodGhpcy5kaWZmKTtcblxuICBpZiAoIXRoaXMudXNlQ29sb3JzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGMgPSAnY29sb3I6ICcgKyB0aGlzLmNvbG9yO1xuICBhcmdzLnNwbGljZSgxLCAwLCBjLCAnY29sb3I6IGluaGVyaXQnKTsgLy8gVGhlIGZpbmFsIFwiJWNcIiBpcyBzb21ld2hhdCB0cmlja3ksIGJlY2F1c2UgdGhlcmUgY291bGQgYmUgb3RoZXJcbiAgLy8gYXJndW1lbnRzIHBhc3NlZCBlaXRoZXIgYmVmb3JlIG9yIGFmdGVyIHRoZSAlYywgc28gd2UgbmVlZCB0b1xuICAvLyBmaWd1cmUgb3V0IHRoZSBjb3JyZWN0IGluZGV4IHRvIGluc2VydCB0aGUgQ1NTIGludG9cblxuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgbGFzdEMgPSAwO1xuICBhcmdzWzBdLnJlcGxhY2UoLyVbYS16QS1aJV0vZywgZnVuY3Rpb24gKG1hdGNoKSB7XG4gICAgaWYgKG1hdGNoID09PSAnJSUnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaW5kZXgrKztcblxuICAgIGlmIChtYXRjaCA9PT0gJyVjJykge1xuICAgICAgLy8gV2Ugb25seSBhcmUgaW50ZXJlc3RlZCBpbiB0aGUgKmxhc3QqICVjXG4gICAgICAvLyAodGhlIHVzZXIgbWF5IGhhdmUgcHJvdmlkZWQgdGhlaXIgb3duKVxuICAgICAgbGFzdEMgPSBpbmRleDtcbiAgICB9XG4gIH0pO1xuICBhcmdzLnNwbGljZShsYXN0QywgMCwgYyk7XG59XG4vKipcbiAqIEludm9rZXMgYGNvbnNvbGUubG9nKClgIHdoZW4gYXZhaWxhYmxlLlxuICogTm8tb3Agd2hlbiBgY29uc29sZS5sb2dgIGlzIG5vdCBhIFwiZnVuY3Rpb25cIi5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblxuZnVuY3Rpb24gbG9nKCkge1xuICB2YXIgX2NvbnNvbGU7XG5cbiAgLy8gVGhpcyBoYWNrZXJ5IGlzIHJlcXVpcmVkIGZvciBJRTgvOSwgd2hlcmVcbiAgLy8gdGhlIGBjb25zb2xlLmxvZ2AgZnVuY3Rpb24gZG9lc24ndCBoYXZlICdhcHBseSdcbiAgcmV0dXJuICh0eXBlb2YgY29uc29sZSA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiBfdHlwZW9mKGNvbnNvbGUpKSA9PT0gJ29iamVjdCcgJiYgY29uc29sZS5sb2cgJiYgKF9jb25zb2xlID0gY29uc29sZSkubG9nLmFwcGx5KF9jb25zb2xlLCBhcmd1bWVudHMpO1xufVxuLyoqXG4gKiBTYXZlIGBuYW1lc3BhY2VzYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuXG5mdW5jdGlvbiBzYXZlKG5hbWVzcGFjZXMpIHtcbiAgdHJ5IHtcbiAgICBpZiAobmFtZXNwYWNlcykge1xuICAgICAgZXhwb3J0cy5zdG9yYWdlLnNldEl0ZW0oJ2RlYnVnJywgbmFtZXNwYWNlcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV4cG9ydHMuc3RvcmFnZS5yZW1vdmVJdGVtKCdkZWJ1ZycpO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHsvLyBTd2FsbG93XG4gICAgLy8gWFhYIChAUWl4LSkgc2hvdWxkIHdlIGJlIGxvZ2dpbmcgdGhlc2U/XG4gIH1cbn1cbi8qKlxuICogTG9hZCBgbmFtZXNwYWNlc2AuXG4gKlxuICogQHJldHVybiB7U3RyaW5nfSByZXR1cm5zIHRoZSBwcmV2aW91c2x5IHBlcnNpc3RlZCBkZWJ1ZyBtb2Rlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuXG5mdW5jdGlvbiBsb2FkKCkge1xuICB2YXIgcjtcblxuICB0cnkge1xuICAgIHIgPSBleHBvcnRzLnN0b3JhZ2UuZ2V0SXRlbSgnZGVidWcnKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHt9IC8vIFN3YWxsb3dcbiAgLy8gWFhYIChAUWl4LSkgc2hvdWxkIHdlIGJlIGxvZ2dpbmcgdGhlc2U/XG4gIC8vIElmIGRlYnVnIGlzbid0IHNldCBpbiBMUywgYW5kIHdlJ3JlIGluIEVsZWN0cm9uLCB0cnkgdG8gbG9hZCAkREVCVUdcblxuXG4gIGlmICghciAmJiB0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgJ2VudicgaW4gcHJvY2Vzcykge1xuICAgIHIgPSBwcm9jZXNzLmVudi5ERUJVRztcbiAgfVxuXG4gIHJldHVybiByO1xufVxuLyoqXG4gKiBMb2NhbHN0b3JhZ2UgYXR0ZW1wdHMgdG8gcmV0dXJuIHRoZSBsb2NhbHN0b3JhZ2UuXG4gKlxuICogVGhpcyBpcyBuZWNlc3NhcnkgYmVjYXVzZSBzYWZhcmkgdGhyb3dzXG4gKiB3aGVuIGEgdXNlciBkaXNhYmxlcyBjb29raWVzL2xvY2Fsc3RvcmFnZVxuICogYW5kIHlvdSBhdHRlbXB0IHRvIGFjY2VzcyBpdC5cbiAqXG4gKiBAcmV0dXJuIHtMb2NhbFN0b3JhZ2V9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5cbmZ1bmN0aW9uIGxvY2Fsc3RvcmFnZSgpIHtcbiAgdHJ5IHtcbiAgICAvLyBUVk1MS2l0IChBcHBsZSBUViBKUyBSdW50aW1lKSBkb2VzIG5vdCBoYXZlIGEgd2luZG93IG9iamVjdCwganVzdCBsb2NhbFN0b3JhZ2UgaW4gdGhlIGdsb2JhbCBjb250ZXh0XG4gICAgLy8gVGhlIEJyb3dzZXIgYWxzbyBoYXMgbG9jYWxTdG9yYWdlIGluIHRoZSBnbG9iYWwgY29udGV4dC5cbiAgICByZXR1cm4gbG9jYWxTdG9yYWdlO1xuICB9IGNhdGNoIChlcnJvcikgey8vIFN3YWxsb3dcbiAgICAvLyBYWFggKEBRaXgtKSBzaG91bGQgd2UgYmUgbG9nZ2luZyB0aGVzZT9cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY29tbW9uJykoZXhwb3J0cyk7XG52YXIgZm9ybWF0dGVycyA9IG1vZHVsZS5leHBvcnRzLmZvcm1hdHRlcnM7XG4vKipcbiAqIE1hcCAlaiB0byBgSlNPTi5zdHJpbmdpZnkoKWAsIHNpbmNlIG5vIFdlYiBJbnNwZWN0b3JzIGRvIHRoYXQgYnkgZGVmYXVsdC5cbiAqL1xuXG5mb3JtYXR0ZXJzLmogPSBmdW5jdGlvbiAodikge1xuICB0cnkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gJ1tVbmV4cGVjdGVkSlNPTlBhcnNlRXJyb3JdOiAnICsgZXJyb3IubWVzc2FnZTtcbiAgfVxufTtcblxuXG59KS5jYWxsKHRoaXMseyBlbnY6IHt9IH0pXG5cbn0se1wiLi9jb21tb25cIjo1Nn1dLDU2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcblwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIFRoaXMgaXMgdGhlIGNvbW1vbiBsb2dpYyBmb3IgYm90aCB0aGUgTm9kZS5qcyBhbmQgd2ViIGJyb3dzZXJcbiAqIGltcGxlbWVudGF0aW9ucyBvZiBgZGVidWcoKWAuXG4gKi9cbmZ1bmN0aW9uIHNldHVwKGVudikge1xuICBjcmVhdGVEZWJ1Zy5kZWJ1ZyA9IGNyZWF0ZURlYnVnO1xuICBjcmVhdGVEZWJ1Zy5kZWZhdWx0ID0gY3JlYXRlRGVidWc7XG4gIGNyZWF0ZURlYnVnLmNvZXJjZSA9IGNvZXJjZTtcbiAgY3JlYXRlRGVidWcuZGlzYWJsZSA9IGRpc2FibGU7XG4gIGNyZWF0ZURlYnVnLmVuYWJsZSA9IGVuYWJsZTtcbiAgY3JlYXRlRGVidWcuZW5hYmxlZCA9IGVuYWJsZWQ7XG4gIGNyZWF0ZURlYnVnLmh1bWFuaXplID0gcmVxdWlyZSgnbXMnKTtcbiAgT2JqZWN0LmtleXMoZW52KS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBjcmVhdGVEZWJ1Z1trZXldID0gZW52W2tleV07XG4gIH0pO1xuICAvKipcbiAgKiBBY3RpdmUgYGRlYnVnYCBpbnN0YW5jZXMuXG4gICovXG5cbiAgY3JlYXRlRGVidWcuaW5zdGFuY2VzID0gW107XG4gIC8qKlxuICAqIFRoZSBjdXJyZW50bHkgYWN0aXZlIGRlYnVnIG1vZGUgbmFtZXMsIGFuZCBuYW1lcyB0byBza2lwLlxuICAqL1xuXG4gIGNyZWF0ZURlYnVnLm5hbWVzID0gW107XG4gIGNyZWF0ZURlYnVnLnNraXBzID0gW107XG4gIC8qKlxuICAqIE1hcCBvZiBzcGVjaWFsIFwiJW5cIiBoYW5kbGluZyBmdW5jdGlvbnMsIGZvciB0aGUgZGVidWcgXCJmb3JtYXRcIiBhcmd1bWVudC5cbiAgKlxuICAqIFZhbGlkIGtleSBuYW1lcyBhcmUgYSBzaW5nbGUsIGxvd2VyIG9yIHVwcGVyLWNhc2UgbGV0dGVyLCBpLmUuIFwiblwiIGFuZCBcIk5cIi5cbiAgKi9cblxuICBjcmVhdGVEZWJ1Zy5mb3JtYXR0ZXJzID0ge307XG4gIC8qKlxuICAqIFNlbGVjdHMgYSBjb2xvciBmb3IgYSBkZWJ1ZyBuYW1lc3BhY2VcbiAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlIFRoZSBuYW1lc3BhY2Ugc3RyaW5nIGZvciB0aGUgZm9yIHRoZSBkZWJ1ZyBpbnN0YW5jZSB0byBiZSBjb2xvcmVkXG4gICogQHJldHVybiB7TnVtYmVyfFN0cmluZ30gQW4gQU5TSSBjb2xvciBjb2RlIGZvciB0aGUgZ2l2ZW4gbmFtZXNwYWNlXG4gICogQGFwaSBwcml2YXRlXG4gICovXG5cbiAgZnVuY3Rpb24gc2VsZWN0Q29sb3IobmFtZXNwYWNlKSB7XG4gICAgdmFyIGhhc2ggPSAwO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuYW1lc3BhY2UubGVuZ3RoOyBpKyspIHtcbiAgICAgIGhhc2ggPSAoaGFzaCA8PCA1KSAtIGhhc2ggKyBuYW1lc3BhY2UuY2hhckNvZGVBdChpKTtcbiAgICAgIGhhc2ggfD0gMDsgLy8gQ29udmVydCB0byAzMmJpdCBpbnRlZ2VyXG4gICAgfVxuXG4gICAgcmV0dXJuIGNyZWF0ZURlYnVnLmNvbG9yc1tNYXRoLmFicyhoYXNoKSAlIGNyZWF0ZURlYnVnLmNvbG9ycy5sZW5ndGhdO1xuICB9XG5cbiAgY3JlYXRlRGVidWcuc2VsZWN0Q29sb3IgPSBzZWxlY3RDb2xvcjtcbiAgLyoqXG4gICogQ3JlYXRlIGEgZGVidWdnZXIgd2l0aCB0aGUgZ2l2ZW4gYG5hbWVzcGFjZWAuXG4gICpcbiAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlXG4gICogQHJldHVybiB7RnVuY3Rpb259XG4gICogQGFwaSBwdWJsaWNcbiAgKi9cblxuICBmdW5jdGlvbiBjcmVhdGVEZWJ1ZyhuYW1lc3BhY2UpIHtcbiAgICB2YXIgcHJldlRpbWU7XG5cbiAgICBmdW5jdGlvbiBkZWJ1ZygpIHtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICAvLyBEaXNhYmxlZD9cbiAgICAgIGlmICghZGVidWcuZW5hYmxlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBzZWxmID0gZGVidWc7IC8vIFNldCBgZGlmZmAgdGltZXN0YW1wXG5cbiAgICAgIHZhciBjdXJyID0gTnVtYmVyKG5ldyBEYXRlKCkpO1xuICAgICAgdmFyIG1zID0gY3VyciAtIChwcmV2VGltZSB8fCBjdXJyKTtcbiAgICAgIHNlbGYuZGlmZiA9IG1zO1xuICAgICAgc2VsZi5wcmV2ID0gcHJldlRpbWU7XG4gICAgICBzZWxmLmN1cnIgPSBjdXJyO1xuICAgICAgcHJldlRpbWUgPSBjdXJyO1xuICAgICAgYXJnc1swXSA9IGNyZWF0ZURlYnVnLmNvZXJjZShhcmdzWzBdKTtcblxuICAgICAgaWYgKHR5cGVvZiBhcmdzWzBdICE9PSAnc3RyaW5nJykge1xuICAgICAgICAvLyBBbnl0aGluZyBlbHNlIGxldCdzIGluc3BlY3Qgd2l0aCAlT1xuICAgICAgICBhcmdzLnVuc2hpZnQoJyVPJyk7XG4gICAgICB9IC8vIEFwcGx5IGFueSBgZm9ybWF0dGVyc2AgdHJhbnNmb3JtYXRpb25zXG5cblxuICAgICAgdmFyIGluZGV4ID0gMDtcbiAgICAgIGFyZ3NbMF0gPSBhcmdzWzBdLnJlcGxhY2UoLyUoW2EtekEtWiVdKS9nLCBmdW5jdGlvbiAobWF0Y2gsIGZvcm1hdCkge1xuICAgICAgICAvLyBJZiB3ZSBlbmNvdW50ZXIgYW4gZXNjYXBlZCAlIHRoZW4gZG9uJ3QgaW5jcmVhc2UgdGhlIGFycmF5IGluZGV4XG4gICAgICAgIGlmIChtYXRjaCA9PT0gJyUlJykge1xuICAgICAgICAgIHJldHVybiBtYXRjaDtcbiAgICAgICAgfVxuXG4gICAgICAgIGluZGV4Kys7XG4gICAgICAgIHZhciBmb3JtYXR0ZXIgPSBjcmVhdGVEZWJ1Zy5mb3JtYXR0ZXJzW2Zvcm1hdF07XG5cbiAgICAgICAgaWYgKHR5cGVvZiBmb3JtYXR0ZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICB2YXIgdmFsID0gYXJnc1tpbmRleF07XG4gICAgICAgICAgbWF0Y2ggPSBmb3JtYXR0ZXIuY2FsbChzZWxmLCB2YWwpOyAvLyBOb3cgd2UgbmVlZCB0byByZW1vdmUgYGFyZ3NbaW5kZXhdYCBzaW5jZSBpdCdzIGlubGluZWQgaW4gdGhlIGBmb3JtYXRgXG5cbiAgICAgICAgICBhcmdzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgaW5kZXgtLTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBtYXRjaDtcbiAgICAgIH0pOyAvLyBBcHBseSBlbnYtc3BlY2lmaWMgZm9ybWF0dGluZyAoY29sb3JzLCBldGMuKVxuXG4gICAgICBjcmVhdGVEZWJ1Zy5mb3JtYXRBcmdzLmNhbGwoc2VsZiwgYXJncyk7XG4gICAgICB2YXIgbG9nRm4gPSBzZWxmLmxvZyB8fCBjcmVhdGVEZWJ1Zy5sb2c7XG4gICAgICBsb2dGbi5hcHBseShzZWxmLCBhcmdzKTtcbiAgICB9XG5cbiAgICBkZWJ1Zy5uYW1lc3BhY2UgPSBuYW1lc3BhY2U7XG4gICAgZGVidWcuZW5hYmxlZCA9IGNyZWF0ZURlYnVnLmVuYWJsZWQobmFtZXNwYWNlKTtcbiAgICBkZWJ1Zy51c2VDb2xvcnMgPSBjcmVhdGVEZWJ1Zy51c2VDb2xvcnMoKTtcbiAgICBkZWJ1Zy5jb2xvciA9IHNlbGVjdENvbG9yKG5hbWVzcGFjZSk7XG4gICAgZGVidWcuZGVzdHJveSA9IGRlc3Ryb3k7XG4gICAgZGVidWcuZXh0ZW5kID0gZXh0ZW5kOyAvLyBEZWJ1Zy5mb3JtYXRBcmdzID0gZm9ybWF0QXJncztcbiAgICAvLyBkZWJ1Zy5yYXdMb2cgPSByYXdMb2c7XG4gICAgLy8gZW52LXNwZWNpZmljIGluaXRpYWxpemF0aW9uIGxvZ2ljIGZvciBkZWJ1ZyBpbnN0YW5jZXNcblxuICAgIGlmICh0eXBlb2YgY3JlYXRlRGVidWcuaW5pdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgY3JlYXRlRGVidWcuaW5pdChkZWJ1Zyk7XG4gICAgfVxuXG4gICAgY3JlYXRlRGVidWcuaW5zdGFuY2VzLnB1c2goZGVidWcpO1xuICAgIHJldHVybiBkZWJ1ZztcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgdmFyIGluZGV4ID0gY3JlYXRlRGVidWcuaW5zdGFuY2VzLmluZGV4T2YodGhpcyk7XG5cbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICBjcmVhdGVEZWJ1Zy5pbnN0YW5jZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGV4dGVuZChuYW1lc3BhY2UsIGRlbGltaXRlcikge1xuICAgIHJldHVybiBjcmVhdGVEZWJ1Zyh0aGlzLm5hbWVzcGFjZSArICh0eXBlb2YgZGVsaW1pdGVyID09PSAndW5kZWZpbmVkJyA/ICc6JyA6IGRlbGltaXRlcikgKyBuYW1lc3BhY2UpO1xuICB9XG4gIC8qKlxuICAqIEVuYWJsZXMgYSBkZWJ1ZyBtb2RlIGJ5IG5hbWVzcGFjZXMuIFRoaXMgY2FuIGluY2x1ZGUgbW9kZXNcbiAgKiBzZXBhcmF0ZWQgYnkgYSBjb2xvbiBhbmQgd2lsZGNhcmRzLlxuICAqXG4gICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZXNcbiAgKiBAYXBpIHB1YmxpY1xuICAqL1xuXG5cbiAgZnVuY3Rpb24gZW5hYmxlKG5hbWVzcGFjZXMpIHtcbiAgICBjcmVhdGVEZWJ1Zy5zYXZlKG5hbWVzcGFjZXMpO1xuICAgIGNyZWF0ZURlYnVnLm5hbWVzID0gW107XG4gICAgY3JlYXRlRGVidWcuc2tpcHMgPSBbXTtcbiAgICB2YXIgaTtcbiAgICB2YXIgc3BsaXQgPSAodHlwZW9mIG5hbWVzcGFjZXMgPT09ICdzdHJpbmcnID8gbmFtZXNwYWNlcyA6ICcnKS5zcGxpdCgvW1xccyxdKy8pO1xuICAgIHZhciBsZW4gPSBzcGxpdC5sZW5ndGg7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGlmICghc3BsaXRbaV0pIHtcbiAgICAgICAgLy8gaWdub3JlIGVtcHR5IHN0cmluZ3NcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIG5hbWVzcGFjZXMgPSBzcGxpdFtpXS5yZXBsYWNlKC9cXCovZywgJy4qPycpO1xuXG4gICAgICBpZiAobmFtZXNwYWNlc1swXSA9PT0gJy0nKSB7XG4gICAgICAgIGNyZWF0ZURlYnVnLnNraXBzLnB1c2gobmV3IFJlZ0V4cCgnXicgKyBuYW1lc3BhY2VzLnN1YnN0cigxKSArICckJykpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY3JlYXRlRGVidWcubmFtZXMucHVzaChuZXcgUmVnRXhwKCdeJyArIG5hbWVzcGFjZXMgKyAnJCcpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgY3JlYXRlRGVidWcuaW5zdGFuY2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaW5zdGFuY2UgPSBjcmVhdGVEZWJ1Zy5pbnN0YW5jZXNbaV07XG4gICAgICBpbnN0YW5jZS5lbmFibGVkID0gY3JlYXRlRGVidWcuZW5hYmxlZChpbnN0YW5jZS5uYW1lc3BhY2UpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgKiBEaXNhYmxlIGRlYnVnIG91dHB1dC5cbiAgKlxuICAqIEBhcGkgcHVibGljXG4gICovXG5cblxuICBmdW5jdGlvbiBkaXNhYmxlKCkge1xuICAgIGNyZWF0ZURlYnVnLmVuYWJsZSgnJyk7XG4gIH1cbiAgLyoqXG4gICogUmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiBtb2RlIG5hbWUgaXMgZW5hYmxlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICAqXG4gICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAqIEBhcGkgcHVibGljXG4gICovXG5cblxuICBmdW5jdGlvbiBlbmFibGVkKG5hbWUpIHtcbiAgICBpZiAobmFtZVtuYW1lLmxlbmd0aCAtIDFdID09PSAnKicpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHZhciBpO1xuICAgIHZhciBsZW47XG5cbiAgICBmb3IgKGkgPSAwLCBsZW4gPSBjcmVhdGVEZWJ1Zy5za2lwcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgaWYgKGNyZWF0ZURlYnVnLnNraXBzW2ldLnRlc3QobmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAoaSA9IDAsIGxlbiA9IGNyZWF0ZURlYnVnLm5hbWVzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBpZiAoY3JlYXRlRGVidWcubmFtZXNbaV0udGVzdChuYW1lKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLyoqXG4gICogQ29lcmNlIGB2YWxgLlxuICAqXG4gICogQHBhcmFtIHtNaXhlZH0gdmFsXG4gICogQHJldHVybiB7TWl4ZWR9XG4gICogQGFwaSBwcml2YXRlXG4gICovXG5cblxuICBmdW5jdGlvbiBjb2VyY2UodmFsKSB7XG4gICAgaWYgKHZhbCBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICByZXR1cm4gdmFsLnN0YWNrIHx8IHZhbC5tZXNzYWdlO1xuICAgIH1cblxuICAgIHJldHVybiB2YWw7XG4gIH1cblxuICBjcmVhdGVEZWJ1Zy5lbmFibGUoY3JlYXRlRGVidWcubG9hZCgpKTtcbiAgcmV0dXJuIGNyZWF0ZURlYnVnO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldHVwO1xuXG5cbn0se1wibXNcIjo1NH1dLDU3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbmlmICh0eXBlb2YgT2JqZWN0LmNyZWF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAvLyBpbXBsZW1lbnRhdGlvbiBmcm9tIHN0YW5kYXJkIG5vZGUuanMgJ3V0aWwnIG1vZHVsZVxuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3Rvcikge1xuICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yXG4gICAgY3Rvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ3Rvci5wcm90b3R5cGUsIHtcbiAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgIHZhbHVlOiBjdG9yLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICB9O1xufSBlbHNlIHtcbiAgLy8gb2xkIHNjaG9vbCBzaGltIGZvciBvbGQgYnJvd3NlcnNcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIHZhciBUZW1wQ3RvciA9IGZ1bmN0aW9uICgpIHt9XG4gICAgVGVtcEN0b3IucHJvdG90eXBlID0gc3VwZXJDdG9yLnByb3RvdHlwZVxuICAgIGN0b3IucHJvdG90eXBlID0gbmV3IFRlbXBDdG9yKClcbiAgICBjdG9yLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGN0b3JcbiAgfVxufVxuXG59LHt9XSw1ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4vKiEgSlNPTiB2My4zLjIgfCBodHRwOi8vYmVzdGllanMuZ2l0aHViLmlvL2pzb24zIHwgQ29weXJpZ2h0IDIwMTItMjAxNCwgS2l0IENhbWJyaWRnZSB8IGh0dHA6Ly9raXQubWl0LWxpY2Vuc2Uub3JnICovXG47KGZ1bmN0aW9uICgpIHtcbiAgLy8gRGV0ZWN0IHRoZSBgZGVmaW5lYCBmdW5jdGlvbiBleHBvc2VkIGJ5IGFzeW5jaHJvbm91cyBtb2R1bGUgbG9hZGVycy4gVGhlXG4gIC8vIHN0cmljdCBgZGVmaW5lYCBjaGVjayBpcyBuZWNlc3NhcnkgZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBgci5qc2AuXG4gIHZhciBpc0xvYWRlciA9IHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kO1xuXG4gIC8vIEEgc2V0IG9mIHR5cGVzIHVzZWQgdG8gZGlzdGluZ3Vpc2ggb2JqZWN0cyBmcm9tIHByaW1pdGl2ZXMuXG4gIHZhciBvYmplY3RUeXBlcyA9IHtcbiAgICBcImZ1bmN0aW9uXCI6IHRydWUsXG4gICAgXCJvYmplY3RcIjogdHJ1ZVxuICB9O1xuXG4gIC8vIERldGVjdCB0aGUgYGV4cG9ydHNgIG9iamVjdCBleHBvc2VkIGJ5IENvbW1vbkpTIGltcGxlbWVudGF0aW9ucy5cbiAgdmFyIGZyZWVFeHBvcnRzID0gb2JqZWN0VHlwZXNbdHlwZW9mIGV4cG9ydHNdICYmIGV4cG9ydHMgJiYgIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblxuICAvLyBVc2UgdGhlIGBnbG9iYWxgIG9iamVjdCBleHBvc2VkIGJ5IE5vZGUgKGluY2x1ZGluZyBCcm93c2VyaWZ5IHZpYVxuICAvLyBgaW5zZXJ0LW1vZHVsZS1nbG9iYWxzYCksIE5hcndoYWwsIGFuZCBSaW5nbyBhcyB0aGUgZGVmYXVsdCBjb250ZXh0LFxuICAvLyBhbmQgdGhlIGB3aW5kb3dgIG9iamVjdCBpbiBicm93c2Vycy4gUmhpbm8gZXhwb3J0cyBhIGBnbG9iYWxgIGZ1bmN0aW9uXG4gIC8vIGluc3RlYWQuXG4gIHZhciByb290ID0gb2JqZWN0VHlwZXNbdHlwZW9mIHdpbmRvd10gJiYgd2luZG93IHx8IHRoaXMsXG4gICAgICBmcmVlR2xvYmFsID0gZnJlZUV4cG9ydHMgJiYgb2JqZWN0VHlwZXNbdHlwZW9mIG1vZHVsZV0gJiYgbW9kdWxlICYmICFtb2R1bGUubm9kZVR5cGUgJiYgdHlwZW9mIGdsb2JhbCA9PSBcIm9iamVjdFwiICYmIGdsb2JhbDtcblxuICBpZiAoZnJlZUdsb2JhbCAmJiAoZnJlZUdsb2JhbFtcImdsb2JhbFwiXSA9PT0gZnJlZUdsb2JhbCB8fCBmcmVlR2xvYmFsW1wid2luZG93XCJdID09PSBmcmVlR2xvYmFsIHx8IGZyZWVHbG9iYWxbXCJzZWxmXCJdID09PSBmcmVlR2xvYmFsKSkge1xuICAgIHJvb3QgPSBmcmVlR2xvYmFsO1xuICB9XG5cbiAgLy8gUHVibGljOiBJbml0aWFsaXplcyBKU09OIDMgdXNpbmcgdGhlIGdpdmVuIGBjb250ZXh0YCBvYmplY3QsIGF0dGFjaGluZyB0aGVcbiAgLy8gYHN0cmluZ2lmeWAgYW5kIGBwYXJzZWAgZnVuY3Rpb25zIHRvIHRoZSBzcGVjaWZpZWQgYGV4cG9ydHNgIG9iamVjdC5cbiAgZnVuY3Rpb24gcnVuSW5Db250ZXh0KGNvbnRleHQsIGV4cG9ydHMpIHtcbiAgICBjb250ZXh0IHx8IChjb250ZXh0ID0gcm9vdFtcIk9iamVjdFwiXSgpKTtcbiAgICBleHBvcnRzIHx8IChleHBvcnRzID0gcm9vdFtcIk9iamVjdFwiXSgpKTtcblxuICAgIC8vIE5hdGl2ZSBjb25zdHJ1Y3RvciBhbGlhc2VzLlxuICAgIHZhciBOdW1iZXIgPSBjb250ZXh0W1wiTnVtYmVyXCJdIHx8IHJvb3RbXCJOdW1iZXJcIl0sXG4gICAgICAgIFN0cmluZyA9IGNvbnRleHRbXCJTdHJpbmdcIl0gfHwgcm9vdFtcIlN0cmluZ1wiXSxcbiAgICAgICAgT2JqZWN0ID0gY29udGV4dFtcIk9iamVjdFwiXSB8fCByb290W1wiT2JqZWN0XCJdLFxuICAgICAgICBEYXRlID0gY29udGV4dFtcIkRhdGVcIl0gfHwgcm9vdFtcIkRhdGVcIl0sXG4gICAgICAgIFN5bnRheEVycm9yID0gY29udGV4dFtcIlN5bnRheEVycm9yXCJdIHx8IHJvb3RbXCJTeW50YXhFcnJvclwiXSxcbiAgICAgICAgVHlwZUVycm9yID0gY29udGV4dFtcIlR5cGVFcnJvclwiXSB8fCByb290W1wiVHlwZUVycm9yXCJdLFxuICAgICAgICBNYXRoID0gY29udGV4dFtcIk1hdGhcIl0gfHwgcm9vdFtcIk1hdGhcIl0sXG4gICAgICAgIG5hdGl2ZUpTT04gPSBjb250ZXh0W1wiSlNPTlwiXSB8fCByb290W1wiSlNPTlwiXTtcblxuICAgIC8vIERlbGVnYXRlIHRvIHRoZSBuYXRpdmUgYHN0cmluZ2lmeWAgYW5kIGBwYXJzZWAgaW1wbGVtZW50YXRpb25zLlxuICAgIGlmICh0eXBlb2YgbmF0aXZlSlNPTiA9PSBcIm9iamVjdFwiICYmIG5hdGl2ZUpTT04pIHtcbiAgICAgIGV4cG9ydHMuc3RyaW5naWZ5ID0gbmF0aXZlSlNPTi5zdHJpbmdpZnk7XG4gICAgICBleHBvcnRzLnBhcnNlID0gbmF0aXZlSlNPTi5wYXJzZTtcbiAgICB9XG5cbiAgICAvLyBDb252ZW5pZW5jZSBhbGlhc2VzLlxuICAgIHZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGUsXG4gICAgICAgIGdldENsYXNzID0gb2JqZWN0UHJvdG8udG9TdHJpbmcsXG4gICAgICAgIGlzUHJvcGVydHksIGZvckVhY2gsIHVuZGVmO1xuXG4gICAgLy8gVGVzdCB0aGUgYERhdGUjZ2V0VVRDKmAgbWV0aG9kcy4gQmFzZWQgb24gd29yayBieSBAWWFmZmxlLlxuICAgIHZhciBpc0V4dGVuZGVkID0gbmV3IERhdGUoLTM1MDk4MjczMzQ1NzMyOTIpO1xuICAgIHRyeSB7XG4gICAgICAvLyBUaGUgYGdldFVUQ0Z1bGxZZWFyYCwgYE1vbnRoYCwgYW5kIGBEYXRlYCBtZXRob2RzIHJldHVybiBub25zZW5zaWNhbFxuICAgICAgLy8gcmVzdWx0cyBmb3IgY2VydGFpbiBkYXRlcyBpbiBPcGVyYSA+PSAxMC41My5cbiAgICAgIGlzRXh0ZW5kZWQgPSBpc0V4dGVuZGVkLmdldFVUQ0Z1bGxZZWFyKCkgPT0gLTEwOTI1MiAmJiBpc0V4dGVuZGVkLmdldFVUQ01vbnRoKCkgPT09IDAgJiYgaXNFeHRlbmRlZC5nZXRVVENEYXRlKCkgPT09IDEgJiZcbiAgICAgICAgLy8gU2FmYXJpIDwgMi4wLjIgc3RvcmVzIHRoZSBpbnRlcm5hbCBtaWxsaXNlY29uZCB0aW1lIHZhbHVlIGNvcnJlY3RseSxcbiAgICAgICAgLy8gYnV0IGNsaXBzIHRoZSB2YWx1ZXMgcmV0dXJuZWQgYnkgdGhlIGRhdGUgbWV0aG9kcyB0byB0aGUgcmFuZ2Ugb2ZcbiAgICAgICAgLy8gc2lnbmVkIDMyLWJpdCBpbnRlZ2VycyAoWy0yICoqIDMxLCAyICoqIDMxIC0gMV0pLlxuICAgICAgICBpc0V4dGVuZGVkLmdldFVUQ0hvdXJzKCkgPT0gMTAgJiYgaXNFeHRlbmRlZC5nZXRVVENNaW51dGVzKCkgPT0gMzcgJiYgaXNFeHRlbmRlZC5nZXRVVENTZWNvbmRzKCkgPT0gNiAmJiBpc0V4dGVuZGVkLmdldFVUQ01pbGxpc2Vjb25kcygpID09IDcwODtcbiAgICB9IGNhdGNoIChleGNlcHRpb24pIHt9XG5cbiAgICAvLyBJbnRlcm5hbDogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBuYXRpdmUgYEpTT04uc3RyaW5naWZ5YCBhbmQgYHBhcnNlYFxuICAgIC8vIGltcGxlbWVudGF0aW9ucyBhcmUgc3BlYy1jb21wbGlhbnQuIEJhc2VkIG9uIHdvcmsgYnkgS2VuIFNueWRlci5cbiAgICBmdW5jdGlvbiBoYXMobmFtZSkge1xuICAgICAgaWYgKGhhc1tuYW1lXSAhPT0gdW5kZWYpIHtcbiAgICAgICAgLy8gUmV0dXJuIGNhY2hlZCBmZWF0dXJlIHRlc3QgcmVzdWx0LlxuICAgICAgICByZXR1cm4gaGFzW25hbWVdO1xuICAgICAgfVxuICAgICAgdmFyIGlzU3VwcG9ydGVkO1xuICAgICAgaWYgKG5hbWUgPT0gXCJidWctc3RyaW5nLWNoYXItaW5kZXhcIikge1xuICAgICAgICAvLyBJRSA8PSA3IGRvZXNuJ3Qgc3VwcG9ydCBhY2Nlc3Npbmcgc3RyaW5nIGNoYXJhY3RlcnMgdXNpbmcgc3F1YXJlXG4gICAgICAgIC8vIGJyYWNrZXQgbm90YXRpb24uIElFIDggb25seSBzdXBwb3J0cyB0aGlzIGZvciBwcmltaXRpdmVzLlxuICAgICAgICBpc1N1cHBvcnRlZCA9IFwiYVwiWzBdICE9IFwiYVwiO1xuICAgICAgfSBlbHNlIGlmIChuYW1lID09IFwianNvblwiKSB7XG4gICAgICAgIC8vIEluZGljYXRlcyB3aGV0aGVyIGJvdGggYEpTT04uc3RyaW5naWZ5YCBhbmQgYEpTT04ucGFyc2VgIGFyZVxuICAgICAgICAvLyBzdXBwb3J0ZWQuXG4gICAgICAgIGlzU3VwcG9ydGVkID0gaGFzKFwianNvbi1zdHJpbmdpZnlcIikgJiYgaGFzKFwianNvbi1wYXJzZVwiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciB2YWx1ZSwgc2VyaWFsaXplZCA9ICd7XCJhXCI6WzEsdHJ1ZSxmYWxzZSxudWxsLFwiXFxcXHUwMDAwXFxcXGJcXFxcblxcXFxmXFxcXHJcXFxcdFwiXX0nO1xuICAgICAgICAvLyBUZXN0IGBKU09OLnN0cmluZ2lmeWAuXG4gICAgICAgIGlmIChuYW1lID09IFwianNvbi1zdHJpbmdpZnlcIikge1xuICAgICAgICAgIHZhciBzdHJpbmdpZnkgPSBleHBvcnRzLnN0cmluZ2lmeSwgc3RyaW5naWZ5U3VwcG9ydGVkID0gdHlwZW9mIHN0cmluZ2lmeSA9PSBcImZ1bmN0aW9uXCIgJiYgaXNFeHRlbmRlZDtcbiAgICAgICAgICBpZiAoc3RyaW5naWZ5U3VwcG9ydGVkKSB7XG4gICAgICAgICAgICAvLyBBIHRlc3QgZnVuY3Rpb24gb2JqZWN0IHdpdGggYSBjdXN0b20gYHRvSlNPTmAgbWV0aG9kLlxuICAgICAgICAgICAgKHZhbHVlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgIH0pLnRvSlNPTiA9IHZhbHVlO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgc3RyaW5naWZ5U3VwcG9ydGVkID1cbiAgICAgICAgICAgICAgICAvLyBGaXJlZm94IDMuMWIxIGFuZCBiMiBzZXJpYWxpemUgc3RyaW5nLCBudW1iZXIsIGFuZCBib29sZWFuXG4gICAgICAgICAgICAgICAgLy8gcHJpbWl0aXZlcyBhcyBvYmplY3QgbGl0ZXJhbHMuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KDApID09PSBcIjBcIiAmJlxuICAgICAgICAgICAgICAgIC8vIEZGIDMuMWIxLCBiMiwgYW5kIEpTT04gMiBzZXJpYWxpemUgd3JhcHBlZCBwcmltaXRpdmVzIGFzIG9iamVjdFxuICAgICAgICAgICAgICAgIC8vIGxpdGVyYWxzLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShuZXcgTnVtYmVyKCkpID09PSBcIjBcIiAmJlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShuZXcgU3RyaW5nKCkpID09ICdcIlwiJyAmJlxuICAgICAgICAgICAgICAgIC8vIEZGIDMuMWIxLCAyIHRocm93IGFuIGVycm9yIGlmIHRoZSB2YWx1ZSBpcyBgbnVsbGAsIGB1bmRlZmluZWRgLCBvclxuICAgICAgICAgICAgICAgIC8vIGRvZXMgbm90IGRlZmluZSBhIGNhbm9uaWNhbCBKU09OIHJlcHJlc2VudGF0aW9uICh0aGlzIGFwcGxpZXMgdG9cbiAgICAgICAgICAgICAgICAvLyBvYmplY3RzIHdpdGggYHRvSlNPTmAgcHJvcGVydGllcyBhcyB3ZWxsLCAqdW5sZXNzKiB0aGV5IGFyZSBuZXN0ZWRcbiAgICAgICAgICAgICAgICAvLyB3aXRoaW4gYW4gb2JqZWN0IG9yIGFycmF5KS5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkoZ2V0Q2xhc3MpID09PSB1bmRlZiAmJlxuICAgICAgICAgICAgICAgIC8vIElFIDggc2VyaWFsaXplcyBgdW5kZWZpbmVkYCBhcyBgXCJ1bmRlZmluZWRcImAuIFNhZmFyaSA8PSA1LjEuNyBhbmRcbiAgICAgICAgICAgICAgICAvLyBGRiAzLjFiMyBwYXNzIHRoaXMgdGVzdC5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkodW5kZWYpID09PSB1bmRlZiAmJlxuICAgICAgICAgICAgICAgIC8vIFNhZmFyaSA8PSA1LjEuNyBhbmQgRkYgMy4xYjMgdGhyb3cgYEVycm9yYHMgYW5kIGBUeXBlRXJyb3JgcyxcbiAgICAgICAgICAgICAgICAvLyByZXNwZWN0aXZlbHksIGlmIHRoZSB2YWx1ZSBpcyBvbWl0dGVkIGVudGlyZWx5LlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeSgpID09PSB1bmRlZiAmJlxuICAgICAgICAgICAgICAgIC8vIEZGIDMuMWIxLCAyIHRocm93IGFuIGVycm9yIGlmIHRoZSBnaXZlbiB2YWx1ZSBpcyBub3QgYSBudW1iZXIsXG4gICAgICAgICAgICAgICAgLy8gc3RyaW5nLCBhcnJheSwgb2JqZWN0LCBCb29sZWFuLCBvciBgbnVsbGAgbGl0ZXJhbC4gVGhpcyBhcHBsaWVzIHRvXG4gICAgICAgICAgICAgICAgLy8gb2JqZWN0cyB3aXRoIGN1c3RvbSBgdG9KU09OYCBtZXRob2RzIGFzIHdlbGwsIHVubGVzcyB0aGV5IGFyZSBuZXN0ZWRcbiAgICAgICAgICAgICAgICAvLyBpbnNpZGUgb2JqZWN0IG9yIGFycmF5IGxpdGVyYWxzLiBZVUkgMy4wLjBiMSBpZ25vcmVzIGN1c3RvbSBgdG9KU09OYFxuICAgICAgICAgICAgICAgIC8vIG1ldGhvZHMgZW50aXJlbHkuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KHZhbHVlKSA9PT0gXCIxXCIgJiZcbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkoW3ZhbHVlXSkgPT0gXCJbMV1cIiAmJlxuICAgICAgICAgICAgICAgIC8vIFByb3RvdHlwZSA8PSAxLjYuMSBzZXJpYWxpemVzIGBbdW5kZWZpbmVkXWAgYXMgYFwiW11cImAgaW5zdGVhZCBvZlxuICAgICAgICAgICAgICAgIC8vIGBcIltudWxsXVwiYC5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkoW3VuZGVmXSkgPT0gXCJbbnVsbF1cIiAmJlxuICAgICAgICAgICAgICAgIC8vIFlVSSAzLjAuMGIxIGZhaWxzIHRvIHNlcmlhbGl6ZSBgbnVsbGAgbGl0ZXJhbHMuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KG51bGwpID09IFwibnVsbFwiICYmXG4gICAgICAgICAgICAgICAgLy8gRkYgMy4xYjEsIDIgaGFsdHMgc2VyaWFsaXphdGlvbiBpZiBhbiBhcnJheSBjb250YWlucyBhIGZ1bmN0aW9uOlxuICAgICAgICAgICAgICAgIC8vIGBbMSwgdHJ1ZSwgZ2V0Q2xhc3MsIDFdYCBzZXJpYWxpemVzIGFzIFwiWzEsdHJ1ZSxdLFwiLiBGRiAzLjFiM1xuICAgICAgICAgICAgICAgIC8vIGVsaWRlcyBub24tSlNPTiB2YWx1ZXMgZnJvbSBvYmplY3RzIGFuZCBhcnJheXMsIHVubGVzcyB0aGV5XG4gICAgICAgICAgICAgICAgLy8gZGVmaW5lIGN1c3RvbSBgdG9KU09OYCBtZXRob2RzLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShbdW5kZWYsIGdldENsYXNzLCBudWxsXSkgPT0gXCJbbnVsbCxudWxsLG51bGxdXCIgJiZcbiAgICAgICAgICAgICAgICAvLyBTaW1wbGUgc2VyaWFsaXphdGlvbiB0ZXN0LiBGRiAzLjFiMSB1c2VzIFVuaWNvZGUgZXNjYXBlIHNlcXVlbmNlc1xuICAgICAgICAgICAgICAgIC8vIHdoZXJlIGNoYXJhY3RlciBlc2NhcGUgY29kZXMgYXJlIGV4cGVjdGVkIChlLmcuLCBgXFxiYCA9PiBgXFx1MDAwOGApLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeSh7IFwiYVwiOiBbdmFsdWUsIHRydWUsIGZhbHNlLCBudWxsLCBcIlxceDAwXFxiXFxuXFxmXFxyXFx0XCJdIH0pID09IHNlcmlhbGl6ZWQgJiZcbiAgICAgICAgICAgICAgICAvLyBGRiAzLjFiMSBhbmQgYjIgaWdub3JlIHRoZSBgZmlsdGVyYCBhbmQgYHdpZHRoYCBhcmd1bWVudHMuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KG51bGwsIHZhbHVlKSA9PT0gXCIxXCIgJiZcbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkoWzEsIDJdLCBudWxsLCAxKSA9PSBcIltcXG4gMSxcXG4gMlxcbl1cIiAmJlxuICAgICAgICAgICAgICAgIC8vIEpTT04gMiwgUHJvdG90eXBlIDw9IDEuNywgYW5kIG9sZGVyIFdlYktpdCBidWlsZHMgaW5jb3JyZWN0bHlcbiAgICAgICAgICAgICAgICAvLyBzZXJpYWxpemUgZXh0ZW5kZWQgeWVhcnMuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KG5ldyBEYXRlKC04LjY0ZTE1KSkgPT0gJ1wiLTI3MTgyMS0wNC0yMFQwMDowMDowMC4wMDBaXCInICYmXG4gICAgICAgICAgICAgICAgLy8gVGhlIG1pbGxpc2Vjb25kcyBhcmUgb3B0aW9uYWwgaW4gRVMgNSwgYnV0IHJlcXVpcmVkIGluIDUuMS5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkobmV3IERhdGUoOC42NGUxNSkpID09ICdcIisyNzU3NjAtMDktMTNUMDA6MDA6MDAuMDAwWlwiJyAmJlxuICAgICAgICAgICAgICAgIC8vIEZpcmVmb3ggPD0gMTEuMCBpbmNvcnJlY3RseSBzZXJpYWxpemVzIHllYXJzIHByaW9yIHRvIDAgYXMgbmVnYXRpdmVcbiAgICAgICAgICAgICAgICAvLyBmb3VyLWRpZ2l0IHllYXJzIGluc3RlYWQgb2Ygc2l4LWRpZ2l0IHllYXJzLiBDcmVkaXRzOiBAWWFmZmxlLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShuZXcgRGF0ZSgtNjIxOTg3NTUyZTUpKSA9PSAnXCItMDAwMDAxLTAxLTAxVDAwOjAwOjAwLjAwMFpcIicgJiZcbiAgICAgICAgICAgICAgICAvLyBTYWZhcmkgPD0gNS4xLjUgYW5kIE9wZXJhID49IDEwLjUzIGluY29ycmVjdGx5IHNlcmlhbGl6ZSBtaWxsaXNlY29uZFxuICAgICAgICAgICAgICAgIC8vIHZhbHVlcyBsZXNzIHRoYW4gMTAwMC4gQ3JlZGl0czogQFlhZmZsZS5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkobmV3IERhdGUoLTEpKSA9PSAnXCIxOTY5LTEyLTMxVDIzOjU5OjU5Ljk5OVpcIic7XG4gICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHtcbiAgICAgICAgICAgICAgc3RyaW5naWZ5U3VwcG9ydGVkID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlzU3VwcG9ydGVkID0gc3RyaW5naWZ5U3VwcG9ydGVkO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRlc3QgYEpTT04ucGFyc2VgLlxuICAgICAgICBpZiAobmFtZSA9PSBcImpzb24tcGFyc2VcIikge1xuICAgICAgICAgIHZhciBwYXJzZSA9IGV4cG9ydHMucGFyc2U7XG4gICAgICAgICAgaWYgKHR5cGVvZiBwYXJzZSA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIC8vIEZGIDMuMWIxLCBiMiB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhIGJhcmUgbGl0ZXJhbCBpcyBwcm92aWRlZC5cbiAgICAgICAgICAgICAgLy8gQ29uZm9ybWluZyBpbXBsZW1lbnRhdGlvbnMgc2hvdWxkIGFsc28gY29lcmNlIHRoZSBpbml0aWFsIGFyZ3VtZW50IHRvXG4gICAgICAgICAgICAgIC8vIGEgc3RyaW5nIHByaW9yIHRvIHBhcnNpbmcuXG4gICAgICAgICAgICAgIGlmIChwYXJzZShcIjBcIikgPT09IDAgJiYgIXBhcnNlKGZhbHNlKSkge1xuICAgICAgICAgICAgICAgIC8vIFNpbXBsZSBwYXJzaW5nIHRlc3QuXG4gICAgICAgICAgICAgICAgdmFsdWUgPSBwYXJzZShzZXJpYWxpemVkKTtcbiAgICAgICAgICAgICAgICB2YXIgcGFyc2VTdXBwb3J0ZWQgPSB2YWx1ZVtcImFcIl0ubGVuZ3RoID09IDUgJiYgdmFsdWVbXCJhXCJdWzBdID09PSAxO1xuICAgICAgICAgICAgICAgIGlmIChwYXJzZVN1cHBvcnRlZCkge1xuICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2FmYXJpIDw9IDUuMS4yIGFuZCBGRiAzLjFiMSBhbGxvdyB1bmVzY2FwZWQgdGFicyBpbiBzdHJpbmdzLlxuICAgICAgICAgICAgICAgICAgICBwYXJzZVN1cHBvcnRlZCA9ICFwYXJzZSgnXCJcXHRcIicpO1xuICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7fVxuICAgICAgICAgICAgICAgICAgaWYgKHBhcnNlU3VwcG9ydGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gRkYgNC4wIGFuZCA0LjAuMSBhbGxvdyBsZWFkaW5nIGArYCBzaWducyBhbmQgbGVhZGluZ1xuICAgICAgICAgICAgICAgICAgICAgIC8vIGRlY2ltYWwgcG9pbnRzLiBGRiA0LjAsIDQuMC4xLCBhbmQgSUUgOS0xMCBhbHNvIGFsbG93XG4gICAgICAgICAgICAgICAgICAgICAgLy8gY2VydGFpbiBvY3RhbCBsaXRlcmFscy5cbiAgICAgICAgICAgICAgICAgICAgICBwYXJzZVN1cHBvcnRlZCA9IHBhcnNlKFwiMDFcIikgIT09IDE7XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge31cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIGlmIChwYXJzZVN1cHBvcnRlZCkge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIEZGIDQuMCwgNC4wLjEsIGFuZCBSaGlubyAxLjdSMy1SNCBhbGxvdyB0cmFpbGluZyBkZWNpbWFsXG4gICAgICAgICAgICAgICAgICAgICAgLy8gcG9pbnRzLiBUaGVzZSBlbnZpcm9ubWVudHMsIGFsb25nIHdpdGggRkYgMy4xYjEgYW5kIDIsXG4gICAgICAgICAgICAgICAgICAgICAgLy8gYWxzbyBhbGxvdyB0cmFpbGluZyBjb21tYXMgaW4gSlNPTiBvYmplY3RzIGFuZCBhcnJheXMuXG4gICAgICAgICAgICAgICAgICAgICAgcGFyc2VTdXBwb3J0ZWQgPSBwYXJzZShcIjEuXCIpICE9PSAxO1xuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHt9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHtcbiAgICAgICAgICAgICAgcGFyc2VTdXBwb3J0ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaXNTdXBwb3J0ZWQgPSBwYXJzZVN1cHBvcnRlZDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGhhc1tuYW1lXSA9ICEhaXNTdXBwb3J0ZWQ7XG4gICAgfVxuXG4gICAgaWYgKCFoYXMoXCJqc29uXCIpKSB7XG4gICAgICAvLyBDb21tb24gYFtbQ2xhc3NdXWAgbmFtZSBhbGlhc2VzLlxuICAgICAgdmFyIGZ1bmN0aW9uQ2xhc3MgPSBcIltvYmplY3QgRnVuY3Rpb25dXCIsXG4gICAgICAgICAgZGF0ZUNsYXNzID0gXCJbb2JqZWN0IERhdGVdXCIsXG4gICAgICAgICAgbnVtYmVyQ2xhc3MgPSBcIltvYmplY3QgTnVtYmVyXVwiLFxuICAgICAgICAgIHN0cmluZ0NsYXNzID0gXCJbb2JqZWN0IFN0cmluZ11cIixcbiAgICAgICAgICBhcnJheUNsYXNzID0gXCJbb2JqZWN0IEFycmF5XVwiLFxuICAgICAgICAgIGJvb2xlYW5DbGFzcyA9IFwiW29iamVjdCBCb29sZWFuXVwiO1xuXG4gICAgICAvLyBEZXRlY3QgaW5jb21wbGV0ZSBzdXBwb3J0IGZvciBhY2Nlc3Npbmcgc3RyaW5nIGNoYXJhY3RlcnMgYnkgaW5kZXguXG4gICAgICB2YXIgY2hhckluZGV4QnVnZ3kgPSBoYXMoXCJidWctc3RyaW5nLWNoYXItaW5kZXhcIik7XG5cbiAgICAgIC8vIERlZmluZSBhZGRpdGlvbmFsIHV0aWxpdHkgbWV0aG9kcyBpZiB0aGUgYERhdGVgIG1ldGhvZHMgYXJlIGJ1Z2d5LlxuICAgICAgaWYgKCFpc0V4dGVuZGVkKSB7XG4gICAgICAgIHZhciBmbG9vciA9IE1hdGguZmxvb3I7XG4gICAgICAgIC8vIEEgbWFwcGluZyBiZXR3ZWVuIHRoZSBtb250aHMgb2YgdGhlIHllYXIgYW5kIHRoZSBudW1iZXIgb2YgZGF5cyBiZXR3ZWVuXG4gICAgICAgIC8vIEphbnVhcnkgMXN0IGFuZCB0aGUgZmlyc3Qgb2YgdGhlIHJlc3BlY3RpdmUgbW9udGguXG4gICAgICAgIHZhciBNb250aHMgPSBbMCwgMzEsIDU5LCA5MCwgMTIwLCAxNTEsIDE4MSwgMjEyLCAyNDMsIDI3MywgMzA0LCAzMzRdO1xuICAgICAgICAvLyBJbnRlcm5hbDogQ2FsY3VsYXRlcyB0aGUgbnVtYmVyIG9mIGRheXMgYmV0d2VlbiB0aGUgVW5peCBlcG9jaCBhbmQgdGhlXG4gICAgICAgIC8vIGZpcnN0IGRheSBvZiB0aGUgZ2l2ZW4gbW9udGguXG4gICAgICAgIHZhciBnZXREYXkgPSBmdW5jdGlvbiAoeWVhciwgbW9udGgpIHtcbiAgICAgICAgICByZXR1cm4gTW9udGhzW21vbnRoXSArIDM2NSAqICh5ZWFyIC0gMTk3MCkgKyBmbG9vcigoeWVhciAtIDE5NjkgKyAobW9udGggPSArKG1vbnRoID4gMSkpKSAvIDQpIC0gZmxvb3IoKHllYXIgLSAxOTAxICsgbW9udGgpIC8gMTAwKSArIGZsb29yKCh5ZWFyIC0gMTYwMSArIG1vbnRoKSAvIDQwMCk7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIC8vIEludGVybmFsOiBEZXRlcm1pbmVzIGlmIGEgcHJvcGVydHkgaXMgYSBkaXJlY3QgcHJvcGVydHkgb2YgdGhlIGdpdmVuXG4gICAgICAvLyBvYmplY3QuIERlbGVnYXRlcyB0byB0aGUgbmF0aXZlIGBPYmplY3QjaGFzT3duUHJvcGVydHlgIG1ldGhvZC5cbiAgICAgIGlmICghKGlzUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eSkpIHtcbiAgICAgICAgaXNQcm9wZXJ0eSA9IGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgICAgIHZhciBtZW1iZXJzID0ge30sIGNvbnN0cnVjdG9yO1xuICAgICAgICAgIGlmICgobWVtYmVycy5fX3Byb3RvX18gPSBudWxsLCBtZW1iZXJzLl9fcHJvdG9fXyA9IHtcbiAgICAgICAgICAgIC8vIFRoZSAqcHJvdG8qIHByb3BlcnR5IGNhbm5vdCBiZSBzZXQgbXVsdGlwbGUgdGltZXMgaW4gcmVjZW50XG4gICAgICAgICAgICAvLyB2ZXJzaW9ucyBvZiBGaXJlZm94IGFuZCBTZWFNb25rZXkuXG4gICAgICAgICAgICBcInRvU3RyaW5nXCI6IDFcbiAgICAgICAgICB9LCBtZW1iZXJzKS50b1N0cmluZyAhPSBnZXRDbGFzcykge1xuICAgICAgICAgICAgLy8gU2FmYXJpIDw9IDIuMC4zIGRvZXNuJ3QgaW1wbGVtZW50IGBPYmplY3QjaGFzT3duUHJvcGVydHlgLCBidXRcbiAgICAgICAgICAgIC8vIHN1cHBvcnRzIHRoZSBtdXRhYmxlICpwcm90byogcHJvcGVydHkuXG4gICAgICAgICAgICBpc1Byb3BlcnR5ID0gZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgICAgICAgICAgIC8vIENhcHR1cmUgYW5kIGJyZWFrIHRoZSBvYmplY3QncyBwcm90b3R5cGUgY2hhaW4gKHNlZSBzZWN0aW9uIDguNi4yXG4gICAgICAgICAgICAgIC8vIG9mIHRoZSBFUyA1LjEgc3BlYykuIFRoZSBwYXJlbnRoZXNpemVkIGV4cHJlc3Npb24gcHJldmVudHMgYW5cbiAgICAgICAgICAgICAgLy8gdW5zYWZlIHRyYW5zZm9ybWF0aW9uIGJ5IHRoZSBDbG9zdXJlIENvbXBpbGVyLlxuICAgICAgICAgICAgICB2YXIgb3JpZ2luYWwgPSB0aGlzLl9fcHJvdG9fXywgcmVzdWx0ID0gcHJvcGVydHkgaW4gKHRoaXMuX19wcm90b19fID0gbnVsbCwgdGhpcyk7XG4gICAgICAgICAgICAgIC8vIFJlc3RvcmUgdGhlIG9yaWdpbmFsIHByb3RvdHlwZSBjaGFpbi5cbiAgICAgICAgICAgICAgdGhpcy5fX3Byb3RvX18gPSBvcmlnaW5hbDtcbiAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIENhcHR1cmUgYSByZWZlcmVuY2UgdG8gdGhlIHRvcC1sZXZlbCBgT2JqZWN0YCBjb25zdHJ1Y3Rvci5cbiAgICAgICAgICAgIGNvbnN0cnVjdG9yID0gbWVtYmVycy5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIC8vIFVzZSB0aGUgYGNvbnN0cnVjdG9yYCBwcm9wZXJ0eSB0byBzaW11bGF0ZSBgT2JqZWN0I2hhc093blByb3BlcnR5YCBpblxuICAgICAgICAgICAgLy8gb3RoZXIgZW52aXJvbm1lbnRzLlxuICAgICAgICAgICAgaXNQcm9wZXJ0eSA9IGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgICAgICAgICB2YXIgcGFyZW50ID0gKHRoaXMuY29uc3RydWN0b3IgfHwgY29uc3RydWN0b3IpLnByb3RvdHlwZTtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BlcnR5IGluIHRoaXMgJiYgIShwcm9wZXJ0eSBpbiBwYXJlbnQgJiYgdGhpc1twcm9wZXJ0eV0gPT09IHBhcmVudFtwcm9wZXJ0eV0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG4gICAgICAgICAgbWVtYmVycyA9IG51bGw7XG4gICAgICAgICAgcmV0dXJuIGlzUHJvcGVydHkuY2FsbCh0aGlzLCBwcm9wZXJ0eSk7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIC8vIEludGVybmFsOiBOb3JtYWxpemVzIHRoZSBgZm9yLi4uaW5gIGl0ZXJhdGlvbiBhbGdvcml0aG0gYWNyb3NzXG4gICAgICAvLyBlbnZpcm9ubWVudHMuIEVhY2ggZW51bWVyYXRlZCBrZXkgaXMgeWllbGRlZCB0byBhIGBjYWxsYmFja2AgZnVuY3Rpb24uXG4gICAgICBmb3JFYWNoID0gZnVuY3Rpb24gKG9iamVjdCwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIHNpemUgPSAwLCBQcm9wZXJ0aWVzLCBtZW1iZXJzLCBwcm9wZXJ0eTtcblxuICAgICAgICAvLyBUZXN0cyBmb3IgYnVncyBpbiB0aGUgY3VycmVudCBlbnZpcm9ubWVudCdzIGBmb3IuLi5pbmAgYWxnb3JpdGhtLiBUaGVcbiAgICAgICAgLy8gYHZhbHVlT2ZgIHByb3BlcnR5IGluaGVyaXRzIHRoZSBub24tZW51bWVyYWJsZSBmbGFnIGZyb21cbiAgICAgICAgLy8gYE9iamVjdC5wcm90b3R5cGVgIGluIG9sZGVyIHZlcnNpb25zIG9mIElFLCBOZXRzY2FwZSwgYW5kIE1vemlsbGEuXG4gICAgICAgIChQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHRoaXMudmFsdWVPZiA9IDA7XG4gICAgICAgIH0pLnByb3RvdHlwZS52YWx1ZU9mID0gMDtcblxuICAgICAgICAvLyBJdGVyYXRlIG92ZXIgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIGBQcm9wZXJ0aWVzYCBjbGFzcy5cbiAgICAgICAgbWVtYmVycyA9IG5ldyBQcm9wZXJ0aWVzKCk7XG4gICAgICAgIGZvciAocHJvcGVydHkgaW4gbWVtYmVycykge1xuICAgICAgICAgIC8vIElnbm9yZSBhbGwgcHJvcGVydGllcyBpbmhlcml0ZWQgZnJvbSBgT2JqZWN0LnByb3RvdHlwZWAuXG4gICAgICAgICAgaWYgKGlzUHJvcGVydHkuY2FsbChtZW1iZXJzLCBwcm9wZXJ0eSkpIHtcbiAgICAgICAgICAgIHNpemUrKztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgUHJvcGVydGllcyA9IG1lbWJlcnMgPSBudWxsO1xuXG4gICAgICAgIC8vIE5vcm1hbGl6ZSB0aGUgaXRlcmF0aW9uIGFsZ29yaXRobS5cbiAgICAgICAgaWYgKCFzaXplKSB7XG4gICAgICAgICAgLy8gQSBsaXN0IG9mIG5vbi1lbnVtZXJhYmxlIHByb3BlcnRpZXMgaW5oZXJpdGVkIGZyb20gYE9iamVjdC5wcm90b3R5cGVgLlxuICAgICAgICAgIG1lbWJlcnMgPSBbXCJ2YWx1ZU9mXCIsIFwidG9TdHJpbmdcIiwgXCJ0b0xvY2FsZVN0cmluZ1wiLCBcInByb3BlcnR5SXNFbnVtZXJhYmxlXCIsIFwiaXNQcm90b3R5cGVPZlwiLCBcImhhc093blByb3BlcnR5XCIsIFwiY29uc3RydWN0b3JcIl07XG4gICAgICAgICAgLy8gSUUgPD0gOCwgTW96aWxsYSAxLjAsIGFuZCBOZXRzY2FwZSA2LjIgaWdub3JlIHNoYWRvd2VkIG5vbi1lbnVtZXJhYmxlXG4gICAgICAgICAgLy8gcHJvcGVydGllcy5cbiAgICAgICAgICBmb3JFYWNoID0gZnVuY3Rpb24gKG9iamVjdCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHZhciBpc0Z1bmN0aW9uID0gZ2V0Q2xhc3MuY2FsbChvYmplY3QpID09IGZ1bmN0aW9uQ2xhc3MsIHByb3BlcnR5LCBsZW5ndGg7XG4gICAgICAgICAgICB2YXIgaGFzUHJvcGVydHkgPSAhaXNGdW5jdGlvbiAmJiB0eXBlb2Ygb2JqZWN0LmNvbnN0cnVjdG9yICE9IFwiZnVuY3Rpb25cIiAmJiBvYmplY3RUeXBlc1t0eXBlb2Ygb2JqZWN0Lmhhc093blByb3BlcnR5XSAmJiBvYmplY3QuaGFzT3duUHJvcGVydHkgfHwgaXNQcm9wZXJ0eTtcbiAgICAgICAgICAgIGZvciAocHJvcGVydHkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgICAgIC8vIEdlY2tvIDw9IDEuMCBlbnVtZXJhdGVzIHRoZSBgcHJvdG90eXBlYCBwcm9wZXJ0eSBvZiBmdW5jdGlvbnMgdW5kZXJcbiAgICAgICAgICAgICAgLy8gY2VydGFpbiBjb25kaXRpb25zOyBJRSBkb2VzIG5vdC5cbiAgICAgICAgICAgICAgaWYgKCEoaXNGdW5jdGlvbiAmJiBwcm9wZXJ0eSA9PSBcInByb3RvdHlwZVwiKSAmJiBoYXNQcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2socHJvcGVydHkpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBNYW51YWxseSBpbnZva2UgdGhlIGNhbGxiYWNrIGZvciBlYWNoIG5vbi1lbnVtZXJhYmxlIHByb3BlcnR5LlxuICAgICAgICAgICAgZm9yIChsZW5ndGggPSBtZW1iZXJzLmxlbmd0aDsgcHJvcGVydHkgPSBtZW1iZXJzWy0tbGVuZ3RoXTsgaGFzUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KSAmJiBjYWxsYmFjayhwcm9wZXJ0eSkpO1xuICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSBpZiAoc2l6ZSA9PSAyKSB7XG4gICAgICAgICAgLy8gU2FmYXJpIDw9IDIuMC40IGVudW1lcmF0ZXMgc2hhZG93ZWQgcHJvcGVydGllcyB0d2ljZS5cbiAgICAgICAgICBmb3JFYWNoID0gZnVuY3Rpb24gKG9iamVjdCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIC8vIENyZWF0ZSBhIHNldCBvZiBpdGVyYXRlZCBwcm9wZXJ0aWVzLlxuICAgICAgICAgICAgdmFyIG1lbWJlcnMgPSB7fSwgaXNGdW5jdGlvbiA9IGdldENsYXNzLmNhbGwob2JqZWN0KSA9PSBmdW5jdGlvbkNsYXNzLCBwcm9wZXJ0eTtcbiAgICAgICAgICAgIGZvciAocHJvcGVydHkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgICAgIC8vIFN0b3JlIGVhY2ggcHJvcGVydHkgbmFtZSB0byBwcmV2ZW50IGRvdWJsZSBlbnVtZXJhdGlvbi4gVGhlXG4gICAgICAgICAgICAgIC8vIGBwcm90b3R5cGVgIHByb3BlcnR5IG9mIGZ1bmN0aW9ucyBpcyBub3QgZW51bWVyYXRlZCBkdWUgdG8gY3Jvc3MtXG4gICAgICAgICAgICAgIC8vIGVudmlyb25tZW50IGluY29uc2lzdGVuY2llcy5cbiAgICAgICAgICAgICAgaWYgKCEoaXNGdW5jdGlvbiAmJiBwcm9wZXJ0eSA9PSBcInByb3RvdHlwZVwiKSAmJiAhaXNQcm9wZXJ0eS5jYWxsKG1lbWJlcnMsIHByb3BlcnR5KSAmJiAobWVtYmVyc1twcm9wZXJ0eV0gPSAxKSAmJiBpc1Byb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhwcm9wZXJ0eSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIE5vIGJ1Z3MgZGV0ZWN0ZWQ7IHVzZSB0aGUgc3RhbmRhcmQgYGZvci4uLmluYCBhbGdvcml0aG0uXG4gICAgICAgICAgZm9yRWFjaCA9IGZ1bmN0aW9uIChvYmplY3QsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB2YXIgaXNGdW5jdGlvbiA9IGdldENsYXNzLmNhbGwob2JqZWN0KSA9PSBmdW5jdGlvbkNsYXNzLCBwcm9wZXJ0eSwgaXNDb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIGZvciAocHJvcGVydHkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgICAgIGlmICghKGlzRnVuY3Rpb24gJiYgcHJvcGVydHkgPT0gXCJwcm90b3R5cGVcIikgJiYgaXNQcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpICYmICEoaXNDb25zdHJ1Y3RvciA9IHByb3BlcnR5ID09PSBcImNvbnN0cnVjdG9yXCIpKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2socHJvcGVydHkpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBNYW51YWxseSBpbnZva2UgdGhlIGNhbGxiYWNrIGZvciB0aGUgYGNvbnN0cnVjdG9yYCBwcm9wZXJ0eSBkdWUgdG9cbiAgICAgICAgICAgIC8vIGNyb3NzLWVudmlyb25tZW50IGluY29uc2lzdGVuY2llcy5cbiAgICAgICAgICAgIGlmIChpc0NvbnN0cnVjdG9yIHx8IGlzUHJvcGVydHkuY2FsbChvYmplY3QsIChwcm9wZXJ0eSA9IFwiY29uc3RydWN0b3JcIikpKSB7XG4gICAgICAgICAgICAgIGNhbGxiYWNrKHByb3BlcnR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmb3JFYWNoKG9iamVjdCwgY2FsbGJhY2spO1xuICAgICAgfTtcblxuICAgICAgLy8gUHVibGljOiBTZXJpYWxpemVzIGEgSmF2YVNjcmlwdCBgdmFsdWVgIGFzIGEgSlNPTiBzdHJpbmcuIFRoZSBvcHRpb25hbFxuICAgICAgLy8gYGZpbHRlcmAgYXJndW1lbnQgbWF5IHNwZWNpZnkgZWl0aGVyIGEgZnVuY3Rpb24gdGhhdCBhbHRlcnMgaG93IG9iamVjdCBhbmRcbiAgICAgIC8vIGFycmF5IG1lbWJlcnMgYXJlIHNlcmlhbGl6ZWQsIG9yIGFuIGFycmF5IG9mIHN0cmluZ3MgYW5kIG51bWJlcnMgdGhhdFxuICAgICAgLy8gaW5kaWNhdGVzIHdoaWNoIHByb3BlcnRpZXMgc2hvdWxkIGJlIHNlcmlhbGl6ZWQuIFRoZSBvcHRpb25hbCBgd2lkdGhgXG4gICAgICAvLyBhcmd1bWVudCBtYXkgYmUgZWl0aGVyIGEgc3RyaW5nIG9yIG51bWJlciB0aGF0IHNwZWNpZmllcyB0aGUgaW5kZW50YXRpb25cbiAgICAgIC8vIGxldmVsIG9mIHRoZSBvdXRwdXQuXG4gICAgICBpZiAoIWhhcyhcImpzb24tc3RyaW5naWZ5XCIpKSB7XG4gICAgICAgIC8vIEludGVybmFsOiBBIG1hcCBvZiBjb250cm9sIGNoYXJhY3RlcnMgYW5kIHRoZWlyIGVzY2FwZWQgZXF1aXZhbGVudHMuXG4gICAgICAgIHZhciBFc2NhcGVzID0ge1xuICAgICAgICAgIDkyOiBcIlxcXFxcXFxcXCIsXG4gICAgICAgICAgMzQ6ICdcXFxcXCInLFxuICAgICAgICAgIDg6IFwiXFxcXGJcIixcbiAgICAgICAgICAxMjogXCJcXFxcZlwiLFxuICAgICAgICAgIDEwOiBcIlxcXFxuXCIsXG4gICAgICAgICAgMTM6IFwiXFxcXHJcIixcbiAgICAgICAgICA5OiBcIlxcXFx0XCJcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogQ29udmVydHMgYHZhbHVlYCBpbnRvIGEgemVyby1wYWRkZWQgc3RyaW5nIHN1Y2ggdGhhdCBpdHNcbiAgICAgICAgLy8gbGVuZ3RoIGlzIGF0IGxlYXN0IGVxdWFsIHRvIGB3aWR0aGAuIFRoZSBgd2lkdGhgIG11c3QgYmUgPD0gNi5cbiAgICAgICAgdmFyIGxlYWRpbmdaZXJvZXMgPSBcIjAwMDAwMFwiO1xuICAgICAgICB2YXIgdG9QYWRkZWRTdHJpbmcgPSBmdW5jdGlvbiAod2lkdGgsIHZhbHVlKSB7XG4gICAgICAgICAgLy8gVGhlIGB8fCAwYCBleHByZXNzaW9uIGlzIG5lY2Vzc2FyeSB0byB3b3JrIGFyb3VuZCBhIGJ1ZyBpblxuICAgICAgICAgIC8vIE9wZXJhIDw9IDcuNTR1MiB3aGVyZSBgMCA9PSAtMGAsIGJ1dCBgU3RyaW5nKC0wKSAhPT0gXCIwXCJgLlxuICAgICAgICAgIHJldHVybiAobGVhZGluZ1plcm9lcyArICh2YWx1ZSB8fCAwKSkuc2xpY2UoLXdpZHRoKTtcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogRG91YmxlLXF1b3RlcyBhIHN0cmluZyBgdmFsdWVgLCByZXBsYWNpbmcgYWxsIEFTQ0lJIGNvbnRyb2xcbiAgICAgICAgLy8gY2hhcmFjdGVycyAoY2hhcmFjdGVycyB3aXRoIGNvZGUgdW5pdCB2YWx1ZXMgYmV0d2VlbiAwIGFuZCAzMSkgd2l0aFxuICAgICAgICAvLyB0aGVpciBlc2NhcGVkIGVxdWl2YWxlbnRzLiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIHRoZVxuICAgICAgICAvLyBgUXVvdGUodmFsdWUpYCBvcGVyYXRpb24gZGVmaW5lZCBpbiBFUyA1LjEgc2VjdGlvbiAxNS4xMi4zLlxuICAgICAgICB2YXIgdW5pY29kZVByZWZpeCA9IFwiXFxcXHUwMFwiO1xuICAgICAgICB2YXIgcXVvdGUgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0ID0gJ1wiJywgaW5kZXggPSAwLCBsZW5ndGggPSB2YWx1ZS5sZW5ndGgsIHVzZUNoYXJJbmRleCA9ICFjaGFySW5kZXhCdWdneSB8fCBsZW5ndGggPiAxMDtcbiAgICAgICAgICB2YXIgc3ltYm9scyA9IHVzZUNoYXJJbmRleCAmJiAoY2hhckluZGV4QnVnZ3kgPyB2YWx1ZS5zcGxpdChcIlwiKSA6IHZhbHVlKTtcbiAgICAgICAgICBmb3IgKDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgIHZhciBjaGFyQ29kZSA9IHZhbHVlLmNoYXJDb2RlQXQoaW5kZXgpO1xuICAgICAgICAgICAgLy8gSWYgdGhlIGNoYXJhY3RlciBpcyBhIGNvbnRyb2wgY2hhcmFjdGVyLCBhcHBlbmQgaXRzIFVuaWNvZGUgb3JcbiAgICAgICAgICAgIC8vIHNob3J0aGFuZCBlc2NhcGUgc2VxdWVuY2U7IG90aGVyd2lzZSwgYXBwZW5kIHRoZSBjaGFyYWN0ZXIgYXMtaXMuXG4gICAgICAgICAgICBzd2l0Y2ggKGNoYXJDb2RlKSB7XG4gICAgICAgICAgICAgIGNhc2UgODogY2FzZSA5OiBjYXNlIDEwOiBjYXNlIDEyOiBjYXNlIDEzOiBjYXNlIDM0OiBjYXNlIDkyOlxuICAgICAgICAgICAgICAgIHJlc3VsdCArPSBFc2NhcGVzW2NoYXJDb2RlXTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBpZiAoY2hhckNvZGUgPCAzMikge1xuICAgICAgICAgICAgICAgICAgcmVzdWx0ICs9IHVuaWNvZGVQcmVmaXggKyB0b1BhZGRlZFN0cmluZygyLCBjaGFyQ29kZS50b1N0cmluZygxNikpO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc3VsdCArPSB1c2VDaGFySW5kZXggPyBzeW1ib2xzW2luZGV4XSA6IHZhbHVlLmNoYXJBdChpbmRleCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZXN1bHQgKyAnXCInO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEludGVybmFsOiBSZWN1cnNpdmVseSBzZXJpYWxpemVzIGFuIG9iamVjdC4gSW1wbGVtZW50cyB0aGVcbiAgICAgICAgLy8gYFN0cihrZXksIGhvbGRlcilgLCBgSk8odmFsdWUpYCwgYW5kIGBKQSh2YWx1ZSlgIG9wZXJhdGlvbnMuXG4gICAgICAgIHZhciBzZXJpYWxpemUgPSBmdW5jdGlvbiAocHJvcGVydHksIG9iamVjdCwgY2FsbGJhY2ssIHByb3BlcnRpZXMsIHdoaXRlc3BhY2UsIGluZGVudGF0aW9uLCBzdGFjaykge1xuICAgICAgICAgIHZhciB2YWx1ZSwgY2xhc3NOYW1lLCB5ZWFyLCBtb250aCwgZGF0ZSwgdGltZSwgaG91cnMsIG1pbnV0ZXMsIHNlY29uZHMsIG1pbGxpc2Vjb25kcywgcmVzdWx0cywgZWxlbWVudCwgaW5kZXgsIGxlbmd0aCwgcHJlZml4LCByZXN1bHQ7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIE5lY2Vzc2FyeSBmb3IgaG9zdCBvYmplY3Qgc3VwcG9ydC5cbiAgICAgICAgICAgIHZhbHVlID0gb2JqZWN0W3Byb3BlcnR5XTtcbiAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHt9XG4gICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiICYmIHZhbHVlKSB7XG4gICAgICAgICAgICBjbGFzc05hbWUgPSBnZXRDbGFzcy5jYWxsKHZhbHVlKTtcbiAgICAgICAgICAgIGlmIChjbGFzc05hbWUgPT0gZGF0ZUNsYXNzICYmICFpc1Byb3BlcnR5LmNhbGwodmFsdWUsIFwidG9KU09OXCIpKSB7XG4gICAgICAgICAgICAgIGlmICh2YWx1ZSA+IC0xIC8gMCAmJiB2YWx1ZSA8IDEgLyAwKSB7XG4gICAgICAgICAgICAgICAgLy8gRGF0ZXMgYXJlIHNlcmlhbGl6ZWQgYWNjb3JkaW5nIHRvIHRoZSBgRGF0ZSN0b0pTT05gIG1ldGhvZFxuICAgICAgICAgICAgICAgIC8vIHNwZWNpZmllZCBpbiBFUyA1LjEgc2VjdGlvbiAxNS45LjUuNDQuIFNlZSBzZWN0aW9uIDE1LjkuMS4xNVxuICAgICAgICAgICAgICAgIC8vIGZvciB0aGUgSVNPIDg2MDEgZGF0ZSB0aW1lIHN0cmluZyBmb3JtYXQuXG4gICAgICAgICAgICAgICAgaWYgKGdldERheSkge1xuICAgICAgICAgICAgICAgICAgLy8gTWFudWFsbHkgY29tcHV0ZSB0aGUgeWVhciwgbW9udGgsIGRhdGUsIGhvdXJzLCBtaW51dGVzLFxuICAgICAgICAgICAgICAgICAgLy8gc2Vjb25kcywgYW5kIG1pbGxpc2Vjb25kcyBpZiB0aGUgYGdldFVUQypgIG1ldGhvZHMgYXJlXG4gICAgICAgICAgICAgICAgICAvLyBidWdneS4gQWRhcHRlZCBmcm9tIEBZYWZmbGUncyBgZGF0ZS1zaGltYCBwcm9qZWN0LlxuICAgICAgICAgICAgICAgICAgZGF0ZSA9IGZsb29yKHZhbHVlIC8gODY0ZTUpO1xuICAgICAgICAgICAgICAgICAgZm9yICh5ZWFyID0gZmxvb3IoZGF0ZSAvIDM2NS4yNDI1KSArIDE5NzAgLSAxOyBnZXREYXkoeWVhciArIDEsIDApIDw9IGRhdGU7IHllYXIrKyk7XG4gICAgICAgICAgICAgICAgICBmb3IgKG1vbnRoID0gZmxvb3IoKGRhdGUgLSBnZXREYXkoeWVhciwgMCkpIC8gMzAuNDIpOyBnZXREYXkoeWVhciwgbW9udGggKyAxKSA8PSBkYXRlOyBtb250aCsrKTtcbiAgICAgICAgICAgICAgICAgIGRhdGUgPSAxICsgZGF0ZSAtIGdldERheSh5ZWFyLCBtb250aCk7XG4gICAgICAgICAgICAgICAgICAvLyBUaGUgYHRpbWVgIHZhbHVlIHNwZWNpZmllcyB0aGUgdGltZSB3aXRoaW4gdGhlIGRheSAoc2VlIEVTXG4gICAgICAgICAgICAgICAgICAvLyA1LjEgc2VjdGlvbiAxNS45LjEuMikuIFRoZSBmb3JtdWxhIGAoQSAlIEIgKyBCKSAlIEJgIGlzIHVzZWRcbiAgICAgICAgICAgICAgICAgIC8vIHRvIGNvbXB1dGUgYEEgbW9kdWxvIEJgLCBhcyB0aGUgYCVgIG9wZXJhdG9yIGRvZXMgbm90XG4gICAgICAgICAgICAgICAgICAvLyBjb3JyZXNwb25kIHRvIHRoZSBgbW9kdWxvYCBvcGVyYXRpb24gZm9yIG5lZ2F0aXZlIG51bWJlcnMuXG4gICAgICAgICAgICAgICAgICB0aW1lID0gKHZhbHVlICUgODY0ZTUgKyA4NjRlNSkgJSA4NjRlNTtcbiAgICAgICAgICAgICAgICAgIC8vIFRoZSBob3VycywgbWludXRlcywgc2Vjb25kcywgYW5kIG1pbGxpc2Vjb25kcyBhcmUgb2J0YWluZWQgYnlcbiAgICAgICAgICAgICAgICAgIC8vIGRlY29tcG9zaW5nIHRoZSB0aW1lIHdpdGhpbiB0aGUgZGF5LiBTZWUgc2VjdGlvbiAxNS45LjEuMTAuXG4gICAgICAgICAgICAgICAgICBob3VycyA9IGZsb29yKHRpbWUgLyAzNmU1KSAlIDI0O1xuICAgICAgICAgICAgICAgICAgbWludXRlcyA9IGZsb29yKHRpbWUgLyA2ZTQpICUgNjA7XG4gICAgICAgICAgICAgICAgICBzZWNvbmRzID0gZmxvb3IodGltZSAvIDFlMykgJSA2MDtcbiAgICAgICAgICAgICAgICAgIG1pbGxpc2Vjb25kcyA9IHRpbWUgJSAxZTM7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIHllYXIgPSB2YWx1ZS5nZXRVVENGdWxsWWVhcigpO1xuICAgICAgICAgICAgICAgICAgbW9udGggPSB2YWx1ZS5nZXRVVENNb250aCgpO1xuICAgICAgICAgICAgICAgICAgZGF0ZSA9IHZhbHVlLmdldFVUQ0RhdGUoKTtcbiAgICAgICAgICAgICAgICAgIGhvdXJzID0gdmFsdWUuZ2V0VVRDSG91cnMoKTtcbiAgICAgICAgICAgICAgICAgIG1pbnV0ZXMgPSB2YWx1ZS5nZXRVVENNaW51dGVzKCk7XG4gICAgICAgICAgICAgICAgICBzZWNvbmRzID0gdmFsdWUuZ2V0VVRDU2Vjb25kcygpO1xuICAgICAgICAgICAgICAgICAgbWlsbGlzZWNvbmRzID0gdmFsdWUuZ2V0VVRDTWlsbGlzZWNvbmRzKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIFNlcmlhbGl6ZSBleHRlbmRlZCB5ZWFycyBjb3JyZWN0bHkuXG4gICAgICAgICAgICAgICAgdmFsdWUgPSAoeWVhciA8PSAwIHx8IHllYXIgPj0gMWU0ID8gKHllYXIgPCAwID8gXCItXCIgOiBcIitcIikgKyB0b1BhZGRlZFN0cmluZyg2LCB5ZWFyIDwgMCA/IC15ZWFyIDogeWVhcikgOiB0b1BhZGRlZFN0cmluZyg0LCB5ZWFyKSkgK1xuICAgICAgICAgICAgICAgICAgXCItXCIgKyB0b1BhZGRlZFN0cmluZygyLCBtb250aCArIDEpICsgXCItXCIgKyB0b1BhZGRlZFN0cmluZygyLCBkYXRlKSArXG4gICAgICAgICAgICAgICAgICAvLyBNb250aHMsIGRhdGVzLCBob3VycywgbWludXRlcywgYW5kIHNlY29uZHMgc2hvdWxkIGhhdmUgdHdvXG4gICAgICAgICAgICAgICAgICAvLyBkaWdpdHM7IG1pbGxpc2Vjb25kcyBzaG91bGQgaGF2ZSB0aHJlZS5cbiAgICAgICAgICAgICAgICAgIFwiVFwiICsgdG9QYWRkZWRTdHJpbmcoMiwgaG91cnMpICsgXCI6XCIgKyB0b1BhZGRlZFN0cmluZygyLCBtaW51dGVzKSArIFwiOlwiICsgdG9QYWRkZWRTdHJpbmcoMiwgc2Vjb25kcykgK1xuICAgICAgICAgICAgICAgICAgLy8gTWlsbGlzZWNvbmRzIGFyZSBvcHRpb25hbCBpbiBFUyA1LjAsIGJ1dCByZXF1aXJlZCBpbiA1LjEuXG4gICAgICAgICAgICAgICAgICBcIi5cIiArIHRvUGFkZGVkU3RyaW5nKDMsIG1pbGxpc2Vjb25kcykgKyBcIlpcIjtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IG51bGw7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlLnRvSlNPTiA9PSBcImZ1bmN0aW9uXCIgJiYgKChjbGFzc05hbWUgIT0gbnVtYmVyQ2xhc3MgJiYgY2xhc3NOYW1lICE9IHN0cmluZ0NsYXNzICYmIGNsYXNzTmFtZSAhPSBhcnJheUNsYXNzKSB8fCBpc1Byb3BlcnR5LmNhbGwodmFsdWUsIFwidG9KU09OXCIpKSkge1xuICAgICAgICAgICAgICAvLyBQcm90b3R5cGUgPD0gMS42LjEgYWRkcyBub24tc3RhbmRhcmQgYHRvSlNPTmAgbWV0aG9kcyB0byB0aGVcbiAgICAgICAgICAgICAgLy8gYE51bWJlcmAsIGBTdHJpbmdgLCBgRGF0ZWAsIGFuZCBgQXJyYXlgIHByb3RvdHlwZXMuIEpTT04gM1xuICAgICAgICAgICAgICAvLyBpZ25vcmVzIGFsbCBgdG9KU09OYCBtZXRob2RzIG9uIHRoZXNlIG9iamVjdHMgdW5sZXNzIHRoZXkgYXJlXG4gICAgICAgICAgICAgIC8vIGRlZmluZWQgZGlyZWN0bHkgb24gYW4gaW5zdGFuY2UuXG4gICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUudG9KU09OKHByb3BlcnR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAvLyBJZiBhIHJlcGxhY2VtZW50IGZ1bmN0aW9uIHdhcyBwcm92aWRlZCwgY2FsbCBpdCB0byBvYnRhaW4gdGhlIHZhbHVlXG4gICAgICAgICAgICAvLyBmb3Igc2VyaWFsaXphdGlvbi5cbiAgICAgICAgICAgIHZhbHVlID0gY2FsbGJhY2suY2FsbChvYmplY3QsIHByb3BlcnR5LCB2YWx1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIFwibnVsbFwiO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjbGFzc05hbWUgPSBnZXRDbGFzcy5jYWxsKHZhbHVlKTtcbiAgICAgICAgICBpZiAoY2xhc3NOYW1lID09IGJvb2xlYW5DbGFzcykge1xuICAgICAgICAgICAgLy8gQm9vbGVhbnMgYXJlIHJlcHJlc2VudGVkIGxpdGVyYWxseS5cbiAgICAgICAgICAgIHJldHVybiBcIlwiICsgdmFsdWU7XG4gICAgICAgICAgfSBlbHNlIGlmIChjbGFzc05hbWUgPT0gbnVtYmVyQ2xhc3MpIHtcbiAgICAgICAgICAgIC8vIEpTT04gbnVtYmVycyBtdXN0IGJlIGZpbml0ZS4gYEluZmluaXR5YCBhbmQgYE5hTmAgYXJlIHNlcmlhbGl6ZWQgYXNcbiAgICAgICAgICAgIC8vIGBcIm51bGxcImAuXG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgPiAtMSAvIDAgJiYgdmFsdWUgPCAxIC8gMCA/IFwiXCIgKyB2YWx1ZSA6IFwibnVsbFwiO1xuICAgICAgICAgIH0gZWxzZSBpZiAoY2xhc3NOYW1lID09IHN0cmluZ0NsYXNzKSB7XG4gICAgICAgICAgICAvLyBTdHJpbmdzIGFyZSBkb3VibGUtcXVvdGVkIGFuZCBlc2NhcGVkLlxuICAgICAgICAgICAgcmV0dXJuIHF1b3RlKFwiXCIgKyB2YWx1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIFJlY3Vyc2l2ZWx5IHNlcmlhbGl6ZSBvYmplY3RzIGFuZCBhcnJheXMuXG4gICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICAvLyBDaGVjayBmb3IgY3ljbGljIHN0cnVjdHVyZXMuIFRoaXMgaXMgYSBsaW5lYXIgc2VhcmNoOyBwZXJmb3JtYW5jZVxuICAgICAgICAgICAgLy8gaXMgaW52ZXJzZWx5IHByb3BvcnRpb25hbCB0byB0aGUgbnVtYmVyIG9mIHVuaXF1ZSBuZXN0ZWQgb2JqZWN0cy5cbiAgICAgICAgICAgIGZvciAobGVuZ3RoID0gc3RhY2subGVuZ3RoOyBsZW5ndGgtLTspIHtcbiAgICAgICAgICAgICAgaWYgKHN0YWNrW2xlbmd0aF0gPT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgLy8gQ3ljbGljIHN0cnVjdHVyZXMgY2Fubm90IGJlIHNlcmlhbGl6ZWQgYnkgYEpTT04uc3RyaW5naWZ5YC5cbiAgICAgICAgICAgICAgICB0aHJvdyBUeXBlRXJyb3IoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQWRkIHRoZSBvYmplY3QgdG8gdGhlIHN0YWNrIG9mIHRyYXZlcnNlZCBvYmplY3RzLlxuICAgICAgICAgICAgc3RhY2sucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgICByZXN1bHRzID0gW107XG4gICAgICAgICAgICAvLyBTYXZlIHRoZSBjdXJyZW50IGluZGVudGF0aW9uIGxldmVsIGFuZCBpbmRlbnQgb25lIGFkZGl0aW9uYWwgbGV2ZWwuXG4gICAgICAgICAgICBwcmVmaXggPSBpbmRlbnRhdGlvbjtcbiAgICAgICAgICAgIGluZGVudGF0aW9uICs9IHdoaXRlc3BhY2U7XG4gICAgICAgICAgICBpZiAoY2xhc3NOYW1lID09IGFycmF5Q2xhc3MpIHtcbiAgICAgICAgICAgICAgLy8gUmVjdXJzaXZlbHkgc2VyaWFsaXplIGFycmF5IGVsZW1lbnRzLlxuICAgICAgICAgICAgICBmb3IgKGluZGV4ID0gMCwgbGVuZ3RoID0gdmFsdWUubGVuZ3RoOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQgPSBzZXJpYWxpemUoaW5kZXgsIHZhbHVlLCBjYWxsYmFjaywgcHJvcGVydGllcywgd2hpdGVzcGFjZSwgaW5kZW50YXRpb24sIHN0YWNrKTtcbiAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2goZWxlbWVudCA9PT0gdW5kZWYgPyBcIm51bGxcIiA6IGVsZW1lbnQpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdHMubGVuZ3RoID8gKHdoaXRlc3BhY2UgPyBcIltcXG5cIiArIGluZGVudGF0aW9uICsgcmVzdWx0cy5qb2luKFwiLFxcblwiICsgaW5kZW50YXRpb24pICsgXCJcXG5cIiArIHByZWZpeCArIFwiXVwiIDogKFwiW1wiICsgcmVzdWx0cy5qb2luKFwiLFwiKSArIFwiXVwiKSkgOiBcIltdXCI7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAvLyBSZWN1cnNpdmVseSBzZXJpYWxpemUgb2JqZWN0IG1lbWJlcnMuIE1lbWJlcnMgYXJlIHNlbGVjdGVkIGZyb21cbiAgICAgICAgICAgICAgLy8gZWl0aGVyIGEgdXNlci1zcGVjaWZpZWQgbGlzdCBvZiBwcm9wZXJ0eSBuYW1lcywgb3IgdGhlIG9iamVjdFxuICAgICAgICAgICAgICAvLyBpdHNlbGYuXG4gICAgICAgICAgICAgIGZvckVhY2gocHJvcGVydGllcyB8fCB2YWx1ZSwgZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgICAgICAgICAgICAgdmFyIGVsZW1lbnQgPSBzZXJpYWxpemUocHJvcGVydHksIHZhbHVlLCBjYWxsYmFjaywgcHJvcGVydGllcywgd2hpdGVzcGFjZSwgaW5kZW50YXRpb24sIHN0YWNrKTtcbiAgICAgICAgICAgICAgICBpZiAoZWxlbWVudCAhPT0gdW5kZWYpIHtcbiAgICAgICAgICAgICAgICAgIC8vIEFjY29yZGluZyB0byBFUyA1LjEgc2VjdGlvbiAxNS4xMi4zOiBcIklmIGBnYXBgIHt3aGl0ZXNwYWNlfVxuICAgICAgICAgICAgICAgICAgLy8gaXMgbm90IHRoZSBlbXB0eSBzdHJpbmcsIGxldCBgbWVtYmVyYCB7cXVvdGUocHJvcGVydHkpICsgXCI6XCJ9XG4gICAgICAgICAgICAgICAgICAvLyBiZSB0aGUgY29uY2F0ZW5hdGlvbiBvZiBgbWVtYmVyYCBhbmQgdGhlIGBzcGFjZWAgY2hhcmFjdGVyLlwiXG4gICAgICAgICAgICAgICAgICAvLyBUaGUgXCJgc3BhY2VgIGNoYXJhY3RlclwiIHJlZmVycyB0byB0aGUgbGl0ZXJhbCBzcGFjZVxuICAgICAgICAgICAgICAgICAgLy8gY2hhcmFjdGVyLCBub3QgdGhlIGBzcGFjZWAge3dpZHRofSBhcmd1bWVudCBwcm92aWRlZCB0b1xuICAgICAgICAgICAgICAgICAgLy8gYEpTT04uc3RyaW5naWZ5YC5cbiAgICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaChxdW90ZShwcm9wZXJ0eSkgKyBcIjpcIiArICh3aGl0ZXNwYWNlID8gXCIgXCIgOiBcIlwiKSArIGVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdHMubGVuZ3RoID8gKHdoaXRlc3BhY2UgPyBcIntcXG5cIiArIGluZGVudGF0aW9uICsgcmVzdWx0cy5qb2luKFwiLFxcblwiICsgaW5kZW50YXRpb24pICsgXCJcXG5cIiArIHByZWZpeCArIFwifVwiIDogKFwie1wiICsgcmVzdWx0cy5qb2luKFwiLFwiKSArIFwifVwiKSkgOiBcInt9XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBSZW1vdmUgdGhlIG9iamVjdCBmcm9tIHRoZSB0cmF2ZXJzZWQgb2JqZWN0IHN0YWNrLlxuICAgICAgICAgICAgc3RhY2sucG9wKCk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvLyBQdWJsaWM6IGBKU09OLnN0cmluZ2lmeWAuIFNlZSBFUyA1LjEgc2VjdGlvbiAxNS4xMi4zLlxuICAgICAgICBleHBvcnRzLnN0cmluZ2lmeSA9IGZ1bmN0aW9uIChzb3VyY2UsIGZpbHRlciwgd2lkdGgpIHtcbiAgICAgICAgICB2YXIgd2hpdGVzcGFjZSwgY2FsbGJhY2ssIHByb3BlcnRpZXMsIGNsYXNzTmFtZTtcbiAgICAgICAgICBpZiAob2JqZWN0VHlwZXNbdHlwZW9mIGZpbHRlcl0gJiYgZmlsdGVyKSB7XG4gICAgICAgICAgICBpZiAoKGNsYXNzTmFtZSA9IGdldENsYXNzLmNhbGwoZmlsdGVyKSkgPT0gZnVuY3Rpb25DbGFzcykge1xuICAgICAgICAgICAgICBjYWxsYmFjayA9IGZpbHRlcjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY2xhc3NOYW1lID09IGFycmF5Q2xhc3MpIHtcbiAgICAgICAgICAgICAgLy8gQ29udmVydCB0aGUgcHJvcGVydHkgbmFtZXMgYXJyYXkgaW50byBhIG1ha2VzaGlmdCBzZXQuXG4gICAgICAgICAgICAgIHByb3BlcnRpZXMgPSB7fTtcbiAgICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwLCBsZW5ndGggPSBmaWx0ZXIubGVuZ3RoLCB2YWx1ZTsgaW5kZXggPCBsZW5ndGg7IHZhbHVlID0gZmlsdGVyW2luZGV4KytdLCAoKGNsYXNzTmFtZSA9IGdldENsYXNzLmNhbGwodmFsdWUpKSwgY2xhc3NOYW1lID09IHN0cmluZ0NsYXNzIHx8IGNsYXNzTmFtZSA9PSBudW1iZXJDbGFzcykgJiYgKHByb3BlcnRpZXNbdmFsdWVdID0gMSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAod2lkdGgpIHtcbiAgICAgICAgICAgIGlmICgoY2xhc3NOYW1lID0gZ2V0Q2xhc3MuY2FsbCh3aWR0aCkpID09IG51bWJlckNsYXNzKSB7XG4gICAgICAgICAgICAgIC8vIENvbnZlcnQgdGhlIGB3aWR0aGAgdG8gYW4gaW50ZWdlciBhbmQgY3JlYXRlIGEgc3RyaW5nIGNvbnRhaW5pbmdcbiAgICAgICAgICAgICAgLy8gYHdpZHRoYCBudW1iZXIgb2Ygc3BhY2UgY2hhcmFjdGVycy5cbiAgICAgICAgICAgICAgaWYgKCh3aWR0aCAtPSB3aWR0aCAlIDEpID4gMCkge1xuICAgICAgICAgICAgICAgIGZvciAod2hpdGVzcGFjZSA9IFwiXCIsIHdpZHRoID4gMTAgJiYgKHdpZHRoID0gMTApOyB3aGl0ZXNwYWNlLmxlbmd0aCA8IHdpZHRoOyB3aGl0ZXNwYWNlICs9IFwiIFwiKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChjbGFzc05hbWUgPT0gc3RyaW5nQ2xhc3MpIHtcbiAgICAgICAgICAgICAgd2hpdGVzcGFjZSA9IHdpZHRoLmxlbmd0aCA8PSAxMCA/IHdpZHRoIDogd2lkdGguc2xpY2UoMCwgMTApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBPcGVyYSA8PSA3LjU0dTIgZGlzY2FyZHMgdGhlIHZhbHVlcyBhc3NvY2lhdGVkIHdpdGggZW1wdHkgc3RyaW5nIGtleXNcbiAgICAgICAgICAvLyAoYFwiXCJgKSBvbmx5IGlmIHRoZXkgYXJlIHVzZWQgZGlyZWN0bHkgd2l0aGluIGFuIG9iamVjdCBtZW1iZXIgbGlzdFxuICAgICAgICAgIC8vIChlLmcuLCBgIShcIlwiIGluIHsgXCJcIjogMX0pYCkuXG4gICAgICAgICAgcmV0dXJuIHNlcmlhbGl6ZShcIlwiLCAodmFsdWUgPSB7fSwgdmFsdWVbXCJcIl0gPSBzb3VyY2UsIHZhbHVlKSwgY2FsbGJhY2ssIHByb3BlcnRpZXMsIHdoaXRlc3BhY2UsIFwiXCIsIFtdKTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgLy8gUHVibGljOiBQYXJzZXMgYSBKU09OIHNvdXJjZSBzdHJpbmcuXG4gICAgICBpZiAoIWhhcyhcImpzb24tcGFyc2VcIikpIHtcbiAgICAgICAgdmFyIGZyb21DaGFyQ29kZSA9IFN0cmluZy5mcm9tQ2hhckNvZGU7XG5cbiAgICAgICAgLy8gSW50ZXJuYWw6IEEgbWFwIG9mIGVzY2FwZWQgY29udHJvbCBjaGFyYWN0ZXJzIGFuZCB0aGVpciB1bmVzY2FwZWRcbiAgICAgICAgLy8gZXF1aXZhbGVudHMuXG4gICAgICAgIHZhciBVbmVzY2FwZXMgPSB7XG4gICAgICAgICAgOTI6IFwiXFxcXFwiLFxuICAgICAgICAgIDM0OiAnXCInLFxuICAgICAgICAgIDQ3OiBcIi9cIixcbiAgICAgICAgICA5ODogXCJcXGJcIixcbiAgICAgICAgICAxMTY6IFwiXFx0XCIsXG4gICAgICAgICAgMTEwOiBcIlxcblwiLFxuICAgICAgICAgIDEwMjogXCJcXGZcIixcbiAgICAgICAgICAxMTQ6IFwiXFxyXCJcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogU3RvcmVzIHRoZSBwYXJzZXIgc3RhdGUuXG4gICAgICAgIHZhciBJbmRleCwgU291cmNlO1xuXG4gICAgICAgIC8vIEludGVybmFsOiBSZXNldHMgdGhlIHBhcnNlciBzdGF0ZSBhbmQgdGhyb3dzIGEgYFN5bnRheEVycm9yYC5cbiAgICAgICAgdmFyIGFib3J0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIEluZGV4ID0gU291cmNlID0gbnVsbDtcbiAgICAgICAgICB0aHJvdyBTeW50YXhFcnJvcigpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEludGVybmFsOiBSZXR1cm5zIHRoZSBuZXh0IHRva2VuLCBvciBgXCIkXCJgIGlmIHRoZSBwYXJzZXIgaGFzIHJlYWNoZWRcbiAgICAgICAgLy8gdGhlIGVuZCBvZiB0aGUgc291cmNlIHN0cmluZy4gQSB0b2tlbiBtYXkgYmUgYSBzdHJpbmcsIG51bWJlciwgYG51bGxgXG4gICAgICAgIC8vIGxpdGVyYWwsIG9yIEJvb2xlYW4gbGl0ZXJhbC5cbiAgICAgICAgdmFyIGxleCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB2YXIgc291cmNlID0gU291cmNlLCBsZW5ndGggPSBzb3VyY2UubGVuZ3RoLCB2YWx1ZSwgYmVnaW4sIHBvc2l0aW9uLCBpc1NpZ25lZCwgY2hhckNvZGU7XG4gICAgICAgICAgd2hpbGUgKEluZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KEluZGV4KTtcbiAgICAgICAgICAgIHN3aXRjaCAoY2hhckNvZGUpIHtcbiAgICAgICAgICAgICAgY2FzZSA5OiBjYXNlIDEwOiBjYXNlIDEzOiBjYXNlIDMyOlxuICAgICAgICAgICAgICAgIC8vIFNraXAgd2hpdGVzcGFjZSB0b2tlbnMsIGluY2x1ZGluZyB0YWJzLCBjYXJyaWFnZSByZXR1cm5zLCBsaW5lXG4gICAgICAgICAgICAgICAgLy8gZmVlZHMsIGFuZCBzcGFjZSBjaGFyYWN0ZXJzLlxuICAgICAgICAgICAgICAgIEluZGV4Kys7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIGNhc2UgMTIzOiBjYXNlIDEyNTogY2FzZSA5MTogY2FzZSA5MzogY2FzZSA1ODogY2FzZSA0NDpcbiAgICAgICAgICAgICAgICAvLyBQYXJzZSBhIHB1bmN0dWF0b3IgdG9rZW4gKGB7YCwgYH1gLCBgW2AsIGBdYCwgYDpgLCBvciBgLGApIGF0XG4gICAgICAgICAgICAgICAgLy8gdGhlIGN1cnJlbnQgcG9zaXRpb24uXG4gICAgICAgICAgICAgICAgdmFsdWUgPSBjaGFySW5kZXhCdWdneSA/IHNvdXJjZS5jaGFyQXQoSW5kZXgpIDogc291cmNlW0luZGV4XTtcbiAgICAgICAgICAgICAgICBJbmRleCsrO1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICAgICAgY2FzZSAzNDpcbiAgICAgICAgICAgICAgICAvLyBgXCJgIGRlbGltaXRzIGEgSlNPTiBzdHJpbmc7IGFkdmFuY2UgdG8gdGhlIG5leHQgY2hhcmFjdGVyIGFuZFxuICAgICAgICAgICAgICAgIC8vIGJlZ2luIHBhcnNpbmcgdGhlIHN0cmluZy4gU3RyaW5nIHRva2VucyBhcmUgcHJlZml4ZWQgd2l0aCB0aGVcbiAgICAgICAgICAgICAgICAvLyBzZW50aW5lbCBgQGAgY2hhcmFjdGVyIHRvIGRpc3Rpbmd1aXNoIHRoZW0gZnJvbSBwdW5jdHVhdG9ycyBhbmRcbiAgICAgICAgICAgICAgICAvLyBlbmQtb2Ytc3RyaW5nIHRva2Vucy5cbiAgICAgICAgICAgICAgICBmb3IgKHZhbHVlID0gXCJAXCIsIEluZGV4Kys7IEluZGV4IDwgbGVuZ3RoOykge1xuICAgICAgICAgICAgICAgICAgY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChJbmRleCk7XG4gICAgICAgICAgICAgICAgICBpZiAoY2hhckNvZGUgPCAzMikge1xuICAgICAgICAgICAgICAgICAgICAvLyBVbmVzY2FwZWQgQVNDSUkgY29udHJvbCBjaGFyYWN0ZXJzICh0aG9zZSB3aXRoIGEgY29kZSB1bml0XG4gICAgICAgICAgICAgICAgICAgIC8vIGxlc3MgdGhhbiB0aGUgc3BhY2UgY2hhcmFjdGVyKSBhcmUgbm90IHBlcm1pdHRlZC5cbiAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY2hhckNvZGUgPT0gOTIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQSByZXZlcnNlIHNvbGlkdXMgKGBcXGApIG1hcmtzIHRoZSBiZWdpbm5pbmcgb2YgYW4gZXNjYXBlZFxuICAgICAgICAgICAgICAgICAgICAvLyBjb250cm9sIGNoYXJhY3RlciAoaW5jbHVkaW5nIGBcImAsIGBcXGAsIGFuZCBgL2ApIG9yIFVuaWNvZGVcbiAgICAgICAgICAgICAgICAgICAgLy8gZXNjYXBlIHNlcXVlbmNlLlxuICAgICAgICAgICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KCsrSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGNoYXJDb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSA5MjogY2FzZSAzNDogY2FzZSA0NzogY2FzZSA5ODogY2FzZSAxMTY6IGNhc2UgMTEwOiBjYXNlIDEwMjogY2FzZSAxMTQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBSZXZpdmUgZXNjYXBlZCBjb250cm9sIGNoYXJhY3RlcnMuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSArPSBVbmVzY2FwZXNbY2hhckNvZGVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgSW5kZXgrKztcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTE3OlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gYFxcdWAgbWFya3MgdGhlIGJlZ2lubmluZyBvZiBhIFVuaWNvZGUgZXNjYXBlIHNlcXVlbmNlLlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWR2YW5jZSB0byB0aGUgZmlyc3QgY2hhcmFjdGVyIGFuZCB2YWxpZGF0ZSB0aGVcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGZvdXItZGlnaXQgY29kZSBwb2ludC5cbiAgICAgICAgICAgICAgICAgICAgICAgIGJlZ2luID0gKytJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAocG9zaXRpb24gPSBJbmRleCArIDQ7IEluZGV4IDwgcG9zaXRpb247IEluZGV4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEEgdmFsaWQgc2VxdWVuY2UgY29tcHJpc2VzIGZvdXIgaGV4ZGlnaXRzIChjYXNlLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBpbnNlbnNpdGl2ZSkgdGhhdCBmb3JtIGEgc2luZ2xlIGhleGFkZWNpbWFsIHZhbHVlLlxuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShjaGFyQ29kZSA+PSA0OCAmJiBjaGFyQ29kZSA8PSA1NyB8fCBjaGFyQ29kZSA+PSA5NyAmJiBjaGFyQ29kZSA8PSAxMDIgfHwgY2hhckNvZGUgPj0gNjUgJiYgY2hhckNvZGUgPD0gNzApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSW52YWxpZCBVbmljb2RlIGVzY2FwZSBzZXF1ZW5jZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBSZXZpdmUgdGhlIGVzY2FwZWQgY2hhcmFjdGVyLlxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgKz0gZnJvbUNoYXJDb2RlKFwiMHhcIiArIHNvdXJjZS5zbGljZShiZWdpbiwgSW5kZXgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBJbnZhbGlkIGVzY2FwZSBzZXF1ZW5jZS5cbiAgICAgICAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGFyQ29kZSA9PSAzNCkge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIEFuIHVuZXNjYXBlZCBkb3VibGUtcXVvdGUgY2hhcmFjdGVyIG1hcmtzIHRoZSBlbmQgb2YgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgLy8gc3RyaW5nLlxuICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICBiZWdpbiA9IEluZGV4O1xuICAgICAgICAgICAgICAgICAgICAvLyBPcHRpbWl6ZSBmb3IgdGhlIGNvbW1vbiBjYXNlIHdoZXJlIGEgc3RyaW5nIGlzIHZhbGlkLlxuICAgICAgICAgICAgICAgICAgICB3aGlsZSAoY2hhckNvZGUgPj0gMzIgJiYgY2hhckNvZGUgIT0gOTIgJiYgY2hhckNvZGUgIT0gMzQpIHtcbiAgICAgICAgICAgICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KCsrSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIEFwcGVuZCB0aGUgc3RyaW5nIGFzLWlzLlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZSArPSBzb3VyY2Uuc2xpY2UoYmVnaW4sIEluZGV4KTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHNvdXJjZS5jaGFyQ29kZUF0KEluZGV4KSA9PSAzNCkge1xuICAgICAgICAgICAgICAgICAgLy8gQWR2YW5jZSB0byB0aGUgbmV4dCBjaGFyYWN0ZXIgYW5kIHJldHVybiB0aGUgcmV2aXZlZCBzdHJpbmcuXG4gICAgICAgICAgICAgICAgICBJbmRleCsrO1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBVbnRlcm1pbmF0ZWQgc3RyaW5nLlxuICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgLy8gUGFyc2UgbnVtYmVycyBhbmQgbGl0ZXJhbHMuXG4gICAgICAgICAgICAgICAgYmVnaW4gPSBJbmRleDtcbiAgICAgICAgICAgICAgICAvLyBBZHZhbmNlIHBhc3QgdGhlIG5lZ2F0aXZlIHNpZ24sIGlmIG9uZSBpcyBzcGVjaWZpZWQuXG4gICAgICAgICAgICAgICAgaWYgKGNoYXJDb2RlID09IDQ1KSB7XG4gICAgICAgICAgICAgICAgICBpc1NpZ25lZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KCsrSW5kZXgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBQYXJzZSBhbiBpbnRlZ2VyIG9yIGZsb2F0aW5nLXBvaW50IHZhbHVlLlxuICAgICAgICAgICAgICAgIGlmIChjaGFyQ29kZSA+PSA0OCAmJiBjaGFyQ29kZSA8PSA1Nykge1xuICAgICAgICAgICAgICAgICAgLy8gTGVhZGluZyB6ZXJvZXMgYXJlIGludGVycHJldGVkIGFzIG9jdGFsIGxpdGVyYWxzLlxuICAgICAgICAgICAgICAgICAgaWYgKGNoYXJDb2RlID09IDQ4ICYmICgoY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChJbmRleCArIDEpKSwgY2hhckNvZGUgPj0gNDggJiYgY2hhckNvZGUgPD0gNTcpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIElsbGVnYWwgb2N0YWwgbGl0ZXJhbC5cbiAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIGlzU2lnbmVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAvLyBQYXJzZSB0aGUgaW50ZWdlciBjb21wb25lbnQuXG4gICAgICAgICAgICAgICAgICBmb3IgKDsgSW5kZXggPCBsZW5ndGggJiYgKChjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KEluZGV4KSksIGNoYXJDb2RlID49IDQ4ICYmIGNoYXJDb2RlIDw9IDU3KTsgSW5kZXgrKyk7XG4gICAgICAgICAgICAgICAgICAvLyBGbG9hdHMgY2Fubm90IGNvbnRhaW4gYSBsZWFkaW5nIGRlY2ltYWwgcG9pbnQ7IGhvd2V2ZXIsIHRoaXNcbiAgICAgICAgICAgICAgICAgIC8vIGNhc2UgaXMgYWxyZWFkeSBhY2NvdW50ZWQgZm9yIGJ5IHRoZSBwYXJzZXIuXG4gICAgICAgICAgICAgICAgICBpZiAoc291cmNlLmNoYXJDb2RlQXQoSW5kZXgpID09IDQ2KSB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uID0gKytJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgLy8gUGFyc2UgdGhlIGRlY2ltYWwgY29tcG9uZW50LlxuICAgICAgICAgICAgICAgICAgICBmb3IgKDsgcG9zaXRpb24gPCBsZW5ndGggJiYgKChjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KHBvc2l0aW9uKSksIGNoYXJDb2RlID49IDQ4ICYmIGNoYXJDb2RlIDw9IDU3KTsgcG9zaXRpb24rKyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwb3NpdGlvbiA9PSBJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIElsbGVnYWwgdHJhaWxpbmcgZGVjaW1hbC5cbiAgICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIEluZGV4ID0gcG9zaXRpb247XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAvLyBQYXJzZSBleHBvbmVudHMuIFRoZSBgZWAgZGVub3RpbmcgdGhlIGV4cG9uZW50IGlzXG4gICAgICAgICAgICAgICAgICAvLyBjYXNlLWluc2Vuc2l0aXZlLlxuICAgICAgICAgICAgICAgICAgY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChJbmRleCk7XG4gICAgICAgICAgICAgICAgICBpZiAoY2hhckNvZGUgPT0gMTAxIHx8IGNoYXJDb2RlID09IDY5KSB7XG4gICAgICAgICAgICAgICAgICAgIGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoKytJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIFNraXAgcGFzdCB0aGUgc2lnbiBmb2xsb3dpbmcgdGhlIGV4cG9uZW50LCBpZiBvbmUgaXNcbiAgICAgICAgICAgICAgICAgICAgLy8gc3BlY2lmaWVkLlxuICAgICAgICAgICAgICAgICAgICBpZiAoY2hhckNvZGUgPT0gNDMgfHwgY2hhckNvZGUgPT0gNDUpIHtcbiAgICAgICAgICAgICAgICAgICAgICBJbmRleCsrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIFBhcnNlIHRoZSBleHBvbmVudGlhbCBjb21wb25lbnQuXG4gICAgICAgICAgICAgICAgICAgIGZvciAocG9zaXRpb24gPSBJbmRleDsgcG9zaXRpb24gPCBsZW5ndGggJiYgKChjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KHBvc2l0aW9uKSksIGNoYXJDb2RlID49IDQ4ICYmIGNoYXJDb2RlIDw9IDU3KTsgcG9zaXRpb24rKyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwb3NpdGlvbiA9PSBJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIElsbGVnYWwgZW1wdHkgZXhwb25lbnQuXG4gICAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBJbmRleCA9IHBvc2l0aW9uO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgLy8gQ29lcmNlIHRoZSBwYXJzZWQgdmFsdWUgdG8gYSBKYXZhU2NyaXB0IG51bWJlci5cbiAgICAgICAgICAgICAgICAgIHJldHVybiArc291cmNlLnNsaWNlKGJlZ2luLCBJbmRleCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIEEgbmVnYXRpdmUgc2lnbiBtYXkgb25seSBwcmVjZWRlIG51bWJlcnMuXG4gICAgICAgICAgICAgICAgaWYgKGlzU2lnbmVkKSB7XG4gICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBgdHJ1ZWAsIGBmYWxzZWAsIGFuZCBgbnVsbGAgbGl0ZXJhbHMuXG4gICAgICAgICAgICAgICAgaWYgKHNvdXJjZS5zbGljZShJbmRleCwgSW5kZXggKyA0KSA9PSBcInRydWVcIikge1xuICAgICAgICAgICAgICAgICAgSW5kZXggKz0gNDtcbiAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc291cmNlLnNsaWNlKEluZGV4LCBJbmRleCArIDUpID09IFwiZmFsc2VcIikge1xuICAgICAgICAgICAgICAgICAgSW5kZXggKz0gNTtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNvdXJjZS5zbGljZShJbmRleCwgSW5kZXggKyA0KSA9PSBcIm51bGxcIikge1xuICAgICAgICAgICAgICAgICAgSW5kZXggKz0gNDtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBVbnJlY29nbml6ZWQgdG9rZW4uXG4gICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gUmV0dXJuIHRoZSBzZW50aW5lbCBgJGAgY2hhcmFjdGVyIGlmIHRoZSBwYXJzZXIgaGFzIHJlYWNoZWQgdGhlIGVuZFxuICAgICAgICAgIC8vIG9mIHRoZSBzb3VyY2Ugc3RyaW5nLlxuICAgICAgICAgIHJldHVybiBcIiRcIjtcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogUGFyc2VzIGEgSlNPTiBgdmFsdWVgIHRva2VuLlxuICAgICAgICB2YXIgZ2V0ID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgdmFyIHJlc3VsdHMsIGhhc01lbWJlcnM7XG4gICAgICAgICAgaWYgKHZhbHVlID09IFwiJFwiKSB7XG4gICAgICAgICAgICAvLyBVbmV4cGVjdGVkIGVuZCBvZiBpbnB1dC5cbiAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgaWYgKChjaGFySW5kZXhCdWdneSA/IHZhbHVlLmNoYXJBdCgwKSA6IHZhbHVlWzBdKSA9PSBcIkBcIikge1xuICAgICAgICAgICAgICAvLyBSZW1vdmUgdGhlIHNlbnRpbmVsIGBAYCBjaGFyYWN0ZXIuXG4gICAgICAgICAgICAgIHJldHVybiB2YWx1ZS5zbGljZSgxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFBhcnNlIG9iamVjdCBhbmQgYXJyYXkgbGl0ZXJhbHMuXG4gICAgICAgICAgICBpZiAodmFsdWUgPT0gXCJbXCIpIHtcbiAgICAgICAgICAgICAgLy8gUGFyc2VzIGEgSlNPTiBhcnJheSwgcmV0dXJuaW5nIGEgbmV3IEphdmFTY3JpcHQgYXJyYXkuXG4gICAgICAgICAgICAgIHJlc3VsdHMgPSBbXTtcbiAgICAgICAgICAgICAgZm9yICg7OyBoYXNNZW1iZXJzIHx8IChoYXNNZW1iZXJzID0gdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IGxleCgpO1xuICAgICAgICAgICAgICAgIC8vIEEgY2xvc2luZyBzcXVhcmUgYnJhY2tldCBtYXJrcyB0aGUgZW5kIG9mIHRoZSBhcnJheSBsaXRlcmFsLlxuICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIl1cIikge1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBhcnJheSBsaXRlcmFsIGNvbnRhaW5zIGVsZW1lbnRzLCB0aGUgY3VycmVudCB0b2tlblxuICAgICAgICAgICAgICAgIC8vIHNob3VsZCBiZSBhIGNvbW1hIHNlcGFyYXRpbmcgdGhlIHByZXZpb3VzIGVsZW1lbnQgZnJvbSB0aGVcbiAgICAgICAgICAgICAgICAvLyBuZXh0LlxuICAgICAgICAgICAgICAgIGlmIChoYXNNZW1iZXJzKSB7XG4gICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gXCIsXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBsZXgoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IFwiXVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gVW5leHBlY3RlZCB0cmFpbGluZyBgLGAgaW4gYXJyYXkgbGl0ZXJhbC5cbiAgICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBBIGAsYCBtdXN0IHNlcGFyYXRlIGVhY2ggYXJyYXkgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gRWxpc2lvbnMgYW5kIGxlYWRpbmcgY29tbWFzIGFyZSBub3QgcGVybWl0dGVkLlxuICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIixcIikge1xuICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKGdldCh2YWx1ZSkpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PSBcIntcIikge1xuICAgICAgICAgICAgICAvLyBQYXJzZXMgYSBKU09OIG9iamVjdCwgcmV0dXJuaW5nIGEgbmV3IEphdmFTY3JpcHQgb2JqZWN0LlxuICAgICAgICAgICAgICByZXN1bHRzID0ge307XG4gICAgICAgICAgICAgIGZvciAoOzsgaGFzTWVtYmVycyB8fCAoaGFzTWVtYmVycyA9IHRydWUpKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBsZXgoKTtcbiAgICAgICAgICAgICAgICAvLyBBIGNsb3NpbmcgY3VybHkgYnJhY2UgbWFya3MgdGhlIGVuZCBvZiB0aGUgb2JqZWN0IGxpdGVyYWwuXG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IFwifVwiKSB7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9iamVjdCBsaXRlcmFsIGNvbnRhaW5zIG1lbWJlcnMsIHRoZSBjdXJyZW50IHRva2VuXG4gICAgICAgICAgICAgICAgLy8gc2hvdWxkIGJlIGEgY29tbWEgc2VwYXJhdG9yLlxuICAgICAgICAgICAgICAgIGlmIChoYXNNZW1iZXJzKSB7XG4gICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gXCIsXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBsZXgoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IFwifVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gVW5leHBlY3RlZCB0cmFpbGluZyBgLGAgaW4gb2JqZWN0IGxpdGVyYWwuXG4gICAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQSBgLGAgbXVzdCBzZXBhcmF0ZSBlYWNoIG9iamVjdCBtZW1iZXIuXG4gICAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIExlYWRpbmcgY29tbWFzIGFyZSBub3QgcGVybWl0dGVkLCBvYmplY3QgcHJvcGVydHkgbmFtZXMgbXVzdCBiZVxuICAgICAgICAgICAgICAgIC8vIGRvdWJsZS1xdW90ZWQgc3RyaW5ncywgYW5kIGEgYDpgIG11c3Qgc2VwYXJhdGUgZWFjaCBwcm9wZXJ0eVxuICAgICAgICAgICAgICAgIC8vIG5hbWUgYW5kIHZhbHVlLlxuICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIixcIiB8fCB0eXBlb2YgdmFsdWUgIT0gXCJzdHJpbmdcIiB8fCAoY2hhckluZGV4QnVnZ3kgPyB2YWx1ZS5jaGFyQXQoMCkgOiB2YWx1ZVswXSkgIT0gXCJAXCIgfHwgbGV4KCkgIT0gXCI6XCIpIHtcbiAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc3VsdHNbdmFsdWUuc2xpY2UoMSldID0gZ2V0KGxleCgpKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFVuZXhwZWN0ZWQgdG9rZW4gZW5jb3VudGVyZWQuXG4gICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gSW50ZXJuYWw6IFVwZGF0ZXMgYSB0cmF2ZXJzZWQgb2JqZWN0IG1lbWJlci5cbiAgICAgICAgdmFyIHVwZGF0ZSA9IGZ1bmN0aW9uIChzb3VyY2UsIHByb3BlcnR5LCBjYWxsYmFjaykge1xuICAgICAgICAgIHZhciBlbGVtZW50ID0gd2Fsayhzb3VyY2UsIHByb3BlcnR5LCBjYWxsYmFjayk7XG4gICAgICAgICAgaWYgKGVsZW1lbnQgPT09IHVuZGVmKSB7XG4gICAgICAgICAgICBkZWxldGUgc291cmNlW3Byb3BlcnR5XTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc291cmNlW3Byb3BlcnR5XSA9IGVsZW1lbnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEludGVybmFsOiBSZWN1cnNpdmVseSB0cmF2ZXJzZXMgYSBwYXJzZWQgSlNPTiBvYmplY3QsIGludm9raW5nIHRoZVxuICAgICAgICAvLyBgY2FsbGJhY2tgIGZ1bmN0aW9uIGZvciBlYWNoIHZhbHVlLiBUaGlzIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIHRoZVxuICAgICAgICAvLyBgV2Fsayhob2xkZXIsIG5hbWUpYCBvcGVyYXRpb24gZGVmaW5lZCBpbiBFUyA1LjEgc2VjdGlvbiAxNS4xMi4yLlxuICAgICAgICB2YXIgd2FsayA9IGZ1bmN0aW9uIChzb3VyY2UsIHByb3BlcnR5LCBjYWxsYmFjaykge1xuICAgICAgICAgIHZhciB2YWx1ZSA9IHNvdXJjZVtwcm9wZXJ0eV0sIGxlbmd0aDtcbiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09IFwib2JqZWN0XCIgJiYgdmFsdWUpIHtcbiAgICAgICAgICAgIC8vIGBmb3JFYWNoYCBjYW4ndCBiZSB1c2VkIHRvIHRyYXZlcnNlIGFuIGFycmF5IGluIE9wZXJhIDw9IDguNTRcbiAgICAgICAgICAgIC8vIGJlY2F1c2UgaXRzIGBPYmplY3QjaGFzT3duUHJvcGVydHlgIGltcGxlbWVudGF0aW9uIHJldHVybnMgYGZhbHNlYFxuICAgICAgICAgICAgLy8gZm9yIGFycmF5IGluZGljZXMgKGUuZy4sIGAhWzEsIDIsIDNdLmhhc093blByb3BlcnR5KFwiMFwiKWApLlxuICAgICAgICAgICAgaWYgKGdldENsYXNzLmNhbGwodmFsdWUpID09IGFycmF5Q2xhc3MpIHtcbiAgICAgICAgICAgICAgZm9yIChsZW5ndGggPSB2YWx1ZS5sZW5ndGg7IGxlbmd0aC0tOykge1xuICAgICAgICAgICAgICAgIHVwZGF0ZSh2YWx1ZSwgbGVuZ3RoLCBjYWxsYmFjayk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGZvckVhY2godmFsdWUsIGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgICAgICAgICAgIHVwZGF0ZSh2YWx1ZSwgcHJvcGVydHksIGNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBjYWxsYmFjay5jYWxsKHNvdXJjZSwgcHJvcGVydHksIHZhbHVlKTtcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBQdWJsaWM6IGBKU09OLnBhcnNlYC4gU2VlIEVTIDUuMSBzZWN0aW9uIDE1LjEyLjIuXG4gICAgICAgIGV4cG9ydHMucGFyc2UgPSBmdW5jdGlvbiAoc291cmNlLCBjYWxsYmFjaykge1xuICAgICAgICAgIHZhciByZXN1bHQsIHZhbHVlO1xuICAgICAgICAgIEluZGV4ID0gMDtcbiAgICAgICAgICBTb3VyY2UgPSBcIlwiICsgc291cmNlO1xuICAgICAgICAgIHJlc3VsdCA9IGdldChsZXgoKSk7XG4gICAgICAgICAgLy8gSWYgYSBKU09OIHN0cmluZyBjb250YWlucyBtdWx0aXBsZSB0b2tlbnMsIGl0IGlzIGludmFsaWQuXG4gICAgICAgICAgaWYgKGxleCgpICE9IFwiJFwiKSB7XG4gICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBSZXNldCB0aGUgcGFyc2VyIHN0YXRlLlxuICAgICAgICAgIEluZGV4ID0gU291cmNlID0gbnVsbDtcbiAgICAgICAgICByZXR1cm4gY2FsbGJhY2sgJiYgZ2V0Q2xhc3MuY2FsbChjYWxsYmFjaykgPT0gZnVuY3Rpb25DbGFzcyA/IHdhbGsoKHZhbHVlID0ge30sIHZhbHVlW1wiXCJdID0gcmVzdWx0LCB2YWx1ZSksIFwiXCIsIGNhbGxiYWNrKSA6IHJlc3VsdDtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBleHBvcnRzW1wicnVuSW5Db250ZXh0XCJdID0gcnVuSW5Db250ZXh0O1xuICAgIHJldHVybiBleHBvcnRzO1xuICB9XG5cbiAgaWYgKGZyZWVFeHBvcnRzICYmICFpc0xvYWRlcikge1xuICAgIC8vIEV4cG9ydCBmb3IgQ29tbW9uSlMgZW52aXJvbm1lbnRzLlxuICAgIHJ1bkluQ29udGV4dChyb290LCBmcmVlRXhwb3J0cyk7XG4gIH0gZWxzZSB7XG4gICAgLy8gRXhwb3J0IGZvciB3ZWIgYnJvd3NlcnMgYW5kIEphdmFTY3JpcHQgZW5naW5lcy5cbiAgICB2YXIgbmF0aXZlSlNPTiA9IHJvb3QuSlNPTixcbiAgICAgICAgcHJldmlvdXNKU09OID0gcm9vdFtcIkpTT04zXCJdLFxuICAgICAgICBpc1Jlc3RvcmVkID0gZmFsc2U7XG5cbiAgICB2YXIgSlNPTjMgPSBydW5JbkNvbnRleHQocm9vdCwgKHJvb3RbXCJKU09OM1wiXSA9IHtcbiAgICAgIC8vIFB1YmxpYzogUmVzdG9yZXMgdGhlIG9yaWdpbmFsIHZhbHVlIG9mIHRoZSBnbG9iYWwgYEpTT05gIG9iamVjdCBhbmRcbiAgICAgIC8vIHJldHVybnMgYSByZWZlcmVuY2UgdG8gdGhlIGBKU09OM2Agb2JqZWN0LlxuICAgICAgXCJub0NvbmZsaWN0XCI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCFpc1Jlc3RvcmVkKSB7XG4gICAgICAgICAgaXNSZXN0b3JlZCA9IHRydWU7XG4gICAgICAgICAgcm9vdC5KU09OID0gbmF0aXZlSlNPTjtcbiAgICAgICAgICByb290W1wiSlNPTjNcIl0gPSBwcmV2aW91c0pTT047XG4gICAgICAgICAgbmF0aXZlSlNPTiA9IHByZXZpb3VzSlNPTiA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEpTT04zO1xuICAgICAgfVxuICAgIH0pKTtcblxuICAgIHJvb3QuSlNPTiA9IHtcbiAgICAgIFwicGFyc2VcIjogSlNPTjMucGFyc2UsXG4gICAgICBcInN0cmluZ2lmeVwiOiBKU09OMy5zdHJpbmdpZnlcbiAgICB9O1xuICB9XG5cbiAgLy8gRXhwb3J0IGZvciBhc3luY2hyb25vdXMgbW9kdWxlIGxvYWRlcnMuXG4gIGlmIChpc0xvYWRlcikge1xuICAgIGRlZmluZShmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gSlNPTjM7XG4gICAgfSk7XG4gIH1cbn0pLmNhbGwodGhpcyk7XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuXG59LHt9XSw1OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBoYXMgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIERlY29kZSBhIFVSSSBlbmNvZGVkIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gaW5wdXQgVGhlIFVSSSBlbmNvZGVkIHN0cmluZy5cbiAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBkZWNvZGVkIHN0cmluZy5cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBkZWNvZGUoaW5wdXQpIHtcbiAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChpbnB1dC5yZXBsYWNlKC9cXCsvZywgJyAnKSk7XG59XG5cbi8qKlxuICogU2ltcGxlIHF1ZXJ5IHN0cmluZyBwYXJzZXIuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHF1ZXJ5IFRoZSBxdWVyeSBzdHJpbmcgdGhhdCBuZWVkcyB0byBiZSBwYXJzZWQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fVxuICogQGFwaSBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gcXVlcnlzdHJpbmcocXVlcnkpIHtcbiAgdmFyIHBhcnNlciA9IC8oW149PyZdKyk9PyhbXiZdKikvZ1xuICAgICwgcmVzdWx0ID0ge31cbiAgICAsIHBhcnQ7XG5cbiAgd2hpbGUgKHBhcnQgPSBwYXJzZXIuZXhlYyhxdWVyeSkpIHtcbiAgICB2YXIga2V5ID0gZGVjb2RlKHBhcnRbMV0pXG4gICAgICAsIHZhbHVlID0gZGVjb2RlKHBhcnRbMl0pO1xuXG4gICAgLy9cbiAgICAvLyBQcmV2ZW50IG92ZXJyaWRpbmcgb2YgZXhpc3RpbmcgcHJvcGVydGllcy4gVGhpcyBlbnN1cmVzIHRoYXQgYnVpbGQtaW5cbiAgICAvLyBtZXRob2RzIGxpa2UgYHRvU3RyaW5nYCBvciBfX3Byb3RvX18gYXJlIG5vdCBvdmVycmlkZW4gYnkgbWFsaWNpb3VzXG4gICAgLy8gcXVlcnlzdHJpbmdzLlxuICAgIC8vXG4gICAgaWYgKGtleSBpbiByZXN1bHQpIGNvbnRpbnVlO1xuICAgIHJlc3VsdFtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhIHF1ZXJ5IHN0cmluZyB0byBhbiBvYmplY3QuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9iaiBPYmplY3QgdGhhdCBzaG91bGQgYmUgdHJhbnNmb3JtZWQuXG4gKiBAcGFyYW0ge1N0cmluZ30gcHJlZml4IE9wdGlvbmFsIHByZWZpeC5cbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5mdW5jdGlvbiBxdWVyeXN0cmluZ2lmeShvYmosIHByZWZpeCkge1xuICBwcmVmaXggPSBwcmVmaXggfHwgJyc7XG5cbiAgdmFyIHBhaXJzID0gW107XG5cbiAgLy9cbiAgLy8gT3B0aW9uYWxseSBwcmVmaXggd2l0aCBhICc/JyBpZiBuZWVkZWRcbiAgLy9cbiAgaWYgKCdzdHJpbmcnICE9PSB0eXBlb2YgcHJlZml4KSBwcmVmaXggPSAnPyc7XG5cbiAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgIGlmIChoYXMuY2FsbChvYmosIGtleSkpIHtcbiAgICAgIHBhaXJzLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGtleSkgKyc9JysgZW5jb2RlVVJJQ29tcG9uZW50KG9ialtrZXldKSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBhaXJzLmxlbmd0aCA/IHByZWZpeCArIHBhaXJzLmpvaW4oJyYnKSA6ICcnO1xufVxuXG4vL1xuLy8gRXhwb3NlIHRoZSBtb2R1bGUuXG4vL1xuZXhwb3J0cy5zdHJpbmdpZnkgPSBxdWVyeXN0cmluZ2lmeTtcbmV4cG9ydHMucGFyc2UgPSBxdWVyeXN0cmluZztcblxufSx7fV0sNjA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENoZWNrIGlmIHdlJ3JlIHJlcXVpcmVkIHRvIGFkZCBhIHBvcnQgbnVtYmVyLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyNkZWZhdWx0LXBvcnRcbiAqIEBwYXJhbSB7TnVtYmVyfFN0cmluZ30gcG9ydCBQb3J0IG51bWJlciB3ZSBuZWVkIHRvIGNoZWNrXG4gKiBAcGFyYW0ge1N0cmluZ30gcHJvdG9jb2wgUHJvdG9jb2wgd2UgbmVlZCB0byBjaGVjayBhZ2FpbnN0LlxuICogQHJldHVybnMge0Jvb2xlYW59IElzIGl0IGEgZGVmYXVsdCBwb3J0IGZvciB0aGUgZ2l2ZW4gcHJvdG9jb2xcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlcXVpcmVkKHBvcnQsIHByb3RvY29sKSB7XG4gIHByb3RvY29sID0gcHJvdG9jb2wuc3BsaXQoJzonKVswXTtcbiAgcG9ydCA9ICtwb3J0O1xuXG4gIGlmICghcG9ydCkgcmV0dXJuIGZhbHNlO1xuXG4gIHN3aXRjaCAocHJvdG9jb2wpIHtcbiAgICBjYXNlICdodHRwJzpcbiAgICBjYXNlICd3cyc6XG4gICAgcmV0dXJuIHBvcnQgIT09IDgwO1xuXG4gICAgY2FzZSAnaHR0cHMnOlxuICAgIGNhc2UgJ3dzcyc6XG4gICAgcmV0dXJuIHBvcnQgIT09IDQ0MztcblxuICAgIGNhc2UgJ2Z0cCc6XG4gICAgcmV0dXJuIHBvcnQgIT09IDIxO1xuXG4gICAgY2FzZSAnZ29waGVyJzpcbiAgICByZXR1cm4gcG9ydCAhPT0gNzA7XG5cbiAgICBjYXNlICdmaWxlJzpcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gcG9ydCAhPT0gMDtcbn07XG5cbn0se31dLDYxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAoZ2xvYmFsKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHJlcXVpcmVkID0gcmVxdWlyZSgncmVxdWlyZXMtcG9ydCcpXG4gICwgcXMgPSByZXF1aXJlKCdxdWVyeXN0cmluZ2lmeScpXG4gICwgcHJvdG9jb2xyZSA9IC9eKFthLXpdW2EtejAtOS4rLV0qOik/KFxcL1xcLyk/KFtcXFNcXHNdKikvaVxuICAsIHNsYXNoZXMgPSAvXltBLVphLXpdW0EtWmEtejAtOSstLl0qOlxcL1xcLy87XG5cbi8qKlxuICogVGhlc2UgYXJlIHRoZSBwYXJzZSBydWxlcyBmb3IgdGhlIFVSTCBwYXJzZXIsIGl0IGluZm9ybXMgdGhlIHBhcnNlclxuICogYWJvdXQ6XG4gKlxuICogMC4gVGhlIGNoYXIgaXQgTmVlZHMgdG8gcGFyc2UsIGlmIGl0J3MgYSBzdHJpbmcgaXQgc2hvdWxkIGJlIGRvbmUgdXNpbmdcbiAqICAgIGluZGV4T2YsIFJlZ0V4cCB1c2luZyBleGVjIGFuZCBOYU4gbWVhbnMgc2V0IGFzIGN1cnJlbnQgdmFsdWUuXG4gKiAxLiBUaGUgcHJvcGVydHkgd2Ugc2hvdWxkIHNldCB3aGVuIHBhcnNpbmcgdGhpcyB2YWx1ZS5cbiAqIDIuIEluZGljYXRpb24gaWYgaXQncyBiYWNrd2FyZHMgb3IgZm9yd2FyZCBwYXJzaW5nLCB3aGVuIHNldCBhcyBudW1iZXIgaXQnc1xuICogICAgdGhlIHZhbHVlIG9mIGV4dHJhIGNoYXJzIHRoYXQgc2hvdWxkIGJlIHNwbGl0IG9mZi5cbiAqIDMuIEluaGVyaXQgZnJvbSBsb2NhdGlvbiBpZiBub24gZXhpc3RpbmcgaW4gdGhlIHBhcnNlci5cbiAqIDQuIGB0b0xvd2VyQ2FzZWAgdGhlIHJlc3VsdGluZyB2YWx1ZS5cbiAqL1xudmFyIHJ1bGVzID0gW1xuICBbJyMnLCAnaGFzaCddLCAgICAgICAgICAgICAgICAgICAgICAgIC8vIEV4dHJhY3QgZnJvbSB0aGUgYmFjay5cbiAgWyc/JywgJ3F1ZXJ5J10sICAgICAgICAgICAgICAgICAgICAgICAvLyBFeHRyYWN0IGZyb20gdGhlIGJhY2suXG4gIGZ1bmN0aW9uIHNhbml0aXplKGFkZHJlc3MpIHsgICAgICAgICAgLy8gU2FuaXRpemUgd2hhdCBpcyBsZWZ0IG9mIHRoZSBhZGRyZXNzXG4gICAgcmV0dXJuIGFkZHJlc3MucmVwbGFjZSgnXFxcXCcsICcvJyk7XG4gIH0sXG4gIFsnLycsICdwYXRobmFtZSddLCAgICAgICAgICAgICAgICAgICAgLy8gRXh0cmFjdCBmcm9tIHRoZSBiYWNrLlxuICBbJ0AnLCAnYXV0aCcsIDFdLCAgICAgICAgICAgICAgICAgICAgIC8vIEV4dHJhY3QgZnJvbSB0aGUgZnJvbnQuXG4gIFtOYU4sICdob3N0JywgdW5kZWZpbmVkLCAxLCAxXSwgICAgICAgLy8gU2V0IGxlZnQgb3ZlciB2YWx1ZS5cbiAgWy86KFxcZCspJC8sICdwb3J0JywgdW5kZWZpbmVkLCAxXSwgICAgLy8gUmVnRXhwIHRoZSBiYWNrLlxuICBbTmFOLCAnaG9zdG5hbWUnLCB1bmRlZmluZWQsIDEsIDFdICAgIC8vIFNldCBsZWZ0IG92ZXIuXG5dO1xuXG4vKipcbiAqIFRoZXNlIHByb3BlcnRpZXMgc2hvdWxkIG5vdCBiZSBjb3BpZWQgb3IgaW5oZXJpdGVkIGZyb20uIFRoaXMgaXMgb25seSBuZWVkZWRcbiAqIGZvciBhbGwgbm9uIGJsb2IgVVJMJ3MgYXMgYSBibG9iIFVSTCBkb2VzIG5vdCBpbmNsdWRlIGEgaGFzaCwgb25seSB0aGVcbiAqIG9yaWdpbi5cbiAqXG4gKiBAdHlwZSB7T2JqZWN0fVxuICogQHByaXZhdGVcbiAqL1xudmFyIGlnbm9yZSA9IHsgaGFzaDogMSwgcXVlcnk6IDEgfTtcblxuLyoqXG4gKiBUaGUgbG9jYXRpb24gb2JqZWN0IGRpZmZlcnMgd2hlbiB5b3VyIGNvZGUgaXMgbG9hZGVkIHRocm91Z2ggYSBub3JtYWwgcGFnZSxcbiAqIFdvcmtlciBvciB0aHJvdWdoIGEgd29ya2VyIHVzaW5nIGEgYmxvYi4gQW5kIHdpdGggdGhlIGJsb2JibGUgYmVnaW5zIHRoZVxuICogdHJvdWJsZSBhcyB0aGUgbG9jYXRpb24gb2JqZWN0IHdpbGwgY29udGFpbiB0aGUgVVJMIG9mIHRoZSBibG9iLCBub3QgdGhlXG4gKiBsb2NhdGlvbiBvZiB0aGUgcGFnZSB3aGVyZSBvdXIgY29kZSBpcyBsb2FkZWQgaW4uIFRoZSBhY3R1YWwgb3JpZ2luIGlzXG4gKiBlbmNvZGVkIGluIHRoZSBgcGF0aG5hbWVgIHNvIHdlIGNhbiB0aGFua2Z1bGx5IGdlbmVyYXRlIGEgZ29vZCBcImRlZmF1bHRcIlxuICogbG9jYXRpb24gZnJvbSBpdCBzbyB3ZSBjYW4gZ2VuZXJhdGUgcHJvcGVyIHJlbGF0aXZlIFVSTCdzIGFnYWluLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gbG9jIE9wdGlvbmFsIGRlZmF1bHQgbG9jYXRpb24gb2JqZWN0LlxuICogQHJldHVybnMge09iamVjdH0gbG9sY2F0aW9uIG9iamVjdC5cbiAqIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gbG9sY2F0aW9uKGxvYykge1xuICB2YXIgbG9jYXRpb24gPSBnbG9iYWwgJiYgZ2xvYmFsLmxvY2F0aW9uIHx8IHt9O1xuICBsb2MgPSBsb2MgfHwgbG9jYXRpb247XG5cbiAgdmFyIGZpbmFsZGVzdGluYXRpb24gPSB7fVxuICAgICwgdHlwZSA9IHR5cGVvZiBsb2NcbiAgICAsIGtleTtcblxuICBpZiAoJ2Jsb2I6JyA9PT0gbG9jLnByb3RvY29sKSB7XG4gICAgZmluYWxkZXN0aW5hdGlvbiA9IG5ldyBVcmwodW5lc2NhcGUobG9jLnBhdGhuYW1lKSwge30pO1xuICB9IGVsc2UgaWYgKCdzdHJpbmcnID09PSB0eXBlKSB7XG4gICAgZmluYWxkZXN0aW5hdGlvbiA9IG5ldyBVcmwobG9jLCB7fSk7XG4gICAgZm9yIChrZXkgaW4gaWdub3JlKSBkZWxldGUgZmluYWxkZXN0aW5hdGlvbltrZXldO1xuICB9IGVsc2UgaWYgKCdvYmplY3QnID09PSB0eXBlKSB7XG4gICAgZm9yIChrZXkgaW4gbG9jKSB7XG4gICAgICBpZiAoa2V5IGluIGlnbm9yZSkgY29udGludWU7XG4gICAgICBmaW5hbGRlc3RpbmF0aW9uW2tleV0gPSBsb2Nba2V5XTtcbiAgICB9XG5cbiAgICBpZiAoZmluYWxkZXN0aW5hdGlvbi5zbGFzaGVzID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGZpbmFsZGVzdGluYXRpb24uc2xhc2hlcyA9IHNsYXNoZXMudGVzdChsb2MuaHJlZik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZpbmFsZGVzdGluYXRpb247XG59XG5cbi8qKlxuICogQHR5cGVkZWYgUHJvdG9jb2xFeHRyYWN0XG4gKiBAdHlwZSBPYmplY3RcbiAqIEBwcm9wZXJ0eSB7U3RyaW5nfSBwcm90b2NvbCBQcm90b2NvbCBtYXRjaGVkIGluIHRoZSBVUkwsIGluIGxvd2VyY2FzZS5cbiAqIEBwcm9wZXJ0eSB7Qm9vbGVhbn0gc2xhc2hlcyBgdHJ1ZWAgaWYgcHJvdG9jb2wgaXMgZm9sbG93ZWQgYnkgXCIvL1wiLCBlbHNlIGBmYWxzZWAuXG4gKiBAcHJvcGVydHkge1N0cmluZ30gcmVzdCBSZXN0IG9mIHRoZSBVUkwgdGhhdCBpcyBub3QgcGFydCBvZiB0aGUgcHJvdG9jb2wuXG4gKi9cblxuLyoqXG4gKiBFeHRyYWN0IHByb3RvY29sIGluZm9ybWF0aW9uIGZyb20gYSBVUkwgd2l0aC93aXRob3V0IGRvdWJsZSBzbGFzaCAoXCIvL1wiKS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gYWRkcmVzcyBVUkwgd2Ugd2FudCB0byBleHRyYWN0IGZyb20uXG4gKiBAcmV0dXJuIHtQcm90b2NvbEV4dHJhY3R9IEV4dHJhY3RlZCBpbmZvcm1hdGlvbi5cbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RQcm90b2NvbChhZGRyZXNzKSB7XG4gIHZhciBtYXRjaCA9IHByb3RvY29scmUuZXhlYyhhZGRyZXNzKTtcblxuICByZXR1cm4ge1xuICAgIHByb3RvY29sOiBtYXRjaFsxXSA/IG1hdGNoWzFdLnRvTG93ZXJDYXNlKCkgOiAnJyxcbiAgICBzbGFzaGVzOiAhIW1hdGNoWzJdLFxuICAgIHJlc3Q6IG1hdGNoWzNdXG4gIH07XG59XG5cbi8qKlxuICogUmVzb2x2ZSBhIHJlbGF0aXZlIFVSTCBwYXRobmFtZSBhZ2FpbnN0IGEgYmFzZSBVUkwgcGF0aG5hbWUuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHJlbGF0aXZlIFBhdGhuYW1lIG9mIHRoZSByZWxhdGl2ZSBVUkwuXG4gKiBAcGFyYW0ge1N0cmluZ30gYmFzZSBQYXRobmFtZSBvZiB0aGUgYmFzZSBVUkwuXG4gKiBAcmV0dXJuIHtTdHJpbmd9IFJlc29sdmVkIHBhdGhuYW1lLlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gcmVzb2x2ZShyZWxhdGl2ZSwgYmFzZSkge1xuICB2YXIgcGF0aCA9IChiYXNlIHx8ICcvJykuc3BsaXQoJy8nKS5zbGljZSgwLCAtMSkuY29uY2F0KHJlbGF0aXZlLnNwbGl0KCcvJykpXG4gICAgLCBpID0gcGF0aC5sZW5ndGhcbiAgICAsIGxhc3QgPSBwYXRoW2kgLSAxXVxuICAgICwgdW5zaGlmdCA9IGZhbHNlXG4gICAgLCB1cCA9IDA7XG5cbiAgd2hpbGUgKGktLSkge1xuICAgIGlmIChwYXRoW2ldID09PSAnLicpIHtcbiAgICAgIHBhdGguc3BsaWNlKGksIDEpO1xuICAgIH0gZWxzZSBpZiAocGF0aFtpXSA9PT0gJy4uJykge1xuICAgICAgcGF0aC5zcGxpY2UoaSwgMSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIGlmIChpID09PSAwKSB1bnNoaWZ0ID0gdHJ1ZTtcbiAgICAgIHBhdGguc3BsaWNlKGksIDEpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAodW5zaGlmdCkgcGF0aC51bnNoaWZ0KCcnKTtcbiAgaWYgKGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nKSBwYXRoLnB1c2goJycpO1xuXG4gIHJldHVybiBwYXRoLmpvaW4oJy8nKTtcbn1cblxuLyoqXG4gKiBUaGUgYWN0dWFsIFVSTCBpbnN0YW5jZS4gSW5zdGVhZCBvZiByZXR1cm5pbmcgYW4gb2JqZWN0IHdlJ3ZlIG9wdGVkLWluIHRvXG4gKiBjcmVhdGUgYW4gYWN0dWFsIGNvbnN0cnVjdG9yIGFzIGl0J3MgbXVjaCBtb3JlIG1lbW9yeSBlZmZpY2llbnQgYW5kXG4gKiBmYXN0ZXIgYW5kIGl0IHBsZWFzZXMgbXkgT0NELlxuICpcbiAqIEl0IGlzIHdvcnRoIG5vdGluZyB0aGF0IHdlIHNob3VsZCBub3QgdXNlIGBVUkxgIGFzIGNsYXNzIG5hbWUgdG8gcHJldmVudFxuICogY2xhc2hlcyB3aXRoIHRoZSBnbG9iYWwgVVJMIGluc3RhbmNlIHRoYXQgZ290IGludHJvZHVjZWQgaW4gYnJvd3NlcnMuXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge1N0cmluZ30gYWRkcmVzcyBVUkwgd2Ugd2FudCB0byBwYXJzZS5cbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gbG9jYXRpb24gTG9jYXRpb24gZGVmYXVsdHMgZm9yIHJlbGF0aXZlIHBhdGhzLlxuICogQHBhcmFtIHtCb29sZWFufEZ1bmN0aW9ufSBwYXJzZXIgUGFyc2VyIGZvciB0aGUgcXVlcnkgc3RyaW5nLlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gVXJsKGFkZHJlc3MsIGxvY2F0aW9uLCBwYXJzZXIpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFVybCkpIHtcbiAgICByZXR1cm4gbmV3IFVybChhZGRyZXNzLCBsb2NhdGlvbiwgcGFyc2VyKTtcbiAgfVxuXG4gIHZhciByZWxhdGl2ZSwgZXh0cmFjdGVkLCBwYXJzZSwgaW5zdHJ1Y3Rpb24sIGluZGV4LCBrZXlcbiAgICAsIGluc3RydWN0aW9ucyA9IHJ1bGVzLnNsaWNlKClcbiAgICAsIHR5cGUgPSB0eXBlb2YgbG9jYXRpb25cbiAgICAsIHVybCA9IHRoaXNcbiAgICAsIGkgPSAwO1xuXG4gIC8vXG4gIC8vIFRoZSBmb2xsb3dpbmcgaWYgc3RhdGVtZW50cyBhbGxvd3MgdGhpcyBtb2R1bGUgdHdvIGhhdmUgY29tcGF0aWJpbGl0eSB3aXRoXG4gIC8vIDIgZGlmZmVyZW50IEFQSTpcbiAgLy9cbiAgLy8gMS4gTm9kZS5qcydzIGB1cmwucGFyc2VgIGFwaSB3aGljaCBhY2NlcHRzIGEgVVJMLCBib29sZWFuIGFzIGFyZ3VtZW50c1xuICAvLyAgICB3aGVyZSB0aGUgYm9vbGVhbiBpbmRpY2F0ZXMgdGhhdCB0aGUgcXVlcnkgc3RyaW5nIHNob3VsZCBhbHNvIGJlIHBhcnNlZC5cbiAgLy9cbiAgLy8gMi4gVGhlIGBVUkxgIGludGVyZmFjZSBvZiB0aGUgYnJvd3NlciB3aGljaCBhY2NlcHRzIGEgVVJMLCBvYmplY3QgYXNcbiAgLy8gICAgYXJndW1lbnRzLiBUaGUgc3VwcGxpZWQgb2JqZWN0IHdpbGwgYmUgdXNlZCBhcyBkZWZhdWx0IHZhbHVlcyAvIGZhbGwtYmFja1xuICAvLyAgICBmb3IgcmVsYXRpdmUgcGF0aHMuXG4gIC8vXG4gIGlmICgnb2JqZWN0JyAhPT0gdHlwZSAmJiAnc3RyaW5nJyAhPT0gdHlwZSkge1xuICAgIHBhcnNlciA9IGxvY2F0aW9uO1xuICAgIGxvY2F0aW9uID0gbnVsbDtcbiAgfVxuXG4gIGlmIChwYXJzZXIgJiYgJ2Z1bmN0aW9uJyAhPT0gdHlwZW9mIHBhcnNlcikgcGFyc2VyID0gcXMucGFyc2U7XG5cbiAgbG9jYXRpb24gPSBsb2xjYXRpb24obG9jYXRpb24pO1xuXG4gIC8vXG4gIC8vIEV4dHJhY3QgcHJvdG9jb2wgaW5mb3JtYXRpb24gYmVmb3JlIHJ1bm5pbmcgdGhlIGluc3RydWN0aW9ucy5cbiAgLy9cbiAgZXh0cmFjdGVkID0gZXh0cmFjdFByb3RvY29sKGFkZHJlc3MgfHwgJycpO1xuICByZWxhdGl2ZSA9ICFleHRyYWN0ZWQucHJvdG9jb2wgJiYgIWV4dHJhY3RlZC5zbGFzaGVzO1xuICB1cmwuc2xhc2hlcyA9IGV4dHJhY3RlZC5zbGFzaGVzIHx8IHJlbGF0aXZlICYmIGxvY2F0aW9uLnNsYXNoZXM7XG4gIHVybC5wcm90b2NvbCA9IGV4dHJhY3RlZC5wcm90b2NvbCB8fCBsb2NhdGlvbi5wcm90b2NvbCB8fCAnJztcbiAgYWRkcmVzcyA9IGV4dHJhY3RlZC5yZXN0O1xuXG4gIC8vXG4gIC8vIFdoZW4gdGhlIGF1dGhvcml0eSBjb21wb25lbnQgaXMgYWJzZW50IHRoZSBVUkwgc3RhcnRzIHdpdGggYSBwYXRoXG4gIC8vIGNvbXBvbmVudC5cbiAgLy9cbiAgaWYgKCFleHRyYWN0ZWQuc2xhc2hlcykgaW5zdHJ1Y3Rpb25zWzNdID0gWy8oLiopLywgJ3BhdGhuYW1lJ107XG5cbiAgZm9yICg7IGkgPCBpbnN0cnVjdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpbnN0cnVjdGlvbiA9IGluc3RydWN0aW9uc1tpXTtcblxuICAgIGlmICh0eXBlb2YgaW5zdHJ1Y3Rpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGFkZHJlc3MgPSBpbnN0cnVjdGlvbihhZGRyZXNzKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIHBhcnNlID0gaW5zdHJ1Y3Rpb25bMF07XG4gICAga2V5ID0gaW5zdHJ1Y3Rpb25bMV07XG5cbiAgICBpZiAocGFyc2UgIT09IHBhcnNlKSB7XG4gICAgICB1cmxba2V5XSA9IGFkZHJlc3M7XG4gICAgfSBlbHNlIGlmICgnc3RyaW5nJyA9PT0gdHlwZW9mIHBhcnNlKSB7XG4gICAgICBpZiAofihpbmRleCA9IGFkZHJlc3MuaW5kZXhPZihwYXJzZSkpKSB7XG4gICAgICAgIGlmICgnbnVtYmVyJyA9PT0gdHlwZW9mIGluc3RydWN0aW9uWzJdKSB7XG4gICAgICAgICAgdXJsW2tleV0gPSBhZGRyZXNzLnNsaWNlKDAsIGluZGV4KTtcbiAgICAgICAgICBhZGRyZXNzID0gYWRkcmVzcy5zbGljZShpbmRleCArIGluc3RydWN0aW9uWzJdKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB1cmxba2V5XSA9IGFkZHJlc3Muc2xpY2UoaW5kZXgpO1xuICAgICAgICAgIGFkZHJlc3MgPSBhZGRyZXNzLnNsaWNlKDAsIGluZGV4KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoKGluZGV4ID0gcGFyc2UuZXhlYyhhZGRyZXNzKSkpIHtcbiAgICAgIHVybFtrZXldID0gaW5kZXhbMV07XG4gICAgICBhZGRyZXNzID0gYWRkcmVzcy5zbGljZSgwLCBpbmRleC5pbmRleCk7XG4gICAgfVxuXG4gICAgdXJsW2tleV0gPSB1cmxba2V5XSB8fCAoXG4gICAgICByZWxhdGl2ZSAmJiBpbnN0cnVjdGlvblszXSA/IGxvY2F0aW9uW2tleV0gfHwgJycgOiAnJ1xuICAgICk7XG5cbiAgICAvL1xuICAgIC8vIEhvc3RuYW1lLCBob3N0IGFuZCBwcm90b2NvbCBzaG91bGQgYmUgbG93ZXJjYXNlZCBzbyB0aGV5IGNhbiBiZSB1c2VkIHRvXG4gICAgLy8gY3JlYXRlIGEgcHJvcGVyIGBvcmlnaW5gLlxuICAgIC8vXG4gICAgaWYgKGluc3RydWN0aW9uWzRdKSB1cmxba2V5XSA9IHVybFtrZXldLnRvTG93ZXJDYXNlKCk7XG4gIH1cblxuICAvL1xuICAvLyBBbHNvIHBhcnNlIHRoZSBzdXBwbGllZCBxdWVyeSBzdHJpbmcgaW4gdG8gYW4gb2JqZWN0LiBJZiB3ZSdyZSBzdXBwbGllZFxuICAvLyB3aXRoIGEgY3VzdG9tIHBhcnNlciBhcyBmdW5jdGlvbiB1c2UgdGhhdCBpbnN0ZWFkIG9mIHRoZSBkZWZhdWx0IGJ1aWxkLWluXG4gIC8vIHBhcnNlci5cbiAgLy9cbiAgaWYgKHBhcnNlcikgdXJsLnF1ZXJ5ID0gcGFyc2VyKHVybC5xdWVyeSk7XG5cbiAgLy9cbiAgLy8gSWYgdGhlIFVSTCBpcyByZWxhdGl2ZSwgcmVzb2x2ZSB0aGUgcGF0aG5hbWUgYWdhaW5zdCB0aGUgYmFzZSBVUkwuXG4gIC8vXG4gIGlmIChcbiAgICAgIHJlbGF0aXZlXG4gICAgJiYgbG9jYXRpb24uc2xhc2hlc1xuICAgICYmIHVybC5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJ1xuICAgICYmICh1cmwucGF0aG5hbWUgIT09ICcnIHx8IGxvY2F0aW9uLnBhdGhuYW1lICE9PSAnJylcbiAgKSB7XG4gICAgdXJsLnBhdGhuYW1lID0gcmVzb2x2ZSh1cmwucGF0aG5hbWUsIGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfVxuXG4gIC8vXG4gIC8vIFdlIHNob3VsZCBub3QgYWRkIHBvcnQgbnVtYmVycyBpZiB0aGV5IGFyZSBhbHJlYWR5IHRoZSBkZWZhdWx0IHBvcnQgbnVtYmVyXG4gIC8vIGZvciBhIGdpdmVuIHByb3RvY29sLiBBcyB0aGUgaG9zdCBhbHNvIGNvbnRhaW5zIHRoZSBwb3J0IG51bWJlciB3ZSdyZSBnb2luZ1xuICAvLyBvdmVycmlkZSBpdCB3aXRoIHRoZSBob3N0bmFtZSB3aGljaCBjb250YWlucyBubyBwb3J0IG51bWJlci5cbiAgLy9cbiAgaWYgKCFyZXF1aXJlZCh1cmwucG9ydCwgdXJsLnByb3RvY29sKSkge1xuICAgIHVybC5ob3N0ID0gdXJsLmhvc3RuYW1lO1xuICAgIHVybC5wb3J0ID0gJyc7XG4gIH1cblxuICAvL1xuICAvLyBQYXJzZSBkb3duIHRoZSBgYXV0aGAgZm9yIHRoZSB1c2VybmFtZSBhbmQgcGFzc3dvcmQuXG4gIC8vXG4gIHVybC51c2VybmFtZSA9IHVybC5wYXNzd29yZCA9ICcnO1xuICBpZiAodXJsLmF1dGgpIHtcbiAgICBpbnN0cnVjdGlvbiA9IHVybC5hdXRoLnNwbGl0KCc6Jyk7XG4gICAgdXJsLnVzZXJuYW1lID0gaW5zdHJ1Y3Rpb25bMF0gfHwgJyc7XG4gICAgdXJsLnBhc3N3b3JkID0gaW5zdHJ1Y3Rpb25bMV0gfHwgJyc7XG4gIH1cblxuICB1cmwub3JpZ2luID0gdXJsLnByb3RvY29sICYmIHVybC5ob3N0ICYmIHVybC5wcm90b2NvbCAhPT0gJ2ZpbGU6J1xuICAgID8gdXJsLnByb3RvY29sICsnLy8nKyB1cmwuaG9zdFxuICAgIDogJ251bGwnO1xuXG4gIC8vXG4gIC8vIFRoZSBocmVmIGlzIGp1c3QgdGhlIGNvbXBpbGVkIHJlc3VsdC5cbiAgLy9cbiAgdXJsLmhyZWYgPSB1cmwudG9TdHJpbmcoKTtcbn1cblxuLyoqXG4gKiBUaGlzIGlzIGNvbnZlbmllbmNlIG1ldGhvZCBmb3IgY2hhbmdpbmcgcHJvcGVydGllcyBpbiB0aGUgVVJMIGluc3RhbmNlIHRvXG4gKiBpbnN1cmUgdGhhdCB0aGV5IGFsbCBwcm9wYWdhdGUgY29ycmVjdGx5LlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYXJ0ICAgICAgICAgIFByb3BlcnR5IHdlIG5lZWQgdG8gYWRqdXN0LlxuICogQHBhcmFtIHtNaXhlZH0gdmFsdWUgICAgICAgICAgVGhlIG5ld2x5IGFzc2lnbmVkIHZhbHVlLlxuICogQHBhcmFtIHtCb29sZWFufEZ1bmN0aW9ufSBmbiAgV2hlbiBzZXR0aW5nIHRoZSBxdWVyeSwgaXQgd2lsbCBiZSB0aGUgZnVuY3Rpb25cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZWQgdG8gcGFyc2UgdGhlIHF1ZXJ5LlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV2hlbiBzZXR0aW5nIHRoZSBwcm90b2NvbCwgZG91YmxlIHNsYXNoIHdpbGwgYmVcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZWQgZnJvbSB0aGUgZmluYWwgdXJsIGlmIGl0IGlzIHRydWUuXG4gKiBAcmV0dXJucyB7VVJMfSBVUkwgaW5zdGFuY2UgZm9yIGNoYWluaW5nLlxuICogQHB1YmxpY1xuICovXG5mdW5jdGlvbiBzZXQocGFydCwgdmFsdWUsIGZuKSB7XG4gIHZhciB1cmwgPSB0aGlzO1xuXG4gIHN3aXRjaCAocGFydCkge1xuICAgIGNhc2UgJ3F1ZXJ5JzpcbiAgICAgIGlmICgnc3RyaW5nJyA9PT0gdHlwZW9mIHZhbHVlICYmIHZhbHVlLmxlbmd0aCkge1xuICAgICAgICB2YWx1ZSA9IChmbiB8fCBxcy5wYXJzZSkodmFsdWUpO1xuICAgICAgfVxuXG4gICAgICB1cmxbcGFydF0gPSB2YWx1ZTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAncG9ydCc6XG4gICAgICB1cmxbcGFydF0gPSB2YWx1ZTtcblxuICAgICAgaWYgKCFyZXF1aXJlZCh2YWx1ZSwgdXJsLnByb3RvY29sKSkge1xuICAgICAgICB1cmwuaG9zdCA9IHVybC5ob3N0bmFtZTtcbiAgICAgICAgdXJsW3BhcnRdID0gJyc7XG4gICAgICB9IGVsc2UgaWYgKHZhbHVlKSB7XG4gICAgICAgIHVybC5ob3N0ID0gdXJsLmhvc3RuYW1lICsnOicrIHZhbHVlO1xuICAgICAgfVxuXG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2hvc3RuYW1lJzpcbiAgICAgIHVybFtwYXJ0XSA9IHZhbHVlO1xuXG4gICAgICBpZiAodXJsLnBvcnQpIHZhbHVlICs9ICc6JysgdXJsLnBvcnQ7XG4gICAgICB1cmwuaG9zdCA9IHZhbHVlO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdob3N0JzpcbiAgICAgIHVybFtwYXJ0XSA9IHZhbHVlO1xuXG4gICAgICBpZiAoLzpcXGQrJC8udGVzdCh2YWx1ZSkpIHtcbiAgICAgICAgdmFsdWUgPSB2YWx1ZS5zcGxpdCgnOicpO1xuICAgICAgICB1cmwucG9ydCA9IHZhbHVlLnBvcCgpO1xuICAgICAgICB1cmwuaG9zdG5hbWUgPSB2YWx1ZS5qb2luKCc6Jyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1cmwuaG9zdG5hbWUgPSB2YWx1ZTtcbiAgICAgICAgdXJsLnBvcnQgPSAnJztcbiAgICAgIH1cblxuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdwcm90b2NvbCc6XG4gICAgICB1cmwucHJvdG9jb2wgPSB2YWx1ZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgdXJsLnNsYXNoZXMgPSAhZm47XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3BhdGhuYW1lJzpcbiAgICBjYXNlICdoYXNoJzpcbiAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICB2YXIgY2hhciA9IHBhcnQgPT09ICdwYXRobmFtZScgPyAnLycgOiAnIyc7XG4gICAgICAgIHVybFtwYXJ0XSA9IHZhbHVlLmNoYXJBdCgwKSAhPT0gY2hhciA/IGNoYXIgKyB2YWx1ZSA6IHZhbHVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdXJsW3BhcnRdID0gdmFsdWU7XG4gICAgICB9XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICB1cmxbcGFydF0gPSB2YWx1ZTtcbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcnVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaW5zID0gcnVsZXNbaV07XG5cbiAgICBpZiAoaW5zWzRdKSB1cmxbaW5zWzFdXSA9IHVybFtpbnNbMV1dLnRvTG93ZXJDYXNlKCk7XG4gIH1cblxuICB1cmwub3JpZ2luID0gdXJsLnByb3RvY29sICYmIHVybC5ob3N0ICYmIHVybC5wcm90b2NvbCAhPT0gJ2ZpbGU6J1xuICAgID8gdXJsLnByb3RvY29sICsnLy8nKyB1cmwuaG9zdFxuICAgIDogJ251bGwnO1xuXG4gIHVybC5ocmVmID0gdXJsLnRvU3RyaW5nKCk7XG5cbiAgcmV0dXJuIHVybDtcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gdGhlIHByb3BlcnRpZXMgYmFjayBpbiB0byBhIHZhbGlkIGFuZCBmdWxsIFVSTCBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gc3RyaW5naWZ5IE9wdGlvbmFsIHF1ZXJ5IHN0cmluZ2lmeSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIHtTdHJpbmd9IENvbXBpbGVkIHZlcnNpb24gb2YgdGhlIFVSTC5cbiAqIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gdG9TdHJpbmcoc3RyaW5naWZ5KSB7XG4gIGlmICghc3RyaW5naWZ5IHx8ICdmdW5jdGlvbicgIT09IHR5cGVvZiBzdHJpbmdpZnkpIHN0cmluZ2lmeSA9IHFzLnN0cmluZ2lmeTtcblxuICB2YXIgcXVlcnlcbiAgICAsIHVybCA9IHRoaXNcbiAgICAsIHByb3RvY29sID0gdXJsLnByb3RvY29sO1xuXG4gIGlmIChwcm90b2NvbCAmJiBwcm90b2NvbC5jaGFyQXQocHJvdG9jb2wubGVuZ3RoIC0gMSkgIT09ICc6JykgcHJvdG9jb2wgKz0gJzonO1xuXG4gIHZhciByZXN1bHQgPSBwcm90b2NvbCArICh1cmwuc2xhc2hlcyA/ICcvLycgOiAnJyk7XG5cbiAgaWYgKHVybC51c2VybmFtZSkge1xuICAgIHJlc3VsdCArPSB1cmwudXNlcm5hbWU7XG4gICAgaWYgKHVybC5wYXNzd29yZCkgcmVzdWx0ICs9ICc6JysgdXJsLnBhc3N3b3JkO1xuICAgIHJlc3VsdCArPSAnQCc7XG4gIH1cblxuICByZXN1bHQgKz0gdXJsLmhvc3QgKyB1cmwucGF0aG5hbWU7XG5cbiAgcXVlcnkgPSAnb2JqZWN0JyA9PT0gdHlwZW9mIHVybC5xdWVyeSA/IHN0cmluZ2lmeSh1cmwucXVlcnkpIDogdXJsLnF1ZXJ5O1xuICBpZiAocXVlcnkpIHJlc3VsdCArPSAnPycgIT09IHF1ZXJ5LmNoYXJBdCgwKSA/ICc/JysgcXVlcnkgOiBxdWVyeTtcblxuICBpZiAodXJsLmhhc2gpIHJlc3VsdCArPSB1cmwuaGFzaDtcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5VcmwucHJvdG90eXBlID0geyBzZXQ6IHNldCwgdG9TdHJpbmc6IHRvU3RyaW5nIH07XG5cbi8vXG4vLyBFeHBvc2UgdGhlIFVSTCBwYXJzZXIgYW5kIHNvbWUgYWRkaXRpb25hbCBwcm9wZXJ0aWVzIHRoYXQgbWlnaHQgYmUgdXNlZnVsIGZvclxuLy8gb3RoZXJzIG9yIHRlc3RpbmcuXG4vL1xuVXJsLmV4dHJhY3RQcm90b2NvbCA9IGV4dHJhY3RQcm90b2NvbDtcblVybC5sb2NhdGlvbiA9IGxvbGNhdGlvbjtcblVybC5xcyA9IHFzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFVybDtcblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG5cbn0se1wicXVlcnlzdHJpbmdpZnlcIjo1OSxcInJlcXVpcmVzLXBvcnRcIjo2MH1dfSx7fSxbMV0pKDEpXG59KTtcblxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zb2NranMuanMubWFwXG4iLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgcHVueWNvZGUgPSByZXF1aXJlKCdwdW55Y29kZScpO1xudmFyIHV0aWwgPSByZXF1aXJlKCcuL3V0aWwnKTtcblxuZXhwb3J0cy5wYXJzZSA9IHVybFBhcnNlO1xuZXhwb3J0cy5yZXNvbHZlID0gdXJsUmVzb2x2ZTtcbmV4cG9ydHMucmVzb2x2ZU9iamVjdCA9IHVybFJlc29sdmVPYmplY3Q7XG5leHBvcnRzLmZvcm1hdCA9IHVybEZvcm1hdDtcblxuZXhwb3J0cy5VcmwgPSBVcmw7XG5cbmZ1bmN0aW9uIFVybCgpIHtcbiAgdGhpcy5wcm90b2NvbCA9IG51bGw7XG4gIHRoaXMuc2xhc2hlcyA9IG51bGw7XG4gIHRoaXMuYXV0aCA9IG51bGw7XG4gIHRoaXMuaG9zdCA9IG51bGw7XG4gIHRoaXMucG9ydCA9IG51bGw7XG4gIHRoaXMuaG9zdG5hbWUgPSBudWxsO1xuICB0aGlzLmhhc2ggPSBudWxsO1xuICB0aGlzLnNlYXJjaCA9IG51bGw7XG4gIHRoaXMucXVlcnkgPSBudWxsO1xuICB0aGlzLnBhdGhuYW1lID0gbnVsbDtcbiAgdGhpcy5wYXRoID0gbnVsbDtcbiAgdGhpcy5ocmVmID0gbnVsbDtcbn1cblxuLy8gUmVmZXJlbmNlOiBSRkMgMzk4NiwgUkZDIDE4MDgsIFJGQyAyMzk2XG5cbi8vIGRlZmluZSB0aGVzZSBoZXJlIHNvIGF0IGxlYXN0IHRoZXkgb25seSBoYXZlIHRvIGJlXG4vLyBjb21waWxlZCBvbmNlIG9uIHRoZSBmaXJzdCBtb2R1bGUgbG9hZC5cbnZhciBwcm90b2NvbFBhdHRlcm4gPSAvXihbYS16MC05ListXSs6KS9pLFxuICAgIHBvcnRQYXR0ZXJuID0gLzpbMC05XSokLyxcblxuICAgIC8vIFNwZWNpYWwgY2FzZSBmb3IgYSBzaW1wbGUgcGF0aCBVUkxcbiAgICBzaW1wbGVQYXRoUGF0dGVybiA9IC9eKFxcL1xcLz8oPyFcXC8pW15cXD9cXHNdKikoXFw/W15cXHNdKik/JC8sXG5cbiAgICAvLyBSRkMgMjM5NjogY2hhcmFjdGVycyByZXNlcnZlZCBmb3IgZGVsaW1pdGluZyBVUkxzLlxuICAgIC8vIFdlIGFjdHVhbGx5IGp1c3QgYXV0by1lc2NhcGUgdGhlc2UuXG4gICAgZGVsaW1zID0gWyc8JywgJz4nLCAnXCInLCAnYCcsICcgJywgJ1xccicsICdcXG4nLCAnXFx0J10sXG5cbiAgICAvLyBSRkMgMjM5NjogY2hhcmFjdGVycyBub3QgYWxsb3dlZCBmb3IgdmFyaW91cyByZWFzb25zLlxuICAgIHVud2lzZSA9IFsneycsICd9JywgJ3wnLCAnXFxcXCcsICdeJywgJ2AnXS5jb25jYXQoZGVsaW1zKSxcblxuICAgIC8vIEFsbG93ZWQgYnkgUkZDcywgYnV0IGNhdXNlIG9mIFhTUyBhdHRhY2tzLiAgQWx3YXlzIGVzY2FwZSB0aGVzZS5cbiAgICBhdXRvRXNjYXBlID0gWydcXCcnXS5jb25jYXQodW53aXNlKSxcbiAgICAvLyBDaGFyYWN0ZXJzIHRoYXQgYXJlIG5ldmVyIGV2ZXIgYWxsb3dlZCBpbiBhIGhvc3RuYW1lLlxuICAgIC8vIE5vdGUgdGhhdCBhbnkgaW52YWxpZCBjaGFycyBhcmUgYWxzbyBoYW5kbGVkLCBidXQgdGhlc2VcbiAgICAvLyBhcmUgdGhlIG9uZXMgdGhhdCBhcmUgKmV4cGVjdGVkKiB0byBiZSBzZWVuLCBzbyB3ZSBmYXN0LXBhdGhcbiAgICAvLyB0aGVtLlxuICAgIG5vbkhvc3RDaGFycyA9IFsnJScsICcvJywgJz8nLCAnOycsICcjJ10uY29uY2F0KGF1dG9Fc2NhcGUpLFxuICAgIGhvc3RFbmRpbmdDaGFycyA9IFsnLycsICc/JywgJyMnXSxcbiAgICBob3N0bmFtZU1heExlbiA9IDI1NSxcbiAgICBob3N0bmFtZVBhcnRQYXR0ZXJuID0gL15bK2EtejAtOUEtWl8tXXswLDYzfSQvLFxuICAgIGhvc3RuYW1lUGFydFN0YXJ0ID0gL14oWythLXowLTlBLVpfLV17MCw2M30pKC4qKSQvLFxuICAgIC8vIHByb3RvY29scyB0aGF0IGNhbiBhbGxvdyBcInVuc2FmZVwiIGFuZCBcInVud2lzZVwiIGNoYXJzLlxuICAgIHVuc2FmZVByb3RvY29sID0ge1xuICAgICAgJ2phdmFzY3JpcHQnOiB0cnVlLFxuICAgICAgJ2phdmFzY3JpcHQ6JzogdHJ1ZVxuICAgIH0sXG4gICAgLy8gcHJvdG9jb2xzIHRoYXQgbmV2ZXIgaGF2ZSBhIGhvc3RuYW1lLlxuICAgIGhvc3RsZXNzUHJvdG9jb2wgPSB7XG4gICAgICAnamF2YXNjcmlwdCc6IHRydWUsXG4gICAgICAnamF2YXNjcmlwdDonOiB0cnVlXG4gICAgfSxcbiAgICAvLyBwcm90b2NvbHMgdGhhdCBhbHdheXMgY29udGFpbiBhIC8vIGJpdC5cbiAgICBzbGFzaGVkUHJvdG9jb2wgPSB7XG4gICAgICAnaHR0cCc6IHRydWUsXG4gICAgICAnaHR0cHMnOiB0cnVlLFxuICAgICAgJ2Z0cCc6IHRydWUsXG4gICAgICAnZ29waGVyJzogdHJ1ZSxcbiAgICAgICdmaWxlJzogdHJ1ZSxcbiAgICAgICdodHRwOic6IHRydWUsXG4gICAgICAnaHR0cHM6JzogdHJ1ZSxcbiAgICAgICdmdHA6JzogdHJ1ZSxcbiAgICAgICdnb3BoZXI6JzogdHJ1ZSxcbiAgICAgICdmaWxlOic6IHRydWVcbiAgICB9LFxuICAgIHF1ZXJ5c3RyaW5nID0gcmVxdWlyZSgncXVlcnlzdHJpbmcnKTtcblxuZnVuY3Rpb24gdXJsUGFyc2UodXJsLCBwYXJzZVF1ZXJ5U3RyaW5nLCBzbGFzaGVzRGVub3RlSG9zdCkge1xuICBpZiAodXJsICYmIHV0aWwuaXNPYmplY3QodXJsKSAmJiB1cmwgaW5zdGFuY2VvZiBVcmwpIHJldHVybiB1cmw7XG5cbiAgdmFyIHUgPSBuZXcgVXJsO1xuICB1LnBhcnNlKHVybCwgcGFyc2VRdWVyeVN0cmluZywgc2xhc2hlc0Rlbm90ZUhvc3QpO1xuICByZXR1cm4gdTtcbn1cblxuVXJsLnByb3RvdHlwZS5wYXJzZSA9IGZ1bmN0aW9uKHVybCwgcGFyc2VRdWVyeVN0cmluZywgc2xhc2hlc0Rlbm90ZUhvc3QpIHtcbiAgaWYgKCF1dGlsLmlzU3RyaW5nKHVybCkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUGFyYW1ldGVyICd1cmwnIG11c3QgYmUgYSBzdHJpbmcsIG5vdCBcIiArIHR5cGVvZiB1cmwpO1xuICB9XG5cbiAgLy8gQ29weSBjaHJvbWUsIElFLCBvcGVyYSBiYWNrc2xhc2gtaGFuZGxpbmcgYmVoYXZpb3IuXG4gIC8vIEJhY2sgc2xhc2hlcyBiZWZvcmUgdGhlIHF1ZXJ5IHN0cmluZyBnZXQgY29udmVydGVkIHRvIGZvcndhcmQgc2xhc2hlc1xuICAvLyBTZWU6IGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD0yNTkxNlxuICB2YXIgcXVlcnlJbmRleCA9IHVybC5pbmRleE9mKCc/JyksXG4gICAgICBzcGxpdHRlciA9XG4gICAgICAgICAgKHF1ZXJ5SW5kZXggIT09IC0xICYmIHF1ZXJ5SW5kZXggPCB1cmwuaW5kZXhPZignIycpKSA/ICc/JyA6ICcjJyxcbiAgICAgIHVTcGxpdCA9IHVybC5zcGxpdChzcGxpdHRlciksXG4gICAgICBzbGFzaFJlZ2V4ID0gL1xcXFwvZztcbiAgdVNwbGl0WzBdID0gdVNwbGl0WzBdLnJlcGxhY2Uoc2xhc2hSZWdleCwgJy8nKTtcbiAgdXJsID0gdVNwbGl0LmpvaW4oc3BsaXR0ZXIpO1xuXG4gIHZhciByZXN0ID0gdXJsO1xuXG4gIC8vIHRyaW0gYmVmb3JlIHByb2NlZWRpbmcuXG4gIC8vIFRoaXMgaXMgdG8gc3VwcG9ydCBwYXJzZSBzdHVmZiBsaWtlIFwiICBodHRwOi8vZm9vLmNvbSAgXFxuXCJcbiAgcmVzdCA9IHJlc3QudHJpbSgpO1xuXG4gIGlmICghc2xhc2hlc0Rlbm90ZUhvc3QgJiYgdXJsLnNwbGl0KCcjJykubGVuZ3RoID09PSAxKSB7XG4gICAgLy8gVHJ5IGZhc3QgcGF0aCByZWdleHBcbiAgICB2YXIgc2ltcGxlUGF0aCA9IHNpbXBsZVBhdGhQYXR0ZXJuLmV4ZWMocmVzdCk7XG4gICAgaWYgKHNpbXBsZVBhdGgpIHtcbiAgICAgIHRoaXMucGF0aCA9IHJlc3Q7XG4gICAgICB0aGlzLmhyZWYgPSByZXN0O1xuICAgICAgdGhpcy5wYXRobmFtZSA9IHNpbXBsZVBhdGhbMV07XG4gICAgICBpZiAoc2ltcGxlUGF0aFsyXSkge1xuICAgICAgICB0aGlzLnNlYXJjaCA9IHNpbXBsZVBhdGhbMl07XG4gICAgICAgIGlmIChwYXJzZVF1ZXJ5U3RyaW5nKSB7XG4gICAgICAgICAgdGhpcy5xdWVyeSA9IHF1ZXJ5c3RyaW5nLnBhcnNlKHRoaXMuc2VhcmNoLnN1YnN0cigxKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5xdWVyeSA9IHRoaXMuc2VhcmNoLnN1YnN0cigxKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChwYXJzZVF1ZXJ5U3RyaW5nKSB7XG4gICAgICAgIHRoaXMuc2VhcmNoID0gJyc7XG4gICAgICAgIHRoaXMucXVlcnkgPSB7fTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfVxuXG4gIHZhciBwcm90byA9IHByb3RvY29sUGF0dGVybi5leGVjKHJlc3QpO1xuICBpZiAocHJvdG8pIHtcbiAgICBwcm90byA9IHByb3RvWzBdO1xuICAgIHZhciBsb3dlclByb3RvID0gcHJvdG8udG9Mb3dlckNhc2UoKTtcbiAgICB0aGlzLnByb3RvY29sID0gbG93ZXJQcm90bztcbiAgICByZXN0ID0gcmVzdC5zdWJzdHIocHJvdG8ubGVuZ3RoKTtcbiAgfVxuXG4gIC8vIGZpZ3VyZSBvdXQgaWYgaXQncyBnb3QgYSBob3N0XG4gIC8vIHVzZXJAc2VydmVyIGlzICphbHdheXMqIGludGVycHJldGVkIGFzIGEgaG9zdG5hbWUsIGFuZCB1cmxcbiAgLy8gcmVzb2x1dGlvbiB3aWxsIHRyZWF0IC8vZm9vL2JhciBhcyBob3N0PWZvbyxwYXRoPWJhciBiZWNhdXNlIHRoYXQnc1xuICAvLyBob3cgdGhlIGJyb3dzZXIgcmVzb2x2ZXMgcmVsYXRpdmUgVVJMcy5cbiAgaWYgKHNsYXNoZXNEZW5vdGVIb3N0IHx8IHByb3RvIHx8IHJlc3QubWF0Y2goL15cXC9cXC9bXkBcXC9dK0BbXkBcXC9dKy8pKSB7XG4gICAgdmFyIHNsYXNoZXMgPSByZXN0LnN1YnN0cigwLCAyKSA9PT0gJy8vJztcbiAgICBpZiAoc2xhc2hlcyAmJiAhKHByb3RvICYmIGhvc3RsZXNzUHJvdG9jb2xbcHJvdG9dKSkge1xuICAgICAgcmVzdCA9IHJlc3Quc3Vic3RyKDIpO1xuICAgICAgdGhpcy5zbGFzaGVzID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWhvc3RsZXNzUHJvdG9jb2xbcHJvdG9dICYmXG4gICAgICAoc2xhc2hlcyB8fCAocHJvdG8gJiYgIXNsYXNoZWRQcm90b2NvbFtwcm90b10pKSkge1xuXG4gICAgLy8gdGhlcmUncyBhIGhvc3RuYW1lLlxuICAgIC8vIHRoZSBmaXJzdCBpbnN0YW5jZSBvZiAvLCA/LCA7LCBvciAjIGVuZHMgdGhlIGhvc3QuXG4gICAgLy9cbiAgICAvLyBJZiB0aGVyZSBpcyBhbiBAIGluIHRoZSBob3N0bmFtZSwgdGhlbiBub24taG9zdCBjaGFycyAqYXJlKiBhbGxvd2VkXG4gICAgLy8gdG8gdGhlIGxlZnQgb2YgdGhlIGxhc3QgQCBzaWduLCB1bmxlc3Mgc29tZSBob3N0LWVuZGluZyBjaGFyYWN0ZXJcbiAgICAvLyBjb21lcyAqYmVmb3JlKiB0aGUgQC1zaWduLlxuICAgIC8vIFVSTHMgYXJlIG9ibm94aW91cy5cbiAgICAvL1xuICAgIC8vIGV4OlxuICAgIC8vIGh0dHA6Ly9hQGJAYy8gPT4gdXNlcjphQGIgaG9zdDpjXG4gICAgLy8gaHR0cDovL2FAYj9AYyA9PiB1c2VyOmEgaG9zdDpjIHBhdGg6Lz9AY1xuXG4gICAgLy8gdjAuMTIgVE9ETyhpc2FhY3MpOiBUaGlzIGlzIG5vdCBxdWl0ZSBob3cgQ2hyb21lIGRvZXMgdGhpbmdzLlxuICAgIC8vIFJldmlldyBvdXIgdGVzdCBjYXNlIGFnYWluc3QgYnJvd3NlcnMgbW9yZSBjb21wcmVoZW5zaXZlbHkuXG5cbiAgICAvLyBmaW5kIHRoZSBmaXJzdCBpbnN0YW5jZSBvZiBhbnkgaG9zdEVuZGluZ0NoYXJzXG4gICAgdmFyIGhvc3RFbmQgPSAtMTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGhvc3RFbmRpbmdDaGFycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGhlYyA9IHJlc3QuaW5kZXhPZihob3N0RW5kaW5nQ2hhcnNbaV0pO1xuICAgICAgaWYgKGhlYyAhPT0gLTEgJiYgKGhvc3RFbmQgPT09IC0xIHx8IGhlYyA8IGhvc3RFbmQpKVxuICAgICAgICBob3N0RW5kID0gaGVjO1xuICAgIH1cblxuICAgIC8vIGF0IHRoaXMgcG9pbnQsIGVpdGhlciB3ZSBoYXZlIGFuIGV4cGxpY2l0IHBvaW50IHdoZXJlIHRoZVxuICAgIC8vIGF1dGggcG9ydGlvbiBjYW5ub3QgZ28gcGFzdCwgb3IgdGhlIGxhc3QgQCBjaGFyIGlzIHRoZSBkZWNpZGVyLlxuICAgIHZhciBhdXRoLCBhdFNpZ247XG4gICAgaWYgKGhvc3RFbmQgPT09IC0xKSB7XG4gICAgICAvLyBhdFNpZ24gY2FuIGJlIGFueXdoZXJlLlxuICAgICAgYXRTaWduID0gcmVzdC5sYXN0SW5kZXhPZignQCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBhdFNpZ24gbXVzdCBiZSBpbiBhdXRoIHBvcnRpb24uXG4gICAgICAvLyBodHRwOi8vYUBiL2NAZCA9PiBob3N0OmIgYXV0aDphIHBhdGg6L2NAZFxuICAgICAgYXRTaWduID0gcmVzdC5sYXN0SW5kZXhPZignQCcsIGhvc3RFbmQpO1xuICAgIH1cblxuICAgIC8vIE5vdyB3ZSBoYXZlIGEgcG9ydGlvbiB3aGljaCBpcyBkZWZpbml0ZWx5IHRoZSBhdXRoLlxuICAgIC8vIFB1bGwgdGhhdCBvZmYuXG4gICAgaWYgKGF0U2lnbiAhPT0gLTEpIHtcbiAgICAgIGF1dGggPSByZXN0LnNsaWNlKDAsIGF0U2lnbik7XG4gICAgICByZXN0ID0gcmVzdC5zbGljZShhdFNpZ24gKyAxKTtcbiAgICAgIHRoaXMuYXV0aCA9IGRlY29kZVVSSUNvbXBvbmVudChhdXRoKTtcbiAgICB9XG5cbiAgICAvLyB0aGUgaG9zdCBpcyB0aGUgcmVtYWluaW5nIHRvIHRoZSBsZWZ0IG9mIHRoZSBmaXJzdCBub24taG9zdCBjaGFyXG4gICAgaG9zdEVuZCA9IC0xO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9uSG9zdENoYXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaGVjID0gcmVzdC5pbmRleE9mKG5vbkhvc3RDaGFyc1tpXSk7XG4gICAgICBpZiAoaGVjICE9PSAtMSAmJiAoaG9zdEVuZCA9PT0gLTEgfHwgaGVjIDwgaG9zdEVuZCkpXG4gICAgICAgIGhvc3RFbmQgPSBoZWM7XG4gICAgfVxuICAgIC8vIGlmIHdlIHN0aWxsIGhhdmUgbm90IGhpdCBpdCwgdGhlbiB0aGUgZW50aXJlIHRoaW5nIGlzIGEgaG9zdC5cbiAgICBpZiAoaG9zdEVuZCA9PT0gLTEpXG4gICAgICBob3N0RW5kID0gcmVzdC5sZW5ndGg7XG5cbiAgICB0aGlzLmhvc3QgPSByZXN0LnNsaWNlKDAsIGhvc3RFbmQpO1xuICAgIHJlc3QgPSByZXN0LnNsaWNlKGhvc3RFbmQpO1xuXG4gICAgLy8gcHVsbCBvdXQgcG9ydC5cbiAgICB0aGlzLnBhcnNlSG9zdCgpO1xuXG4gICAgLy8gd2UndmUgaW5kaWNhdGVkIHRoYXQgdGhlcmUgaXMgYSBob3N0bmFtZSxcbiAgICAvLyBzbyBldmVuIGlmIGl0J3MgZW1wdHksIGl0IGhhcyB0byBiZSBwcmVzZW50LlxuICAgIHRoaXMuaG9zdG5hbWUgPSB0aGlzLmhvc3RuYW1lIHx8ICcnO1xuXG4gICAgLy8gaWYgaG9zdG5hbWUgYmVnaW5zIHdpdGggWyBhbmQgZW5kcyB3aXRoIF1cbiAgICAvLyBhc3N1bWUgdGhhdCBpdCdzIGFuIElQdjYgYWRkcmVzcy5cbiAgICB2YXIgaXB2Nkhvc3RuYW1lID0gdGhpcy5ob3N0bmFtZVswXSA9PT0gJ1snICYmXG4gICAgICAgIHRoaXMuaG9zdG5hbWVbdGhpcy5ob3N0bmFtZS5sZW5ndGggLSAxXSA9PT0gJ10nO1xuXG4gICAgLy8gdmFsaWRhdGUgYSBsaXR0bGUuXG4gICAgaWYgKCFpcHY2SG9zdG5hbWUpIHtcbiAgICAgIHZhciBob3N0cGFydHMgPSB0aGlzLmhvc3RuYW1lLnNwbGl0KC9cXC4vKTtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gaG9zdHBhcnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICB2YXIgcGFydCA9IGhvc3RwYXJ0c1tpXTtcbiAgICAgICAgaWYgKCFwYXJ0KSBjb250aW51ZTtcbiAgICAgICAgaWYgKCFwYXJ0Lm1hdGNoKGhvc3RuYW1lUGFydFBhdHRlcm4pKSB7XG4gICAgICAgICAgdmFyIG5ld3BhcnQgPSAnJztcbiAgICAgICAgICBmb3IgKHZhciBqID0gMCwgayA9IHBhcnQubGVuZ3RoOyBqIDwgazsgaisrKSB7XG4gICAgICAgICAgICBpZiAocGFydC5jaGFyQ29kZUF0KGopID4gMTI3KSB7XG4gICAgICAgICAgICAgIC8vIHdlIHJlcGxhY2Ugbm9uLUFTQ0lJIGNoYXIgd2l0aCBhIHRlbXBvcmFyeSBwbGFjZWhvbGRlclxuICAgICAgICAgICAgICAvLyB3ZSBuZWVkIHRoaXMgdG8gbWFrZSBzdXJlIHNpemUgb2YgaG9zdG5hbWUgaXMgbm90XG4gICAgICAgICAgICAgIC8vIGJyb2tlbiBieSByZXBsYWNpbmcgbm9uLUFTQ0lJIGJ5IG5vdGhpbmdcbiAgICAgICAgICAgICAgbmV3cGFydCArPSAneCc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBuZXdwYXJ0ICs9IHBhcnRbal07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIHdlIHRlc3QgYWdhaW4gd2l0aCBBU0NJSSBjaGFyIG9ubHlcbiAgICAgICAgICBpZiAoIW5ld3BhcnQubWF0Y2goaG9zdG5hbWVQYXJ0UGF0dGVybikpIHtcbiAgICAgICAgICAgIHZhciB2YWxpZFBhcnRzID0gaG9zdHBhcnRzLnNsaWNlKDAsIGkpO1xuICAgICAgICAgICAgdmFyIG5vdEhvc3QgPSBob3N0cGFydHMuc2xpY2UoaSArIDEpO1xuICAgICAgICAgICAgdmFyIGJpdCA9IHBhcnQubWF0Y2goaG9zdG5hbWVQYXJ0U3RhcnQpO1xuICAgICAgICAgICAgaWYgKGJpdCkge1xuICAgICAgICAgICAgICB2YWxpZFBhcnRzLnB1c2goYml0WzFdKTtcbiAgICAgICAgICAgICAgbm90SG9zdC51bnNoaWZ0KGJpdFsyXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobm90SG9zdC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgcmVzdCA9ICcvJyArIG5vdEhvc3Quam9pbignLicpICsgcmVzdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuaG9zdG5hbWUgPSB2YWxpZFBhcnRzLmpvaW4oJy4nKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0aGlzLmhvc3RuYW1lLmxlbmd0aCA+IGhvc3RuYW1lTWF4TGVuKSB7XG4gICAgICB0aGlzLmhvc3RuYW1lID0gJyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGhvc3RuYW1lcyBhcmUgYWx3YXlzIGxvd2VyIGNhc2UuXG4gICAgICB0aGlzLmhvc3RuYW1lID0gdGhpcy5ob3N0bmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cblxuICAgIGlmICghaXB2Nkhvc3RuYW1lKSB7XG4gICAgICAvLyBJRE5BIFN1cHBvcnQ6IFJldHVybnMgYSBwdW55Y29kZWQgcmVwcmVzZW50YXRpb24gb2YgXCJkb21haW5cIi5cbiAgICAgIC8vIEl0IG9ubHkgY29udmVydHMgcGFydHMgb2YgdGhlIGRvbWFpbiBuYW1lIHRoYXRcbiAgICAgIC8vIGhhdmUgbm9uLUFTQ0lJIGNoYXJhY3RlcnMsIGkuZS4gaXQgZG9lc24ndCBtYXR0ZXIgaWZcbiAgICAgIC8vIHlvdSBjYWxsIGl0IHdpdGggYSBkb21haW4gdGhhdCBhbHJlYWR5IGlzIEFTQ0lJLW9ubHkuXG4gICAgICB0aGlzLmhvc3RuYW1lID0gcHVueWNvZGUudG9BU0NJSSh0aGlzLmhvc3RuYW1lKTtcbiAgICB9XG5cbiAgICB2YXIgcCA9IHRoaXMucG9ydCA/ICc6JyArIHRoaXMucG9ydCA6ICcnO1xuICAgIHZhciBoID0gdGhpcy5ob3N0bmFtZSB8fCAnJztcbiAgICB0aGlzLmhvc3QgPSBoICsgcDtcbiAgICB0aGlzLmhyZWYgKz0gdGhpcy5ob3N0O1xuXG4gICAgLy8gc3RyaXAgWyBhbmQgXSBmcm9tIHRoZSBob3N0bmFtZVxuICAgIC8vIHRoZSBob3N0IGZpZWxkIHN0aWxsIHJldGFpbnMgdGhlbSwgdGhvdWdoXG4gICAgaWYgKGlwdjZIb3N0bmFtZSkge1xuICAgICAgdGhpcy5ob3N0bmFtZSA9IHRoaXMuaG9zdG5hbWUuc3Vic3RyKDEsIHRoaXMuaG9zdG5hbWUubGVuZ3RoIC0gMik7XG4gICAgICBpZiAocmVzdFswXSAhPT0gJy8nKSB7XG4gICAgICAgIHJlc3QgPSAnLycgKyByZXN0O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIG5vdyByZXN0IGlzIHNldCB0byB0aGUgcG9zdC1ob3N0IHN0dWZmLlxuICAvLyBjaG9wIG9mZiBhbnkgZGVsaW0gY2hhcnMuXG4gIGlmICghdW5zYWZlUHJvdG9jb2xbbG93ZXJQcm90b10pIHtcblxuICAgIC8vIEZpcnN0LCBtYWtlIDEwMCUgc3VyZSB0aGF0IGFueSBcImF1dG9Fc2NhcGVcIiBjaGFycyBnZXRcbiAgICAvLyBlc2NhcGVkLCBldmVuIGlmIGVuY29kZVVSSUNvbXBvbmVudCBkb2Vzbid0IHRoaW5rIHRoZXlcbiAgICAvLyBuZWVkIHRvIGJlLlxuICAgIGZvciAodmFyIGkgPSAwLCBsID0gYXV0b0VzY2FwZS5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIHZhciBhZSA9IGF1dG9Fc2NhcGVbaV07XG4gICAgICBpZiAocmVzdC5pbmRleE9mKGFlKSA9PT0gLTEpXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgdmFyIGVzYyA9IGVuY29kZVVSSUNvbXBvbmVudChhZSk7XG4gICAgICBpZiAoZXNjID09PSBhZSkge1xuICAgICAgICBlc2MgPSBlc2NhcGUoYWUpO1xuICAgICAgfVxuICAgICAgcmVzdCA9IHJlc3Quc3BsaXQoYWUpLmpvaW4oZXNjKTtcbiAgICB9XG4gIH1cblxuXG4gIC8vIGNob3Agb2ZmIGZyb20gdGhlIHRhaWwgZmlyc3QuXG4gIHZhciBoYXNoID0gcmVzdC5pbmRleE9mKCcjJyk7XG4gIGlmIChoYXNoICE9PSAtMSkge1xuICAgIC8vIGdvdCBhIGZyYWdtZW50IHN0cmluZy5cbiAgICB0aGlzLmhhc2ggPSByZXN0LnN1YnN0cihoYXNoKTtcbiAgICByZXN0ID0gcmVzdC5zbGljZSgwLCBoYXNoKTtcbiAgfVxuICB2YXIgcW0gPSByZXN0LmluZGV4T2YoJz8nKTtcbiAgaWYgKHFtICE9PSAtMSkge1xuICAgIHRoaXMuc2VhcmNoID0gcmVzdC5zdWJzdHIocW0pO1xuICAgIHRoaXMucXVlcnkgPSByZXN0LnN1YnN0cihxbSArIDEpO1xuICAgIGlmIChwYXJzZVF1ZXJ5U3RyaW5nKSB7XG4gICAgICB0aGlzLnF1ZXJ5ID0gcXVlcnlzdHJpbmcucGFyc2UodGhpcy5xdWVyeSk7XG4gICAgfVxuICAgIHJlc3QgPSByZXN0LnNsaWNlKDAsIHFtKTtcbiAgfSBlbHNlIGlmIChwYXJzZVF1ZXJ5U3RyaW5nKSB7XG4gICAgLy8gbm8gcXVlcnkgc3RyaW5nLCBidXQgcGFyc2VRdWVyeVN0cmluZyBzdGlsbCByZXF1ZXN0ZWRcbiAgICB0aGlzLnNlYXJjaCA9ICcnO1xuICAgIHRoaXMucXVlcnkgPSB7fTtcbiAgfVxuICBpZiAocmVzdCkgdGhpcy5wYXRobmFtZSA9IHJlc3Q7XG4gIGlmIChzbGFzaGVkUHJvdG9jb2xbbG93ZXJQcm90b10gJiZcbiAgICAgIHRoaXMuaG9zdG5hbWUgJiYgIXRoaXMucGF0aG5hbWUpIHtcbiAgICB0aGlzLnBhdGhuYW1lID0gJy8nO1xuICB9XG5cbiAgLy90byBzdXBwb3J0IGh0dHAucmVxdWVzdFxuICBpZiAodGhpcy5wYXRobmFtZSB8fCB0aGlzLnNlYXJjaCkge1xuICAgIHZhciBwID0gdGhpcy5wYXRobmFtZSB8fCAnJztcbiAgICB2YXIgcyA9IHRoaXMuc2VhcmNoIHx8ICcnO1xuICAgIHRoaXMucGF0aCA9IHAgKyBzO1xuICB9XG5cbiAgLy8gZmluYWxseSwgcmVjb25zdHJ1Y3QgdGhlIGhyZWYgYmFzZWQgb24gd2hhdCBoYXMgYmVlbiB2YWxpZGF0ZWQuXG4gIHRoaXMuaHJlZiA9IHRoaXMuZm9ybWF0KCk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLy8gZm9ybWF0IGEgcGFyc2VkIG9iamVjdCBpbnRvIGEgdXJsIHN0cmluZ1xuZnVuY3Rpb24gdXJsRm9ybWF0KG9iaikge1xuICAvLyBlbnN1cmUgaXQncyBhbiBvYmplY3QsIGFuZCBub3QgYSBzdHJpbmcgdXJsLlxuICAvLyBJZiBpdCdzIGFuIG9iaiwgdGhpcyBpcyBhIG5vLW9wLlxuICAvLyB0aGlzIHdheSwgeW91IGNhbiBjYWxsIHVybF9mb3JtYXQoKSBvbiBzdHJpbmdzXG4gIC8vIHRvIGNsZWFuIHVwIHBvdGVudGlhbGx5IHdvbmt5IHVybHMuXG4gIGlmICh1dGlsLmlzU3RyaW5nKG9iaikpIG9iaiA9IHVybFBhcnNlKG9iaik7XG4gIGlmICghKG9iaiBpbnN0YW5jZW9mIFVybCkpIHJldHVybiBVcmwucHJvdG90eXBlLmZvcm1hdC5jYWxsKG9iaik7XG4gIHJldHVybiBvYmouZm9ybWF0KCk7XG59XG5cblVybC5wcm90b3R5cGUuZm9ybWF0ID0gZnVuY3Rpb24oKSB7XG4gIHZhciBhdXRoID0gdGhpcy5hdXRoIHx8ICcnO1xuICBpZiAoYXV0aCkge1xuICAgIGF1dGggPSBlbmNvZGVVUklDb21wb25lbnQoYXV0aCk7XG4gICAgYXV0aCA9IGF1dGgucmVwbGFjZSgvJTNBL2ksICc6Jyk7XG4gICAgYXV0aCArPSAnQCc7XG4gIH1cblxuICB2YXIgcHJvdG9jb2wgPSB0aGlzLnByb3RvY29sIHx8ICcnLFxuICAgICAgcGF0aG5hbWUgPSB0aGlzLnBhdGhuYW1lIHx8ICcnLFxuICAgICAgaGFzaCA9IHRoaXMuaGFzaCB8fCAnJyxcbiAgICAgIGhvc3QgPSBmYWxzZSxcbiAgICAgIHF1ZXJ5ID0gJyc7XG5cbiAgaWYgKHRoaXMuaG9zdCkge1xuICAgIGhvc3QgPSBhdXRoICsgdGhpcy5ob3N0O1xuICB9IGVsc2UgaWYgKHRoaXMuaG9zdG5hbWUpIHtcbiAgICBob3N0ID0gYXV0aCArICh0aGlzLmhvc3RuYW1lLmluZGV4T2YoJzonKSA9PT0gLTEgP1xuICAgICAgICB0aGlzLmhvc3RuYW1lIDpcbiAgICAgICAgJ1snICsgdGhpcy5ob3N0bmFtZSArICddJyk7XG4gICAgaWYgKHRoaXMucG9ydCkge1xuICAgICAgaG9zdCArPSAnOicgKyB0aGlzLnBvcnQ7XG4gICAgfVxuICB9XG5cbiAgaWYgKHRoaXMucXVlcnkgJiZcbiAgICAgIHV0aWwuaXNPYmplY3QodGhpcy5xdWVyeSkgJiZcbiAgICAgIE9iamVjdC5rZXlzKHRoaXMucXVlcnkpLmxlbmd0aCkge1xuICAgIHF1ZXJ5ID0gcXVlcnlzdHJpbmcuc3RyaW5naWZ5KHRoaXMucXVlcnkpO1xuICB9XG5cbiAgdmFyIHNlYXJjaCA9IHRoaXMuc2VhcmNoIHx8IChxdWVyeSAmJiAoJz8nICsgcXVlcnkpKSB8fCAnJztcblxuICBpZiAocHJvdG9jb2wgJiYgcHJvdG9jb2wuc3Vic3RyKC0xKSAhPT0gJzonKSBwcm90b2NvbCArPSAnOic7XG5cbiAgLy8gb25seSB0aGUgc2xhc2hlZFByb3RvY29scyBnZXQgdGhlIC8vLiAgTm90IG1haWx0bzosIHhtcHA6LCBldGMuXG4gIC8vIHVubGVzcyB0aGV5IGhhZCB0aGVtIHRvIGJlZ2luIHdpdGguXG4gIGlmICh0aGlzLnNsYXNoZXMgfHxcbiAgICAgICghcHJvdG9jb2wgfHwgc2xhc2hlZFByb3RvY29sW3Byb3RvY29sXSkgJiYgaG9zdCAhPT0gZmFsc2UpIHtcbiAgICBob3N0ID0gJy8vJyArIChob3N0IHx8ICcnKTtcbiAgICBpZiAocGF0aG5hbWUgJiYgcGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHBhdGhuYW1lID0gJy8nICsgcGF0aG5hbWU7XG4gIH0gZWxzZSBpZiAoIWhvc3QpIHtcbiAgICBob3N0ID0gJyc7XG4gIH1cblxuICBpZiAoaGFzaCAmJiBoYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBoYXNoID0gJyMnICsgaGFzaDtcbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2guY2hhckF0KDApICE9PSAnPycpIHNlYXJjaCA9ICc/JyArIHNlYXJjaDtcblxuICBwYXRobmFtZSA9IHBhdGhuYW1lLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24obWF0Y2gpIHtcbiAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KG1hdGNoKTtcbiAgfSk7XG4gIHNlYXJjaCA9IHNlYXJjaC5yZXBsYWNlKCcjJywgJyUyMycpO1xuXG4gIHJldHVybiBwcm90b2NvbCArIGhvc3QgKyBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XG59O1xuXG5mdW5jdGlvbiB1cmxSZXNvbHZlKHNvdXJjZSwgcmVsYXRpdmUpIHtcbiAgcmV0dXJuIHVybFBhcnNlKHNvdXJjZSwgZmFsc2UsIHRydWUpLnJlc29sdmUocmVsYXRpdmUpO1xufVxuXG5VcmwucHJvdG90eXBlLnJlc29sdmUgPSBmdW5jdGlvbihyZWxhdGl2ZSkge1xuICByZXR1cm4gdGhpcy5yZXNvbHZlT2JqZWN0KHVybFBhcnNlKHJlbGF0aXZlLCBmYWxzZSwgdHJ1ZSkpLmZvcm1hdCgpO1xufTtcblxuZnVuY3Rpb24gdXJsUmVzb2x2ZU9iamVjdChzb3VyY2UsIHJlbGF0aXZlKSB7XG4gIGlmICghc291cmNlKSByZXR1cm4gcmVsYXRpdmU7XG4gIHJldHVybiB1cmxQYXJzZShzb3VyY2UsIGZhbHNlLCB0cnVlKS5yZXNvbHZlT2JqZWN0KHJlbGF0aXZlKTtcbn1cblxuVXJsLnByb3RvdHlwZS5yZXNvbHZlT2JqZWN0ID0gZnVuY3Rpb24ocmVsYXRpdmUpIHtcbiAgaWYgKHV0aWwuaXNTdHJpbmcocmVsYXRpdmUpKSB7XG4gICAgdmFyIHJlbCA9IG5ldyBVcmwoKTtcbiAgICByZWwucGFyc2UocmVsYXRpdmUsIGZhbHNlLCB0cnVlKTtcbiAgICByZWxhdGl2ZSA9IHJlbDtcbiAgfVxuXG4gIHZhciByZXN1bHQgPSBuZXcgVXJsKCk7XG4gIHZhciB0a2V5cyA9IE9iamVjdC5rZXlzKHRoaXMpO1xuICBmb3IgKHZhciB0ayA9IDA7IHRrIDwgdGtleXMubGVuZ3RoOyB0aysrKSB7XG4gICAgdmFyIHRrZXkgPSB0a2V5c1t0a107XG4gICAgcmVzdWx0W3RrZXldID0gdGhpc1t0a2V5XTtcbiAgfVxuXG4gIC8vIGhhc2ggaXMgYWx3YXlzIG92ZXJyaWRkZW4sIG5vIG1hdHRlciB3aGF0LlxuICAvLyBldmVuIGhyZWY9XCJcIiB3aWxsIHJlbW92ZSBpdC5cbiAgcmVzdWx0Lmhhc2ggPSByZWxhdGl2ZS5oYXNoO1xuXG4gIC8vIGlmIHRoZSByZWxhdGl2ZSB1cmwgaXMgZW1wdHksIHRoZW4gdGhlcmUncyBub3RoaW5nIGxlZnQgdG8gZG8gaGVyZS5cbiAgaWYgKHJlbGF0aXZlLmhyZWYgPT09ICcnKSB7XG4gICAgcmVzdWx0LmhyZWYgPSByZXN1bHQuZm9ybWF0KCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8vIGhyZWZzIGxpa2UgLy9mb28vYmFyIGFsd2F5cyBjdXQgdG8gdGhlIHByb3RvY29sLlxuICBpZiAocmVsYXRpdmUuc2xhc2hlcyAmJiAhcmVsYXRpdmUucHJvdG9jb2wpIHtcbiAgICAvLyB0YWtlIGV2ZXJ5dGhpbmcgZXhjZXB0IHRoZSBwcm90b2NvbCBmcm9tIHJlbGF0aXZlXG4gICAgdmFyIHJrZXlzID0gT2JqZWN0LmtleXMocmVsYXRpdmUpO1xuICAgIGZvciAodmFyIHJrID0gMDsgcmsgPCBya2V5cy5sZW5ndGg7IHJrKyspIHtcbiAgICAgIHZhciBya2V5ID0gcmtleXNbcmtdO1xuICAgICAgaWYgKHJrZXkgIT09ICdwcm90b2NvbCcpXG4gICAgICAgIHJlc3VsdFtya2V5XSA9IHJlbGF0aXZlW3JrZXldO1xuICAgIH1cblxuICAgIC8vdXJsUGFyc2UgYXBwZW5kcyB0cmFpbGluZyAvIHRvIHVybHMgbGlrZSBodHRwOi8vd3d3LmV4YW1wbGUuY29tXG4gICAgaWYgKHNsYXNoZWRQcm90b2NvbFtyZXN1bHQucHJvdG9jb2xdICYmXG4gICAgICAgIHJlc3VsdC5ob3N0bmFtZSAmJiAhcmVzdWx0LnBhdGhuYW1lKSB7XG4gICAgICByZXN1bHQucGF0aCA9IHJlc3VsdC5wYXRobmFtZSA9ICcvJztcbiAgICB9XG5cbiAgICByZXN1bHQuaHJlZiA9IHJlc3VsdC5mb3JtYXQoKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgaWYgKHJlbGF0aXZlLnByb3RvY29sICYmIHJlbGF0aXZlLnByb3RvY29sICE9PSByZXN1bHQucHJvdG9jb2wpIHtcbiAgICAvLyBpZiBpdCdzIGEga25vd24gdXJsIHByb3RvY29sLCB0aGVuIGNoYW5naW5nXG4gICAgLy8gdGhlIHByb3RvY29sIGRvZXMgd2VpcmQgdGhpbmdzXG4gICAgLy8gZmlyc3QsIGlmIGl0J3Mgbm90IGZpbGU6LCB0aGVuIHdlIE1VU1QgaGF2ZSBhIGhvc3QsXG4gICAgLy8gYW5kIGlmIHRoZXJlIHdhcyBhIHBhdGhcbiAgICAvLyB0byBiZWdpbiB3aXRoLCB0aGVuIHdlIE1VU1QgaGF2ZSBhIHBhdGguXG4gICAgLy8gaWYgaXQgaXMgZmlsZTosIHRoZW4gdGhlIGhvc3QgaXMgZHJvcHBlZCxcbiAgICAvLyBiZWNhdXNlIHRoYXQncyBrbm93biB0byBiZSBob3N0bGVzcy5cbiAgICAvLyBhbnl0aGluZyBlbHNlIGlzIGFzc3VtZWQgdG8gYmUgYWJzb2x1dGUuXG4gICAgaWYgKCFzbGFzaGVkUHJvdG9jb2xbcmVsYXRpdmUucHJvdG9jb2xdKSB7XG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHJlbGF0aXZlKTtcbiAgICAgIGZvciAodmFyIHYgPSAwOyB2IDwga2V5cy5sZW5ndGg7IHYrKykge1xuICAgICAgICB2YXIgayA9IGtleXNbdl07XG4gICAgICAgIHJlc3VsdFtrXSA9IHJlbGF0aXZlW2tdO1xuICAgICAgfVxuICAgICAgcmVzdWx0LmhyZWYgPSByZXN1bHQuZm9ybWF0KCk7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIHJlc3VsdC5wcm90b2NvbCA9IHJlbGF0aXZlLnByb3RvY29sO1xuICAgIGlmICghcmVsYXRpdmUuaG9zdCAmJiAhaG9zdGxlc3NQcm90b2NvbFtyZWxhdGl2ZS5wcm90b2NvbF0pIHtcbiAgICAgIHZhciByZWxQYXRoID0gKHJlbGF0aXZlLnBhdGhuYW1lIHx8ICcnKS5zcGxpdCgnLycpO1xuICAgICAgd2hpbGUgKHJlbFBhdGgubGVuZ3RoICYmICEocmVsYXRpdmUuaG9zdCA9IHJlbFBhdGguc2hpZnQoKSkpO1xuICAgICAgaWYgKCFyZWxhdGl2ZS5ob3N0KSByZWxhdGl2ZS5ob3N0ID0gJyc7XG4gICAgICBpZiAoIXJlbGF0aXZlLmhvc3RuYW1lKSByZWxhdGl2ZS5ob3N0bmFtZSA9ICcnO1xuICAgICAgaWYgKHJlbFBhdGhbMF0gIT09ICcnKSByZWxQYXRoLnVuc2hpZnQoJycpO1xuICAgICAgaWYgKHJlbFBhdGgubGVuZ3RoIDwgMikgcmVsUGF0aC51bnNoaWZ0KCcnKTtcbiAgICAgIHJlc3VsdC5wYXRobmFtZSA9IHJlbFBhdGguam9pbignLycpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHQucGF0aG5hbWUgPSByZWxhdGl2ZS5wYXRobmFtZTtcbiAgICB9XG4gICAgcmVzdWx0LnNlYXJjaCA9IHJlbGF0aXZlLnNlYXJjaDtcbiAgICByZXN1bHQucXVlcnkgPSByZWxhdGl2ZS5xdWVyeTtcbiAgICByZXN1bHQuaG9zdCA9IHJlbGF0aXZlLmhvc3QgfHwgJyc7XG4gICAgcmVzdWx0LmF1dGggPSByZWxhdGl2ZS5hdXRoO1xuICAgIHJlc3VsdC5ob3N0bmFtZSA9IHJlbGF0aXZlLmhvc3RuYW1lIHx8IHJlbGF0aXZlLmhvc3Q7XG4gICAgcmVzdWx0LnBvcnQgPSByZWxhdGl2ZS5wb3J0O1xuICAgIC8vIHRvIHN1cHBvcnQgaHR0cC5yZXF1ZXN0XG4gICAgaWYgKHJlc3VsdC5wYXRobmFtZSB8fCByZXN1bHQuc2VhcmNoKSB7XG4gICAgICB2YXIgcCA9IHJlc3VsdC5wYXRobmFtZSB8fCAnJztcbiAgICAgIHZhciBzID0gcmVzdWx0LnNlYXJjaCB8fCAnJztcbiAgICAgIHJlc3VsdC5wYXRoID0gcCArIHM7XG4gICAgfVxuICAgIHJlc3VsdC5zbGFzaGVzID0gcmVzdWx0LnNsYXNoZXMgfHwgcmVsYXRpdmUuc2xhc2hlcztcbiAgICByZXN1bHQuaHJlZiA9IHJlc3VsdC5mb3JtYXQoKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgdmFyIGlzU291cmNlQWJzID0gKHJlc3VsdC5wYXRobmFtZSAmJiByZXN1bHQucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycpLFxuICAgICAgaXNSZWxBYnMgPSAoXG4gICAgICAgICAgcmVsYXRpdmUuaG9zdCB8fFxuICAgICAgICAgIHJlbGF0aXZlLnBhdGhuYW1lICYmIHJlbGF0aXZlLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nXG4gICAgICApLFxuICAgICAgbXVzdEVuZEFicyA9IChpc1JlbEFicyB8fCBpc1NvdXJjZUFicyB8fFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0Lmhvc3QgJiYgcmVsYXRpdmUucGF0aG5hbWUpKSxcbiAgICAgIHJlbW92ZUFsbERvdHMgPSBtdXN0RW5kQWJzLFxuICAgICAgc3JjUGF0aCA9IHJlc3VsdC5wYXRobmFtZSAmJiByZXN1bHQucGF0aG5hbWUuc3BsaXQoJy8nKSB8fCBbXSxcbiAgICAgIHJlbFBhdGggPSByZWxhdGl2ZS5wYXRobmFtZSAmJiByZWxhdGl2ZS5wYXRobmFtZS5zcGxpdCgnLycpIHx8IFtdLFxuICAgICAgcHN5Y2hvdGljID0gcmVzdWx0LnByb3RvY29sICYmICFzbGFzaGVkUHJvdG9jb2xbcmVzdWx0LnByb3RvY29sXTtcblxuICAvLyBpZiB0aGUgdXJsIGlzIGEgbm9uLXNsYXNoZWQgdXJsLCB0aGVuIHJlbGF0aXZlXG4gIC8vIGxpbmtzIGxpa2UgLi4vLi4gc2hvdWxkIGJlIGFibGVcbiAgLy8gdG8gY3Jhd2wgdXAgdG8gdGhlIGhvc3RuYW1lLCBhcyB3ZWxsLiAgVGhpcyBpcyBzdHJhbmdlLlxuICAvLyByZXN1bHQucHJvdG9jb2wgaGFzIGFscmVhZHkgYmVlbiBzZXQgYnkgbm93LlxuICAvLyBMYXRlciBvbiwgcHV0IHRoZSBmaXJzdCBwYXRoIHBhcnQgaW50byB0aGUgaG9zdCBmaWVsZC5cbiAgaWYgKHBzeWNob3RpYykge1xuICAgIHJlc3VsdC5ob3N0bmFtZSA9ICcnO1xuICAgIHJlc3VsdC5wb3J0ID0gbnVsbDtcbiAgICBpZiAocmVzdWx0Lmhvc3QpIHtcbiAgICAgIGlmIChzcmNQYXRoWzBdID09PSAnJykgc3JjUGF0aFswXSA9IHJlc3VsdC5ob3N0O1xuICAgICAgZWxzZSBzcmNQYXRoLnVuc2hpZnQocmVzdWx0Lmhvc3QpO1xuICAgIH1cbiAgICByZXN1bHQuaG9zdCA9ICcnO1xuICAgIGlmIChyZWxhdGl2ZS5wcm90b2NvbCkge1xuICAgICAgcmVsYXRpdmUuaG9zdG5hbWUgPSBudWxsO1xuICAgICAgcmVsYXRpdmUucG9ydCA9IG51bGw7XG4gICAgICBpZiAocmVsYXRpdmUuaG9zdCkge1xuICAgICAgICBpZiAocmVsUGF0aFswXSA9PT0gJycpIHJlbFBhdGhbMF0gPSByZWxhdGl2ZS5ob3N0O1xuICAgICAgICBlbHNlIHJlbFBhdGgudW5zaGlmdChyZWxhdGl2ZS5ob3N0KTtcbiAgICAgIH1cbiAgICAgIHJlbGF0aXZlLmhvc3QgPSBudWxsO1xuICAgIH1cbiAgICBtdXN0RW5kQWJzID0gbXVzdEVuZEFicyAmJiAocmVsUGF0aFswXSA9PT0gJycgfHwgc3JjUGF0aFswXSA9PT0gJycpO1xuICB9XG5cbiAgaWYgKGlzUmVsQWJzKSB7XG4gICAgLy8gaXQncyBhYnNvbHV0ZS5cbiAgICByZXN1bHQuaG9zdCA9IChyZWxhdGl2ZS5ob3N0IHx8IHJlbGF0aXZlLmhvc3QgPT09ICcnKSA/XG4gICAgICAgICAgICAgICAgICByZWxhdGl2ZS5ob3N0IDogcmVzdWx0Lmhvc3Q7XG4gICAgcmVzdWx0Lmhvc3RuYW1lID0gKHJlbGF0aXZlLmhvc3RuYW1lIHx8IHJlbGF0aXZlLmhvc3RuYW1lID09PSAnJykgP1xuICAgICAgICAgICAgICAgICAgICAgIHJlbGF0aXZlLmhvc3RuYW1lIDogcmVzdWx0Lmhvc3RuYW1lO1xuICAgIHJlc3VsdC5zZWFyY2ggPSByZWxhdGl2ZS5zZWFyY2g7XG4gICAgcmVzdWx0LnF1ZXJ5ID0gcmVsYXRpdmUucXVlcnk7XG4gICAgc3JjUGF0aCA9IHJlbFBhdGg7XG4gICAgLy8gZmFsbCB0aHJvdWdoIHRvIHRoZSBkb3QtaGFuZGxpbmcgYmVsb3cuXG4gIH0gZWxzZSBpZiAocmVsUGF0aC5sZW5ndGgpIHtcbiAgICAvLyBpdCdzIHJlbGF0aXZlXG4gICAgLy8gdGhyb3cgYXdheSB0aGUgZXhpc3RpbmcgZmlsZSwgYW5kIHRha2UgdGhlIG5ldyBwYXRoIGluc3RlYWQuXG4gICAgaWYgKCFzcmNQYXRoKSBzcmNQYXRoID0gW107XG4gICAgc3JjUGF0aC5wb3AoKTtcbiAgICBzcmNQYXRoID0gc3JjUGF0aC5jb25jYXQocmVsUGF0aCk7XG4gICAgcmVzdWx0LnNlYXJjaCA9IHJlbGF0aXZlLnNlYXJjaDtcbiAgICByZXN1bHQucXVlcnkgPSByZWxhdGl2ZS5xdWVyeTtcbiAgfSBlbHNlIGlmICghdXRpbC5pc051bGxPclVuZGVmaW5lZChyZWxhdGl2ZS5zZWFyY2gpKSB7XG4gICAgLy8ganVzdCBwdWxsIG91dCB0aGUgc2VhcmNoLlxuICAgIC8vIGxpa2UgaHJlZj0nP2ZvbycuXG4gICAgLy8gUHV0IHRoaXMgYWZ0ZXIgdGhlIG90aGVyIHR3byBjYXNlcyBiZWNhdXNlIGl0IHNpbXBsaWZpZXMgdGhlIGJvb2xlYW5zXG4gICAgaWYgKHBzeWNob3RpYykge1xuICAgICAgcmVzdWx0Lmhvc3RuYW1lID0gcmVzdWx0Lmhvc3QgPSBzcmNQYXRoLnNoaWZ0KCk7XG4gICAgICAvL29jY2F0aW9uYWx5IHRoZSBhdXRoIGNhbiBnZXQgc3R1Y2sgb25seSBpbiBob3N0XG4gICAgICAvL3RoaXMgZXNwZWNpYWxseSBoYXBwZW5zIGluIGNhc2VzIGxpa2VcbiAgICAgIC8vdXJsLnJlc29sdmVPYmplY3QoJ21haWx0bzpsb2NhbDFAZG9tYWluMScsICdsb2NhbDJAZG9tYWluMicpXG4gICAgICB2YXIgYXV0aEluSG9zdCA9IHJlc3VsdC5ob3N0ICYmIHJlc3VsdC5ob3N0LmluZGV4T2YoJ0AnKSA+IDAgP1xuICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQuaG9zdC5zcGxpdCgnQCcpIDogZmFsc2U7XG4gICAgICBpZiAoYXV0aEluSG9zdCkge1xuICAgICAgICByZXN1bHQuYXV0aCA9IGF1dGhJbkhvc3Quc2hpZnQoKTtcbiAgICAgICAgcmVzdWx0Lmhvc3QgPSByZXN1bHQuaG9zdG5hbWUgPSBhdXRoSW5Ib3N0LnNoaWZ0KCk7XG4gICAgICB9XG4gICAgfVxuICAgIHJlc3VsdC5zZWFyY2ggPSByZWxhdGl2ZS5zZWFyY2g7XG4gICAgcmVzdWx0LnF1ZXJ5ID0gcmVsYXRpdmUucXVlcnk7XG4gICAgLy90byBzdXBwb3J0IGh0dHAucmVxdWVzdFxuICAgIGlmICghdXRpbC5pc051bGwocmVzdWx0LnBhdGhuYW1lKSB8fCAhdXRpbC5pc051bGwocmVzdWx0LnNlYXJjaCkpIHtcbiAgICAgIHJlc3VsdC5wYXRoID0gKHJlc3VsdC5wYXRobmFtZSA/IHJlc3VsdC5wYXRobmFtZSA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgIChyZXN1bHQuc2VhcmNoID8gcmVzdWx0LnNlYXJjaCA6ICcnKTtcbiAgICB9XG4gICAgcmVzdWx0LmhyZWYgPSByZXN1bHQuZm9ybWF0KCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIGlmICghc3JjUGF0aC5sZW5ndGgpIHtcbiAgICAvLyBubyBwYXRoIGF0IGFsbC4gIGVhc3kuXG4gICAgLy8gd2UndmUgYWxyZWFkeSBoYW5kbGVkIHRoZSBvdGhlciBzdHVmZiBhYm92ZS5cbiAgICByZXN1bHQucGF0aG5hbWUgPSBudWxsO1xuICAgIC8vdG8gc3VwcG9ydCBodHRwLnJlcXVlc3RcbiAgICBpZiAocmVzdWx0LnNlYXJjaCkge1xuICAgICAgcmVzdWx0LnBhdGggPSAnLycgKyByZXN1bHQuc2VhcmNoO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHQucGF0aCA9IG51bGw7XG4gICAgfVxuICAgIHJlc3VsdC5ocmVmID0gcmVzdWx0LmZvcm1hdCgpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICAvLyBpZiBhIHVybCBFTkRzIGluIC4gb3IgLi4sIHRoZW4gaXQgbXVzdCBnZXQgYSB0cmFpbGluZyBzbGFzaC5cbiAgLy8gaG93ZXZlciwgaWYgaXQgZW5kcyBpbiBhbnl0aGluZyBlbHNlIG5vbi1zbGFzaHksXG4gIC8vIHRoZW4gaXQgbXVzdCBOT1QgZ2V0IGEgdHJhaWxpbmcgc2xhc2guXG4gIHZhciBsYXN0ID0gc3JjUGF0aC5zbGljZSgtMSlbMF07XG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoID0gKFxuICAgICAgKHJlc3VsdC5ob3N0IHx8IHJlbGF0aXZlLmhvc3QgfHwgc3JjUGF0aC5sZW5ndGggPiAxKSAmJlxuICAgICAgKGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nKSB8fCBsYXN0ID09PSAnJyk7XG5cbiAgLy8gc3RyaXAgc2luZ2xlIGRvdHMsIHJlc29sdmUgZG91YmxlIGRvdHMgdG8gcGFyZW50IGRpclxuICAvLyBpZiB0aGUgcGF0aCB0cmllcyB0byBnbyBhYm92ZSB0aGUgcm9vdCwgYHVwYCBlbmRzIHVwID4gMFxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gc3JjUGF0aC5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgbGFzdCA9IHNyY1BhdGhbaV07XG4gICAgaWYgKGxhc3QgPT09ICcuJykge1xuICAgICAgc3JjUGF0aC5zcGxpY2UoaSwgMSk7XG4gICAgfSBlbHNlIGlmIChsYXN0ID09PSAnLi4nKSB7XG4gICAgICBzcmNQYXRoLnNwbGljZShpLCAxKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3JjUGF0aC5zcGxpY2UoaSwgMSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIC8vIGlmIHRoZSBwYXRoIGlzIGFsbG93ZWQgdG8gZ28gYWJvdmUgdGhlIHJvb3QsIHJlc3RvcmUgbGVhZGluZyAuLnNcbiAgaWYgKCFtdXN0RW5kQWJzICYmICFyZW1vdmVBbGxEb3RzKSB7XG4gICAgZm9yICg7IHVwLS07IHVwKSB7XG4gICAgICBzcmNQYXRoLnVuc2hpZnQoJy4uJyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKG11c3RFbmRBYnMgJiYgc3JjUGF0aFswXSAhPT0gJycgJiZcbiAgICAgICghc3JjUGF0aFswXSB8fCBzcmNQYXRoWzBdLmNoYXJBdCgwKSAhPT0gJy8nKSkge1xuICAgIHNyY1BhdGgudW5zaGlmdCgnJyk7XG4gIH1cblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiAoc3JjUGF0aC5qb2luKCcvJykuc3Vic3RyKC0xKSAhPT0gJy8nKSkge1xuICAgIHNyY1BhdGgucHVzaCgnJyk7XG4gIH1cblxuICB2YXIgaXNBYnNvbHV0ZSA9IHNyY1BhdGhbMF0gPT09ICcnIHx8XG4gICAgICAoc3JjUGF0aFswXSAmJiBzcmNQYXRoWzBdLmNoYXJBdCgwKSA9PT0gJy8nKTtcblxuICAvLyBwdXQgdGhlIGhvc3QgYmFja1xuICBpZiAocHN5Y2hvdGljKSB7XG4gICAgcmVzdWx0Lmhvc3RuYW1lID0gcmVzdWx0Lmhvc3QgPSBpc0Fic29sdXRlID8gJycgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjUGF0aC5sZW5ndGggPyBzcmNQYXRoLnNoaWZ0KCkgOiAnJztcbiAgICAvL29jY2F0aW9uYWx5IHRoZSBhdXRoIGNhbiBnZXQgc3R1Y2sgb25seSBpbiBob3N0XG4gICAgLy90aGlzIGVzcGVjaWFsbHkgaGFwcGVucyBpbiBjYXNlcyBsaWtlXG4gICAgLy91cmwucmVzb2x2ZU9iamVjdCgnbWFpbHRvOmxvY2FsMUBkb21haW4xJywgJ2xvY2FsMkBkb21haW4yJylcbiAgICB2YXIgYXV0aEluSG9zdCA9IHJlc3VsdC5ob3N0ICYmIHJlc3VsdC5ob3N0LmluZGV4T2YoJ0AnKSA+IDAgP1xuICAgICAgICAgICAgICAgICAgICAgcmVzdWx0Lmhvc3Quc3BsaXQoJ0AnKSA6IGZhbHNlO1xuICAgIGlmIChhdXRoSW5Ib3N0KSB7XG4gICAgICByZXN1bHQuYXV0aCA9IGF1dGhJbkhvc3Quc2hpZnQoKTtcbiAgICAgIHJlc3VsdC5ob3N0ID0gcmVzdWx0Lmhvc3RuYW1lID0gYXV0aEluSG9zdC5zaGlmdCgpO1xuICAgIH1cbiAgfVxuXG4gIG11c3RFbmRBYnMgPSBtdXN0RW5kQWJzIHx8IChyZXN1bHQuaG9zdCAmJiBzcmNQYXRoLmxlbmd0aCk7XG5cbiAgaWYgKG11c3RFbmRBYnMgJiYgIWlzQWJzb2x1dGUpIHtcbiAgICBzcmNQYXRoLnVuc2hpZnQoJycpO1xuICB9XG5cbiAgaWYgKCFzcmNQYXRoLmxlbmd0aCkge1xuICAgIHJlc3VsdC5wYXRobmFtZSA9IG51bGw7XG4gICAgcmVzdWx0LnBhdGggPSBudWxsO1xuICB9IGVsc2Uge1xuICAgIHJlc3VsdC5wYXRobmFtZSA9IHNyY1BhdGguam9pbignLycpO1xuICB9XG5cbiAgLy90byBzdXBwb3J0IHJlcXVlc3QuaHR0cFxuICBpZiAoIXV0aWwuaXNOdWxsKHJlc3VsdC5wYXRobmFtZSkgfHwgIXV0aWwuaXNOdWxsKHJlc3VsdC5zZWFyY2gpKSB7XG4gICAgcmVzdWx0LnBhdGggPSAocmVzdWx0LnBhdGhuYW1lID8gcmVzdWx0LnBhdGhuYW1lIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChyZXN1bHQuc2VhcmNoID8gcmVzdWx0LnNlYXJjaCA6ICcnKTtcbiAgfVxuICByZXN1bHQuYXV0aCA9IHJlbGF0aXZlLmF1dGggfHwgcmVzdWx0LmF1dGg7XG4gIHJlc3VsdC5zbGFzaGVzID0gcmVzdWx0LnNsYXNoZXMgfHwgcmVsYXRpdmUuc2xhc2hlcztcbiAgcmVzdWx0LmhyZWYgPSByZXN1bHQuZm9ybWF0KCk7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG5VcmwucHJvdG90eXBlLnBhcnNlSG9zdCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgaG9zdCA9IHRoaXMuaG9zdDtcbiAgdmFyIHBvcnQgPSBwb3J0UGF0dGVybi5leGVjKGhvc3QpO1xuICBpZiAocG9ydCkge1xuICAgIHBvcnQgPSBwb3J0WzBdO1xuICAgIGlmIChwb3J0ICE9PSAnOicpIHtcbiAgICAgIHRoaXMucG9ydCA9IHBvcnQuc3Vic3RyKDEpO1xuICAgIH1cbiAgICBob3N0ID0gaG9zdC5zdWJzdHIoMCwgaG9zdC5sZW5ndGggLSBwb3J0Lmxlbmd0aCk7XG4gIH1cbiAgaWYgKGhvc3QpIHRoaXMuaG9zdG5hbWUgPSBob3N0O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzU3RyaW5nOiBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4gdHlwZW9mKGFyZykgPT09ICdzdHJpbmcnO1xuICB9LFxuICBpc09iamVjdDogZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHR5cGVvZihhcmcpID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XG4gIH0sXG4gIGlzTnVsbDogZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIGFyZyA9PT0gbnVsbDtcbiAgfSxcbiAgaXNOdWxsT3JVbmRlZmluZWQ6IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiBhcmcgPT0gbnVsbDtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlXG4gIG5vLXVudXNlZC12YXJzXG4qL1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQmFzZUNsaWVudCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQmFzZUNsaWVudCk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQmFzZUNsaWVudCwgbnVsbCwgW3tcbiAgICBrZXk6IFwiZ2V0Q2xpZW50UGF0aFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRDbGllbnRQYXRoKG9wdGlvbnMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ2xpZW50IG5lZWRzIGltcGxlbWVudGF0aW9uJyk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEJhc2VDbGllbnQ7XG59KCk7IiwiJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGVcbiAgbm8tdW51c2VkLXZhcnNcbiovXG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfVxuXG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfVxuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfVxuXG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9XG5cbnZhciBTb2NrSlMgPSByZXF1aXJlKCdzb2NranMtY2xpZW50L2Rpc3Qvc29ja2pzJyk7XG5cbnZhciBCYXNlQ2xpZW50ID0gcmVxdWlyZSgnLi9CYXNlQ2xpZW50Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQmFzZUNsaWVudCkge1xuICBfaW5oZXJpdHMoU29ja0pTQ2xpZW50LCBfQmFzZUNsaWVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihTb2NrSlNDbGllbnQpO1xuXG4gIGZ1bmN0aW9uIFNvY2tKU0NsaWVudCh1cmwpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU29ja0pTQ2xpZW50KTtcblxuICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcyk7XG4gICAgX3RoaXMuc29jayA9IG5ldyBTb2NrSlModXJsKTtcblxuICAgIF90aGlzLnNvY2sub25lcnJvciA9IGZ1bmN0aW9uIChlcnIpIHsvLyBUT0RPOiB1c2UgbG9nZ2VyIHRvIGxvZyB0aGUgZXJyb3IgZXZlbnQgb25jZSBjbGllbnQgYW5kIGNsaWVudC1zcmNcbiAgICAgIC8vIGFyZSByZW9yZ2FuaXplZCB0byBoYXZlIHRoZSBzYW1lIGRpcmVjdG9yeSBzdHJ1Y3R1cmVcbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFNvY2tKU0NsaWVudCwgW3tcbiAgICBrZXk6IFwib25PcGVuXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uT3BlbihmKSB7XG4gICAgICB0aGlzLnNvY2sub25vcGVuID0gZjtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwib25DbG9zZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNsb3NlKGYpIHtcbiAgICAgIHRoaXMuc29jay5vbmNsb3NlID0gZjtcbiAgICB9IC8vIGNhbGwgZiB3aXRoIHRoZSBtZXNzYWdlIHN0cmluZyBhcyB0aGUgZmlyc3QgYXJndW1lbnRcblxuICB9LCB7XG4gICAga2V5OiBcIm9uTWVzc2FnZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbk1lc3NhZ2UoZikge1xuICAgICAgdGhpcy5zb2NrLm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGYoZS5kYXRhKTtcbiAgICAgIH07XG4gICAgfVxuICB9XSwgW3tcbiAgICBrZXk6IFwiZ2V0Q2xpZW50UGF0aFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRDbGllbnRQYXRoKG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiByZXF1aXJlLnJlc29sdmUoJy4vU29ja0pTQ2xpZW50Jyk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFNvY2tKU0NsaWVudDtcbn0oQmFzZUNsaWVudCk7IiwiJ3VzZSBzdHJpY3QnOyAvLyBUaGUgZXJyb3Igb3ZlcmxheSBpcyBpbnNwaXJlZCAoYW5kIG1vc3RseSBjb3BpZWQpIGZyb20gQ3JlYXRlIFJlYWN0IEFwcCAoaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29raW5jdWJhdG9yL2NyZWF0ZS1yZWFjdC1hcHApXG4vLyBUaGV5LCBpbiB0dXJuLCBnb3QgaW5zcGlyZWQgYnkgd2VicGFjay1ob3QtbWlkZGxld2FyZSAoaHR0cHM6Ly9naXRodWIuY29tL2dsZW5qYW1pbi93ZWJwYWNrLWhvdC1taWRkbGV3YXJlKS5cblxudmFyIGFuc2lIVE1MID0gcmVxdWlyZSgnYW5zaS1odG1sJyk7XG5cbnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJ2h0bWwtZW50aXRpZXMnKSxcbiAgICBBbGxIdG1sRW50aXRpZXMgPSBfcmVxdWlyZS5BbGxIdG1sRW50aXRpZXM7XG5cbnZhciBlbnRpdGllcyA9IG5ldyBBbGxIdG1sRW50aXRpZXMoKTtcbnZhciBjb2xvcnMgPSB7XG4gIHJlc2V0OiBbJ3RyYW5zcGFyZW50JywgJ3RyYW5zcGFyZW50J10sXG4gIGJsYWNrOiAnMTgxODE4JyxcbiAgcmVkOiAnRTM2MDQ5JyxcbiAgZ3JlZW46ICdCM0NCNzQnLFxuICB5ZWxsb3c6ICdGRkQwODAnLFxuICBibHVlOiAnN0NBRkMyJyxcbiAgbWFnZW50YTogJzdGQUNDQScsXG4gIGN5YW46ICdDM0MyRUYnLFxuICBsaWdodGdyZXk6ICdFQkU3RTMnLFxuICBkYXJrZ3JleTogJzZENzg5MSdcbn07XG52YXIgb3ZlcmxheUlmcmFtZSA9IG51bGw7XG52YXIgb3ZlcmxheURpdiA9IG51bGw7XG52YXIgbGFzdE9uT3ZlcmxheURpdlJlYWR5ID0gbnVsbDtcbmFuc2lIVE1MLnNldENvbG9ycyhjb2xvcnMpO1xuXG5mdW5jdGlvbiBjcmVhdGVPdmVybGF5SWZyYW1lKG9uSWZyYW1lTG9hZCkge1xuICB2YXIgaWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gIGlmcmFtZS5pZCA9ICd3ZWJwYWNrLWRldi1zZXJ2ZXItY2xpZW50LW92ZXJsYXknO1xuICBpZnJhbWUuc3JjID0gJ2Fib3V0OmJsYW5rJztcbiAgaWZyYW1lLnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJztcbiAgaWZyYW1lLnN0eWxlLmxlZnQgPSAwO1xuICBpZnJhbWUuc3R5bGUudG9wID0gMDtcbiAgaWZyYW1lLnN0eWxlLnJpZ2h0ID0gMDtcbiAgaWZyYW1lLnN0eWxlLmJvdHRvbSA9IDA7XG4gIGlmcmFtZS5zdHlsZS53aWR0aCA9ICcxMDB2dyc7XG4gIGlmcmFtZS5zdHlsZS5oZWlnaHQgPSAnMTAwdmgnO1xuICBpZnJhbWUuc3R5bGUuYm9yZGVyID0gJ25vbmUnO1xuICBpZnJhbWUuc3R5bGUuekluZGV4ID0gOTk5OTk5OTk5OTtcbiAgaWZyYW1lLm9ubG9hZCA9IG9uSWZyYW1lTG9hZDtcbiAgcmV0dXJuIGlmcmFtZTtcbn1cblxuZnVuY3Rpb24gYWRkT3ZlcmxheURpdlRvKGlmcmFtZSkge1xuICB2YXIgZGl2ID0gaWZyYW1lLmNvbnRlbnREb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZGl2LmlkID0gJ3dlYnBhY2stZGV2LXNlcnZlci1jbGllbnQtb3ZlcmxheS1kaXYnO1xuICBkaXYuc3R5bGUucG9zaXRpb24gPSAnZml4ZWQnO1xuICBkaXYuc3R5bGUuYm94U2l6aW5nID0gJ2JvcmRlci1ib3gnO1xuICBkaXYuc3R5bGUubGVmdCA9IDA7XG4gIGRpdi5zdHlsZS50b3AgPSAwO1xuICBkaXYuc3R5bGUucmlnaHQgPSAwO1xuICBkaXYuc3R5bGUuYm90dG9tID0gMDtcbiAgZGl2LnN0eWxlLndpZHRoID0gJzEwMHZ3JztcbiAgZGl2LnN0eWxlLmhlaWdodCA9ICcxMDB2aCc7XG4gIGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiYSgwLCAwLCAwLCAwLjg1KSc7XG4gIGRpdi5zdHlsZS5jb2xvciA9ICcjRThFOEU4JztcbiAgZGl2LnN0eWxlLmZvbnRGYW1pbHkgPSAnTWVubG8sIENvbnNvbGFzLCBtb25vc3BhY2UnO1xuICBkaXYuc3R5bGUuZm9udFNpemUgPSAnbGFyZ2UnO1xuICBkaXYuc3R5bGUucGFkZGluZyA9ICcycmVtJztcbiAgZGl2LnN0eWxlLmxpbmVIZWlnaHQgPSAnMS4yJztcbiAgZGl2LnN0eWxlLndoaXRlU3BhY2UgPSAncHJlLXdyYXAnO1xuICBkaXYuc3R5bGUub3ZlcmZsb3cgPSAnYXV0byc7XG4gIGlmcmFtZS5jb250ZW50RG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaXYpO1xuICByZXR1cm4gZGl2O1xufVxuXG5mdW5jdGlvbiBlbnN1cmVPdmVybGF5RGl2RXhpc3RzKG9uT3ZlcmxheURpdlJlYWR5KSB7XG4gIGlmIChvdmVybGF5RGl2KSB7XG4gICAgLy8gRXZlcnl0aGluZyBpcyByZWFkeSwgY2FsbCB0aGUgY2FsbGJhY2sgcmlnaHQgYXdheS5cbiAgICBvbk92ZXJsYXlEaXZSZWFkeShvdmVybGF5RGl2KTtcbiAgICByZXR1cm47XG4gIH0gLy8gQ3JlYXRpbmcgYW4gaWZyYW1lIG1heSBiZSBhc3luY2hyb25vdXMgc28gd2UnbGwgc2NoZWR1bGUgdGhlIGNhbGxiYWNrLlxuICAvLyBJbiBjYXNlIG9mIG11bHRpcGxlIGNhbGxzLCBsYXN0IGNhbGxiYWNrIHdpbnMuXG5cblxuICBsYXN0T25PdmVybGF5RGl2UmVhZHkgPSBvbk92ZXJsYXlEaXZSZWFkeTtcblxuICBpZiAob3ZlcmxheUlmcmFtZSkge1xuICAgIC8vIFdlJ3ZlIGFscmVhZHkgY3JlYXRlZCBpdC5cbiAgICByZXR1cm47XG4gIH0gLy8gQ3JlYXRlIGlmcmFtZSBhbmQsIHdoZW4gaXQgaXMgcmVhZHksIGEgZGl2IGluc2lkZSBpdC5cblxuXG4gIG92ZXJsYXlJZnJhbWUgPSBjcmVhdGVPdmVybGF5SWZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICBvdmVybGF5RGl2ID0gYWRkT3ZlcmxheURpdlRvKG92ZXJsYXlJZnJhbWUpOyAvLyBOb3cgd2UgY2FuIHRhbGshXG5cbiAgICBsYXN0T25PdmVybGF5RGl2UmVhZHkob3ZlcmxheURpdik7XG4gIH0pOyAvLyBaYWxnbyBhbGVydDogb25JZnJhbWVMb2FkKCkgd2lsbCBiZSBjYWxsZWQgZWl0aGVyIHN5bmNocm9ub3VzbHlcbiAgLy8gb3IgYXN5bmNocm9ub3VzbHkgZGVwZW5kaW5nIG9uIHRoZSBicm93c2VyLlxuICAvLyBXZSBkZWxheSBhZGRpbmcgaXQgc28gYG92ZXJsYXlJZnJhbWVgIGlzIHNldCB3aGVuIGBvbklmcmFtZUxvYWRgIGZpcmVzLlxuXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQob3ZlcmxheUlmcmFtZSk7XG59IC8vIFN1Y2Nlc3NmdWwgY29tcGlsYXRpb24uXG5cblxuZnVuY3Rpb24gY2xlYXIoKSB7XG4gIGlmICghb3ZlcmxheURpdikge1xuICAgIC8vIEl0IGlzIG5vdCB0aGVyZSBpbiB0aGUgZmlyc3QgcGxhY2UuXG4gICAgcmV0dXJuO1xuICB9IC8vIENsZWFuIHVwIGFuZCByZXNldCBpbnRlcm5hbCBzdGF0ZS5cblxuXG4gIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQob3ZlcmxheUlmcmFtZSk7XG4gIG92ZXJsYXlEaXYgPSBudWxsO1xuICBvdmVybGF5SWZyYW1lID0gbnVsbDtcbiAgbGFzdE9uT3ZlcmxheURpdlJlYWR5ID0gbnVsbDtcbn0gLy8gQ29tcGlsYXRpb24gd2l0aCBlcnJvcnMgKGUuZy4gc3ludGF4IGVycm9yIG9yIG1pc3NpbmcgbW9kdWxlcykuXG5cblxuZnVuY3Rpb24gc2hvd01lc3NhZ2UobWVzc2FnZXMpIHtcbiAgZW5zdXJlT3ZlcmxheURpdkV4aXN0cyhmdW5jdGlvbiAoZGl2KSB7XG4gICAgLy8gTWFrZSBpdCBsb29rIHNpbWlsYXIgdG8gb3VyIHRlcm1pbmFsLlxuICAgIGRpdi5pbm5lckhUTUwgPSBcIjxzcGFuIHN0eWxlPVxcXCJjb2xvcjogI1wiLmNvbmNhdChjb2xvcnMucmVkLCBcIlxcXCI+RmFpbGVkIHRvIGNvbXBpbGUuPC9zcGFuPjxicj48YnI+XCIpLmNvbmNhdChhbnNpSFRNTChlbnRpdGllcy5lbmNvZGUobWVzc2FnZXNbMF0pKSk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY2xlYXI6IGNsZWFyLFxuICBzaG93TWVzc2FnZTogc2hvd01lc3NhZ2Vcbn07IiwiJ3VzZSBzdHJpY3QnO1xuLyogZ2xvYmFsIF9fd2VicGFja19kZXZfc2VydmVyX2NsaWVudF9fICovXG5cbi8qIGVzbGludC1kaXNhYmxlXG4gIGNhbWVsY2FzZVxuKi9cbi8vIHRoaXMgU29ja0pTQ2xpZW50IGlzIGhlcmUgYXMgYSBkZWZhdWx0IGZhbGxiYWNrLCBpbiBjYXNlIGlubGluZSBtb2RlXG4vLyBpcyBvZmYgb3IgdGhlIGNsaWVudCBpcyBub3QgaW5qZWN0ZWQuIFRoaXMgd2lsbCBiZSBzd2l0Y2hlZCB0b1xuLy8gV2Vic29ja2V0Q2xpZW50IHdoZW4gaXQgYmVjb21lcyB0aGUgZGVmYXVsdFxuLy8gaW1wb3J0YW50OiB0aGUgcGF0aCB0byBTb2NrSlNDbGllbnQgaGVyZSBpcyBtYWRlIHRvIHdvcmsgaW4gdGhlICdjbGllbnQnXG4vLyBkaXJlY3RvcnksIGJ1dCBpcyB1cGRhdGVkIHZpYSB0aGUgd2VicGFjayBjb21waWxhdGlvbiB3aGVuIGNvbXBpbGVkIGZyb21cbi8vIHRoZSAnY2xpZW50LXNyYycgZGlyZWN0b3J5XG5cbnZhciBDbGllbnQgPSB0eXBlb2YgX193ZWJwYWNrX2Rldl9zZXJ2ZXJfY2xpZW50X18gIT09ICd1bmRlZmluZWQnID8gX193ZWJwYWNrX2Rldl9zZXJ2ZXJfY2xpZW50X18gOiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVucmVzb2x2ZWRcbnJlcXVpcmUoJy4vY2xpZW50cy9Tb2NrSlNDbGllbnQnKTtcbnZhciByZXRyaWVzID0gMDtcbnZhciBjbGllbnQgPSBudWxsO1xuXG52YXIgc29ja2V0ID0gZnVuY3Rpb24gaW5pdFNvY2tldCh1cmwsIGhhbmRsZXJzKSB7XG4gIGNsaWVudCA9IG5ldyBDbGllbnQodXJsKTtcbiAgY2xpZW50Lm9uT3BlbihmdW5jdGlvbiAoKSB7XG4gICAgcmV0cmllcyA9IDA7XG4gIH0pO1xuICBjbGllbnQub25DbG9zZShmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHJldHJpZXMgPT09IDApIHtcbiAgICAgIGhhbmRsZXJzLmNsb3NlKCk7XG4gICAgfSAvLyBUcnkgdG8gcmVjb25uZWN0LlxuXG5cbiAgICBjbGllbnQgPSBudWxsOyAvLyBBZnRlciAxMCByZXRyaWVzIHN0b3AgdHJ5aW5nLCB0byBwcmV2ZW50IGxvZ3NwYW0uXG5cbiAgICBpZiAocmV0cmllcyA8PSAxMCkge1xuICAgICAgLy8gRXhwb25lbnRpYWxseSBpbmNyZWFzZSB0aW1lb3V0IHRvIHJlY29ubmVjdC5cbiAgICAgIC8vIFJlc3BlY3RmdWxseSBjb3BpZWQgZnJvbSB0aGUgcGFja2FnZSBgZ290YC5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1taXhlZC1vcGVyYXRvcnMsIG5vLXJlc3RyaWN0ZWQtcHJvcGVydGllc1xuICAgICAgdmFyIHJldHJ5SW5NcyA9IDEwMDAgKiBNYXRoLnBvdygyLCByZXRyaWVzKSArIE1hdGgucmFuZG9tKCkgKiAxMDA7XG4gICAgICByZXRyaWVzICs9IDE7XG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc29ja2V0KHVybCwgaGFuZGxlcnMpO1xuICAgICAgfSwgcmV0cnlJbk1zKTtcbiAgICB9XG4gIH0pO1xuICBjbGllbnQub25NZXNzYWdlKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgdmFyIG1zZyA9IEpTT04ucGFyc2UoZGF0YSk7XG5cbiAgICBpZiAoaGFuZGxlcnNbbXNnLnR5cGVdKSB7XG4gICAgICBoYW5kbGVyc1ttc2cudHlwZV0obXNnLmRhdGEpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNvY2tldDsiLCIndXNlIHN0cmljdCc7XG4vKiBnbG9iYWwgc2VsZiAqL1xuXG52YXIgdXJsID0gcmVxdWlyZSgndXJsJyk7XG5cbnZhciBnZXRDdXJyZW50U2NyaXB0U291cmNlID0gcmVxdWlyZSgnLi9nZXRDdXJyZW50U2NyaXB0U291cmNlJyk7XG5cbmZ1bmN0aW9uIGNyZWF0ZVNvY2tldFVybChyZXNvdXJjZVF1ZXJ5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIHVybFBhcnRzO1xuXG4gIGlmICh0eXBlb2YgcmVzb3VyY2VRdWVyeSA9PT0gJ3N0cmluZycgJiYgcmVzb3VyY2VRdWVyeSAhPT0gJycpIHtcbiAgICAvLyBJZiB0aGlzIGJ1bmRsZSBpcyBpbmxpbmVkLCB1c2UgdGhlIHJlc291cmNlIHF1ZXJ5IHRvIGdldCB0aGUgY29ycmVjdCB1cmwuXG4gICAgLy8gZm9ybWF0IGlzIGxpa2UgYD9odHRwOi8vMC4wLjAuMDo4MDk2JnNvY2tQb3J0PTgwOTcmc29ja0hvc3Q9bG9jYWxob3N0YFxuICAgIHVybFBhcnRzID0gdXJsLnBhcnNlKHJlc291cmNlUXVlcnkgLy8gc3RyaXAgbGVhZGluZyBgP2AgZnJvbSBxdWVyeSBzdHJpbmcgdG8gZ2V0IGEgdmFsaWQgVVJMXG4gICAgLnN1YnN0cigxKSAvLyByZXBsYWNlIGZpcnN0IGAmYCB3aXRoIGA/YCB0byBoYXZlIGEgdmFsaWQgcXVlcnkgc3RyaW5nXG4gICAgLnJlcGxhY2UoJyYnLCAnPycpLCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBFbHNlLCBnZXQgdGhlIHVybCBmcm9tIHRoZSA8c2NyaXB0PiB0aGlzIGZpbGUgd2FzIGNhbGxlZCB3aXRoLlxuICAgIHZhciBzY3JpcHRIb3N0ID0gZ2V0Q3VycmVudFNjcmlwdFNvdXJjZSgpO1xuICAgIHVybFBhcnRzID0gdXJsLnBhcnNlKHNjcmlwdEhvc3QgfHwgJy8nLCB0cnVlLCB0cnVlKTtcbiAgfSAvLyBVc2UgcGFyYW1ldGVyIHRvIGFsbG93IHBhc3NpbmcgbG9jYXRpb24gaW4gdW5pdCB0ZXN0c1xuXG5cbiAgaWYgKHR5cGVvZiBjdXJyZW50TG9jYXRpb24gPT09ICdzdHJpbmcnICYmIGN1cnJlbnRMb2NhdGlvbiAhPT0gJycpIHtcbiAgICBjdXJyZW50TG9jYXRpb24gPSB1cmwucGFyc2UoY3VycmVudExvY2F0aW9uKTtcbiAgfSBlbHNlIHtcbiAgICBjdXJyZW50TG9jYXRpb24gPSBzZWxmLmxvY2F0aW9uO1xuICB9XG5cbiAgcmV0dXJuIGdldFNvY2tldFVybCh1cmxQYXJ0cywgY3VycmVudExvY2F0aW9uKTtcbn1cbi8qXG4gKiBHZXRzIHNvY2tldCBVUkwgYmFzZWQgb24gU2NyaXB0IFNvdXJjZS9Mb2NhdGlvblxuICogKHNjcmlwdFNyYzogVVJMLCBsb2NhdGlvbjogVVJMKSAtPiBVUkxcbiAqL1xuXG5cbmZ1bmN0aW9uIGdldFNvY2tldFVybCh1cmxQYXJ0cywgbG9jKSB7XG4gIHZhciBhdXRoID0gdXJsUGFydHMuYXV0aCxcbiAgICAgIHF1ZXJ5ID0gdXJsUGFydHMucXVlcnk7XG4gIHZhciBob3N0bmFtZSA9IHVybFBhcnRzLmhvc3RuYW1lLFxuICAgICAgcHJvdG9jb2wgPSB1cmxQYXJ0cy5wcm90b2NvbCxcbiAgICAgIHBvcnQgPSB1cmxQYXJ0cy5wb3J0O1xuXG4gIGlmICghcG9ydCB8fCBwb3J0ID09PSAnMCcpIHtcbiAgICBwb3J0ID0gbG9jLnBvcnQ7XG4gIH0gLy8gY2hlY2sgaXB2NCBhbmQgaXB2NiBgYWxsIGhvc3RuYW1lYFxuICAvLyB3aHkgZG8gd2UgbmVlZCB0aGlzIGNoZWNrP1xuICAvLyBob3N0bmFtZSBuL2EgZm9yIGZpbGUgcHJvdG9jb2wgKGV4YW1wbGUsIHdoZW4gdXNpbmcgZWxlY3Ryb24sIGlvbmljKVxuICAvLyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrL3dlYnBhY2stZGV2LXNlcnZlci9wdWxsLzM4NFxuXG5cbiAgaWYgKChob3N0bmFtZSA9PT0gJzAuMC4wLjAnIHx8IGhvc3RuYW1lID09PSAnOjonKSAmJiBsb2MuaG9zdG5hbWUgJiYgbG9jLnByb3RvY29sLmluZGV4T2YoJ2h0dHAnKSA9PT0gMCkge1xuICAgIGhvc3RuYW1lID0gbG9jLmhvc3RuYW1lO1xuICB9IC8vIGBob3N0bmFtZWAgY2FuIGJlIGVtcHR5IHdoZW4gdGhlIHNjcmlwdCBwYXRoIGlzIHJlbGF0aXZlLiBJbiB0aGF0IGNhc2UsIHNwZWNpZnlpbmdcbiAgLy8gYSBwcm90b2NvbCB3b3VsZCByZXN1bHQgaW4gYW4gaW52YWxpZCBVUkwuXG4gIC8vIFdoZW4gaHR0cHMgaXMgdXNlZCBpbiB0aGUgYXBwLCBzZWN1cmUgd2Vic29ja2V0cyBhcmUgYWx3YXlzIG5lY2Vzc2FyeVxuICAvLyBiZWNhdXNlIHRoZSBicm93c2VyIGRvZXNuJ3QgYWNjZXB0IG5vbi1zZWN1cmUgd2Vic29ja2V0cy5cblxuXG4gIGlmIChob3N0bmFtZSAmJiBob3N0bmFtZSAhPT0gJzEyNy4wLjAuMScgJiYgKGxvYy5wcm90b2NvbCA9PT0gJ2h0dHBzOicgfHwgdXJsUGFydHMuaG9zdG5hbWUgPT09ICcwLjAuMC4wJykpIHtcbiAgICBwcm90b2NvbCA9IGxvYy5wcm90b2NvbDtcbiAgfSAvLyBhbGwgb2YgdGhlc2Ugc29jayB1cmwgcGFyYW1zIGFyZSBvcHRpb25hbGx5IHBhc3NlZCBpbiB0aHJvdWdoXG4gIC8vIHJlc291cmNlUXVlcnksIHNvIHdlIG5lZWQgdG8gZmFsbCBiYWNrIHRvIHRoZSBkZWZhdWx0IGlmXG4gIC8vIHRoZXkgYXJlIG5vdCBwcm92aWRlZFxuXG5cbiAgdmFyIHNvY2tIb3N0ID0gcXVlcnkuc29ja0hvc3QgfHwgaG9zdG5hbWU7XG4gIHZhciBzb2NrUGF0aCA9IHF1ZXJ5LnNvY2tQYXRoIHx8ICcvc29ja2pzLW5vZGUnO1xuICB2YXIgc29ja1BvcnQgPSBxdWVyeS5zb2NrUG9ydCB8fCBwb3J0O1xuXG4gIGlmIChzb2NrUG9ydCA9PT0gJ2xvY2F0aW9uJykge1xuICAgIHNvY2tQb3J0ID0gbG9jLnBvcnQ7XG4gIH1cblxuICByZXR1cm4gdXJsLmZvcm1hdCh7XG4gICAgcHJvdG9jb2w6IHByb3RvY29sLFxuICAgIGF1dGg6IGF1dGgsXG4gICAgaG9zdG5hbWU6IHNvY2tIb3N0LFxuICAgIHBvcnQ6IHNvY2tQb3J0LFxuICAgIC8vIElmIHNvY2tQYXRoIGlzIHByb3ZpZGVkIGl0J2xsIGJlIHBhc3NlZCBpbiB2aWEgdGhlIHJlc291cmNlUXVlcnkgYXMgYVxuICAgIC8vIHF1ZXJ5IHBhcmFtIHNvIGl0IGhhcyB0byBiZSBwYXJzZWQgb3V0IG9mIHRoZSBxdWVyeXN0cmluZyBpbiBvcmRlciBmb3IgdGhlXG4gICAgLy8gY2xpZW50IHRvIG9wZW4gdGhlIHNvY2tldCB0byB0aGUgY29ycmVjdCBsb2NhdGlvbi5cbiAgICBwYXRobmFtZTogc29ja1BhdGhcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlU29ja2V0VXJsOyIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gZ2V0Q3VycmVudFNjcmlwdFNvdXJjZSgpIHtcbiAgLy8gYGRvY3VtZW50LmN1cnJlbnRTY3JpcHRgIGlzIHRoZSBtb3N0IGFjY3VyYXRlIHdheSB0byBmaW5kIHRoZSBjdXJyZW50IHNjcmlwdCxcbiAgLy8gYnV0IGlzIG5vdCBzdXBwb3J0ZWQgaW4gYWxsIGJyb3dzZXJzLlxuICBpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdCkge1xuICAgIHJldHVybiBkb2N1bWVudC5jdXJyZW50U2NyaXB0LmdldEF0dHJpYnV0ZSgnc3JjJyk7XG4gIH0gLy8gRmFsbCBiYWNrIHRvIGdldHRpbmcgYWxsIHNjcmlwdHMgaW4gdGhlIGRvY3VtZW50LlxuXG5cbiAgdmFyIHNjcmlwdEVsZW1lbnRzID0gZG9jdW1lbnQuc2NyaXB0cyB8fCBbXTtcbiAgdmFyIGN1cnJlbnRTY3JpcHQgPSBzY3JpcHRFbGVtZW50c1tzY3JpcHRFbGVtZW50cy5sZW5ndGggLSAxXTtcblxuICBpZiAoY3VycmVudFNjcmlwdCkge1xuICAgIHJldHVybiBjdXJyZW50U2NyaXB0LmdldEF0dHJpYnV0ZSgnc3JjJyk7XG4gIH0gLy8gRmFpbCBhcyB0aGVyZSB3YXMgbm8gc2NyaXB0IHRvIHVzZS5cblxuXG4gIHRocm93IG5ldyBFcnJvcignW1dEU10gRmFpbGVkIHRvIGdldCBjdXJyZW50IHNjcmlwdCBzb3VyY2UuJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0Q3VycmVudFNjcmlwdFNvdXJjZTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciBsb2cgPSByZXF1aXJlKCdsb2dsZXZlbCcpLmdldExvZ2dlcignd2VicGFjay1kZXYtc2VydmVyJyk7XG5cbnZhciBJTkZPID0gJ2luZm8nO1xudmFyIFdBUk4gPSAnd2Fybic7XG52YXIgRVJST1IgPSAnZXJyb3InO1xudmFyIERFQlVHID0gJ2RlYnVnJztcbnZhciBUUkFDRSA9ICd0cmFjZSc7XG52YXIgU0lMRU5UID0gJ3NpbGVudCc7IC8vIGRlcHJlY2F0ZWRcbi8vIFRPRE86IHJlbW92ZSB0aGVzZSBhdCBtYWpvciByZWxlYXNlZFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2svd2VicGFjay1kZXYtc2VydmVyL3B1bGwvMTgyNVxuXG52YXIgV0FSTklORyA9ICd3YXJuaW5nJztcbnZhciBOT05FID0gJ25vbmUnOyAvLyBTZXQgdGhlIGRlZmF1bHQgbG9nIGxldmVsXG5cbmxvZy5zZXREZWZhdWx0TGV2ZWwoSU5GTyk7XG5cbmZ1bmN0aW9uIHNldExvZ0xldmVsKGxldmVsKSB7XG4gIHN3aXRjaCAobGV2ZWwpIHtcbiAgICBjYXNlIElORk86XG4gICAgY2FzZSBXQVJOOlxuICAgIGNhc2UgRVJST1I6XG4gICAgY2FzZSBERUJVRzpcbiAgICBjYXNlIFRSQUNFOlxuICAgICAgbG9nLnNldExldmVsKGxldmVsKTtcbiAgICAgIGJyZWFrO1xuICAgIC8vIGRlcHJlY2F0ZWRcblxuICAgIGNhc2UgV0FSTklORzpcbiAgICAgIC8vIGxvZ2xldmVsJ3Mgd2FybmluZyBuYW1lIGlzIGRpZmZlcmVudCBmcm9tIHdlYnBhY2snc1xuICAgICAgbG9nLnNldExldmVsKCd3YXJuJyk7XG4gICAgICBicmVhaztcbiAgICAvLyBkZXByZWNhdGVkXG5cbiAgICBjYXNlIE5PTkU6XG4gICAgY2FzZSBTSUxFTlQ6XG4gICAgICBsb2cuZGlzYWJsZUFsbCgpO1xuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgbG9nLmVycm9yKFwiW1dEU10gVW5rbm93biBjbGllbnRMb2dMZXZlbCAnXCIuY29uY2F0KGxldmVsLCBcIidcIikpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBsb2c6IGxvZyxcbiAgc2V0TG9nTGV2ZWw6IHNldExvZ0xldmVsXG59OyIsIid1c2Ugc3RyaWN0Jztcbi8qIGdsb2JhbCBXb3JrZXJHbG9iYWxTY29wZSBzZWxmICovXG5cbnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJy4vbG9nJyksXG4gICAgbG9nID0gX3JlcXVpcmUubG9nO1xuXG5mdW5jdGlvbiByZWxvYWRBcHAoX3JlZiwgX3JlZjIpIHtcbiAgdmFyIGhvdFJlbG9hZCA9IF9yZWYuaG90UmVsb2FkLFxuICAgICAgaG90ID0gX3JlZi5ob3QsXG4gICAgICBsaXZlUmVsb2FkID0gX3JlZi5saXZlUmVsb2FkO1xuICB2YXIgaXNVbmxvYWRpbmcgPSBfcmVmMi5pc1VubG9hZGluZyxcbiAgICAgIGN1cnJlbnRIYXNoID0gX3JlZjIuY3VycmVudEhhc2g7XG5cbiAgaWYgKGlzVW5sb2FkaW5nIHx8ICFob3RSZWxvYWQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoaG90KSB7XG4gICAgbG9nLmluZm8oJ1tXRFNdIEFwcCBob3QgdXBkYXRlLi4uJyk7XG5cbiAgICB2YXIgaG90RW1pdHRlciA9IHJlcXVpcmUoJ3dlYnBhY2svaG90L2VtaXR0ZXInKTtcblxuICAgIGhvdEVtaXR0ZXIuZW1pdCgnd2VicGFja0hvdFVwZGF0ZScsIGN1cnJlbnRIYXNoKTtcblxuICAgIGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi53aW5kb3cpIHtcbiAgICAgIC8vIGJyb2FkY2FzdCB1cGRhdGUgdG8gd2luZG93XG4gICAgICBzZWxmLnBvc3RNZXNzYWdlKFwid2VicGFja0hvdFVwZGF0ZVwiLmNvbmNhdChjdXJyZW50SGFzaCksICcqJyk7XG4gICAgfVxuICB9IC8vIGFsbG93IHJlZnJlc2hpbmcgdGhlIHBhZ2Ugb25seSBpZiBsaXZlUmVsb2FkIGlzbid0IGRpc2FibGVkXG4gIGVsc2UgaWYgKGxpdmVSZWxvYWQpIHtcbiAgICAgIHZhciByb290V2luZG93ID0gc2VsZjsgLy8gdXNlIHBhcmVudCB3aW5kb3cgZm9yIHJlbG9hZCAoaW4gY2FzZSB3ZSdyZSBpbiBhbiBpZnJhbWUgd2l0aCBubyB2YWxpZCBzcmMpXG5cbiAgICAgIHZhciBpbnRlcnZhbElkID0gc2VsZi5zZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChyb290V2luZG93LmxvY2F0aW9uLnByb3RvY29sICE9PSAnYWJvdXQ6Jykge1xuICAgICAgICAgIC8vIHJlbG9hZCBpbW1lZGlhdGVseSBpZiBwcm90b2NvbCBpcyB2YWxpZFxuICAgICAgICAgIGFwcGx5UmVsb2FkKHJvb3RXaW5kb3csIGludGVydmFsSWQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJvb3RXaW5kb3cgPSByb290V2luZG93LnBhcmVudDtcblxuICAgICAgICAgIGlmIChyb290V2luZG93LnBhcmVudCA9PT0gcm9vdFdpbmRvdykge1xuICAgICAgICAgICAgLy8gaWYgcGFyZW50IGVxdWFscyBjdXJyZW50IHdpbmRvdyB3ZSd2ZSByZWFjaGVkIHRoZSByb290IHdoaWNoIHdvdWxkIGNvbnRpbnVlIGZvcmV2ZXIsIHNvIHRyaWdnZXIgYSByZWxvYWQgYW55d2F5c1xuICAgICAgICAgICAgYXBwbHlSZWxvYWQocm9vdFdpbmRvdywgaW50ZXJ2YWxJZCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgZnVuY3Rpb24gYXBwbHlSZWxvYWQocm9vdFdpbmRvdywgaW50ZXJ2YWxJZCkge1xuICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxJZCk7XG4gICAgbG9nLmluZm8oJ1tXRFNdIEFwcCB1cGRhdGVkLiBSZWxvYWRpbmcuLi4nKTtcbiAgICByb290V2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcmVsb2FkQXBwOyIsIid1c2Ugc3RyaWN0Jztcbi8qIGdsb2JhbCBfX3Jlc291cmNlUXVlcnkgV29ya2VyR2xvYmFsU2NvcGUgc2VsZiAqL1xuLy8gU2VuZCBtZXNzYWdlcyB0byB0aGUgb3V0c2lkZSwgc28gcGx1Z2lucyBjYW4gY29uc3VtZSBpdC5cblxuZnVuY3Rpb24gc2VuZE1zZyh0eXBlLCBkYXRhKSB7XG4gIGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgKHR5cGVvZiBXb3JrZXJHbG9iYWxTY29wZSA9PT0gJ3VuZGVmaW5lZCcgfHwgIShzZWxmIGluc3RhbmNlb2YgV29ya2VyR2xvYmFsU2NvcGUpKSkge1xuICAgIHNlbGYucG9zdE1lc3NhZ2Uoe1xuICAgICAgdHlwZTogXCJ3ZWJwYWNrXCIuY29uY2F0KHR5cGUpLFxuICAgICAgZGF0YTogZGF0YVxuICAgIH0sICcqJyk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZW5kTXNnOyIsIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuXHRyZXR1cm4gL1tcXHUwMDFiXFx1MDA5Yl1bWygpIzs/XSooPzpbMC05XXsxLDR9KD86O1swLTldezAsNH0pKik/WzAtOUEtUFJaY2YtbnFyeT0+PF0vZztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYW5zaVJlZ2V4ID0gcmVxdWlyZSgnYW5zaS1yZWdleCcpKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHN0cikge1xuXHRyZXR1cm4gdHlwZW9mIHN0ciA9PT0gJ3N0cmluZycgPyBzdHIucmVwbGFjZShhbnNpUmVnZXgsICcnKSA6IHN0cjtcbn07XG4iLCJ2YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZShcImV2ZW50c1wiKTtcbm1vZHVsZS5leHBvcnRzID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuIiwidmFyIGxvZ0xldmVsID0gXCJpbmZvXCI7XG5cbmZ1bmN0aW9uIGR1bW15KCkge31cblxuZnVuY3Rpb24gc2hvdWxkTG9nKGxldmVsKSB7XG5cdHZhciBzaG91bGRMb2cgPVxuXHRcdChsb2dMZXZlbCA9PT0gXCJpbmZvXCIgJiYgbGV2ZWwgPT09IFwiaW5mb1wiKSB8fFxuXHRcdChbXCJpbmZvXCIsIFwid2FybmluZ1wiXS5pbmRleE9mKGxvZ0xldmVsKSA+PSAwICYmIGxldmVsID09PSBcIndhcm5pbmdcIikgfHxcblx0XHQoW1wiaW5mb1wiLCBcIndhcm5pbmdcIiwgXCJlcnJvclwiXS5pbmRleE9mKGxvZ0xldmVsKSA+PSAwICYmIGxldmVsID09PSBcImVycm9yXCIpO1xuXHRyZXR1cm4gc2hvdWxkTG9nO1xufVxuXG5mdW5jdGlvbiBsb2dHcm91cChsb2dGbikge1xuXHRyZXR1cm4gZnVuY3Rpb24gKGxldmVsLCBtc2cpIHtcblx0XHRpZiAoc2hvdWxkTG9nKGxldmVsKSkge1xuXHRcdFx0bG9nRm4obXNnKTtcblx0XHR9XG5cdH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxldmVsLCBtc2cpIHtcblx0aWYgKHNob3VsZExvZyhsZXZlbCkpIHtcblx0XHRpZiAobGV2ZWwgPT09IFwiaW5mb1wiKSB7XG5cdFx0XHRjb25zb2xlLmxvZyhtc2cpO1xuXHRcdH0gZWxzZSBpZiAobGV2ZWwgPT09IFwid2FybmluZ1wiKSB7XG5cdFx0XHRjb25zb2xlLndhcm4obXNnKTtcblx0XHR9IGVsc2UgaWYgKGxldmVsID09PSBcImVycm9yXCIpIHtcblx0XHRcdGNvbnNvbGUuZXJyb3IobXNnKTtcblx0XHR9XG5cdH1cbn07XG5cbi8qIGVzbGludC1kaXNhYmxlIG5vZGUvbm8tdW5zdXBwb3J0ZWQtZmVhdHVyZXMvbm9kZS1idWlsdGlucyAqL1xudmFyIGdyb3VwID0gY29uc29sZS5ncm91cCB8fCBkdW1teTtcbnZhciBncm91cENvbGxhcHNlZCA9IGNvbnNvbGUuZ3JvdXBDb2xsYXBzZWQgfHwgZHVtbXk7XG52YXIgZ3JvdXBFbmQgPSBjb25zb2xlLmdyb3VwRW5kIHx8IGR1bW15O1xuLyogZXNsaW50LWVuYWJsZSBub2RlL25vLXVuc3VwcG9ydGVkLWZlYXR1cmVzL25vZGUtYnVpbHRpbnMgKi9cblxubW9kdWxlLmV4cG9ydHMuZ3JvdXAgPSBsb2dHcm91cChncm91cCk7XG5cbm1vZHVsZS5leHBvcnRzLmdyb3VwQ29sbGFwc2VkID0gbG9nR3JvdXAoZ3JvdXBDb2xsYXBzZWQpO1xuXG5tb2R1bGUuZXhwb3J0cy5ncm91cEVuZCA9IGxvZ0dyb3VwKGdyb3VwRW5kKTtcblxubW9kdWxlLmV4cG9ydHMuc2V0TG9nTGV2ZWwgPSBmdW5jdGlvbiAobGV2ZWwpIHtcblx0bG9nTGV2ZWwgPSBsZXZlbDtcbn07XG5cbm1vZHVsZS5leHBvcnRzLmZvcm1hdEVycm9yID0gZnVuY3Rpb24gKGVycikge1xuXHR2YXIgbWVzc2FnZSA9IGVyci5tZXNzYWdlO1xuXHR2YXIgc3RhY2sgPSBlcnIuc3RhY2s7XG5cdGlmICghc3RhY2spIHtcblx0XHRyZXR1cm4gbWVzc2FnZTtcblx0fSBlbHNlIGlmIChzdGFjay5pbmRleE9mKG1lc3NhZ2UpIDwgMCkge1xuXHRcdHJldHVybiBtZXNzYWdlICsgXCJcXG5cIiArIHN0YWNrO1xuXHR9IGVsc2Uge1xuXHRcdHJldHVybiBzdGFjaztcblx0fVxufTtcbiIsInZhciBtYXAgPSB7XG5cdFwiLi9sb2dcIjogOTE5XG59O1xuXG5cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0KHJlcSkge1xuXHR2YXIgaWQgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKTtcblx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oaWQpO1xufVxuZnVuY3Rpb24gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSkge1xuXHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1hcCwgcmVxKSkge1xuXHRcdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0XHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdFx0dGhyb3cgZTtcblx0fVxuXHRyZXR1cm4gbWFwW3JlcV07XG59XG53ZWJwYWNrQ29udGV4dC5rZXlzID0gZnVuY3Rpb24gd2VicGFja0NvbnRleHRLZXlzKCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXMobWFwKTtcbn07XG53ZWJwYWNrQ29udGV4dC5yZXNvbHZlID0gd2VicGFja0NvbnRleHRSZXNvbHZlO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQ29udGV4dDtcbndlYnBhY2tDb250ZXh0LmlkID0gNDYxOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHRsb2FkZWQ6IGZhbHNlLFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcblx0bW9kdWxlLmxvYWRlZCA9IHRydWU7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5ubWQgPSAobW9kdWxlKSA9PiB7XG5cdG1vZHVsZS5wYXRocyA9IFtdO1xuXHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdHJldHVybiBtb2R1bGU7XG59OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuY2xhc3MgUm9vdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcbiAgICBcbiAgICByZW5kZXIoKXtcbiAgICAgICAgcmV0dXJuKFxuICAgICAgICAgICAgPGgxPkhlbGxvIFdvcmxkLi4uPC9oMT5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUm9vdCIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBSb290IGZyb20gJy4vY29tcG9uZW50cy9yb290Jztcbi8vIGltcG9ydCBjb25maWd1cmVTdG9yZSBmcm9tICcuL3N0b3JlL3N0b3JlJztcbi8vIGltcG9ydCBqd3RfZGVjb2RlIGZyb20gJ2p3dC1kZWNvZGUnO1xuXG4vLyBpbXBvcnQgeyBzZXRBdXRoVG9rZW4gfSBmcm9tICcuL3V0aWwvc2Vzc2lvbl9hcGlfdXRpbCc7XG4vLyBpbXBvcnQgeyBsb2dvdXQgfSBmcm9tICcuL2FjdGlvbnMvc2Vzc2lvbl9hY3Rpb25zJztcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgICAvLyBsZXQgc3RvcmU7XG5cbiAgICAvLyBpZiAobG9jYWxTdG9yYWdlLmp3dFRva2VuKSB7XG4gICAgLy8gICAgIHNldEF1dGhUb2tlbihsb2NhbFN0b3JhZ2Uuand0VG9rZW4pO1xuXG4gICAgLy8gICAgIGNvbnN0IGRlY29kZWRVc2VyID0gand0X2RlY29kZShsb2NhbFN0b3JhZ2Uuand0VG9rZW4pO1xuICAgIC8vICAgICBjb25zdCBwcmVsb2FkZWRTdGF0ZSA9IHsgc2Vzc2lvbjogeyBpc0F1dGhlbnRpY2F0ZWQ6IHRydWUsIHVzZXI6IGRlY29kZWRVc2VyIH0gfTtcblxuICAgIC8vICAgICBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHByZWxvYWRlZFN0YXRlKTtcblxuICAgIC8vICAgICBjb25zdCBjdXJyZW50VGltZSA9IERhdGUubm93KCkgLyAxMDAwO1xuXG4gICAgLy8gICAgIGlmIChkZWNvZGVkVXNlci5leHAgPCBjdXJyZW50VGltZSkge1xuICAgIC8vICAgICAgICAgc3RvcmUuZGlzcGF0Y2gobG9nb3V0KCkpO1xuICAgIC8vICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnL2xvZ2luJztcbiAgICAvLyAgICAgfVxuICAgIC8vIH0gZWxzZSB7XG4gICAgLy8gICAgIHN0b3JlID0gY29uZmlndXJlU3RvcmUoe30pO1xuICAgIC8vIH1cblxuICAgIFJlYWN0RE9NLnJlbmRlcig8Um9vdC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJvb3RcIikpO1xufSk7IiwiJ3VzZSBzdHJpY3QnO1xuLyogZ2xvYmFsIF9fcmVzb3VyY2VRdWVyeSBXb3JrZXJHbG9iYWxTY29wZSBzZWxmICovXG5cbi8qIGVzbGludCBwcmVmZXItZGVzdHJ1Y3R1cmluZzogb2ZmICovXG5cbnZhciBzdHJpcEFuc2kgPSByZXF1aXJlKCdzdHJpcC1hbnNpJyk7XG5cbnZhciBzb2NrZXQgPSByZXF1aXJlKCcuL3NvY2tldCcpO1xuXG52YXIgb3ZlcmxheSA9IHJlcXVpcmUoJy4vb3ZlcmxheScpO1xuXG52YXIgX3JlcXVpcmUgPSByZXF1aXJlKCcuL3V0aWxzL2xvZycpLFxuICAgIGxvZyA9IF9yZXF1aXJlLmxvZyxcbiAgICBzZXRMb2dMZXZlbCA9IF9yZXF1aXJlLnNldExvZ0xldmVsO1xuXG52YXIgc2VuZE1lc3NhZ2UgPSByZXF1aXJlKCcuL3V0aWxzL3NlbmRNZXNzYWdlJyk7XG5cbnZhciByZWxvYWRBcHAgPSByZXF1aXJlKCcuL3V0aWxzL3JlbG9hZEFwcCcpO1xuXG52YXIgY3JlYXRlU29ja2V0VXJsID0gcmVxdWlyZSgnLi91dGlscy9jcmVhdGVTb2NrZXRVcmwnKTtcblxudmFyIHN0YXR1cyA9IHtcbiAgaXNVbmxvYWRpbmc6IGZhbHNlLFxuICBjdXJyZW50SGFzaDogJydcbn07XG52YXIgb3B0aW9ucyA9IHtcbiAgaG90OiBmYWxzZSxcbiAgaG90UmVsb2FkOiB0cnVlLFxuICBsaXZlUmVsb2FkOiBmYWxzZSxcbiAgaW5pdGlhbDogdHJ1ZSxcbiAgdXNlV2FybmluZ092ZXJsYXk6IGZhbHNlLFxuICB1c2VFcnJvck92ZXJsYXk6IGZhbHNlLFxuICB1c2VQcm9ncmVzczogZmFsc2Vcbn07XG52YXIgc29ja2V0VXJsID0gY3JlYXRlU29ja2V0VXJsKF9fcmVzb3VyY2VRdWVyeSk7XG5zZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIGZ1bmN0aW9uICgpIHtcbiAgc3RhdHVzLmlzVW5sb2FkaW5nID0gdHJ1ZTtcbn0pO1xuXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgdmFyIHFzID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaC50b0xvd2VyQ2FzZSgpO1xuICBvcHRpb25zLmhvdFJlbG9hZCA9IHFzLmluZGV4T2YoJ2hvdHJlbG9hZD1mYWxzZScpID09PSAtMTtcbn1cblxudmFyIG9uU29ja2V0TWVzc2FnZSA9IHtcbiAgaG90OiBmdW5jdGlvbiBob3QoKSB7XG4gICAgb3B0aW9ucy5ob3QgPSB0cnVlO1xuICAgIGxvZy5pbmZvKCdbV0RTXSBIb3QgTW9kdWxlIFJlcGxhY2VtZW50IGVuYWJsZWQuJyk7XG4gIH0sXG4gIGxpdmVSZWxvYWQ6IGZ1bmN0aW9uIGxpdmVSZWxvYWQoKSB7XG4gICAgb3B0aW9ucy5saXZlUmVsb2FkID0gdHJ1ZTtcbiAgICBsb2cuaW5mbygnW1dEU10gTGl2ZSBSZWxvYWRpbmcgZW5hYmxlZC4nKTtcbiAgfSxcbiAgaW52YWxpZDogZnVuY3Rpb24gaW52YWxpZCgpIHtcbiAgICBsb2cuaW5mbygnW1dEU10gQXBwIHVwZGF0ZWQuIFJlY29tcGlsaW5nLi4uJyk7IC8vIGZpeGVzICMxMDQyLiBvdmVybGF5IGRvZXNuJ3QgY2xlYXIgaWYgZXJyb3JzIGFyZSBmaXhlZCBidXQgd2FybmluZ3MgcmVtYWluLlxuXG4gICAgaWYgKG9wdGlvbnMudXNlV2FybmluZ092ZXJsYXkgfHwgb3B0aW9ucy51c2VFcnJvck92ZXJsYXkpIHtcbiAgICAgIG92ZXJsYXkuY2xlYXIoKTtcbiAgICB9XG5cbiAgICBzZW5kTWVzc2FnZSgnSW52YWxpZCcpO1xuICB9LFxuICBoYXNoOiBmdW5jdGlvbiBoYXNoKF9oYXNoKSB7XG4gICAgc3RhdHVzLmN1cnJlbnRIYXNoID0gX2hhc2g7XG4gIH0sXG4gICdzdGlsbC1vayc6IGZ1bmN0aW9uIHN0aWxsT2soKSB7XG4gICAgbG9nLmluZm8oJ1tXRFNdIE5vdGhpbmcgY2hhbmdlZC4nKTtcblxuICAgIGlmIChvcHRpb25zLnVzZVdhcm5pbmdPdmVybGF5IHx8IG9wdGlvbnMudXNlRXJyb3JPdmVybGF5KSB7XG4gICAgICBvdmVybGF5LmNsZWFyKCk7XG4gICAgfVxuXG4gICAgc2VuZE1lc3NhZ2UoJ1N0aWxsT2snKTtcbiAgfSxcbiAgJ2xvZy1sZXZlbCc6IGZ1bmN0aW9uIGxvZ0xldmVsKGxldmVsKSB7XG4gICAgdmFyIGhvdEN0eCA9IHJlcXVpcmUuY29udGV4dCgnd2VicGFjay9ob3QnLCBmYWxzZSwgL15cXC5cXC9sb2ckLyk7XG5cbiAgICBpZiAoaG90Q3R4LmtleXMoKS5pbmRleE9mKCcuL2xvZycpICE9PSAtMSkge1xuICAgICAgaG90Q3R4KCcuL2xvZycpLnNldExvZ0xldmVsKGxldmVsKTtcbiAgICB9XG5cbiAgICBzZXRMb2dMZXZlbChsZXZlbCk7XG4gIH0sXG4gIG92ZXJsYXk6IGZ1bmN0aW9uIG92ZXJsYXkodmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIG9wdGlvbnMudXNlV2FybmluZ092ZXJsYXkgPSBmYWxzZTtcbiAgICAgICAgb3B0aW9ucy51c2VFcnJvck92ZXJsYXkgPSB2YWx1ZTtcbiAgICAgIH0gZWxzZSBpZiAodmFsdWUpIHtcbiAgICAgICAgb3B0aW9ucy51c2VXYXJuaW5nT3ZlcmxheSA9IHZhbHVlLndhcm5pbmdzO1xuICAgICAgICBvcHRpb25zLnVzZUVycm9yT3ZlcmxheSA9IHZhbHVlLmVycm9ycztcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHByb2dyZXNzOiBmdW5jdGlvbiBwcm9ncmVzcyhfcHJvZ3Jlc3MpIHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgb3B0aW9ucy51c2VQcm9ncmVzcyA9IF9wcm9ncmVzcztcbiAgICB9XG4gIH0sXG4gICdwcm9ncmVzcy11cGRhdGUnOiBmdW5jdGlvbiBwcm9ncmVzc1VwZGF0ZShkYXRhKSB7XG4gICAgaWYgKG9wdGlvbnMudXNlUHJvZ3Jlc3MpIHtcbiAgICAgIGxvZy5pbmZvKFwiW1dEU10gXCIuY29uY2F0KGRhdGEucGVyY2VudCwgXCIlIC0gXCIpLmNvbmNhdChkYXRhLm1zZywgXCIuXCIpKTtcbiAgICB9XG5cbiAgICBzZW5kTWVzc2FnZSgnUHJvZ3Jlc3MnLCBkYXRhKTtcbiAgfSxcbiAgb2s6IGZ1bmN0aW9uIG9rKCkge1xuICAgIHNlbmRNZXNzYWdlKCdPaycpO1xuXG4gICAgaWYgKG9wdGlvbnMudXNlV2FybmluZ092ZXJsYXkgfHwgb3B0aW9ucy51c2VFcnJvck92ZXJsYXkpIHtcbiAgICAgIG92ZXJsYXkuY2xlYXIoKTtcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5pbml0aWFsKSB7XG4gICAgICByZXR1cm4gb3B0aW9ucy5pbml0aWFsID0gZmFsc2U7XG4gICAgfSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXJldHVybi1hc3NpZ25cblxuXG4gICAgcmVsb2FkQXBwKG9wdGlvbnMsIHN0YXR1cyk7XG4gIH0sXG4gICdjb250ZW50LWNoYW5nZWQnOiBmdW5jdGlvbiBjb250ZW50Q2hhbmdlZCgpIHtcbiAgICBsb2cuaW5mbygnW1dEU10gQ29udGVudCBiYXNlIGNoYW5nZWQuIFJlbG9hZGluZy4uLicpO1xuICAgIHNlbGYubG9jYXRpb24ucmVsb2FkKCk7XG4gIH0sXG4gIHdhcm5pbmdzOiBmdW5jdGlvbiB3YXJuaW5ncyhfd2FybmluZ3MpIHtcbiAgICBsb2cud2FybignW1dEU10gV2FybmluZ3Mgd2hpbGUgY29tcGlsaW5nLicpO1xuXG4gICAgdmFyIHN0cmlwcGVkV2FybmluZ3MgPSBfd2FybmluZ3MubWFwKGZ1bmN0aW9uICh3YXJuaW5nKSB7XG4gICAgICByZXR1cm4gc3RyaXBBbnNpKHdhcm5pbmcpO1xuICAgIH0pO1xuXG4gICAgc2VuZE1lc3NhZ2UoJ1dhcm5pbmdzJywgc3RyaXBwZWRXYXJuaW5ncyk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0cmlwcGVkV2FybmluZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGxvZy53YXJuKHN0cmlwcGVkV2FybmluZ3NbaV0pO1xuICAgIH1cblxuICAgIGlmIChvcHRpb25zLnVzZVdhcm5pbmdPdmVybGF5KSB7XG4gICAgICBvdmVybGF5LnNob3dNZXNzYWdlKF93YXJuaW5ncyk7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuaW5pdGlhbCkge1xuICAgICAgcmV0dXJuIG9wdGlvbnMuaW5pdGlhbCA9IGZhbHNlO1xuICAgIH0gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1yZXR1cm4tYXNzaWduXG5cblxuICAgIHJlbG9hZEFwcChvcHRpb25zLCBzdGF0dXMpO1xuICB9LFxuICBlcnJvcnM6IGZ1bmN0aW9uIGVycm9ycyhfZXJyb3JzKSB7XG4gICAgbG9nLmVycm9yKCdbV0RTXSBFcnJvcnMgd2hpbGUgY29tcGlsaW5nLiBSZWxvYWQgcHJldmVudGVkLicpO1xuXG4gICAgdmFyIHN0cmlwcGVkRXJyb3JzID0gX2Vycm9ycy5tYXAoZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICByZXR1cm4gc3RyaXBBbnNpKGVycm9yKTtcbiAgICB9KTtcblxuICAgIHNlbmRNZXNzYWdlKCdFcnJvcnMnLCBzdHJpcHBlZEVycm9ycyk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0cmlwcGVkRXJyb3JzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBsb2cuZXJyb3Ioc3RyaXBwZWRFcnJvcnNbaV0pO1xuICAgIH1cblxuICAgIGlmIChvcHRpb25zLnVzZUVycm9yT3ZlcmxheSkge1xuICAgICAgb3ZlcmxheS5zaG93TWVzc2FnZShfZXJyb3JzKTtcbiAgICB9XG5cbiAgICBvcHRpb25zLmluaXRpYWwgPSBmYWxzZTtcbiAgfSxcbiAgZXJyb3I6IGZ1bmN0aW9uIGVycm9yKF9lcnJvcikge1xuICAgIGxvZy5lcnJvcihfZXJyb3IpO1xuICB9LFxuICBjbG9zZTogZnVuY3Rpb24gY2xvc2UoKSB7XG4gICAgbG9nLmVycm9yKCdbV0RTXSBEaXNjb25uZWN0ZWQhJyk7XG4gICAgc2VuZE1lc3NhZ2UoJ0Nsb3NlJyk7XG4gIH1cbn07XG5zb2NrZXQoc29ja2V0VXJsLCBvblNvY2tldE1lc3NhZ2UpOyJdLCJzb3VyY2VSb290IjoiIn0=